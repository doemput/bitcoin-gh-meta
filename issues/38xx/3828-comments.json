[
   {
      "body" : "This can be avoided by using Tor or another anonymity overlay network for transaction (re)broadcast.\r\n\r\nNot re-broadcasting to clients you have already spoken does not sound like a solution, as an attacker can easily have a lot of IPs available. Also when mempool expiration is implemented this will make it harder to rebroadcast transactions (at a certain point all the reliable nodes will be marked).\r\n",
      "created_at" : "2014-03-31T07:00:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39058639",
      "id" : 39058639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-03-31T07:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39058639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I'm just saying I watched U Penn researchers talk very knowledgeably about exact nodes rebroadcasting repeatedly; they had very pretty graphs. I don't think most people expect that having the qt wallet turned on means they are broadcasting IP-Address linkages to the world. \r\n\r\nI'm not enough of an expert on Tor to comment as to whether repeatedly issuing the same packets out over and over breaks some assumptions Tor makes as to anonymity, but I am suspicious that it's not an ideal communication pattern even there.",
      "created_at" : "2014-04-01T10:30:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39191055",
      "id" : 39191055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-01T10:30:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39191055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1199717?v=3",
         "events_url" : "https://api.github.com/users/vessenes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vessenes/followers",
         "following_url" : "https://api.github.com/users/vessenes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vessenes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vessenes",
         "id" : 1199717,
         "login" : "vessenes",
         "organizations_url" : "https://api.github.com/users/vessenes/orgs",
         "received_events_url" : "https://api.github.com/users/vessenes/received_events",
         "repos_url" : "https://api.github.com/users/vessenes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vessenes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vessenes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vessenes"
      }
   },
   {
      "body" : "Well at least when using Tor none of your peers can see what your IP is.\r\n\r\nSure, someone monitoring all the world's communication lines could make educated guesses based on timing correlations and such, but that's not the kind of threat scenario most people have to deal with. Or that we can even hope to protect against.\r\n\r\nFor directly hiding your IP (for example from criminals), using Tor works well, and many people are using bitcoin behind Tor for that reason alone. From what I've heard, BitcoinJ is even going to make operating over Tor the default (then again, it's more urgent there as an SPV client gives away much more information to peers).\r\n",
      "created_at" : "2014-04-01T10:55:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39192676",
      "id" : 39192676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-01T10:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39192676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I know there's a long list - o - bugs, just wanted to put this out there; it seemed surprising that you could induce a very long period of 'beaconing' from the qt client just by sending it an unlikely to be mined transaction in which it has an economic stake. \r\n",
      "created_at" : "2014-04-01T11:08:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39193589",
      "id" : 39193589,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-01T11:08:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39193589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1199717?v=3",
         "events_url" : "https://api.github.com/users/vessenes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vessenes/followers",
         "following_url" : "https://api.github.com/users/vessenes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vessenes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vessenes",
         "id" : 1199717,
         "login" : "vessenes",
         "organizations_url" : "https://api.github.com/users/vessenes/orgs",
         "received_events_url" : "https://api.github.com/users/vessenes/received_events",
         "repos_url" : "https://api.github.com/users/vessenes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vessenes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vessenes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vessenes"
      }
   },
   {
      "body" : "@laanwj : I think outsourcing anonymity to Tor is very wrong for algorithmic reasons:\r\nThe foundation of anonymous P2P networks is that data is not directly transferred from sender to receiver, but relayed among multiple people, where each of the relayers does not tell the others for whom the data is. So its difficult to determine who wants/sends the data as multiple people seem to want/send it. Each of them can claim to only be a relay - plausible deniability.\r\nUnfortunately, there are two things in an optimization conflict: The more people you relay data through, the more anonymous it is - but also slower. So the level of anonymity has to be limited by relaying through a limited amount of peers for performance reasons.\r\nWith Bitcoin, we do something on the whole network which would be ABSOLUTELY unwanted on a regular P2P network: Flooding. Every transaction is sent to everyone, because thats the only way of preventing double-spending. This is horribly inefficient, because for each single transaction between 2 peers, the whole network has to talk.\r\nLuckily, this also is the ideal version of an anonymous P2P network as I described it above: Instead of limiting the anonymization to a certain level of relays, Bitcoin relays everything to everyone. This is as much noise to hide sender/receiver as you can possibly get.\r\nSo Bitcoin needs to buy the horribly expensive mathematical foundation for perfect anonymization anyway - it would be a shame to not use it by having such glitches as this bug describes.",
      "created_at" : "2014-04-03T02:36:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39406913",
      "id" : 39406913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-03T02:47:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39406913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2364130?v=3",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   },
   {
      "body" : "But no matter what, as soon as a node is seen broadcasting a previously-seen transaction a second time (say, more than an hour later) you know he's either the original sender or recipient of the transaction.\r\n\r\nOne way to avoid this would be to avoid rebroadcasting of transactions completely (after the initial flurry). The sender would have to make sure he's really well-connected the first time to avoid the transaction from getting lost. The receiver would never (re-)broadcast the transaction at all. If your transaction gets stuck, there's nothing that can be done about it.\r\n\r\nAnother way to hide would be for nodes to randomly re-broadcast *other people's* transactions from the mempool. But I think this won't interact well with memory pool expiration.\r\n\r\n",
      "created_at" : "2014-04-03T06:33:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39417121",
      "id" : 39417121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-03T06:33:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39417121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj :\r\nYes you are right, rebroadcasting your own transactions only of course reveals that they belong to you. But why are we doing that anyway? \r\nYou already mentioned a valid replacement for this functionality: Re-broadcast random transactions, not your own. You said we don't do this because it messes with the mempool expiration, I don't understand that. If I understand the mempool correctly, it stores transactions in memory which have not been seen in a block yet. They have a timeout, and if it expires before they are seen in a block, they are removed from the mempool. Right? Now for the mempools which store the transactions, how is it relevant to them WHO re-broadcasted them? Their timeout is initialized when they are first seen I suppose. It won't be reset no matter how often the transactions is received again from someone else. So how does it matter that the transactions are being re-broadcast by other peers than their original senders? The timeout cannot be reset anyway.\r\n(In addition, I see a non-privacy related bonus feature of random re-broadcast: Without doing any math, intuitively this still sounds to me as it would also cause a better spreading of the transactions over the network because it removes sender/receiver as a single point of failure. Even if they terminate their client after sending the transactions, the rest of the network will still take care of re-broadcast.)",
      "created_at" : "2014-04-03T12:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39445046",
      "id" : 39445046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-03T12:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39445046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2364130?v=3",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   },
   {
      "body" : "I explained why we ware doing that! Rebroadcasting your own transactions avoids them from getting stuck if your set of peers at the time was flaky. If you have another channel to send the transaction to your recipient (like the payment protocol) it becomes less important to broadcast it yourself, but we cannot assume that.\r\n\r\nAs for mempool expiration, different peers receive the transaction at slightly different times, and thus expire them at different times. Let's say Node B received a transaction sooner than node A. B is just about the expire the transaction, and then Node A rebroadcasts it randomly. B will see it as a new transaction... and after A expired it, it may be that B rebroadcasts it again. Bouncing around it will be kept in the mempool forever.\r\n(this is with just two nodes, imagine with a whole forest of them...)\r\n\r\nThis is how it would go right now. You propose to persistently remember transaction expired from the mempool (for a certain duration) so that they don't reenter, but such functionaltiy doesn't exist at this point. I also don't think it would work. The point of expiring transactions is *not* to avoid them from being re-broadcasted, in the contrary, it's just to make sure transactions that the sender/receiver don't care about (by not re-broadcasting them) don't keep cluttering the mempool.\r\n",
      "created_at" : "2014-04-03T12:49:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39446624",
      "id" : 39446624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-03T12:50:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39446624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj The general target for expiring a transaction from the mempool seems to be 2-3 days. If random transactions would be broadcasted for a significatnly shorter time, let's say half the expiration time, that seems to make it unlikely that another peer has already expired it when it's randomly rebroadcasted.",
      "created_at" : "2014-04-05T17:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39644610",
      "id" : 39644610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-05T17:15:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39644610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=3",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "body" : "@laanwj Lets discuss the two issues separately:\r\n1. Transactions getting lost due to lack of own broadcasting: I think this is easy to prevent by having the client issue a warning when the user wants to shutdown but a transactions has not broadcast through less than lets say 4 peers. And given the fact that Bitcoin uses a flooding algorithm, i.e. every peer sends the transaction to all other peers, it should be very difficult for transactions to get lost even with such small amounts of peers. The amount of peers a transactions has been broadcast through could also be stored persistently among restarts, so the user can shutdown even if the transaction has not been sent yet. Further, it should be noticed that random re-broadcasts *do* also include the user's own transactions, just with a lower (=random) priority.\r\n2. Transactions getting stuck in mempools forever: To prevent this, when sending transactions to our peers, we can include our own mempool expiration time of the transactions. The peers then adopt this as this their own expiration time for the transaction (unless its farther in the future than current_time + default_timeout would be, then the expiration time is reset to that). This would be similar to what existing networks do: For example IP packets have a \"time to live\" counter which is decremented by each transfer of the packet, and the packet is not sent any further when it reaches zero. In fact, this could be used as an alternate solution to sending timeouts. [Notice that the TTL field of IP was actually meant as a timeout before it was changed to be just decremented].\r\n",
      "created_at" : "2014-04-06T13:39:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39668611",
      "id" : 39668611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-06T13:39:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39668611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2364130?v=3",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   },
   {
      "body" : "Addition to 2: The expiration time must of course be modified by a random bias before sharing it, otherwise it gives away too much information about how close to the origin of the transactions the sender is. ",
      "created_at" : "2014-04-06T13:42:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39668702",
      "id" : 39668702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-06T13:42:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39668702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2364130?v=3",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   },
   {
      "body" : "I think it makes sense to move this to the mailing list. This bug tracker is intended for concrete issues specific to this implementation (\"bitcoin core\"). General protocol improvements should be discussed over there, with more visibility.",
      "created_at" : "2014-04-07T05:50:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-39697960",
      "id" : 39697960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2014-04-07T05:50:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/39697960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Outsourcing to tor is a major problem, it creates an unexpected binding between the two.  People are likely to be de-anonymized when they fire up bitcoind and tor isn't running or if the tor process ever dies while bitcoind is running or any number of other scenarios.",
      "created_at" : "2015-02-26T06:08:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-76127386",
      "id" : 76127386,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2015-02-26T06:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76127386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1087?v=3",
         "events_url" : "https://api.github.com/users/jwilkins/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jwilkins/followers",
         "following_url" : "https://api.github.com/users/jwilkins/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jwilkins/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jwilkins",
         "id" : 1087,
         "login" : "jwilkins",
         "organizations_url" : "https://api.github.com/users/jwilkins/orgs",
         "received_events_url" : "https://api.github.com/users/jwilkins/received_events",
         "repos_url" : "https://api.github.com/users/jwilkins/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jwilkins/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jwilkins/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jwilkins"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Is this closeable? @laanwj @vessenes",
      "created_at" : "2017-09-05T14:27:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-327192562",
      "id" : 327192562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2017-09-05T14:27:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327192562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14876936?v=4",
         "events_url" : "https://api.github.com/users/Leviathn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Leviathn/followers",
         "following_url" : "https://api.github.com/users/Leviathn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Leviathn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Leviathn",
         "id" : 14876936,
         "login" : "Leviathn",
         "organizations_url" : "https://api.github.com/users/Leviathn/orgs",
         "received_events_url" : "https://api.github.com/users/Leviathn/received_events",
         "repos_url" : "https://api.github.com/users/Leviathn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Leviathn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Leviathn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Leviathn"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "As long as we don't have mempool reconciliation, I think there is no real solution to this problem.",
      "created_at" : "2017-09-05T14:55:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-327201759",
      "id" : 327201759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2017-09-05T14:55:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327201759",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "At least we now have an option to disable the default broadcast: `-walletbroadcast=0`. This allows being creating about alternative ways to do the initial transaction broadcast. Not a structural solution, that would be in the domain of adding some kind of onion layer to the P2P protocol itself (I vaguely remember there has been a proposal in that direction, but can't find it right now), or mempool reconciliation as @sipa says.\r\n\r\nThe problem still exists so might as well keep open the issue as a reminder.",
      "created_at" : "2017-09-05T16:03:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-327223205",
      "id" : 327223205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2017-09-05T16:03:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327223205",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> At least we now have an option to disable the default broadcast: -walletbroadcast=0. This allows being creating about alternative ways to do the initial transaction broadcast. Not a structural solution, that would be in the domain of adding some kind of onion layer to the P2P protocol itself (I vaguely remember there has been a proposal in that direction, but can't find it right now), or mempool reconciliation as @sipa says.\r\n\r\nI do appreciate the availability of this option but let's be honest:\r\nAchieving privacy is a very difficult thing *even* in an environment fully controlled by software.\r\nRequiring the user to *manually* add command line options, which 90% of users won't be capable of already, and then doing even more complex things like sending raw transactions with a different software, is a usability nightmare in that context.\r\n\r\n> The problem still exists so might as well keep open the issue as a reminder.\r\n\r\nI would please strongly ask to keep it open - storage of issues costs you nothing, but the value of resolving this someday is very high for the large amount of users who want privacy.\r\nIf you don't want the issue to bloat your view of the bugtracker then filter by priority, it is set to low priority already anyway.",
      "created_at" : "2017-09-05T18:23:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/3828#issuecomment-327261068",
      "id" : 327261068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3828",
      "updated_at" : "2017-09-05T18:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327261068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/2364130?v=4",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   }
]

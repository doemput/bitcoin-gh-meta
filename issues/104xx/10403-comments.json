[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117753201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117753201"
         }
      },
      "body" : "As it scans forward (increasing date / block numbers), and scanFailed returns the first block that could not be scanned, shouldn't this be \"after time\"?",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-22T14:06:05Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n                     response.push_back(results.at(i));\n                 } else {\n                     UniValue result = UniValue(UniValue::VOBJ);\n                     result.pushKV(\"success\", UniValue(false));\n-                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n+                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scanFailed->GetBlockTimeMax() + 1)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117753201",
      "id" : 117753201,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 28,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 39485191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-23T13:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117753201",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117755972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117755972"
         }
      },
      "body" : "So this checks that the birthday of the imported key is after most recent block that could not be scanned, in which case the current result will be returned?\r\nThis seems to disagree with the comment \"key creation date is within the successfully scanned range\".\r\nWhat am I misunderstanding here?",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-22T14:17:37Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117755972",
      "id" : 117755972,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 22,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 22,
      "pull_request_review_id" : 39488432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-23T13:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117755972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117760307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117760307"
         }
      },
      "body" : "> As it scans forward (increasing date / block numbers), and scanFailed returns the first block that could not be scanned, shouldn't this be \"after time\"?\r\n\r\nscanFailed returns the last block that could not be scanned, not the first block that couldn't be scanned. To take a concrete example, say there are two blocks in a row with GetBlockTimeMax() == 1000, and the first block fails to scan, and the second block succeeds, and later blocks also succeed. If there are any keys created at time 1000 or earlier, there could be transactions missing that pertain to those keys, so those keys should return errors. If there are any keys created at time 1001 or higher, they should technically be ok (even though they will still return errors for birthdays up to 1000 + TIMESTAMP_WINDOW).\r\n\r\nThe error returned for the problem keys will be \"Failed to rescan before time 1001, transactions may be missing.\" which I think makes sense if \"before\" implies \"less than\" rather than \"less than or equal\".\r\n\r\n\r\n",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-22T14:34:44Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n                     response.push_back(results.at(i));\n                 } else {\n                     UniValue result = UniValue(UniValue::VOBJ);\n                     result.pushKV(\"success\", UniValue(false));\n-                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n+                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scanFailed->GetBlockTimeMax() + 1)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117760307",
      "id" : 117760307,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 28,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 39493352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-23T13:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117760307",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117763436"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117763436"
         }
      },
      "body" : "> So this checks that the birthday of the imported key is after most recent block that could not be scanned, in which case the current result will be returned?\r\n\r\nYes, if the key birthday is after the GetBlockTimeMax of the most recent block that could not be scanned + TIMESTAMP_WINDOW, the rescan for that key's transactions is considered successful, and the result is not replaced.\r\n\r\n> This seems to disagree with the comment \"key creation date is within the successfully scanned range\".\r\nWhat am I misunderstanding here?\r\n\r\nI may be misunderstanding something, but the comment seems right to me. If the most recent block that could not be scanned has GetBlockTimeMax == 1000, then any key created at timestamp 1001 or higher is in the \"successfully scanned range\", because all the blocks that were bad or missing are older than the key, and therefore not relevant.",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-22T14:46:32Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117763436",
      "id" : 117763436,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 22,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 22,
      "pull_request_review_id" : 39493352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-23T13:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117763436",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117865547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117865547"
         }
      },
      "body" : "I spent some time thinking about edge cases here, and I've basically convinced myself that this is ok, because:\r\n\r\n- the `TIMESTAMP_WINDOW` means that we have a good safety window between the address's birthday and the block timestamp (ie we're safe even if an address appears in a block with a timestamp before its birthday).\r\n- the monotonically increasing `GetBlockTimeMax()` means that this error message gives the most conservative value (ie if a block B's time has moved back from its parent block A and we couldn't scan block B then the error will say that we couldn't scan before Block A's timestamp. That's fine)\r\n\r\nI think it might be useful for the user if there was a bit more information in the error message. Up to you how verbose you want to go, but a couple of things that might be good to include:\r\n\r\n- how does the user fix this problem (reindex, which will cause a full chain download if this is a pruning node)\r\n- what if the `Failed to rescan before time <time>` is for a time before the user specified as the address birthday? eg what if the user set the birthday to 10am, and we failed to scan a block at 9:55am. We'd return an error  saying `Failed to rescan before time 9:55am` and the user might thing \"that's ok, my key's birthday is 10am\". In fact it's not ok, because the 9:55am block may include a transaction for that address, since block time is not canonical or monotonic.",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-22T23:10:11Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n                     response.push_back(results.at(i));\n                 } else {\n                     UniValue result = UniValue(UniValue::VOBJ);\n                     result.pushKV(\"success\", UniValue(false));\n-                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n+                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scanFailed->GetBlockTimeMax() + 1)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117865547",
      "id" : 117865547,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 28,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 39607155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-23T13:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117865547",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117986594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117986594"
         }
      },
      "body" : "Thanks, expanded error message in 2e041dd247c19a47700b1e1b181c7f8a1b5b109b",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-23T13:13:27Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n                     response.push_back(results.at(i));\n                 } else {\n                     UniValue result = UniValue(UniValue::VOBJ);\n                     result.pushKV(\"success\", UniValue(false));\n-                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n+                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scanFailed->GetBlockTimeMax() + 1)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r117986594",
      "id" : 117986594,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 28,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 39736658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-23T13:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117986594",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Looks good. Tested ACK https://github.com/bitcoin/bitcoin/commit/2e041dd247c19a47700b1e1b181c7f8a1b5b109b. It'd be nice to have tests covering the edge cases (block time the same for two consecutive blocks and block time decreasing), but that can be left for a future PR.",
      "created_at" : "2017-05-23T13:52:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#issuecomment-303404590",
      "id" : 303404590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10403",
      "updated_at" : "2017-05-23T13:52:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303404590",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "utACK 4d2d6045a4784d576d56299244b9f76a5909904b\r\nVery verbose error description texts (but great explanation).",
      "created_at" : "2017-05-24T06:51:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#issuecomment-303634220",
      "id" : 303634220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10403",
      "updated_at" : "2017-05-24T06:51:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303634220",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r118222038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118222038"
         }
      },
      "body" : "> because all the blocks that were bad or missing are older than the key, and therefore not relevant.\r\n\r\nThat's the part I'm not sure about: aren't the blocks *at and after* that point missing, instead of before that point? After all it's the point where it failed in a linear forward scan?",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-24T10:56:50Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r118222038",
      "id" : 118222038,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 22,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 22,
      "pull_request_review_id" : 39991196,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-24T10:57:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118222038",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r118230184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118230184"
         }
      },
      "body" : "> That's the part I'm not sure about: aren't the blocks at and after that point missing, instead of before that point?\r\n\r\nBecause it returns a pointer to the last block that couldn't be scanned,  it means that any blocks after the pointer were scanned successfully.\r\n\r\n> After all it's the point where it failed in a linear forward scan?\r\n\r\nThe scan does keep going even if individual blocks couldn't be read. There might be a smarter way to handle this, but the behavior has been around a while. Only the error reporting is fairly new.\r\n",
      "commit_id" : "4d2d6045a4784d576d56299244b9f76a5909904b",
      "created_at" : "2017-05-24T11:46:55Z",
      "diff_hunk" : "@@ -1137,12 +1137,12 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 // range, or if the import result already has an error set, let\n                 // the result stand unmodified. Otherwise replace the result\n                 // with an error message.\n-                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                if (GetImportTimestamp(request, now) - TIMESTAMP_WINDOW > scanFailed->GetBlockTimeMax() || results.at(i).exists(\"error\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#discussion_r118230184",
      "id" : 118230184,
      "original_commit_id" : "b4919d0b60d2acd67c421486d9eea76297a2eb23",
      "original_position" : 22,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 22,
      "pull_request_review_id" : 40000226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10403",
      "updated_at" : "2017-05-24T11:46:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118230184",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "utACK 4d2d604",
      "created_at" : "2017-06-05T14:40:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10403#issuecomment-306204960",
      "id" : 306204960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10403",
      "updated_at" : "2017-06-05T14:40:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306204960",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "Recently [a survey / poll was published on bitcointalk](https://bitcointalk.org/index.php?topic=1934073) on the topic of whether code for a decentralized exchange should be developed for bitcoin core.  \r\n\r\nThe survey / poll (multiple choice) was conducted over the course of a total of seven days and the results were as follows:\r\n\r\n- The survey / poll question was:  \"Satoshi included prelim code for decentralized exchange in #bitcoin, but it was removed after Satoshi's departure. Should it be put back in?\"\r\n- There were 82 respondents\r\n- 61% selected \"Yes, add to bitcoin core\"\r\n- 22% responded \"No, let alts try that 1st\"\r\n- 17% responded \"Neither, I use bitsquare\"\r\n\r\nThe interest in having a decentralized exchange of some sort appear in core / reference client(s) prompted me to open this issue for discussion.\r\n\r\n\r\n*1) History / background*\r\n\r\nPreliminary code authored by Satoshi relating to this topic was at one time present in bitcoin core, [but was removed on February 14, 2010](https://github.com/bitcoin/bitcoin/commit/5253d1ab77fab1995ede03fb934edd67f1359ba8) by \"[non-github user](https://github.com/non-github-bitcoin).\"  The code was not functional as a decentralized exchange or market, but appeared to have been provided with that idea in mind. Satoshi retired from active / public bitcoin development, after the release of version 0.3.19 which was in December 2010.\r\n\r\n\r\n*2) A suggested definition*\r\n\r\nIt may be, that with the various approaches to what a \"decentralized exchange\" is, some qualifications or a definition should be provided before discussing this further.  \r\n\r\nA truly \"decentralized exchange\" in my view is one that has the following characteristics:\r\n\r\na) Must be p2p -- must rely on software you install and communicates with other computers that also have that software (not requiring servers or services), and must not require you to obtain some special token(s) in order to use it or to exchange one thing for another.  Good examples of the decentralized exchange are bitsquare / bisq and mercury.  Good example of the decentralized market is openbazaar.\r\n\r\nb) may require you to identify yourself in some way on the network at such times when you are participating in the exchange system (example being through use of a PGP key or through a bitcoin based identifier) to limit identity spamming and to allow users to build reputation\r\n\r\nc) must not be based upon I2P in order to work, must not be based upon some Tor hidden service, and must not require WebRTC, but may provide Tor or I2P support\r\n\r\nd) must not require ShapeShift (or some other third party) in order to provide functionality\r\n\r\ne) must provide an option for users to exchange fiat for cryptocurrency (not solely some crypto for bitcoin) and to do so without exposing themselves to (bank or non-bank institutions, organizations, services).\r\n\r\n\r\n\r\n*3) Limitations (cons) of having decentralized exchange in Core or other reference clients (in other cryptos), and some other perspectives (pros)*\r\n\r\nOne simple con of this idea would be \"feature bloat\" is not desireable for Core.  In some alts, features have been explored and added to the extent they have been able to do so or depending upon the priority of the development schedule of certain alts.  However, in Core, \"feature bloat\" has generally been avoided.  \r\n\r\nOne pro of this idea would be the potential for greater fungibility as a result.  This is further discussed in item (4) below.  Another potential pro of this idea would be if an exchange in Core were to be developed utilizing [features of Lightning](https://en.bitcoin.it/wiki/Lightning_Network), which is not yet implemented in Core, then there would be available (in part) rapid payments, no third-party trust, reduced blockchain load, and onion-style routing.  Notably, in this particular scenario, due to the features of Lightning / lnd, \"payments can be routed across more than one blockchain (including altcoins and sidechains) as long as all the chains support the same hash function to use for the hash lock, as well as the ability the ability to create time locks.\" (as quoted from bitcoinwiki on Lightning)\r\n\r\nIn other words, with eventual Segwit activation and potentially down the road with Lightning implementation, there would likely be an evolution toward something like a decentralized exchange at any rate as a result of the features of Lightning.  The question then becomes, how would this be integrated into Bitcoin Core.\r\n\r\n\r\n\r\n*4) Reference to other bitcoin issue relating to fungibility*\r\n\r\nIn this issue a reference is being made to https://github.com/bitcoin/bitcoin/issues/6568 due to the fungibility item being discussed in that issue [which was published for meta tracking issues on transaction privacy / fungibility].  In that issue description, it was mentioned in part that \"Tightly linked to privacy is fungibility, an essential characteristic of a money like good. When coins are overly distinguishable and people find themselves feeling obligated to consult (likely centralized) blacklists before accepting coins the utility of Bitcoin as a money is reduced.\"  Because a truly decentralized exchange does contribute to the protection of fungibility, that issue is being referred to in part here.  \r\n\r\n\r\n*5) Conclusion*\r\n\r\nThere may be an opportunity to improve fungibility in Bitcoin system via decentralized exchange development in reference client down the road, particularly with the evolution and trajectory of developments such as Segwit and Lightning.  There are definitely pros and cons to this concept and it is worth a discussion.\r\n\r\nAll discussion and points of view are welcome on this issue.   Thanks in advance for comments you might contribute on this item.\r\n\r\n\r\n",
   "closed_at" : "2017-09-06T00:15:39Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10494/comments",
   "created_at" : "2017-06-01T06:53:57Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10494/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/10494",
   "id" : 232781929,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "id" : 64584,
         "name" : "Brainstorming",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10494/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 10494,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Improve fungibility in Bitcoin system via decentralized exchange development in reference client",
   "updated_at" : "2017-09-06T00:15:39Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10494",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/4469280?v=4",
      "events_url" : "https://api.github.com/users/ABISprotocol/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ABISprotocol/followers",
      "following_url" : "https://api.github.com/users/ABISprotocol/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ABISprotocol/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ABISprotocol",
      "id" : 4469280,
      "login" : "ABISprotocol",
      "organizations_url" : "https://api.github.com/users/ABISprotocol/orgs",
      "received_events_url" : "https://api.github.com/users/ABISprotocol/received_events",
      "repos_url" : "https://api.github.com/users/ABISprotocol/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ABISprotocol/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ABISprotocol/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ABISprotocol"
   }
}

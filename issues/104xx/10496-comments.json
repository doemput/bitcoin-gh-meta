[
   {
      "body" : "Pinging @theuni ",
      "created_at" : "2017-06-01T10:45:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-305457866",
      "id" : 305457866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-01T10:45:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305457866",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r119583012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119583012"
         }
      },
      "body" : "Minor nit, but what about switching to C++11 strongly typed enumerations (`enum class`) while we are at it?",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-01T10:48:25Z",
      "diff_hunk" : "@@ -64,6 +64,14 @@\n #endif\n #endif\n \n+/** Used to pass flags to the Bind() function */\n+enum BindFlags {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r119583012",
      "id" : 119583012,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 41474734,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119583012",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r119586702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119586702"
         }
      },
      "body" : "Great idea,  but unfortunately, bitwise operations don't work with those (unless you manually add those functions to the class) :(\r\n\r\nSee http://blog.bitwigglers.org/using-enum-classes-as-type-safe-bitmasks/\r\n",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-01T11:12:34Z",
      "diff_hunk" : "@@ -64,6 +64,14 @@\n #endif\n #endif\n \n+/** Used to pass flags to the Bind() function */\n+enum BindFlags {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r119586702",
      "id" : 119586702,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 41478796,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119586702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r119588733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119588733"
         }
      },
      "body" : "Ah, of course. Sorry!",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-01T11:24:33Z",
      "diff_hunk" : "@@ -64,6 +64,14 @@\n #endif\n #endif\n \n+/** Used to pass flags to the Bind() function */\n+enum BindFlags {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r119588733",
      "id" : 119588733,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 41480968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/119588733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@ryanofsky thanks. I actually did it like this in a first iteration, but changed it because I figured that the arguments should be evaluated as much as possible before entering ConnMan. After all, ConnMan doesn't particularly care about the command line string representation.\r\n\r\nIt was a bit weird having the error messages that relate to `-whitelist`, `-bind`, `-whitebind` still in ConnMan as opposed to where the arguments are actually parsed.\r\n\r\nEdit: I see the point though that `Lookup()` etc. are network functions and shouldn't be used in init.cpp. But refactoring all of that sounds like a separate issue, so I propose to defer this to another PR.",
      "created_at" : "2017-06-01T15:36:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-305531892",
      "id" : 305531892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-01T15:48:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305531892",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "I believe this is OK. I have a PR coming up which (after lots of thought) moves resolving into its own class, of which CConnman is one user. This way other layers are able to use the resolver without necessarily having to go through CConnman.\r\n\r\nSo, concept ACK. Reviewing.",
      "created_at" : "2017-06-05T20:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-306290911",
      "id" : 306290911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-05T20:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306290911",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120198811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120198811"
         }
      },
      "body" : "This looks like a change in behavior when setting \"-bind=foo -listen=0\". Granted, that combination makes no sense.\r\n\r\nI think we should probably just check for that combination, and exit with an error in that case.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-05T20:17:56Z",
      "diff_hunk" : "@@ -1644,6 +1594,28 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     connOptions.nMaxOutboundTimeframe = nMaxOutboundTimeframe;\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n \n+    if (gArgs.IsArgSet(\"-bind\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120198811",
      "id" : 120198811,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 82,
      "path" : "src/init.cpp",
      "position" : 119,
      "pull_request_review_id" : 42141806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120198811",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120199183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120199183"
         }
      },
      "body" : "See other comment. It doesn't make sense to have binds/whitebinds set at all if !fListen.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-05T20:19:09Z",
      "diff_hunk" : "@@ -2183,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120199183",
      "id" : 120199183,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 35,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 42141806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120199183",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120201881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120201881"
         }
      },
      "body" : "Mm, this moves the logic away from the caller and into CConnman, which is what we're trying to avoid by adding the heaps of options.\r\n\r\nI think I'd prefer to see flags passed in along with CServices, so that CConnman can just do what it's told. So either a tiny struct, or just a pair.\r\n\r\nThen, CConnman will try to bind the BF_EXPLICIT addresses, and if it fails, tries to bind the rest.\r\n\r\nAlso, in that case, the last failed bind wouldn't need to have BF_REPORT_ERROR set, we'd just notice the false return and act on it accordingly.\r\n\r\nSound reasonable?",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-05T20:30:59Z",
      "diff_hunk" : "@@ -2190,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {\n+        bool fBound = false;\n+        for (const auto& addrBind : binds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120201881",
      "id" : 120201881,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 59,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 42141806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120201881",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121258101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121258101"
         }
      },
      "body" : "> Mm, this moves the logic away from the caller and into CConnman, which is what we're trying to avoid by adding the heaps of options.\r\n> I think I'd prefer to see flags passed in along with CServices, so that CConnman can just do what it's told. So either a tiny struct, or just a pair.\r\n\r\nThe logic would be in `CConnman` all the same, just the data structure you pass the info with is changed from two vectors to one vector of pairs, which is equivalent. The code looks more complicated from what I can tell. Or did I misunderstand your request?\r\n\r\nI added this in a separate commit to see the diff, I drop it again if needed.\r\n\r\n> Then, CConnman will try to bind the BF_EXPLICIT addresses, and if it fails, tries to bind the rest.\r\n\r\nAt the moment, the rest is only attempted if no explicit binds are specified. If they fail, all fails, which makes sense to me.\r\n\r\n> Also, in that case, the last failed bind wouldn't need to have BF_REPORT_ERROR set, we'd just notice the false return and act on it accordingly.\r\n\r\nAct how, apart from reporting the error (which this flag does)?",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-10T14:13:46Z",
      "diff_hunk" : "@@ -2190,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {\n+        bool fBound = false;\n+        for (const auto& addrBind : binds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121258101",
      "id" : 121258101,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 59,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43298571,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121258101",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121258108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121258108"
         }
      },
      "body" : "Done.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-10T14:14:09Z",
      "diff_hunk" : "@@ -1644,6 +1594,28 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     connOptions.nMaxOutboundTimeframe = nMaxOutboundTimeframe;\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n \n+    if (gArgs.IsArgSet(\"-bind\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121258108",
      "id" : 121258108,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 82,
      "path" : "src/init.cpp",
      "position" : 119,
      "pull_request_review_id" : 43298581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121258108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121258111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121258111"
         }
      },
      "body" : "Done.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-10T14:14:14Z",
      "diff_hunk" : "@@ -2183,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121258111",
      "id" : 121258111,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 35,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43298585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121258111",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@theuni Can you check whether your requested changes are addressed?",
      "created_at" : "2017-06-12T23:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-307962526",
      "id" : 307962526,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-12T23:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307962526",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121758762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121758762"
         }
      },
      "body" : "\r\n\r\n>>Mm, this moves the logic away from the caller and into CConnman, which is what we're trying to avoid by adding the heaps of options.\r\n    I think I'd prefer to see flags passed in along with CServices, so that CConnman can just do what it's told. So either a tiny struct, or just a pair.\r\n\r\n> The logic would be in CConnman all the same, just the data structure you pass the info with is changed from two vectors to one vector of pairs, which is equivalent. The code looks more complicated from what I can tell. Or did I misunderstand your request?\r\n\r\nThe logic would still be in CConnman, but the caller would have the ability to dictate exactly how the binds are setup. For example, there's no way to specify \"listen on this address as well as the localhost fallbacks\".\r\n\r\nI think this is ok for now, though. We can add options as things come up.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T18:26:01Z",
      "diff_hunk" : "@@ -2190,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {\n+        bool fBound = false;\n+        for (const auto& addrBind : binds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121758762",
      "id" : 121758762,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 59,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43813118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121758762",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121760173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121760173"
         }
      },
      "body" : "Well done! Thanks for using the local instance.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T18:31:10Z",
      "diff_hunk" : "@@ -2230,7 +2231,38 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121760173",
      "id" : 121760173,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 48,
      "path" : "src/net.cpp",
      "position" : 48,
      "pull_request_review_id" : 43814632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121760173",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121762724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121762724"
         }
      },
      "body" : "Looks like there's no way to run without listening now.\r\n\r\nSorry for not being more clear here: https://github.com/bitcoin/bitcoin/pull/10496#discussion_r120199183. I was suggesting that we shouldn't get into InitBinds in the first place if binding isn't allowed.\r\n\r\nWe'll either need to change this so that its caller uses the ugly global as before:\r\n``` c++\r\n    if(fListen && !InitBinds(...)) {\r\n        ...\r\n    }\r\n```\r\nor add a flag for fallback connections, which InitBinds() only uses if nothing else is already bound.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T18:41:20Z",
      "diff_hunk" : "@@ -2230,7 +2231,38 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<std::pair<CService, Options::BindType> >& binds) {\n+    bool fBound = false;\n+    for (const auto& addrBind : binds) {\n+        unsigned int flags = BF_EXPLICIT | BF_REPORT_ERROR;\n+        if (addrBind.second == Options::BindType::WhiteBind)\n+            flags |= BF_WHITELIST;\n+        fBound |= Bind(addrBind.first, flags);\n+    }\n+    if (binds.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121762724",
      "id" : 121762724,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 64,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43817434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121762724",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121764020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121764020"
         }
      },
      "body" : "This strError param is clunky (my fault!). We should do away with it and just use clientInterface->InitError() directly. That can be done as a follow-up though.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T18:46:30Z",
      "diff_hunk" : "@@ -2252,11 +2284,19 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n \n     SetBestHeight(connOptions.nBestHeight);\n \n+    clientInterface = connOptions.uiInterface;\n+\n+    if (!InitBinds(connOptions.vBinds)) {\n+        strError = _(\"Failed to listen on any port. Use -listen=0 if you want this.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121764020",
      "id" : 121764020,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 84,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43818805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121764020",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121766894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121766894"
         }
      },
      "body" : "s/GetBoolArg/gArgs.GetBoolArg/",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T18:57:20Z",
      "diff_hunk" : "@@ -898,10 +879,16 @@ bool AppInitParameterInteraction()\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n     }\n \n+    // -bind and -whitebind can't be set when not listening\n+    size_t nUserBind =\n+        (gArgs.IsArgSet(\"-bind\") ? gArgs.GetArgs(\"-bind\").size() : 0) +\n+        (gArgs.IsArgSet(\"-whitebind\") ? gArgs.GetArgs(\"-whitebind\").size() : 0);\n+    if (nUserBind != 0 && !GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121766894",
      "id" : 121766894,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 41,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 43821981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121766894",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "looks good aside from those few issues.",
      "created_at" : "2017-06-13T19:05:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-308216930",
      "id" : 308216930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-13T19:05:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308216930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121814829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121814829"
         }
      },
      "body" : "Oops, was a bit too eager here. Re-added the `fListen` check as you suggested.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T22:39:03Z",
      "diff_hunk" : "@@ -2230,7 +2231,38 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<std::pair<CService, Options::BindType> >& binds) {\n+    bool fBound = false;\n+    for (const auto& addrBind : binds) {\n+        unsigned int flags = BF_EXPLICIT | BF_REPORT_ERROR;\n+        if (addrBind.second == Options::BindType::WhiteBind)\n+            flags |= BF_WHITELIST;\n+        fBound |= Bind(addrBind.first, flags);\n+    }\n+    if (binds.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121814829",
      "id" : 121814829,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 64,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43874291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121814829",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121814845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121814845"
         }
      },
      "body" : "Done.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T22:39:09Z",
      "diff_hunk" : "@@ -2252,11 +2284,19 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n \n     SetBestHeight(connOptions.nBestHeight);\n \n+    clientInterface = connOptions.uiInterface;\n+\n+    if (!InitBinds(connOptions.vBinds)) {\n+        strError = _(\"Failed to listen on any port. Use -listen=0 if you want this.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121814845",
      "id" : 121814845,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 84,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43874305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121814845",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121814853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121814853"
         }
      },
      "body" : "GetBoolArg() is simply wrapping gArgs.GetBoolArg(), and both variants are already used in the function. Could make that consistent in a separate PR.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T22:39:11Z",
      "diff_hunk" : "@@ -898,10 +879,16 @@ bool AppInitParameterInteraction()\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n     }\n \n+    // -bind and -whitebind can't be set when not listening\n+    size_t nUserBind =\n+        (gArgs.IsArgSet(\"-bind\") ? gArgs.GetArgs(\"-bind\").size() : 0) +\n+        (gArgs.IsArgSet(\"-whitebind\") ? gArgs.GetArgs(\"-whitebind\").size() : 0);\n+    if (nUserBind != 0 && !GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121814853",
      "id" : 121814853,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 41,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 43874315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121814853",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@theuni thanks for the feedback. I added a new commit for easier review, I will squash in the end.",
      "created_at" : "2017-06-13T22:39:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-308269163",
      "id" : 308269163,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-13T22:39:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308269163",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121815726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121815726"
         }
      },
      "body" : "> For example, there's no way to specify \"listen on this address as well as the localhost fallbacks\".\r\n\r\nBut that wasn't possible before either.\r\n\r\nDo you prefer the commit which passes the whitelist flag in the pair (https://github.com/bitcoin/bitcoin/pull/10496/commits/768c7f72d9fac542a45ad788713faa1a3f46897c), or should I drop it? I don't mind either way, but the new code seems less readable than the code before, but it is semantically exactly the same.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T22:45:01Z",
      "diff_hunk" : "@@ -2190,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {\n+        bool fBound = false;\n+        for (const auto& addrBind : binds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121815726",
      "id" : 121815726,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 59,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43875218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121815726",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121816590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121816590"
         }
      },
      "body" : "gArgs is the new (as of very recently) way of handling these args, it'd be helpful if new code didn't reintroduce the former usage as I assume the wrappers are intended to be temporary.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T22:50:42Z",
      "diff_hunk" : "@@ -898,10 +879,16 @@ bool AppInitParameterInteraction()\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n     }\n \n+    // -bind and -whitebind can't be set when not listening\n+    size_t nUserBind =\n+        (gArgs.IsArgSet(\"-bind\") ? gArgs.GetArgs(\"-bind\").size() : 0) +\n+        (gArgs.IsArgSet(\"-whitebind\") ? gArgs.GetArgs(\"-whitebind\").size() : 0);\n+    if (nUserBind != 0 && !GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121816590",
      "id" : 121816590,
      "original_commit_id" : "521bfa71e61e15174b53bc47bd58c8c16ec299f4",
      "original_position" : 41,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 43876103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121816590",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121817915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121817915"
         }
      },
      "body" : "> But that wasn't possible before either.\r\n\r\nSure, but we've been slowly moving these config options out to the caller so that less is hard-coded.\r\n\r\nIn the near-future, I'm looking forward to creating 2 CConnman instances and running them against each-other for testing. The more we can control via setup options, the better. I have no problem with adding those options incrementally, I'd just like to make sure we're not making future changes tougher.\r\n\r\nAs for the whitelist flag, either way is fine for this PR. Whichever you think is more readable. We'll expand on the options when needed.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T22:59:31Z",
      "diff_hunk" : "@@ -2190,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {\n+        bool fBound = false;\n+        for (const auto& addrBind : binds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121817915",
      "id" : 121817915,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 59,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43877498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121817915",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121822429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121822429"
         }
      },
      "body" : ":+1: I reverted it as I find the previous version more readable.",
      "commit_id" : "80653166ae0eb253378e39ebd874a1c2cee53afb",
      "created_at" : "2017-06-13T23:30:20Z",
      "diff_hunk" : "@@ -2190,7 +2191,41 @@ NodeId CConnman::GetNewNodeId()\n     return nLastNodeId.fetch_add(1, std::memory_order_relaxed);\n }\n \n-bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options connOptions)\n+\n+bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+        return false;\n+    std::string strError;\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+        if ((flags & BF_REPORT_ERROR) && clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+    if (fListen) {\n+        bool fBound = false;\n+        for (const auto& addrBind : binds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#discussion_r121822429",
      "id" : 121822429,
      "original_commit_id" : "7313bfec5354f44571929249ee3672b8c38675a3",
      "original_position" : 59,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 43882051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10496",
      "updated_at" : "2017-06-13T23:30:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121822429",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@theuni addressed the GetBoolArgs issue and squashed.",
      "created_at" : "2017-06-13T23:30:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-308277455",
      "id" : 308277455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-13T23:30:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308277455",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2017-06-15T21:11:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-308867010",
      "id" : 308867010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-15T21:11:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308867010",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "utACK 07b2afef10bb6366a270e325fd41a8bc526c9ef3",
      "created_at" : "2017-06-20T22:09:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-309906101",
      "id" : 309906101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-20T22:09:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309906101",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "utACK 07b2afe",
      "created_at" : "2017-06-26T13:03:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10496#issuecomment-311052981",
      "id" : 311052981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10496",
      "updated_at" : "2017-06-26T13:03:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311052981",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

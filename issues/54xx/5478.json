{
   "assignee" : null,
   "body" : "This pull replaces almost all uses of `uint256` and all uses of `uint160` to use opaque byte blobs `blob256` and `blob160` with **only** the following operations: \r\n\r\n- Default initialization to 0, or from a vector of bytes\r\n- Assignment from other blobXXXs\r\n- `IsNull()` compare to special all-zeros value\r\n- `SetNull()` clear to special all-zeros value: Bitcoin needs `IsNull()` / `SetNull()` because we often use the all-zeroes value as a marker for errors and empty values.\r\n- `<` for sorting in maps.\r\n- `!=` `==` test for (in)equality\r\n- `GetHex`/`SetHex`/`ToString` because they're just so useful\r\n- `begin()`/`end()` raw access to the data\r\n- `size()` returns a fixed size\r\n- `GetSerializeSize()` `Serialize` `Unserialize` serialization just reads and writes the bytes\r\n- `GetCheapHash()` this is similar to `GetLow64()` and returns part of the value as uint64_t, for cheap hashing when the contents are assumed distributed uniformy random.\r\n\r\n`uint256` (used for proof-of-work mainly), on the other hand, loses all functionality like raw bytes access and serialization. Its memory should not be accessed directly. This is necessary for #888 (big endian support).\r\n`uint160` is completely removed as Bitcoin Core does no 160-bit integer arithmetic.\r\n\r\n### Overall steps (see commits)\r\n\r\nEven though the diff is huge, I've tried to follow a logical and easy to review process:\r\n\r\n0. Introduce `base_uint::SetNull` and `base_uint::IsNull()` as well as other methods that will later be on `base_blob`, to prepare for migration\r\n1. Replace x=0 with .SetNull(), x==0 with IsNull(), x!=0 with !IsNull().  Replace uses of uint256(0) with uint256().\r\n2. Introduce blob256 and blob160 as well as conversion functions   (only needed for blob256, we don't ever compute with uint160).\r\n3. Replace `GetLow64()` with `GetCheapHash()`\r\n4. Rename uint256 and uint160 to blob256 and blob160 except where big integers are really necessary.   For reviewing convenience I separated this out into \r\n\r\n     A) pure renames uintXXX to blobXXX, can easily be verified (in reverse) with\r\n        find -name \\*.h -print0 | xargs -0 sed -i 's/blob256/uint256/g'\r\n        find -name \\*.cpp -print0 | xargs -0 sed -i 's/blob256/uint256/g'\r\n        find -name \\*.h -print0 | xargs -0 sed -i 's/blob160/uint160/g'\r\n        find -name \\*.cpp -print0 | xargs -0 sed -i 's/blob160/uint160/g'\r\n\r\n     B) string conversions uint256(\"string\") to blob256S(\"string\")\r\n\r\n     C) Added #includes and predeclared classes\r\n\r\n     D) Necessary conversions between uint256 and blob256 **Focus reviewing here**\r\n\r\n5. Remove now-unused methods from base_uint and blob160/blob256, eg GetHash, also remove unused uint160.\r\n\r\n",
   "closed_at" : "2014-12-16T14:05:41Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478/comments",
   "created_at" : "2014-12-15T15:44:27Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478",
   "id" : 52000785,
   "labels" : [
      {
         "color" : "E6F6D6",
         "name" : "Refactoring",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 5478,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/5478.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5478",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/5478.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5478"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Replace uint256/uint160 by opaque blobs where possible",
   "updated_at" : "2014-12-17T10:06:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5478",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   }
}

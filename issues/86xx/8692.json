{
   "assignee" : null,
   "assignees" : [],
   "body" : "(These obscure notes are for eventually cleaning up wallet confliction and are low priority)\r\n\r\nIn the block connection logic we call\r\n```\r\nBOOST_FOREACH(const CTransaction &tx, txConflicted)\r\n        {\r\n            SyncWithWallets(tx, pindexNewTip);\r\n        }\r\n```\r\n\r\n`txConflicted` is returned by `mempool.removeForBlock` and can therefore contain transactions that should be marked conflicted that wouldn't be caught by the wallets own dependency tracking code (chains of mempool txs not all of which are in the wallet).\r\n\r\nHowever, calling `SyncWithWallets` without setting a `posInBlock` has virtually no effect other than marking the cached credit/debit values as dirty.  Since #7105 however wallet txs, that aren't explicitly marked conflicted via the wallets code, aren't actually known to be conflicted and are treated as just unconfirmed.   I think the result of this is this SyncWithWallets loop is of dubious value.\r\n - All txs that are caught by the wallets conflict detection would already be marked dirty, and the new txs this loop catches, can't correctly reflect the right balance state anyway.\r\n - It actually serves a detrimental effect on the transactions that were marked as abandoned that will now erroneously have their abandoned state cleared and be treated as unconfirmed.  Their true state of conflicted matches much more closely to abandoned.  (This will be corrected in the immediately following loop for txs that the wallet code catches)\r\n\r\nIt may be possible to just correctly MarkConflicted all these transactions, and then I think the only issue will be the txs that are only conflicted because they are dependents won't properly have their cached values dirtied if the conflict goes away.  This issue already exists #7315.\r\n\r\nSee IRC discussion https://botbot.me/freenode/bitcoin-core-dev/2016-09-09/?msg=72745343&page=3",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8692/comments",
   "created_at" : "2016-09-09T15:11:18Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8692/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/8692",
   "id" : 176033489,
   "labels" : [
      {
         "color" : "ededed",
         "name" : "Priority Low",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Priority%20Low"
      },
      {
         "color" : "02d7e1",
         "name" : "Wallet",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8692/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 8692,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Marking chains of txs conflicted properly",
   "updated_at" : "2016-09-10T06:18:16Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8692",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
      "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
      "followers_url" : "https://api.github.com/users/morcos/followers",
      "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/morcos",
      "id" : 4360349,
      "login" : "morcos",
      "organizations_url" : "https://api.github.com/users/morcos/orgs",
      "received_events_url" : "https://api.github.com/users/morcos/received_events",
      "repos_url" : "https://api.github.com/users/morcos/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/morcos"
   }
}

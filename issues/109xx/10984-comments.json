[
   {
      "body" : "Rebased and added a simple test",
      "created_at" : "2017-08-14T16:10:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10984#issuecomment-322234015",
      "id" : 322234015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10984",
      "updated_at" : "2017-08-14T16:10:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322234015",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased.",
      "created_at" : "2017-09-27T21:06:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10984#issuecomment-332655400",
      "id" : 332655400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10984",
      "updated_at" : "2017-09-27T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332655400",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice work!\r\nObviously concept ACK (have not looked closely at the code yet).",
      "created_at" : "2017-09-28T03:40:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10984#issuecomment-332719048",
      "id" : 332719048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10984",
      "updated_at" : "2017-09-28T03:40:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332719048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10984#discussion_r143360692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10984"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143360692"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Avoid `found` with:\r\n```cpp\r\nif (range.first == range.second) return false;\r\nwhile (range.first != range.second) {\r\n```",
      "commit_id" : "458feb36fcdb1ba36d82461262d276b0cfe7c4c6",
      "created_at" : "2017-10-08T17:23:45Z",
      "diff_hunk" : "@@ -260,51 +260,78 @@ void PushNodeVersion(CNode *pnode, CConnman* connman, int64_t nTime)\n     }\n }\n \n+// Requires cs_main\n+// Helper function for MarkBlockAsReceived and MarkBlockAsNotInFlight\n+static void ClearDownloadState(BlockDownloadMap::iterator itInFlight) {\n+    AssertLockHeld(cs_main);\n+\n+    CNodeState *state = State(itInFlight->second.first);\n+    state->nBlocksInFlightValidHeaders -= itInFlight->second.second->fValidatedHeaders;\n+    if (state->nBlocksInFlightValidHeaders == 0 && itInFlight->second.second->fValidatedHeaders) {\n+        // Last validated block on the queue was received.\n+        nPeersWithValidatedDownloads--;\n+    }\n+    if (state->vBlocksInFlight.begin() == itInFlight->second.second) {\n+        // First block on the queue was received, update the start download time for the next one\n+        state->nDownloadingSince = std::max(state->nDownloadingSince, GetTimeMicros());\n+    }\n+    state->vBlocksInFlight.erase(itInFlight->second.second);\n+    state->nBlocksInFlight--;\n+    state->nStallingSince = 0;\n+}\n+\n // Requires cs_main.\n+// Used to remove block from mmapBlocksInFlight and clear the download state for\n+// a block if for some reason block was not received. Download state clearing is\n+// skipped as an optimization in FinalizeNode.\n+static void MarkBlockAsNotInFlight(const uint256& hash, NodeId nodeid, bool clearState = true) {\n+    AssertLockHeld(cs_main);\n+\n+    std::pair<BlockDownloadMap::iterator, BlockDownloadMap::iterator> range = mmapBlocksInFlight.equal_range(hash);\n+    while (range.first != range.second) {\n+        BlockDownloadMap::iterator itInFlight = range.first;\n+        range.first++;\n+        if (itInFlight->second.first == nodeid) {\n+            if (clearState) ClearDownloadState(itInFlight);\n+            mmapBlocksInFlight.erase(itInFlight);\n+        }\n+    }\n+}\n+\n // Returns a bool indicating whether we requested this block.\n-// Also used if a block was /not/ received and timed out or started with another peer\n bool MarkBlockAsReceived(const uint256& hash) {\n-    std::map<uint256, std::pair<NodeId, std::list<QueuedBlock>::iterator> >::iterator itInFlight = mapBlocksInFlight.find(hash);\n-    if (itInFlight != mapBlocksInFlight.end()) {\n-        CNodeState *state = State(itInFlight->second.first);\n-        assert(state != nullptr);\n-        state->nBlocksInFlightValidHeaders -= itInFlight->second.second->fValidatedHeaders;\n-        if (state->nBlocksInFlightValidHeaders == 0 && itInFlight->second.second->fValidatedHeaders) {\n-            // Last validated block on the queue was received.\n-            nPeersWithValidatedDownloads--;\n-        }\n-        if (state->vBlocksInFlight.begin() == itInFlight->second.second) {\n-            // First block on the queue was received, update the start download time for the next one\n-            state->nDownloadingSince = std::max(state->nDownloadingSince, GetTimeMicros());\n-        }\n-        state->vBlocksInFlight.erase(itInFlight->second.second);\n-        state->nBlocksInFlight--;\n-        state->nStallingSince = 0;\n-        mapBlocksInFlight.erase(itInFlight);\n-        return true;\n-    }\n-    return false;\n+    LOCK(cs_main);\n+    bool found = false;\n+    std::pair<BlockDownloadMap::iterator, BlockDownloadMap::iterator> range = mmapBlocksInFlight.equal_range(hash);\n+    while (range.first != range.second) {\n+        found = true;\n+        ClearDownloadState(range.first);\n+        range.first = mmapBlocksInFlight.erase(range.first);\n+    }\n+    return found;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10984#discussion_r143360692",
      "id" : 143360692,
      "original_commit_id" : "458feb36fcdb1ba36d82461262d276b0cfe7c4c6",
      "original_position" : 91,
      "path" : "src/net_processing.cpp",
      "position" : 91,
      "pull_request_review_id" : 67863287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10984",
      "updated_at" : "2017-10-08T17:23:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143360692",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]

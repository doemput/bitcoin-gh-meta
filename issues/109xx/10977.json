{
   "assignee" : null,
   "assignees" : [],
   "body" : "When running `test_bitcoin` under Valgrind I found the following issue:\r\n\r\n```\r\n$ valgrind src/test/test_bitcoin\r\n...\r\n==10465== Use of uninitialised value of size 8\r\n==10465==    at 0x6D09B61: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)\r\n==10465==    by 0x6D0B1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)\r\n==10465==    by 0x6D0B36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)\r\n==10465==    by 0x6D17699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)\r\n==10465==    by 0x4CAAD7: operator<< (ostream:171)\r\n==10465==    by 0x4CAAD7: formatValue<ServiceFlags> (tinyformat.h:345)\r\n==10465==    by 0x4CAAD7: void tinyformat::detail::FormatArg::formatImpl<ServiceFlags>(std::ostream&, char const*, char const*, int, void const*) (tinyformat.h:523)\r\n==10465==    by 0x1924D4: format (tinyformat.h:510)\r\n==10465==    by 0x1924D4: tinyformat::detail::formatImpl(std::ostream&, char const*, tinyformat::detail::FormatArg const*, int) (tinyformat.h:803)\r\n==10465==    by 0x553A55: vformat (tinyformat.h:947)\r\n==10465==    by 0x553A55: format<ServiceFlags> (tinyformat.h:957)\r\n==10465==    by 0x553A55: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tinyformat::format<ServiceFlags>(char const*, ServiceFlags const&) (tinyformat.h:966)\r\n==10465==    by 0x54C952: getnetworkinfo(JSONRPCRequest const&) (net.cpp:462)\r\n==10465==    by 0x28EDB5: CallRPC(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (rpc_tests.cpp:31)\r\n==10465==    by 0x293947: rpc_tests::rpc_togglenetwork::test_method() (rpc_tests.cpp:88)\r\n==10465==    by 0x2950E5: rpc_tests::rpc_togglenetwork_invoker() (rpc_tests.cpp:84)\r\n==10465==    by 0x182496: invoke<void (*)()> (callback.hpp:56)\r\n==10465==    by 0x182496: boost::unit_test::ut_detail::callback0_impl_t<boost::unit_test::ut_detail::unused, void (*)()>::invoke() (callback.hpp:89)\r\n...\r\n```\r\n\r\nThe read of the uninitialized variable `nLocalServices` is triggered by `g_connman->GetLocalServices()` in `getnetworkinfo(const JSONRPCRequest& request)` (`net.cpp:462`):\r\n\r\n```c++\r\nUniValue getnetworkinfo(const JSONRPCRequest& request)\r\n{\r\n...\r\n    if(g_connman)\r\n        obj.push_back(Pair(\"localservices\", strprintf(\"%016x\", g_connman->GetLocalServices())));\r\n...\r\n}\r\n```\r\n\r\nThe reason for the uninitialized `nLocalServices` is that `CConnman::Start(...)` is not called\r\nby the tests, and hence the initialization normally performed by `CConnman::Start(...)` is\r\nnot done.\r\n\r\nThis commit adds a method `Init(const Options& connOptions)` which is called by both the\r\nconstructor and `CConnman::Start(...)`. This method initializes `nLocalServices` and the other\r\nrelevant values from the supplied `Options` object.",
   "closed_at" : "2017-08-05T11:24:06Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10977/comments",
   "created_at" : "2017-08-02T12:10:16Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10977/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/10977",
   "id" : 247367166,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "id" : 98298007,
         "name" : "P2P",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10977/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 87,
      "created_at" : "2016-12-04T13:31:14Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/25",
      "id" : 2174061,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/25/labels",
      "number" : 25,
      "open_issues" : 9,
      "state" : "open",
      "title" : "0.15.0",
      "updated_at" : "2017-08-05T11:37:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/25"
   },
   "number" : 10977,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/10977.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10977",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/10977.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10977"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "[net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest&)",
   "updated_at" : "2017-08-05T11:24:06Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10977",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}

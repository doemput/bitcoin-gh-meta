[
   {
      "body" : "utACK. It would be cool to also test the include_mempool flag to gettxout to check that a) things which are spent in the mempool arent visible via gettxout (even though they are without include_mempool) and b) things which are only available in the mempool are inversely visible.",
      "created_at" : "2017-04-26T00:45:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#issuecomment-297205628",
      "id" : 297205628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10256",
      "updated_at" : "2017-04-26T00:45:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297205628",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Thank you for your excellent suggestion. I've made the changes as you suggested, squashed and rebased.",
      "created_at" : "2017-04-26T01:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#issuecomment-297210918",
      "id" : 297210918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10256",
      "updated_at" : "2017-04-26T01:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297210918",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114023127"
         }
      },
      "body" : "nit: my personal preference is to make this kind of 'heading' comment into a log, so test runners have some feedback as they're running the test.",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-28T21:28:23Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        # test gettxout",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023127",
      "id" : 114023127,
      "original_commit_id" : "697af1899afc9fc54b0dddd85e4cbae0ac485f6e",
      "original_position" : 33,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 35465352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-28T21:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114023127",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114023292"
         }
      },
      "body" : "This comment isn't quite right. We're not looking at a confirmed transaction here, we're looking at a transaction output who's spend is unconfirmed. That's why if include_mempool is set to False, we still think we own this output",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-28T21:29:31Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        # test gettxout\n+        # confirmed tx should be visible if you exclude mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023292",
      "id" : 114023292,
      "original_commit_id" : "697af1899afc9fc54b0dddd85e4cbae0ac485f6e",
      "original_position" : 34,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 35465352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-28T21:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114023292",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114023528"
         }
      },
      "body" : "no need for brackets here. [assert is a statement, not a function](http://stackoverflow.com/a/30770447/933705).\r\n\r\nThis should just be: `assert not txout`",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-28T21:31:13Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        # test gettxout\n+        # confirmed tx should be visible if you exclude mempool\n+        # but invisible if you include mempool\n+        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, False)\n+        assert_equal(txout['value'], 50)\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, True)\n+        assert(txout is None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023528",
      "id" : 114023528,
      "original_commit_id" : "697af1899afc9fc54b0dddd85e4cbae0ac485f6e",
      "original_position" : 40,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 35465352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-28T21:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114023528",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114024035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114024035"
         }
      },
      "body" : "I think the intent is clearer if you collect both txouts above, and then test that one of them is equal to 10 and the other is equal to balance. Something like:\r\n\r\n```\r\ntxout0 = self.nodes[0].gettxout(mempool_txid, 0, True)\r\ntxout1 = self.nodes[0].gettxout(mempool_txid, 1, True)\r\n\r\nbalance = self.nodes[0].getbalance()\r\nassert_equal(set(10, balance), set(txout0['value'], txout1['value']))\r\n```",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-28T21:34:33Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        # test gettxout\n+        # confirmed tx should be visible if you exclude mempool\n+        # but invisible if you include mempool\n+        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, False)\n+        assert_equal(txout['value'], 50)\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, True)\n+        assert(txout is None)\n+        # mempool tx should be invisible if you exclude mempool\n+        # but visible if you include mempool\n+        mempool_index = 0\n+        txout = self.nodes[0].gettxout(mempool_txid, mempool_index, False)\n+        assert(txout is None)\n+        txout = self.nodes[0].gettxout(mempool_txid, mempool_index, True)\n+        # note the mempool tx will have randomly assigned indices\n+        # but 10 will go to node2 and the rest will go to node0\n+        balance = self.nodes[0].getbalance()\n+        assert(txout['value'] in (10, balance))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114024035",
      "id" : 114024035,
      "original_commit_id" : "697af1899afc9fc54b0dddd85e4cbae0ac485f6e",
      "original_position" : 50,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 35465352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-28T21:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114024035",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114024244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114024244"
         }
      },
      "body" : "consider using named arguments when the positional arguments are just bools. It makes it difficult for the reader to know what the argument is for (alright, I know you've explained it in the comment above, but the reader still needs to trust that you're right!)",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-28T21:36:03Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        # test gettxout\n+        # confirmed tx should be visible if you exclude mempool\n+        # but invisible if you include mempool\n+        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114024244",
      "id" : 114024244,
      "original_commit_id" : "697af1899afc9fc54b0dddd85e4cbae0ac485f6e",
      "original_position" : 37,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 35465352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-28T21:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114024244",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114026198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114026198"
         }
      },
      "body" : "good idea",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-28T21:49:37Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        # test gettxout\n+        # confirmed tx should be visible if you exclude mempool\n+        # but invisible if you include mempool\n+        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, False)\n+        assert_equal(txout['value'], 50)\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, True)\n+        assert(txout is None)\n+        # mempool tx should be invisible if you exclude mempool\n+        # but visible if you include mempool\n+        mempool_index = 0\n+        txout = self.nodes[0].gettxout(mempool_txid, mempool_index, False)\n+        assert(txout is None)\n+        txout = self.nodes[0].gettxout(mempool_txid, mempool_index, True)\n+        # note the mempool tx will have randomly assigned indices\n+        # but 10 will go to node2 and the rest will go to node0\n+        balance = self.nodes[0].getbalance()\n+        assert(txout['value'] in (10, balance))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114026198",
      "id" : 114026198,
      "original_commit_id" : "697af1899afc9fc54b0dddd85e4cbae0ac485f6e",
      "original_position" : 50,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 35468708,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-28T21:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114026198",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "body" : "nits addressed, rebased and squashed.",
      "created_at" : "2017-04-28T21:54:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#issuecomment-298115603",
      "id" : 298115603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10256",
      "updated_at" : "2017-04-28T21:54:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298115603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114052814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114052814"
         }
      },
      "body" : "nit: In the future you might use named args for arguments that are unnamed boolean or integers of a function that takes more than one arg.\r\n\r\n\r\n```py\r\ngettxout(txid=mempool_txid, n=1,include_mempool= True)",
      "commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "created_at" : "2017-04-29T12:45:04Z",
      "diff_hunk" : "@@ -52,13 +52,33 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Check that only first and second nodes have UTXOs\n-        assert_equal(len(self.nodes[0].listunspent()), 1)\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+        mempool_txid = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n+\n+        self.log.info(\"test gettxout\")\n+        # utxo spent in mempool should be visible if you exclude mempool\n+        # but invisible if you include mempool\n+        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, False)\n+        assert_equal(txout['value'], 50)\n+        txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, True)\n+        assert txout is None\n+        # new utxo from mempool should be invisible if you exclude mempool\n+        # but visible if you include mempool\n+        txout = self.nodes[0].gettxout(mempool_txid, 0, False)\n+        assert txout is None\n+        txout1 = self.nodes[0].gettxout(mempool_txid, 0, True)\n+        txout2 = self.nodes[0].gettxout(mempool_txid, 1, True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114052814",
      "id" : 114052814,
      "original_commit_id" : "dd1ea59624458d19ae93838815e2f4b1b1eb73a4",
      "original_position" : 46,
      "path" : "test/functional/wallet.py",
      "position" : 46,
      "pull_request_review_id" : 35495888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10256",
      "updated_at" : "2017-04-29T12:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114052814",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]

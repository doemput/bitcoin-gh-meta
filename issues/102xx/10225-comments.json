[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10225#discussion_r111894262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111894262"
         }
      },
      "body" : "I think we should remove the time hint, otherwise this will become \"the standard\" and, with that, the \"keep-it-updated\" problem will follow.",
      "commit_id" : "ed60970c83d68b2afd60f133f6b9b92797ee6034",
      "created_at" : "2017-04-18T08:16:18Z",
      "diff_hunk" : "@@ -108,6 +108,7 @@\n     'rpcnamedargs.py',\n     'listsinceblock.py',\n     'p2p-leaktests.py',\n+    'import-abort-rescan.py',           # ~17s",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#discussion_r111894262",
      "id" : 111894262,
      "original_commit_id" : "e68c168eac1671328f532d1f5d0ef9af1372abfd",
      "original_position" : 4,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 33166976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10225",
      "updated_at" : "2017-04-21T03:51:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111894262",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK.\r\nNice way with the ref node & threading.",
      "created_at" : "2017-04-18T08:17:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-294724868",
      "id" : 294724868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-18T08:17:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294724868",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10225#discussion_r111895074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10225"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111895074"
         }
      },
      "body" : "Hm, yeah, you're right. Removing.",
      "commit_id" : "ed60970c83d68b2afd60f133f6b9b92797ee6034",
      "created_at" : "2017-04-18T08:20:33Z",
      "diff_hunk" : "@@ -108,6 +108,7 @@\n     'rpcnamedargs.py',\n     'listsinceblock.py',\n     'p2p-leaktests.py',\n+    'import-abort-rescan.py',           # ~17s",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#discussion_r111895074",
      "id" : 111895074,
      "original_commit_id" : "e68c168eac1671328f532d1f5d0ef9af1372abfd",
      "original_position" : 4,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 33167806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10225",
      "updated_at" : "2017-04-21T03:51:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111895074",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Thanks for opening this PR to cover abortrescan. Definitely worth doing.\r\n\r\nI don't like the change you've made to `start_node()`. Adding an optional parameter to a function called `start_node()` which causes the function to *not* start a node is really an abuse of the function.\r\n\r\nI'd much prefer us to move toward having an encapsulated class for a test node, where we could have multiple rpc connections, including asynchronous rpc connections if required. I've been trying to push towards that model in #10082, but I haven't had much luck in attracting reviewers for that PR or the linked PR. I think adding random functionality into util.py is unmaintainable and is moving in the wrong direction.\r\n\r\nSo concept ACK for covering this with a functional test, but please lets not add more to util.py.",
      "created_at" : "2017-04-18T16:43:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-294905696",
      "id" : 294905696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-18T16:43:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294905696",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery \r\n\r\n> I don't like the change you've made to start_node(). Adding an optional parameter to a function called start_node() which causes the function to not start a node is really an abuse of the function.\r\n\r\nYeah, I was wondering if I should have reversed it (i.e. ref_node takes a launch bool and start_node just proxies).\r\n\r\nAs for encapsulate with multiple rpc connections, that sounds great but the functionality is, as you say, not in there. My change is minimal and works, so maybe it's an okay for now until #10082 is ready? (I'll gladly review btw. I just gotta wake up first..)\r\n\r\nEdit: Alternatively I could base this PR on top of #10082. Never done that kind of thing before though.",
      "created_at" : "2017-04-19T00:35:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295025925",
      "id" : 295025925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-19T00:36:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295025925",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "#10082 seems like a big project (I'd love to help btw), so I am proposing a solution until that is resolved here. `start_node` now calls `ref_node` which now has an optional `spawnproc` flag. This means `start_node` always starts a node, and `ref_node` can do both, depending on the flag.\r\n\r\nUnsquashed history: [1](https://github.com/kallewoof/bitcoin/commit/4dc2c402392cb516c32a7c06720a657a02a755a8) Ã¢ÂÂ [2](https://github.com/kallewoof/bitcoin/commit/28c2abf9ea8f86479dab9c7c76a380cf303b26cb) Ã¢ÂÂ [3Ã¢ÂÂ±1](https://github.com/kallewoof/bitcoin/commit/04e8620b9f4586ee91688d5617588c0f7728ab05) Ã¢ÂÂ [4Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/c2321ae106ef4d38774f8764ef200a26a6d28a2c)",
      "created_at" : "2017-04-19T02:20:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295043362",
      "id" : 295043362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-20T02:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295043362",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@kallewoof thanks for being so accepting of my feedback! I don't like NACKing PRs, but I really want to try to not put any additional complexity in util.py if we can help it.\r\n\r\nHave you had a look at getblocktemplate_longpoll.py ? That's doing something similar to this test where an additional asynchronous RPC thread is required. I've tried to rewrite your testcase in the same style here: https://github.com/jnewbery/bitcoin/tree/pr10225. Can you take a look and tell me what you think? I'd prefer to do it this way than adding more complexity to the mainline start_node() function. If we can get #10082 merged, then we can then look at adding an asynchronous RPC thread to the TestNode class so it's available more generally.\r\n\r\nEDIT: I've found that this test fails intermittently when I run it locally. I think perhaps the `importprivkey()` is completing very quickly so it's a race condition and the `abortrescan()` call needs to arrive at the right moment.",
      "created_at" : "2017-04-19T21:05:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295442292",
      "id" : 295442292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-19T21:08:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295442292",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery not a worry at all -- you don't have to hold back the punches with me. I am learning a lot from the feedback I get from you guys. :)\r\n\r\nGotcha on the no-touching-util.py. I will look at getblocktemplate_longpoll and see if I can adapt. Worst case I have two options: I can drop this PR until #10082 or I can put the ref_node code into the test itself with a # TODO and we simply rip it out when it's time to replace.\r\n\r\nAs for the intermittent failures, yes, I am trying to keep the time to run as low as possible and I may have put it a bit too low (upping the range in one or both of the top for loops should stabilize it, I think).",
      "created_at" : "2017-04-20T01:44:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295536808",
      "id" : 295536808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-20T01:44:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295536808",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@jnewbery Wow, the solution in getblocktemplate_longpoll.py was so much cleaner. I switched to that and dropped some commits. I also upped the range to hopefully address the intermittent fails you experienced. Edit: beginning to suspect problem is in fact in the abortres aborting too early. Added small sleep ([7''Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/f2d65693c6d291267a2e9eb78025de58343de7ee)).\r\n\r\n[Unsquashed history](https://github.com/kallewoof/bitcoin/commits/abort-rescan-tests-unsquashed): [~~1~~](https://github.com/kallewoof/bitcoin/commit/4dc2c402392cb516c32a7c06720a657a02a755a8) Ã¢ÂÂ [2](https://github.com/kallewoof/bitcoin/commit/28c2abf9ea8f86479dab9c7c76a380cf303b26cb) Ã¢ÂÂ [~~3Ã¢ÂÂ±1~~](https://github.com/kallewoof/bitcoin/commit/04e8620b9f4586ee91688d5617588c0f7728ab05) Ã¢ÂÂ [4Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/c2321ae106ef4d38774f8764ef200a26a6d28a2c) Ã¢ÂÂ [5Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/cf85ccf3769d699cece9cc37a0bec2d2a492eb90) Ã¢ÂÂ [6Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/2e9f0778dafa8af33f326dc1527d3a2ddd92651f) Ã¢ÂÂ [7''Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/f2d65693c6d291267a2e9eb78025de58343de7ee)\r\n",
      "created_at" : "2017-04-20T02:16:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295548347",
      "id" : 295548347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-20T04:34:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295548347",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Looks better, but the test is still failing more often than not for me. I ran the test 20 times (with 4 tests running in parallel):\r\n\r\n```\r\nTEST                                 | STATUS    | DURATION\r\n\r\nimport-abort-rescan.py --portseed=1  | Ã¢ÂÂ Passed  | 11 s\r\nimport-abort-rescan.py --portseed=10 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=11 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=12 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=13 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=14 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=15 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=16 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=17 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=18 | Ã¢ÂÂ Passed  | 11 s\r\nimport-abort-rescan.py --portseed=19 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=2  | Ã¢ÂÂ Failed  | 12 s\r\nimport-abort-rescan.py --portseed=20 | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=3  | Ã¢ÂÂ Failed  | 12 s\r\nimport-abort-rescan.py --portseed=4  | Ã¢ÂÂ Failed  | 13 s\r\nimport-abort-rescan.py --portseed=5  | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=6  | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=7  | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=8  | Ã¢ÂÂ Failed  | 11 s\r\nimport-abort-rescan.py --portseed=9  | Ã¢ÂÂ Failed  | 11 s\r\n\r\nALL                                  | Ã¢ÂÂ Failed  | 224 s (accumulated) \r\n```\r\n\r\n(ignore the portseed argument - that's just a hack to allow instances of the same test to be run by the test_runner. The value of portseed is ignored).\r\n\r\nI'm not why this fails so much for me, but seems to pass for you and Travis.",
      "created_at" : "2017-04-20T13:52:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295745691",
      "id" : 295745691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-20T13:52:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295745691",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Is there an easy way to run the test like that? E.g. 20 times 4 in parallel?\r\n\r\nEdit: tests keep succeeding for me on a MacBook Pro. Running them on a linux machine (lubuntu) resulted in sporadic failures. Looking into it now.\r\n\r\nEdit: there are two cases where the test will fail; one is when the abortres loop sleeps right over the importprivkey time-to-finish (for `0.01`), and one, I realized, is when the importprivkey doesn't actually start up before the abortres loop ends. I increased the range from 200 to 2000, with sleep kept at `0.001`, which means a total approximate time of 2 seconds in the loop. This almost fixed it on my end but test started failing on the next assertion (aborted, so should not have balance). I bumped block chain size and that seems to have done it. This all feels very flakey though. :(\r\n\r\n[[...]](https://github.com/kallewoof/bitcoin/commits/abort-rescan-tests-unsquashed): Ã¢ÂÂ [8Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/18de5191a95a47ae80f66fbb227df81c053d4088) Ã¢ÂÂ [9Ã¢ÂÂ±2](https://github.com/kallewoof/bitcoin/commit/aadaf065a820bccac9b11df0ed3ca1315916b876)\r\n",
      "created_at" : "2017-04-21T00:30:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-295985752",
      "id" : 295985752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-21T03:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295985752",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "~~Still seeing intermittent failures. Marking this WIP until this is fully resolved.~~\r\n\r\nEdit: Actually, the failures I were seeing were related to a debug line that triggered #10265 so I am removing the WIP part.",
      "created_at" : "2017-04-23T23:31:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-296496911",
      "id" : 296496911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-24T00:03:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296496911",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "> Is there an easy way to run the test like that? E.g. 20 times 4 in parallel?\r\n\r\nYou can do this by changing the `BASE_SCRIPTS` list in test_runner.py to be the same test multiple times. test_runner will automatically remove duplicates, but if you add `--portseed=x` to the test name, then it will run them as separate tests. The dummy portseed parameter is overridden by an actual portseed further down in test_runner.\r\n\r\n> This all feels very flakey though. :(\r\n\r\nIndeed! Is it true to say there's a tradeoff between making the test case last longer and making it more robust? If that's the case I think you should err towards making it run longer and perhaps add it as an extended script rather than a base script.",
      "created_at" : "2017-04-25T14:55:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-297056880",
      "id" : 297056880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-04-25T14:55:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297056880",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "This test is still failing intermittently for me in two different ways:\r\n\r\n```\r\n2017-05-02 18:51:29.922000 TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 146, in main\r\n    self.run_test()\r\n  File \"./import-abort-rescan.py\", line 50, in run_test\r\n    assert abortres # if false, we failed to abort\r\nAssertionError\r\n```\r\n\r\nand:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 146, in main\r\n    self.run_test()\r\n  File \"./import-abort-rescan.py\", line 58, in run_test\r\n    assert_equal(self.nodes[1].getbalance(), 0.0)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/util.py\", line 408, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(0.12300000 == 0.0)\r\n```\r\n\r\nThis is also causing our Jenkins build machine to fail occasionally (2 times out of 30 builds)\r\n\r\n@laanwj - was this merged accidentally? There haven't been any reviews/ACKs. Can we revert it and get it reviewed before remerging?",
      "created_at" : "2017-05-02T19:10:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-298731843",
      "id" : 298731843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-05-02T19:10:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298731843",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "> @laanwj - was this merged accidentally? \r\n\r\nI think so, sorry @kallewoof, needs a new PR now.",
      "created_at" : "2017-05-03T13:51:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-298916684",
      "id" : 298916684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-05-03T13:51:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298916684",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@kallewoof - this has been backed out by #10327 . Please open a new PR so this test can be reviewed before being merged back in. A few suggestions for making this less flakey:\r\n\r\n- increase the number of generated blocks by at least an order of magnitude. Run the test many times on a fast machine, with bitcoind's datadir in /dev/shm. I think this passes on Travis because bitcoind runs slowly so you have a larger window for the `abortrescan` RPC to hit.\r\n- check the debug logs to see how long the rescan actually takes so we're not guessing on what a safe window is.\r\n- I think this test should be in the extended_test list rather than the base_tests list.\r\n- alternatively, tack this test onto a longer test script which already has a long chain, for example pruning.py. Seems a bit untidy, but should guarantee that the rescan takes a long time.",
      "created_at" : "2017-05-03T13:53:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-298917266",
      "id" : 298917266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-05-03T13:53:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298917266",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "No problem - I will do proper testing and make a new PR once done. Sorry for the trouble!",
      "created_at" : "2017-05-04T12:13:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10225#issuecomment-299167849",
      "id" : 299167849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10225",
      "updated_at" : "2017-05-04T12:13:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299167849",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   }
]

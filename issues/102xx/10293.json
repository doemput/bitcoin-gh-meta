{
   "assignee" : null,
   "assignees" : [],
   "body" : "The following will crash bitcoind 0.14.1:\r\n```\r\nbitcoin-cli -regtest fundrawtransaction 01000000000106220000000000001600149bf98693c5892c3e7b6d991cfeebf146285f59bd00000000 '{\"changePosition\": 1}'\r\n```\r\nI've uploaded the corresponding regtest chainstate here: https://github.com/VidaID/bitcoin/blob/fund_segwit_segv/regtest.tar.bz2\r\n\r\nJust untar that into ~/.bitcoin, start `bitcoind -regtest -daemon=0` and run the above `fundrawtransaction`.\r\n\r\nStack trace with debug output is:\r\n```\r\n0x00005555556bde23 in prevector<28u, unsigned char, unsigned int, int>::prevector (this=0x7fff580201f0, other=...)\r\n    at prevector.h:252\r\n252\t            new(static_cast<void*>(item_ptr(size() - 1))) T(*it);\r\n(gdb) where\r\n#0  0x00005555556bde23 in prevector<28u, unsigned char, unsigned int, int>::prevector (this=0x7fff580201f0, other=...)\r\n    at prevector.h:252\r\n#1  0x00005555556ba8c2 in CScript::CScript (this=0x7fff580201f0) at ./script/script.h:376\r\n#2  0x00005555556f63cc in CTxOut::CTxOut (this=0x7fff580201e8) at ./primitives/transaction.h:132\r\n#3  0x00005555557c600f in __gnu_cxx::new_allocator<CTxOut>::construct<CTxOut, CTxOut const&> (this=0x7fffb8ff7ea0, \r\n    __p=0x7fff580201e8, __args#0=...) at /usr/include/c++/6/ext/new_allocator.h:120\r\n#4  0x00005555557c32a6 in std::allocator_traits<std::allocator<CTxOut> >::construct<CTxOut, CTxOut const&> (__a=..., \r\n    __p=0x7fff580201e8, __args#0=...) at /usr/include/c++/6/bits/alloc_traits.h:455\r\n#5  0x0000555555a87044 in std::vector<CTxOut, std::allocator<CTxOut> >::_M_insert_aux<CTxOut const&> (\r\n    this=0x7fffb8ff7ea0, __position=..., __args#0=...) at /usr/include/c++/6/bits/vector.tcc:361\r\n#6  0x0000555555a7bd69 in std::vector<CTxOut, std::allocator<CTxOut> >::insert (this=0x7fffb8ff7ea0, __position=..., \r\n    __x=...) at /usr/include/c++/6/bits/vector.tcc:131\r\n#7  0x0000555555a628de in CWallet::FundTransaction (this=0x555556766150, tx=..., nFeeRet=@0x7fffb8ff7e10: 11760, \r\n    overrideEstimatedFeeRate=false, specificFeeRate=..., nChangePosInOut=@0x7fffb8ff7db8: 1, strFailReason=\"\", \r\n    includeWatching=false, lockUnspents=false, setSubtractFeeFromOutputs=std::set with 0 elements, keepReserveKey=true, \r\n    destChange=...) at wallet/wallet.cpp:2344\r\n#8  0x0000555555a27562 in fundrawtransaction (request=...) at wallet/rpcwallet.cpp:2659\r\n#9  0x00005555557d5338 in CRPCTable::execute (this=0x55555611ed00 <tableRPC>, request=...) at rpc/server.cpp:491\r\n#10 0x00005555559476c0 in HTTPReq_JSONRPC (req=0x7fff84001670) at httprpc.cpp:193\r\n#11 0x000055555574c747 in std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), bool (*)(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (__functor=..., \r\n    __args#0=<unknown type in /usr/local/bin/bitcoind, CU 0x571560, DIE 0x5c6e84>, __args#1=\"\")\r\n    at /usr/include/c++/6/functional:1726\r\n#12 0x0000555555950b7a in std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (this=0x7fff84001780, __args#0=0x7fff84001670, __args#1=\"\") at /usr/include/c++/6/functional:2136\r\n#13 0x000055555594ea71 in HTTPWorkItem::operator() (this=0x7fff84001750) at httpserver.cpp:51\r\n#14 0x0000555555951d65 in WorkQueue<HTTPClosure>::Run (this=0x5555561a0050) at httpserver.cpp:132\r\n#15 0x000055555594bb01 in HTTPWorkQueueRun (queue=0x5555561a0050) at httpserver.cpp:361\r\n#16 0x00005555559618f8 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x5555561a0248) at /usr/include/c++/6/functional:1400\r\n#17 0x000055555596108c in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (\r\n    this=0x5555561a0248) at /usr/include/c++/6/functional:1389\r\n#18 0x0000555555960a91 in std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0x5555561a0240) at /usr/include/c++/6/thread:196\r\n#19 0x00007ffff615f50f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#20 0x00007ffff596d6ca in start_thread (arg=0x7fffb8ff9700) at pthread_create.c:333\r\n#21 0x00007ffff56a70af in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105\r\n```\r\n\r\nIt looks like the crash is in dereferencing the iterator `*it`.  `other.begin()` seems to be pointing to a low memory value 0x06.  I'm guessing this is an implementation error in the `prevector` class.\r\n\r\nDropping the restriction on changeposition or letting it be 0 will not crash.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10293/comments",
   "created_at" : "2017-04-28T19:37:12Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10293/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/10293",
   "id" : 225173726,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10293/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 10293,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "SEGV in segwit fundrawtransaction",
   "updated_at" : "2017-04-28T19:37:12Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10293",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/1746780?v=3",
      "events_url" : "https://api.github.com/users/mcelrath/events{/privacy}",
      "followers_url" : "https://api.github.com/users/mcelrath/followers",
      "following_url" : "https://api.github.com/users/mcelrath/following{/other_user}",
      "gists_url" : "https://api.github.com/users/mcelrath/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/mcelrath",
      "id" : 1746780,
      "login" : "mcelrath",
      "organizations_url" : "https://api.github.com/users/mcelrath/orgs",
      "received_events_url" : "https://api.github.com/users/mcelrath/received_events",
      "repos_url" : "https://api.github.com/users/mcelrath/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/mcelrath/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/mcelrath/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/mcelrath"
   }
}

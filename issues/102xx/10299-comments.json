[
   {
      "body" : "I'd like to see us pull most seeder stuff out of the earlier randomness PR to set that initial state to protect against cases like we saw in netbsd where the OS rng was producing no randomness of use.",
      "created_at" : "2017-04-29T18:18:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298185550",
      "id" : 298185550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-29T18:18:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298185550",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell As that's trying to protect against a scenario that the current OpenSSL-based approach is unlikely to be protecting against, I think that's something that can easily be done in a later PR.",
      "created_at" : "2017-04-29T18:31:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298186284",
      "id" : 298186284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-29T18:31:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298186284",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa OpenSSL used a collection of system pointers and timestamps, and our use on windows also adds a screenshot.  I agree that they can be considered separately, but we should do the improved seeding first so that we're not potentially introducing a vulnerability on systems where the os entropy isn't helpful.",
      "created_at" : "2017-04-29T19:25:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298189304",
      "id" : 298189304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-29T19:25:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298189304",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell I had a look at what OpenSSL 1.1.0 uses as RNG seeding (latest stable release):\r\n* On UNIX systems\r\n  * read /dev/urandom / EGD / arc4random bytes (through a poll loop, which does not gather timing information)\r\n  * The (internally cached!) current pid\r\n  * getuid()\r\n  * time() (seconds resolution)\r\n* On Windows:\r\n  * CryptGenRandom (OS entropy, like we do)\r\n  * Intel HW rng (through OS call)\r\n  * Timing information (tsc if available, GetPerformanceCounter like we do, GetTickCount)\r\n  * Memory usage statistics\r\n  * Current pid\r\n  * Since https://github.com/openssl/openssl/pull/1079, RAND_screen does not actually read the screen anymore, but is an alias for RAND_poll (which uses the above steps as source).\r\n\r\nIf we include the missing sources (pid/uid/rdrand/tsc/memusage) in our GetRandBytes call, do you agree it is a strict improvement?",
      "created_at" : "2017-04-30T18:58:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298250033",
      "id" : 298250033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T18:58:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298250033",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Yes, I would... though I don't see why we shouldn't just take the entropy collection function we wrote before, which (at least on linux) was pretty comprehensive and really not complex at all and use that as the seed.  We could do it in a commit merged before this one too, it would just feed openssl. \r\n\r\nI think what we should be doing is in the realtime call we would read things which are relatively cheap (e.g. TSC) and will change,  and an initial call that sets the initial randomness, includes things that don't change during execution and/or are more expensive to do (e.g. dumping /etc/passwd into it, running a cpu-expensive KDF on the result)",
      "created_at" : "2017-04-30T20:43:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298255822",
      "id" : 298255822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T20:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298255822",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell Again, if everyone is fine with just doing that, great. But if all of that needs to become a separately-maintained library first, then I don't think it should be a blocker for this PR.\n\nI do not believe that protecting against broken OSes should be a priority for us. In general, OSses are in a much better position to provide an RNG than we are. If the OS RNG is broken, generally all bets are off, including remote access to your system. It's a worthwhile goal to provide a best effort security in that case, but not if it comes at the cost of extra maintenance work that this project isn't willing to take on.",
      "created_at" : "2017-04-30T20:49:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298256205",
      "id" : 298256205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T20:49:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298256205",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "We have seen more instances of OS RNGs being broken than OpenSSL's RNG being broken in the last 5 years.\r\n\r\nTo me it sounds like you are proposing increasing exposure to real issues that we have actually seen in order to eliminate crufty code which is time tested. I don't believe that this is a good trade-off.\r\n\r\nDoubly so because our process for generating long lived secrets is already combined with the OS rng in a way that should basically make it impossible for an OpenSSL fault to screw our long term key generation. In my view 95% of the purpose of the  OpenSSL randomness pool is protecting against the OS's behavior.",
      "created_at" : "2017-04-30T21:00:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298256806",
      "id" : 298256806,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T21:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298256806",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Unrelated to this debate:  I think you should considering adding a counter to the reseeder.  e.g.  static unsigned uint32_t entropy_count = 0; and in the lock append it to the hash and update it. It's another source of real-time entropy which is effectively free, as it's protected by the same lock as the entropy pool.",
      "created_at" : "2017-04-30T21:08:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298257240",
      "id" : 298257240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T21:08:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298257240",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell I considered doing that, but given that it's effectively a hash chain, unless the hash function is horribly broken, a counter does not add anything. In fact, increasing the state to 36 bytes should be a better use of 4 bytes of memory than a counter.",
      "created_at" : "2017-04-30T21:19:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298257929",
      "id" : 298257929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T21:19:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298257929",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I thought about that too, though I believe the counter would allow us to make stronger proofs about the cycle length of the function while relying on much less strong assumptions about the behavior of the hash-- similar to how fortuna uses a permutation in order to make _very_ strong proofs about the cycle length.  I suppose we could always change it later if someone wants to do the formal work to verify it. \r\n\r\nThe fact that it has compromise resistance (by new entropy constantly being added in the form of time/stack pointer/os entropy) means the cycle length is probably not much of a concern.  Without that, then there would be weak seeds, though they'd be cryptographically hard to find, where the RNG output would have short cycles (the frequency of short cycles in random functions is surprisingly high)-- and these would be eliminated by a counter unless you allowed a really implausible hash function.\r\n",
      "created_at" : "2017-04-30T22:35:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298261885",
      "id" : 298261885,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-04-30T22:35:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298261885",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Going to close this and propose some other RNG changes first.",
      "created_at" : "2017-05-02T23:01:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10299#issuecomment-298785082",
      "id" : 298785082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10299",
      "updated_at" : "2017-05-02T23:01:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298785082",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]

{
   "assignee" : null,
   "body" : "As reported in issue #6184, pruning doesn't currently work well during initial block download if connected to a peer (like the relay client) which can deliver unrequested blocks at the tip before the node is synced.  When that happens, blocks with a very large height are written to early block files, thus preventing pruning from taking place on those early files (due to the restriction against deleting block files containing blocks with a height greater than ```chainActive.Tip() - 288```).\r\n\r\n#6221 attempts to deal with this better by allowing block files to at least not be contiguous, so that we can still prune later files even if an earlier one ends up containing a large-height block.  However, even with that behavior change, during the several hours that initial download could take, it's possible for dozens of block files to end up containing a block that is relatively recent, potentially causing the pruning target to be exceeded substantially for 2 days (~288 blocks) after starting up.\r\n\r\nThis pull goes further to improve behavior when connected to a peer that is serving unrequested blocks.  The first commit tries to prevent block files from becoming too out-of-order by not processing an unrequested block if its height is more than 288 blocks past our tip.\r\n\r\n - Regarding the choice of constant: there were two natural choices to consider, one was the constant used by pruning (288 == MIN_BLOCKS_TO_KEEP), the other is the BLOCK_DOWNLOAD_WINDOW (1024) which is used for a similar purpose when doing parallel fetching of blocks.  The smaller MIN_BLOCKS_TO_KEEP value means that we'd be more likely to achieve our pruning target, and it seemed reasonable to me that we'd use it similarly for managing out-of-order-ness in block files to make pruning behave better.  But I'm open to other suggestions for this value.\r\n\r\n - While this change was motivated by pruning nodes, for simplicity's sake I didn't restrict this behavior change to pruning nodes.\r\n\r\nThe second commit changes the behavior when receiving unrequested blocks from whitelisted peers, so that those blocks are not automatically processed during initial block download.  Instead, during IBD they are subject to the same conditions as when received from non-whitelisted peers.\r\n\r\n - This change is to accommodate relay network users who whitelist the relay peer; without the second commit the first commit would have no effect.  Alternatively, if it's reasonable for users to not whitelist the relay peer, then perhaps we could drop this commit altogether.\r\n\r\n - Before settling on using ```IsInitialBlockDownload()```, I considered using the guard that prevents direct-fetching of inv'ed blocks, but that test was in my opinion worse:\r\n```chainActive.Tip()->GetBlockTime() > GetAdjustedTime() - chainparams.GetConsensus().nPowTargetSpacing * 20```\r\n\r\nIf this pull looks okay, I think it should be included in 0.11.",
   "closed_at" : "2015-07-29T18:04:36Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 12,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6224/comments",
   "created_at" : "2015-06-03T02:04:07Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6224/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/6224",
   "id" : 84309060,
   "labels" : [
      {
         "color" : "006b75",
         "name" : "P2P",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6224/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 6224,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/6224.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6224",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/6224.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6224"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Be even stricter in processing unrequested blocks",
   "updated_at" : "2015-07-31T05:56:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6224",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
      "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sdaftuar/followers",
      "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sdaftuar",
      "id" : 7463573,
      "login" : "sdaftuar",
      "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
      "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
      "repos_url" : "https://api.github.com/users/sdaftuar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sdaftuar"
   }
}

{
   "assignee" : null,
   "body" : "This will add basic bip32 support for the current wallet. I testes the PR in serval environments, but, still needs more testing.\r\nFeedback of any type is highly welcome.\r\n\r\n## Concept\r\n* At the moment, all HD operations are independent/separated from the existing normal single key operations (allows better testing and a smother transition to HD wallets).\r\n* The wallet is still capable of using and producing single keys.\r\n* The user can define his desired chainpath like `m/44'/0'/0'/c` or `m/0'/c`\r\n   * \"m\" stands for master, \"c\" for switch between internal (1) and external (0) chain\r\n* HD private keys are not stored in the database. If they are required, they get derived via the stored master seed and the available metadata (child index, chain path).\r\n* When creating a new hd chain of keys (`hdaddchain add <chainpath> <masterseed>`), the rpc command will add the generated master seed as hex to the response (user can store it and use it as backup).\r\n* Bip39 is not supported (and I don't plan to support it). ~~Instead of bip39 i'd like to use @maaku base-32 error correction encoding (https://gist.github.com/maaku/8996338). Users could write down the used master seed (or print if we would add a such option to the GUI).~~ (not sure about that but i think users should create a print of the seeds 32byte hex representation. Brainwallets tend to have weak security and are social-conceptual a bad idea).\r\n* There is one new wallet state variable (`activeHDChain`) which is somehow unavoidable (change addresses, etc.).\r\n\r\n## Persistance\r\n* HD pub keys are stored within a new object CHDPubKey. Additional to the raw pub key there is also information about the chain, depth, etc.\r\n* HD master seeds are stored as a 32byte raw data blob (encrypted with the given masterkey if wallet is/gets encrypted)\r\n\r\n## RPC\r\nThis adds 5 new rpc commands\r\n1. `hdaddchain` allows to add a new hd chain of keys\r\n2. `hdgetaddress` get next available external key\r\n3. `hdsetchain` set the active chain of keys (enables basic chain rotation)\r\n4. `hdsendtoaddress` copy of sendtoaddress but uses a hd pub key for the change address\r\n5. `hdgetinfo` list the available chains of keys\r\n\r\n## GUI\r\nThe UI still uses normal key operation. Switch to HD would be trivial, but, i'd like to extend the \"first start wizard\" to allow selecting a chain and encrypt before writing unencrypted data to the database.\r\n\r\n## What's next\r\n* The rpc test is a little bit mininalistic and I have plans to extend the test\r\n* Support for pub key only wallets (basically this is trivial, it only needs to allow master pub key or extended int./ext. chain pub keys as input for `hdaddchain` RPC. Signing would fail in a such case.\r\n* Support for HDM (allow one or two additional master pub keys per chain of keys to allow creating of multisigaddresses with standard `hdgetaddress` call [as well as change output keys]).",
   "closed_at" : "2016-05-10T09:26:20Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
      "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
      "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jonasschnelli",
      "id" : 178464,
      "login" : "jonasschnelli",
      "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
      "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
      "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jonasschnelli"
   },
   "comments" : 33,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6265/comments",
   "created_at" : "2015-06-10T11:06:37Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6265/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/6265",
   "id" : 86929341,
   "labels" : [
      {
         "color" : "02d7e1",
         "name" : "Wallet",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6265/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 6265,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/6265.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6265",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/6265.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6265"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Add HD/Bip32 support",
   "updated_at" : "2016-05-10T09:26:20Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6265",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
      "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
      "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jonasschnelli",
      "id" : 178464,
      "login" : "jonasschnelli",
      "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
      "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
      "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jonasschnelli"
   }
}

[
   {
      "body" : "In the BitcoinXT code, we check to see if a transaction is in mapDeltas before evicting it. We add the transaction to mapDeltas for anything that comes from the wallet, or anything that's named in the RPC prioritisetransaction. If Core doesn't do something similar, perhaps it should.",
      "created_at" : "2015-11-09T11:22:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155032272",
      "id" : 155032272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-09T11:22:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155032272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "Something was messed up about the estimatepriority calculations as well.  The priority of this transaction was only about 90 million, which is *far* below what estimatepriority now reports as required for a confirmation target of 24:\r\n$ bitcoin-cli estimatepriority 24\r\n2551901276.470781\r\n\r\nInterestingly higher than what estimatepriority reports for a confirmation target of 3 blocks, but I assume it doesn't actually try to send anything as a free transaction when the estimated required priority is -1?\r\n$ bitcoin-cli estimatepriority 3\r\n-1",
      "created_at" : "2015-11-09T11:37:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155038699",
      "id" : 155038699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-09T11:37:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155038699",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15728135?v=3",
         "events_url" : "https://api.github.com/users/sturles/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sturles/followers",
         "following_url" : "https://api.github.com/users/sturles/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sturles/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sturles",
         "id" : 15728135,
         "login" : "sturles",
         "organizations_url" : "https://api.github.com/users/sturles/orgs",
         "received_events_url" : "https://api.github.com/users/sturles/received_events",
         "repos_url" : "https://api.github.com/users/sturles/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sturles/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sturles/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sturles"
      }
   },
   {
      "body" : "@sturles see #6134 for solving the problem of not defaulting to the default AllowFree threshold if the estimate is -1.   \r\n\r\nAs for the original problem.  It remains to be determined what the correct behavior should be.\r\nSee #6959 and comments [here](https://github.com/bitcoin/bitcoin/issues/6725#issuecomment-143855283) and [here](https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143367283), but it sounds like perhaps just improving the UI is the best answer rather than actually changing the behavior.\r\n\r\nPerhaps what we could do though is put a few checks in the wallet code to recognize a mempool limited situation and not generate free txs or txs of too little fee in that situation.  @sdaftuar any thoughts on that?",
      "created_at" : "2015-11-10T01:45:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155256471",
      "id" : 155256471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-10T01:45:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155256471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos Using the priroity and suggested fee targets for the next confirmation target instead of default values when estimatepriority/estimatefee returns -1 is a good idea.\r\n\r\nI haven't used the GUI for years, and I am not sure how those suggestions will help in this case.  I have sent a transaction which got refused with -1 confirmations (assumed not sent), and then resurrected when I restarted bitcoind.\r\n\r\nSince the current trimming code favors relaying of paid spam instead of lower paying high priority transactions (much less likely to be spam), I think only taking the fee into account when trimming is an entirely wrong approach.  Keep the transactions which are most likely to get mined instead.  Transactions which will be mined in the next block using the default settings should not be evicted.",
      "created_at" : "2015-11-10T07:47:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155348293",
      "id" : 155348293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-10T07:56:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155348293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15728135?v=3",
         "events_url" : "https://api.github.com/users/sturles/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sturles/followers",
         "following_url" : "https://api.github.com/users/sturles/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sturles/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sturles",
         "id" : 15728135,
         "login" : "sturles",
         "organizations_url" : "https://api.github.com/users/sturles/orgs",
         "received_events_url" : "https://api.github.com/users/sturles/received_events",
         "repos_url" : "https://api.github.com/users/sturles/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sturles/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sturles/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sturles"
      }
   },
   {
      "body" : "@sturles Now see the latest commit in #6134.  It affects both the gui and the RPC when you are using bitcoinds transaction creation logic.  Now you will no longer create a tx that would be rejected by your mempool.\r\n\r\n@sdaftuar is working on a fix for trying to keep priority in mind for mempool limiting.",
      "created_at" : "2015-11-10T23:34:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155602312",
      "id" : 155602312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-10T23:34:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155602312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "#6722 very deliberately disabled high-priority as a thing when mempool gets large. The \"correct\" behavior here is for wallet and RPC to follow along...high-priority goes away (maybe unless we have a replace-by-fee mechanism).",
      "created_at" : "2015-11-11T07:15:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155689889",
      "id" : 155689889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T07:15:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155689889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt That would be very unfortunate. Following the last malicious spam attacks against bitcoin, I was hoping for spam mitigation to be emphasized in future versions, not removed to promote more spam.  High priority transactions are typically less spammy.  I have some ideas on how to change the priority calculation slightly to promote utxo set reduction as well, but I understand this is not a goal.\r\n\r\n@morcos Does this solve #6959 as well?  (Locally generated high priority transaction getting evicted after it was accepted.)",
      "created_at" : "2015-11-11T08:23:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155701740",
      "id" : 155701740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T08:23:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155701740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15728135?v=3",
         "events_url" : "https://api.github.com/users/sturles/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sturles/followers",
         "following_url" : "https://api.github.com/users/sturles/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sturles/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sturles",
         "id" : 15728135,
         "login" : "sturles",
         "organizations_url" : "https://api.github.com/users/sturles/orgs",
         "received_events_url" : "https://api.github.com/users/sturles/received_events",
         "repos_url" : "https://api.github.com/users/sturles/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sturles/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sturles/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sturles"
      }
   },
   {
      "body" : "I think there is some general agreement that priority is not a metric we should be optimizing for - it significantly complicates a ton of code and sets a bad expectation from a user's point of view. In the medium term, miners will start using fees as a serious source of income and priority areas will go away (this is already happening for a few miners). We don't want users who are still using free transactions (while most have started paying fees) to be surprised when they suddenly have to pay fees again.\n\nWorse, priority areas only help power users and users who rarely use the system. It is unclear to me why we should be prioritizing these users over all others. Though these users are, indeed, less spammy, the only incentive-compatible way to reduce spam in the Bitcoin system as it exists today is to allow fees to rise to a point where spammers are no longer willing to pay it.\n\nOn November 11, 2015 12:23:38 AM PST, sturles <notifications@github.com> wrote:\n>@TheBlueMatt That would be very unfortunate. Following the last\n>malicious spam attacks against bitcoin, I was hoping for spam\n>mitigation to be emphasized in future versions, not removed to promote\n>more spam.  High priority transactions are typically less spammy.  I\n>have some ideas on how to change the priority calculation slightly to\n>promote utxo set reduction as well, but I understand this is not a\n>goal.\n>\n>@morcos Does this solve #6959 as well?  (Locally generated high\n>priority transaction getting evicted after it was accepted.)\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155701740\n",
      "created_at" : "2015-11-11T09:18:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155711610",
      "id" : 155711610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T09:18:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155711610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt What is your definition of \"medium term\"?  I have failed to find a difference in income per block for pools with a high -blockprioritysize (e.g. BitMinter which use 500k) and some Chineese pools which will include anything based on fee alone.  There are a few high paying transactions, and a very long tail which is practically worthless.  Since most high priority transactions pay a fee as well, just smaller fees than the spam, the difference in total block income is just a few satoshi.  There is no doubt which blocks include the most spam and blocks the most normal transactions, however.\r\n\r\nI think this complexity is something we have to live with, if we want it to be hard for a malicious user with a few bitcoins to not only block normal bitcoin transactions for a long time, but even remove them from the memory pools forever, by sending spam.  And also if we want to introduce incentives to reduce the utxo set, I can't see how that will be possible without setting a priority.  \r\n\r\nIn the past when someone started to DoS Bitcoin by sending a lot of spam with high fees, previous transactions using lower fees (estimated before the attack started) would still trickle through due to high priority.  This won't happen any more if you remove the priority system.  Instead the transactions will be erased from all memory pools.  This isn't what people have learned to expect.  When you send a transaction using the recommended fee, you expect it to get confirmed eventually, if not in the first block.  Bitcoin is not always fast, but it used to be reliable.\r\n\r\nI don't understand how the priority system only help power users and people who rarely use the system.  Which category would e.g. someone who only use bitcoin to pay for a beer and a burger every Friday go in?  Will the bar still accept bitcoins when transactions from trusted customers stop confirming eventually, like they used to?  I think this change is very bad for usability and adoption.",
      "created_at" : "2015-11-11T10:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155723333",
      "id" : 155723333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T10:17:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155723333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15728135?v=3",
         "events_url" : "https://api.github.com/users/sturles/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sturles/followers",
         "following_url" : "https://api.github.com/users/sturles/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sturles/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sturles",
         "id" : 15728135,
         "login" : "sturles",
         "organizations_url" : "https://api.github.com/users/sturles/orgs",
         "received_events_url" : "https://api.github.com/users/sturles/received_events",
         "repos_url" : "https://api.github.com/users/sturles/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sturles/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sturles/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sturles"
      }
   },
   {
      "body" : "@TheBlueMatt, my take on this is that the long term status of priority is tenuous at best because I agree unless there is a change in consensus rules its hard to consider attributes that miners aren't incentivized to prioritize.   However in the meantime, as long as we're seeing significant hash power still reserve a priority space, it is useful to preserve the ability to send free high priority transactions.  This has to be balanced with the complexity of achieving this goal.  It was (rightfully) judged more important to safely limit the growth of the mempool than preserve this ability.  However if we can, without undue additional complexity, add back in the ability to have priority earn you space in the mempool and still be comfortable in the security properties of the limiting code then we should do so.",
      "created_at" : "2015-11-11T14:41:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155800080",
      "id" : 155800080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T14:41:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155800080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@sturles It remains an open problem what to do if your mempool would evict your transaction due to size limiting or time based eviction.  I agree the current state of affairs is not ideal, however it seems your mempools behavior is your best guess as to what other mempools are doing, and if you are being evicted from your mempool, you may very well want to spend those outputs again and broadcast a replacement transaction.",
      "created_at" : "2015-11-11T14:44:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155800847",
      "id" : 155800847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T14:44:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155800847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos It's most certainly not an open question.\r\n\r\nThe mempool *must* not even know that a transaction was generated by the local wallet.\r\n\r\nIf it does then there *will* be privacy implications.",
      "created_at" : "2015-11-11T15:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155805305",
      "id" : 155805305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T15:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155805305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "@pstratem I tend to agree. But on the other hand, the wallet doesn't *have* to regard inputs of a transaction that is no longer in the mempool as spendable.\r\n\r\nThis also messes with manual broadcast with `-walletbroadcast=0` in which case the transaction may not end up in the local mempool for a while. If the wallet creates a transaction it has to regard those inputs as spent.\r\n",
      "created_at" : "2015-11-11T17:55:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6972#issuecomment-155861056",
      "id" : 155861056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6972",
      "updated_at" : "2015-11-11T17:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155861056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

[
   {
      "body" : "Another option, which just solves my immediate problem, would be to override this check for whitelisted peers.",
      "created_at" : "2015-11-09T09:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155011166",
      "id" : 155011166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-09T09:42:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155011166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The motivation for this restriction was to avoid responding to a getheaders when your chain might deviate from the checkpointed chain, because your peers that have the checkpointed chain will disconnect you.  (After changing the download logic to call getheaders on inbound peers, I wanted to avoid a situation where a newly syncing node could be partitioned from the network by a malicious peer that served it a bogus headers chain.)\r\n\r\nThis check is more restrictive than is needed for that -- I think I did it this way because I didn't want to introduce yet another function for determining \"synced-ness\" (or a new place in the code that uses  checkpoints).  Also, I think block relay only happens if you're out of InitialBlockDownload, so it didn't seem unreasonable to use it here as well, but we could loosen things up if we wanted to.\r\n\r\nI assume the use case you're going for is to have two nodes be able to sync even if disconnected from the rest of the network?  If so the whitelisting approach seems reasonable to me.  As a minor nit, I think the whitelisting test gets the property backwards -- really what you'd want is to eliminate the restriction if your peer has whitelisted you, rather than the other way around, since then you could respond without fear of being disconnected -- but since it's likely both nodes are under common control anyway, it seems a minor issue.\r\n\r\nWill review the PR.",
      "created_at" : "2015-11-09T14:34:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155079929",
      "id" : 155079929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-09T14:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155079929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "> I assume the use case you're going for is to have two nodes be able to sync even if disconnected from the rest of the network?\r\n\r\nRight. I have a node A that isn't catched up fully, and node B that I want to sync from node A. B only connects to A. A is currently not connected to the internet, to make sure B gets all available I/O bandwidth.\r\n",
      "created_at" : "2015-11-09T14:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155084614",
      "id" : 155084614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-09T14:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155084614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Apart from my own issue, I'm also somewhat concerned that this check will reduce the number of nodes that are willing to serve blocks. But that is probably misguided.\r\nAny node that usefully contributes to the network will be synced up to within 24 hours from the tip, I suppose...\r\n\r\nSo - other nodes will disconnect you if you give headers that deviate from the checkpointed chain? Isn't that wrong behavior? Should we enforce the checkpoints that strictly? (is it always, or usually, an attack when this happens?)\r\n",
      "created_at" : "2015-11-10T09:31:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155368238",
      "id" : 155368238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-10T09:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155368238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Yeah, I can't think of a common scenario where you'd start up a node and find an outbound peer that wasn't already close to caught up, and therefore unable to sync.  But if you wanted to loosen this up somewhat I think it'd be fine to do so.\r\n\r\nRegarding the checkpoints, yes presently once we have the checkpointed headers, we will fail (see `CheckIndexAgainstCheckpoint`, called from `AcceptBlockHeader`) when trying to validate a header that forks prior to the last checkpoint, and we assign DoS points.\r\n\r\nI think we're in the process of slowly loosening this up (eg with #5927 which will be new for 0.12), but I don't have a clear picture of the roadmap for doing so.  I do think that if you get invalid headers before the checkpointed chain (block height 295000 is the last checkpoint) that the node is either trying to attack you, or -- maybe more likely -- it has been attacked itself.  It's this latter point that worries me somewhat about not merging some kind of fix for 0.12 to prevent an attacker from partitioning the network now that #5927 is in (see https://github.com/bitcoin/bitcoin/pull/5927#issuecomment-152229444).",
      "created_at" : "2015-11-10T16:09:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155467210",
      "id" : 155467210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-10T16:09:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155467210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "This also breaks rpc-tests/script_test.py, but is \"worked around\" by the whitelisted hack. IMO, that's pretty ugly. :(",
      "created_at" : "2015-11-15T07:30:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-156788484",
      "id" : 156788484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-15T07:30:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156788484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I think this issue should be re-opened, as it's still an issue for non-whitelisted peers. Why not make it only return if the active tip is below the last checkpoint?",
      "created_at" : "2016-10-12T10:17:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-253174651",
      "id" : 253174651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2016-11-02T02:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/253174651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   }
]

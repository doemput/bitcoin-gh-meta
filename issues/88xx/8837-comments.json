[
   {
      "body" : "```adding my comment here instead of on the files changed tab```\r\n\r\nIs this 01000000000100000000000000000000000000 supposed to be parsed as a zero input, one output to `0x00` transaction?\r\n```\r\n01000000\r\n00\r\n01\r\n  0000000000000000\r\n  00\r\n00000000\r\n```\r\n\r\nWouldn't `010000000001000000000000` (which currently fails) be more suitable?\r\n```\r\n01000000\r\n00\r\n01\r\n00\r\n00\r\n00000000\r\n```\r\n\r\nFollowing `01000000000000000000` behavior.\r\nUnless there's another reason for using that one.",
      "created_at" : "2016-09-29T17:56:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-250542708",
      "id" : 250542708,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-09-29T17:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250542708",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5624963?v=3",
         "events_url" : "https://api.github.com/users/fivepiece/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fivepiece/followers",
         "following_url" : "https://api.github.com/users/fivepiece/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fivepiece/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fivepiece",
         "id" : 5624963,
         "login" : "fivepiece",
         "organizations_url" : "https://api.github.com/users/fivepiece/orgs",
         "received_events_url" : "https://api.github.com/users/fivepiece/received_events",
         "repos_url" : "https://api.github.com/users/fivepiece/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fivepiece/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fivepiece"
      }
   },
   {
      "body" : "@fivepiece , I believe your second transaction is invalid. Commented transactions:\r\n\r\n`01000000000100000000000000000000000000` is a valid partial transaction with 0 inputs and 1 output:\r\n\r\n```\r\n01000000 // version (4 bytes)\r\n00 // number of inputs (varint - 1 byte if value is 0)\r\n01 // number of outputs (varint - 1 byte if value is 1)\r\n  0000000000000000 // output 1 amount (8 bytes)\r\n  00 // output 1 scriptSig size (varint - 1 byte if value is 0)\r\n00000000 // nlocktime (4 bytes)\r\n```\r\n\r\n`010000000001000000000000` is invalid and doesn't parse:\r\n\r\n```\r\n01000000 // version (4 bytes)\r\n00 // number of inputs (varint - 1 byte if value is 0)\r\n01 // number of outputs (varint - 1 byte if value is 1)\r\n  00 // output 1 amount !!INVALID SHOULD BE 8 BYTES!!\r\n  00 // etc\r\n00000000\r\n```\r\n\r\n(in fact it'd be partially parsed as):\r\n\r\n```\r\n01000000 // version (4 bytes)\r\n00 // number of inputs (varint - 1 byte if value is 0)\r\n01 // number of outputs (varint - 1 byte if value is 1)\r\n  000000000000.... // output 1 amount (!!INVALID expects 8 bytes - only 6 read!!)\r\n...\r\n```\r\n\r\n\r\nYour other example `01000000000000000000` is valid as a partial transaction with 0 inputs and 0 outputs:\r\n\r\n```\r\n01000000 // version (4 bytes)\r\n00 // number of inputs (varint - 1 byte if value is 0)\r\n00 // number of outputs (varint - 1 byte if value is 0)\r\n00000000 // nlocktime (4 bytes)\r\n```\r\n",
      "created_at" : "2016-09-29T19:36:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-250568871",
      "id" : 250568871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-09-29T19:37:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250568871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery I guess I should clarify my question then.  I was wondering why `01000000000100000000000000000000000000` was given as a test case at all, as it seems very specific.\r\n\r\nMy understanding was that you were out to implement a \"blank\" segwit transaction in that test, and I think `010000000001000000000000` is a better representation, because it's very similar to the non-segwit bank tx `01000000000000000000`, only with the addition of the marker and flag.\r\n\r\n[edit]\r\nI agree that `010000000001000000000000` currently fails parsing, but I think that it shouldn't. :)",
      "created_at" : "2016-09-29T19:52:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-250572634",
      "id" : 250572634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-09-29T19:53:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250572634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5624963?v=3",
         "events_url" : "https://api.github.com/users/fivepiece/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fivepiece/followers",
         "following_url" : "https://api.github.com/users/fivepiece/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fivepiece/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fivepiece",
         "id" : 5624963,
         "login" : "fivepiece",
         "organizations_url" : "https://api.github.com/users/fivepiece/orgs",
         "received_events_url" : "https://api.github.com/users/fivepiece/received_events",
         "repos_url" : "https://api.github.com/users/fivepiece/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fivepiece/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fivepiece"
      }
   },
   {
      "body" : "Anyway thinking about this some more, feel free to disregard my suggestion.  It's too ambiguous.  Maybe the correct way is to fall back to parsing a non segwit transaction, as no inputs mean no witnesses too.",
      "created_at" : "2016-09-29T21:18:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-250594332",
      "id" : 250594332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-09-29T21:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250594332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5624963?v=3",
         "events_url" : "https://api.github.com/users/fivepiece/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fivepiece/followers",
         "following_url" : "https://api.github.com/users/fivepiece/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fivepiece/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fivepiece",
         "id" : 5624963,
         "login" : "fivepiece",
         "organizations_url" : "https://api.github.com/users/fivepiece/orgs",
         "received_events_url" : "https://api.github.com/users/fivepiece/received_events",
         "repos_url" : "https://api.github.com/users/fivepiece/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fivepiece/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fivepiece"
      }
   },
   {
      "body" : "Correct. If none of the inputs have witnesses or if the witnesses are all empty, then there shouldn't be a witness structure attached to the transaction\r\n\r\nFrom `transaction.h`:\r\n\r\n```\r\n            /* It's illegal to encode a witness when all vtxinwit entries are empty. */\r\n            throw std::ios_base::failure(\"Superfluous witness record\");\r\n```\r\n\r\nIn this case there are no transaction inputs, so no witnesses, and so the witness dummy byte and flag shouldn't be set.",
      "created_at" : "2016-09-29T21:41:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-250599502",
      "id" : 250599502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-09-29T21:41:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250599502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Right re. `transaction.h`, also I've asked a related question about this in -dev yesterday.  Initially I read that comment as a reference to actual witness data (sigs, scripts), but I see the point of not needing segwit markers at all for no input transactions.\r\n\r\nThanks for clearing it up.",
      "created_at" : "2016-09-29T22:03:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-250604127",
      "id" : 250604127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-09-29T22:03:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250604127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5624963?v=3",
         "events_url" : "https://api.github.com/users/fivepiece/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fivepiece/followers",
         "following_url" : "https://api.github.com/users/fivepiece/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fivepiece/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fivepiece",
         "id" : 5624963,
         "login" : "fivepiece",
         "organizations_url" : "https://api.github.com/users/fivepiece/orgs",
         "received_events_url" : "https://api.github.com/users/fivepiece/received_events",
         "repos_url" : "https://api.github.com/users/fivepiece/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fivepiece/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fivepiece"
      }
   },
   {
      "body" : "@laanwj - this very small change allows bitcoin-tx to parse partial transactions and includes a test case to cover the new functionality. Are you happy to merge this?",
      "created_at" : "2016-10-24T09:45:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-255695433",
      "id" : 255695433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-10-24T09:45:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255695433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "I don't like \"try to parse the transaction as pre-segwit transaction\" much - This implies ambiguity, can the ambiguity cause problems here?\r\n\r\nIf so I'd prefer if this was an explicit flag somewhere.\r\n",
      "created_at" : "2016-10-24T10:38:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-255706374",
      "id" : 255706374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-10-24T10:38:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255706374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I'll paste this here as well, commented in #-core-dev\r\n\r\nso specifically re. parsing partial transactions as pre-segwit (#8837), I actually hit this issue in my own toy parser and it shows in core too: http://paste.debian.net/plainh/8c80d8cd  so having some flag would be great\r\n\r\n* I should add that with this PR the transaction from the pastebin is parsed as a zero input pay to multisig on **both** `bitcoin-tx` and `bitcoin-cli` ",
      "created_at" : "2016-10-24T10:51:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-255708754",
      "id" : 255708754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-10-24T12:01:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255708754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5624963?v=3",
         "events_url" : "https://api.github.com/users/fivepiece/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fivepiece/followers",
         "following_url" : "https://api.github.com/users/fivepiece/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fivepiece/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fivepiece",
         "id" : 5624963,
         "login" : "fivepiece",
         "organizations_url" : "https://api.github.com/users/fivepiece/orgs",
         "received_events_url" : "https://api.github.com/users/fivepiece/received_events",
         "repos_url" : "https://api.github.com/users/fivepiece/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fivepiece/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fivepiece"
      }
   },
   {
      "body" : "The issue is that segwit only guarantees unambiguous encoding for valid complete transactions. In places where raw transactions are expected that consume inputs that are not necessarily complete, ambiguity is possible. This is the case for the decoderawtransaction and fundrawtransaction RPCs, and for bitcoin-tx. Since inputs to those are usually in fact not signed, they should usually not have any witnesses at all, and thus (trying to) decode without seems like a reasonable default.\r\n\r\nI do agree it's undesirable to have ambiguity in the first place, but I think a longer term solution will include a separate encoding for incomplete transactions. We may need that anyway for more complex signing such as for MAST and Schnorr, where the communication between the participants may include (primarily) information that does not end up in the final transaction.",
      "created_at" : "2016-10-24T18:32:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-255825752",
      "id" : 255825752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-10-24T18:32:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255825752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> I do agree it's undesirable to have ambiguity in the first place, but I think a longer term solution will include a separate encoding for incomplete transactions.\r\n\r\nNot only a separate encoding, but it needs to be distinguishable non-ambiguously from completed transactions.\r\n",
      "created_at" : "2016-10-25T08:33:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-255971986",
      "id" : 255971986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-10-25T08:33:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255971986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Right ^, the difficulty is a 0 inputs, unfunded transaction looks a lot like segwit at first, then you might fail after it stops making sense, or like in the case I linked, maybe never fail.. unless there was a context to what this transaction was passed in for.  (just my personal experience parsing partial transactions)",
      "created_at" : "2016-10-25T19:13:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-256146412",
      "id" : 256146412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-10-25T19:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/256146412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5624963?v=3",
         "events_url" : "https://api.github.com/users/fivepiece/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fivepiece/followers",
         "following_url" : "https://api.github.com/users/fivepiece/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fivepiece/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fivepiece",
         "id" : 5624963,
         "login" : "fivepiece",
         "organizations_url" : "https://api.github.com/users/fivepiece/orgs",
         "received_events_url" : "https://api.github.com/users/fivepiece/received_events",
         "repos_url" : "https://api.github.com/users/fivepiece/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fivepiece/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fivepiece/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fivepiece"
      }
   },
   {
      "body" : "The conversation in this PR seems to have wandered a bit into the desirability of having a separate encoding for partial transactions. I agree that's a good idea, but it seems out of scope for this PR.\r\n\r\nTo clarify what this PR achieves:\r\n\r\n- pre V0.13.1, both `bitcoin-tx` and `bitcoin-cli decoderawtransaction` were able to parse partial transactions\r\n- V0.13.1 introduced ambiguity in encoding for a 0-input transactions. However, as @sipa notes above: \"those are usually in fact not signed, they should usually not have any witnesses at all, and thus (trying to) decode without seems like a reasonable default.\"\r\n- `decoderawtransaction` was updated to attempt to parse partial transactions here: https://github.com/bitcoin/bitcoin/commit/7030d9eb47254499bba14f1c00abc6bf493efd91#diff-01aa7d1d32f1b9e5a836c9c411978918L490 . `bitcoin-tx` was not updated at the same time.\r\n- this PR makes the same change to `bitcoin-tx` as was made to `decoderawtransaction` and adds test cases. This restores the pre-v0.13.1 behaviour and brings `bitcoin-tx` in line with `decoderawtransaction`",
      "created_at" : "2016-11-04T09:00:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-258375839",
      "id" : 258375839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-11-04T09:00:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258375839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Yes, fair enough, it's an improvement.\r\nutACK https://github.com/bitcoin/bitcoin/pull/8837/commits/7451cf59cd7b3a917fe7e4c7210d43b2f5adaad3",
      "created_at" : "2016-11-07T12:11:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8837#issuecomment-258820140",
      "id" : 258820140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8837",
      "updated_at" : "2016-11-07T12:11:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258820140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

[
   {
      "body" : "This is useful because a lot of features add new arguments to an existing call. For example #8751.\r\n\r\nCurrently the user of the API has to explicitly specify defaults for the intermediate arguments. With named arguments this would no longer be necessary.\r\n\r\nIt could also help clean up the API for calls that already have a lot of optional arguments such as `sendtoaddress`, or at least make it easier to use them.",
      "created_at" : "2016-09-26T15:35:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-249606511",
      "id" : 249606511,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-09-26T15:36:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249606511",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468409"
         }
      },
      "body" : "In the OP you are linking to the \"JSON-RPC 2.0 Specification\", which states\n\n> jsonrpc\n>     A String specifying the version of the JSON-RPC protocol. MUST be exactly \"2.0\".\n\nCan you explain why you keep this at 1.1?\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-10-02T11:06:48Z",
      "diff_hunk" : "@@ -132,14 +136,16 @@ def _request(self, method, path, postdata):\n             self.__conn.request(method, path, postdata, headers)\n             return self._get_response()\n \n-    def __call__(self, *args):\n+    def __call__(self, *args, **argsn):\n         AuthServiceProxy.__id_count += 1\n \n         log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self._service_name,\n                                  json.dumps(args, default=EncodeDecimal, ensure_ascii=self.ensure_ascii)))\n+        if args and argsn:\n+            raise ValueError('Cannot handle both named and positional arguments')\n         postdata = json.dumps({'version': '1.1',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468409",
      "id" : 81468409,
      "original_commit_id" : "a6b42764588492b8510838acf45470c467532c7d",
      "original_position" : 25,
      "path" : "qa/rpc-tests/test_framework/authproxy.py",
      "position" : 12,
      "pull_request_review_id" : 2447580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "The only alternative I see would be to only accept one object as first positional argument for all methods, but this will likely never happen, so Concept ACK.",
      "created_at" : "2016-10-02T11:16:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-250966251",
      "id" : 250966251,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-10-02T11:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250966251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468561"
         }
      },
      "body" : "May make sense to change it to that (even irrespective of this pull) however I'm not sure that we support the entire 2.0 standard, so that may involve other changes too.\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-10-02T11:20:40Z",
      "diff_hunk" : "@@ -132,14 +136,16 @@ def _request(self, method, path, postdata):\n             self.__conn.request(method, path, postdata, headers)\n             return self._get_response()\n \n-    def __call__(self, *args):\n+    def __call__(self, *args, **argsn):\n         AuthServiceProxy.__id_count += 1\n \n         log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self._service_name,\n                                  json.dumps(args, default=EncodeDecimal, ensure_ascii=self.ensure_ascii)))\n+        if args and argsn:\n+            raise ValueError('Cannot handle both named and positional arguments')\n         postdata = json.dumps({'version': '1.1',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468561",
      "id" : 81468561,
      "original_commit_id" : "a6b42764588492b8510838acf45470c467532c7d",
      "original_position" : 25,
      "path" : "qa/rpc-tests/test_framework/authproxy.py",
      "position" : 12,
      "pull_request_review_id" : 2447712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK. I think this is very useful.\r\nACK to extend it to `bitcoin-cli`, to the other rpc tables and to the RPC value conversions table.\r\n\r\nAfter this, we should update the documents (and RPC help examples) to slowly move away from recommending fixed position arguments.",
      "created_at" : "2016-10-10T10:32:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-252582482",
      "id" : 252582482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-10-10T10:32:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252582482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Rebased to get rid of the univalue change",
      "created_at" : "2016-10-10T14:02:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-252630068",
      "id" : 252630068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-10-10T14:02:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252630068",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Needed rebase, rebased",
      "created_at" : "2016-10-25T14:58:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-256060105",
      "id" : 256060105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-10-25T14:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/256060105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943516"
         }
      },
      "body" : "after this loop `hole` should be reset to 0, otherwise holes will be repeated for every subsequent entry?\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-01T14:50:17Z",
      "diff_hunk" : "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);\n+        if (fr != argsIn.end()) {\n+            for (int i = 0; i < hole; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943516",
      "id" : 85943516,
      "original_commit_id" : "0e2825c3779883b2d20d689575cbe4c061d7a92c",
      "original_position" : 65,
      "path" : "src/rpc/server.cpp",
      "position" : 65,
      "pull_request_review_id" : 6627633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943871"
         }
      },
      "body" : "what does fr stand for?\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-01T14:52:09Z",
      "diff_hunk" : "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943871",
      "id" : 85943871,
      "original_commit_id" : "0e2825c3779883b2d20d689575cbe4c061d7a92c",
      "original_position" : 63,
      "path" : "src/rpc/server.cpp",
      "position" : 63,
      "pull_request_review_id" : 6627633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85944558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85944558"
         }
      },
      "body" : "may want to add test of [exist, hole, exist, exist] to catch gap repeat error\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-01T14:55:37Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_jsonrpc,\n+    assert_is_hex_string,\n+    assert_is_hash_string,\n+    start_nodes,\n+    connect_nodes_bi,\n+)\n+\n+\n+class NamedArgumentTest(BitcoinTestFramework):\n+    \"\"\"\n+    Test named arguments on RPC calls.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        h = node.help(command='getinfo')\n+        assert(h.startswith('getinfo\\n'))\n+\n+        assert_raises_jsonrpc(-8, node.help, random='getinfo')\n+\n+        h = node.getblockhash(index=0)\n+        node.getblock(hash=h)\n+\n+        assert_equal(node.echo(), [])\n+        assert_equal(node.echo(arg0=0,arg9=9), [0] + [None]*8 + [9])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85944558",
      "id" : 85944558,
      "original_commit_id" : "e4aa9b3bf140d95e4abcf002a5c703340f390a82",
      "original_position" : 46,
      "path" : "qa/rpc-tests/rpcnamedargs.py",
      "position" : null,
      "pull_request_review_id" : 6627633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85944558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "Concept ACK, needs rebase",
      "created_at" : "2016-11-08T13:37:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-259137932",
      "id" : 259137932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-08T13:37:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259137932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5617245?v=3",
         "events_url" : "https://api.github.com/users/afk11/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afk11/followers",
         "following_url" : "https://api.github.com/users/afk11/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afk11/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afk11",
         "id" : 5617245,
         "login" : "afk11",
         "organizations_url" : "https://api.github.com/users/afk11/orgs",
         "received_events_url" : "https://api.github.com/users/afk11/received_events",
         "repos_url" : "https://api.github.com/users/afk11/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afk11/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afk11/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afk11"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845118"
         }
      },
      "body" : "find returnvalue?  Just a guess.\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-14T17:05:31Z",
      "diff_hunk" : "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845118",
      "id" : 87845118,
      "original_commit_id" : "0e2825c3779883b2d20d689575cbe4c061d7a92c",
      "original_position" : 63,
      "path" : "src/rpc/server.cpp",
      "position" : 63,
      "pull_request_review_id" : 8439765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845478"
         }
      },
      "body" : "I added the test: \nassert_equal(node.echo(arg0=0,arg3=3,arg9=9), [0] + [None]_2 + [3] + [None]_5 + [9])\nVerified that with the code as is it fails, but with instagibbs fix of hole=0 it succeeds. \n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-14T17:07:18Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_jsonrpc,\n+    assert_is_hex_string,\n+    assert_is_hash_string,\n+    start_nodes,\n+    connect_nodes_bi,\n+)\n+\n+\n+class NamedArgumentTest(BitcoinTestFramework):\n+    \"\"\"\n+    Test named arguments on RPC calls.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        h = node.help(command='getinfo')\n+        assert(h.startswith('getinfo\\n'))\n+\n+        assert_raises_jsonrpc(-8, node.help, random='getinfo')\n+\n+        h = node.getblockhash(index=0)\n+        node.getblock(hash=h)\n+\n+        assert_equal(node.echo(), [])\n+        assert_equal(node.echo(arg0=0,arg9=9), [0] + [None]*8 + [9])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845478",
      "id" : 87845478,
      "original_commit_id" : "e4aa9b3bf140d95e4abcf002a5c703340f390a82",
      "original_position" : 46,
      "path" : "qa/rpc-tests/rpcnamedargs.py",
      "position" : null,
      "pull_request_review_id" : 8440121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87977216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87977216"
         }
      },
      "body" : "Yes, good catch, thanks!\n",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-15T09:31:00Z",
      "diff_hunk" : "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);\n+        if (fr != argsIn.end()) {\n+            for (int i = 0; i < hole; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87977216",
      "id" : 87977216,
      "original_commit_id" : "0e2825c3779883b2d20d689575cbe4c061d7a92c",
      "original_position" : 65,
      "path" : "src/rpc/server.cpp",
      "position" : 65,
      "pull_request_review_id" : 8564754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87977216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased, added @instagibbs' test and fix.",
      "created_at" : "2016-11-15T09:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260591308",
      "id" : 260591308,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-15T09:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260591308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2016-11-15T14:03:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260649057",
      "id" : 260649057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-15T14:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260649057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "body" : "Concept ACK!\r\n\r\nDo you intend to include the echo command in the final merge?",
      "created_at" : "2016-11-15T18:12:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260720295",
      "id" : 260720295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-15T18:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260720295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I've had use for it two times in testing - here and in #7783. Also I fathom it's somewhat useful for users when testing JSON RPC libraries. So my preference would be to keep it.",
      "created_at" : "2016-11-16T06:54:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260868584",
      "id" : 260868584,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-16T06:54:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260868584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/8811/commits/3c7647ea7814f7d3f0304bb4b39274c748a88900",
      "created_at" : "2016-11-18T00:06:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-261409874",
      "id" : 261409874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-18T00:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261409874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "As there is interest in this I'm continuing work on the issues that are still open in the OP. \r\nI've pushed argument naming for `mining`, `net`, `rawtransaction` and `wallet`, which completes it for all calls. I'll also make it possible to use named arguments with `bitcoin-cli`.\r\nI'll leave the GUI change for another time though.",
      "created_at" : "2016-11-21T13:52:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-261943609",
      "id" : 261943609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-21T13:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261943609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Added support to bitcoin-cli. This should complete the feature set for this pull. I'd appreciate testing and review.\r\n\r\nEspecially important to review are the parameter names in the RPC tables, as they will become part of the API:\r\n\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/server.cpp#L275\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/blockchain.cpp#L1372\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/mining.cpp#L905\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/misc.cpp#L511\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/net.cpp#L600\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/rawtransaction.cpp#L917\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/wallet/rpcwallet.cpp#L2598\r\n\r\n### More examples\r\n\r\n    $ src/bitcoin-cli -testnet -named getbalance account=\"*\" minconf=\"1\" include-watchonly=false\r\n    413.44052133\r\n\r\nNote right now, `getbalance` doesn't allow leaving intermediate arguments out right now, so this won't work yet.\r\n\r\n    $ src/bitcoin-cli -testnet -named getbalance minconf=\"1\" include-watchonly=false\r\n    error code: -1\r\n    error message:\r\n    JSON value is not a string as expected\r\n\r\nIt doesn't know how to handle the univalue null for the account parameter. It should interpret it as the default, `\"*\"`. This should be addressed in later changes for specific methods.\r\n",
      "created_at" : "2016-11-22T14:22:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-262252906",
      "id" : 262252906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-08T10:58:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262252906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657352"
         }
      },
      "body" : "This is referred to as \"address\" in the help",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T21:12:04Z",
      "diff_hunk" : "@@ -506,16 +506,16 @@ UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true  },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"bitcoinaddress\"} }, /* uses wallet if enabled */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657352",
      "id" : 89657352,
      "original_commit_id" : "966d33c9c8380de5f4fdf02c16d3dc62bacce7cf",
      "original_position" : 12,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657359"
         }
      },
      "body" : "same",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T21:12:16Z",
      "diff_hunk" : "@@ -506,16 +506,16 @@ UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true  },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"bitcoinaddress\"} }, /* uses wallet if enabled */\n+    { \"util\",               \"createmultisig\",         &createmultisig,         true,  {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"verifymessage\",          &verifymessage,          true,  {\"bitcoinaddress\",\"signature\",\"message\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657359",
      "id" : 89657359,
      "original_commit_id" : "966d33c9c8380de5f4fdf02c16d3dc62bacce7cf",
      "original_position" : 14,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657634"
         }
      },
      "body" : "maybe these should be \"address\" rather than \"node\", so that in the future we can differentiate? (nodeid, subnet, etc)",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T21:18:13Z",
      "diff_hunk" : "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657634",
      "id" : 89657634,
      "original_commit_id" : "9e73f62fe32aefab75b8c227028bb9c51020320a",
      "original_position" : 30,
      "path" : "src/rpc/net.cpp",
      "position" : 43,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657946"
         }
      },
      "body" : "probably better to call this subnet",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T21:25:04Z",
      "diff_hunk" : "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"node\"} },\n+    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n+    { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n+    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },\n+    { \"network\",            \"setban\",                 &setban,                 true,  {\"ip\", \"command\", \"bantime\", \"absolute\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657946",
      "id" : 89657946,
      "original_commit_id" : "9e73f62fe32aefab75b8c227028bb9c51020320a",
      "original_position" : 35,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89658355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89658355"
         }
      },
      "body" : "unify nblocks/numblocks?",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T21:36:23Z",
      "diff_hunk" : "@@ -902,19 +902,19 @@ UniValue estimatesmartpriority(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true  },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true  },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true  },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true  },\n-    { \"mining\",             \"submitblock\",            &submitblock,            true  },\n-\n-    { \"generating\",         \"generate\",               &generate,               true  },\n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true  },\n-\n-    { \"util\",               \"estimatefee\",            &estimatefee,            true  },\n-    { \"util\",               \"estimatepriority\",       &estimatepriority,       true  },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true  },\n-    { \"util\",               \"estimatesmartpriority\",  &estimatesmartpriority,  true  },\n+    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"blocks\",\"height\"} },\n+    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n+    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"priority_delta\",\"fee_delta\"} },\n+    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n+    { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"parameters\"} },\n+\n+    { \"generating\",         \"generate\",               &generate,               true,  {\"numblocks\",\"maxtries\"} },\n+    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"numblocks\",\"address\",\"maxtries\"} },\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89658355",
      "id" : 89658355,
      "original_commit_id" : "67fee407a82bcf4365e5c710398f54ead764dc30",
      "original_position" : 43,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89658355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89659796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89659796"
         }
      },
      "body" : "should probably make sure that ```!name.empty() && !value.empty()``` for good measure.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T22:18:34Z",
      "diff_hunk" : "@@ -171,3 +191,33 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        unsigned ptr = 0;\n+        if (s.size() <= ptr || s[ptr] != '-') {\n+            throw(std::runtime_error(\"Non-named or empty argument found\"));\n+        }\n+        ptr += 1;\n+        if (s.size() > ptr && s[ptr] == '-') // Allow \"--opt\" as well as \"-opt\"\n+            ptr += 1;\n+        size_t pos = s.find(\"=\", ptr);\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument, a value needs to be provided for every argument\"));\n+        }\n+        std::string name = s.substr(ptr, pos-ptr);\n+        std::string value = s.substr(pos+1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89659796",
      "id" : 89659796,
      "original_commit_id" : "76973f42f8bc377cede1f279d39cc9d50693a1c9",
      "original_position" : 259,
      "path" : "src/rpc/client.cpp",
      "position" : null,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89659796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89660995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89660995"
         }
      },
      "body" : "Mixing args here with GetBoolArg/GetArg is a little scary. If some command took a (for example) \"-version=foo\" argument, I believe it would be swallowed by line 81 instead?",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-25T22:58:16Z",
      "diff_hunk" : "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89660995",
      "id" : 89660995,
      "original_commit_id" : "76973f42f8bc377cede1f279d39cc9d50693a1c9",
      "original_position" : 21,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 10202405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89660995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Why is there a \"wtxid\" ever needed as a param? \"txhash\" and \"txid\" are all I see existing at all (hash != txid).",
      "created_at" : "2016-11-26T05:28:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263045298",
      "id" : 263045298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T05:28:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I think a lot of the options params ought to be flattened?",
      "created_at" : "2016-11-26T05:32:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263045394",
      "id" : 263045394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T05:32:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666033"
         }
      },
      "body" : "ParseParameters stops at the first argument that doesn't start with `-`, which happens to be the command. This starts after the command. So unless I miss something they will never interfere.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T05:32:41Z",
      "diff_hunk" : "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666033",
      "id" : 89666033,
      "original_commit_id" : "76973f42f8bc377cede1f279d39cc9d50693a1c9",
      "original_position" : 21,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 10210251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666056"
         }
      },
      "body" : "In that case it should do the expected thing: send an empty name or value.\r\nAn empty value is perfectly acceptable if you want to send an empty string.\r\nAn empty name is a bit strange, agreed, but it gets caught server-side as an unknown argument.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T05:34:46Z",
      "diff_hunk" : "@@ -171,3 +191,33 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        unsigned ptr = 0;\n+        if (s.size() <= ptr || s[ptr] != '-') {\n+            throw(std::runtime_error(\"Non-named or empty argument found\"));\n+        }\n+        ptr += 1;\n+        if (s.size() > ptr && s[ptr] == '-') // Allow \"--opt\" as well as \"-opt\"\n+            ptr += 1;\n+        size_t pos = s.find(\"=\", ptr);\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument, a value needs to be provided for every argument\"));\n+        }\n+        std::string name = s.substr(ptr, pos-ptr);\n+        std::string value = s.substr(pos+1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666056",
      "id" : 89666056,
      "original_commit_id" : "76973f42f8bc377cede1f279d39cc9d50693a1c9",
      "original_position" : 259,
      "path" : "src/rpc/client.cpp",
      "position" : null,
      "pull_request_review_id" : 10210270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666083"
         }
      },
      "body" : "'address' is already used for bitcoin addresses, so I'd prefer not overloading that for network addresses. Other suggestions are welcome, though",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T05:37:18Z",
      "diff_hunk" : "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666083",
      "id" : 89666083,
      "original_commit_id" : "9e73f62fe32aefab75b8c227028bb9c51020320a",
      "original_position" : 30,
      "path" : "src/rpc/net.cpp",
      "position" : 43,
      "pull_request_review_id" : 10210296,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> I think a lot of the options params ought to be flattened?\r\n\r\nPossibly. Not in this pull, though. JSON can perfectly deal with nested structures.",
      "created_at" : "2016-11-26T05:38:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263045571",
      "id" : 263045571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T05:38:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666110"
         }
      },
      "body" : "address/privkey/pubkey usage is made consistent in a later commit:\r\nhttps://github.com/bitcoin/bitcoin/pull/8811/commits/8b6fd17692b0a402858ef313d6b15e0d086db2c2",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T05:39:33Z",
      "diff_hunk" : "@@ -506,16 +506,16 @@ UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true  },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"bitcoinaddress\"} }, /* uses wallet if enabled */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666110",
      "id" : 89666110,
      "original_commit_id" : "966d33c9c8380de5f4fdf02c16d3dc62bacce7cf",
      "original_position" : 12,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 10210324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666112"
         }
      },
      "body" : "Will do",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T05:39:45Z",
      "diff_hunk" : "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"node\"} },\n+    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n+    { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n+    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },\n+    { \"network\",            \"setban\",                 &setban,                 true,  {\"ip\", \"command\", \"bantime\", \"absolute\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666112",
      "id" : 89666112,
      "original_commit_id" : "9e73f62fe32aefab75b8c227028bb9c51020320a",
      "original_position" : 35,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 10210327,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666114"
         }
      },
      "body" : "Will do",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T05:39:51Z",
      "diff_hunk" : "@@ -902,19 +902,19 @@ UniValue estimatesmartpriority(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true  },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true  },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true  },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true  },\n-    { \"mining\",             \"submitblock\",            &submitblock,            true  },\n-\n-    { \"generating\",         \"generate\",               &generate,               true  },\n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true  },\n-\n-    { \"util\",               \"estimatefee\",            &estimatefee,            true  },\n-    { \"util\",               \"estimatepriority\",       &estimatepriority,       true  },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true  },\n-    { \"util\",               \"estimatesmartpriority\",  &estimatesmartpriority,  true  },\n+    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"blocks\",\"height\"} },\n+    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n+    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"priority_delta\",\"fee_delta\"} },\n+    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n+    { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"parameters\"} },\n+\n+    { \"generating\",         \"generate\",               &generate,               true,  {\"numblocks\",\"maxtries\"} },\n+    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"numblocks\",\"address\",\"maxtries\"} },\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666114",
      "id" : 89666114,
      "original_commit_id" : "67fee407a82bcf4365e5c710398f54ead764dc30",
      "original_position" : 43,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 10210329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666834"
         }
      },
      "body" : "Ah, that's the part I was missing, thanks. Maybe a comment to that effect to remind me next time I have to ask? :)",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T06:45:21Z",
      "diff_hunk" : "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666834",
      "id" : 89666834,
      "original_commit_id" : "76973f42f8bc377cede1f279d39cc9d50693a1c9",
      "original_position" : 21,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 10210907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@luke-jr Sure, txhash/txid. I was only making the point that going forward there will be a distinction between those, so it'd be good to make sure that all \"txid\" params here really mean txid.",
      "created_at" : "2016-11-26T06:49:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263047904",
      "id" : 263047904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T06:49:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263047904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@laanwj If this pull is merged as-is, then flattening the options will involve breaking backward compatibility with this, no? ie, it may be better to just not allow for already-named options at all right now.",
      "created_at" : "2016-11-26T07:14:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263048750",
      "id" : 263048750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T07:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263048750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I pushed cfields' rename suggestions, and compiled statistics on what argument names are used in which calls. This could be helpful in determining further unifications:\r\n```\r\n\"absolute\",          // setban\r\n\"account\",           // addmultisigaddress getaccountaddress getaddressesbyaccount getbalance getnewaddress getreceivedbyaccount listtransactions setaccount\r\n\"address\",           // generatetoaddress validateaddress verifymessage addwitnessaddress dumpprivkey getaccount getreceivedbyaddress importaddress sendtoaddress setaccount signmessage\r\n\"addresses\",         // listunspent\r\n\"allowhighfees\",     // sendrawtransaction\r\n\"amount\",            // move sendfrom sendtoaddress settxfee\r\n\"amounts\",           // sendmany\r\n\"arg0\",              // echo echojson\r\n\"arg1\",              // echo echojson\r\n\"arg2\",              // echo echojson\r\n\"arg3\",              // echo echojson\r\n\"arg4\",              // echo echojson\r\n\"arg5\",              // echo echojson\r\n\"arg6\",              // echo echojson\r\n\"arg7\",              // echo echojson\r\n\"arg8\",              // echo echojson\r\n\"arg9\",              // echo echojson\r\n\"bantime\",           // setban\r\n\"blockhash\",         // getblock getblockheader preciousblock invalidateblock reconsiderblock waitforblock gettxoutproof listsinceblock\r\n\"checklevel\",        // verifychain\r\n\"command\",           // help addnode setban\r\n\"comment\",           // move sendfrom sendmany sendtoaddress\r\n\"comment_to\",        // sendfrom sendtoaddress\r\n\"count\",             // listtransactions\r\n\"destination\",       // backupwallet\r\n\"fee_delta\",         // prioritisetransaction\r\n\"filename\",          // dumpwallet importwallet\r\n\"fromaccount\",       // move sendfrom sendmany\r\n\"height\",            // getblockhash waitforblockheight getnetworkhashps\r\n\"hexdata\",           // submitblock\r\n\"hexstring\",         // decoderawtransaction decodescript sendrawtransaction signrawtransaction fundrawtransaction\r\n\"include_empty\",     // listreceivedbyaccount listreceivedbyaddress\r\n\"include_mempool\",   // gettxout\r\n\"include_watchonly\", // getbalance gettransaction listaccounts listreceivedbyaccount listreceivedbyaddress listsinceblock listtransactions\r\n\"keys\",              // createmultisig addmultisigaddress\r\n\"label\",             // importprivkey importaddress importpubkey\r\n\"locktime\",          // createrawtransaction\r\n\"maxconf\",           // listunspent\r\n\"maxtries\",          // generate generatetoaddress\r\n\"message\",           // verifymessage signmessagewithprivkey signmessage\r\n\"minconf\",           // getbalance getreceivedbyaccount getreceivedbyaddress listaccounts listreceivedbyaccount listreceivedbyaddress listunspent move sendfrom sendmany\r\n\"n\",                 // gettxout\r\n\"nblocks\",           // verifychain getnetworkhashps generate generatetoaddress estimatefee estimatepriority estimatesmartfee estimatesmartpriority\r\n\"newpassphrase\",     // walletpassphrasechange\r\n\"newsize\",           // keypoolrefill\r\n\"node\",              // addnode disconnectnode getaddednodeinfo\r\n\"nrequired\",         // createmultisig addmultisigaddress\r\n\"oldpassphrase\",     // walletpassphrasechange\r\n\"options\",           // fundrawtransaction importmulti\r\n\"outputs\",           // createrawtransaction\r\n\"p2sh\",              // importaddress\r\n\"parameters\",        // submitblock\r\n\"passphrase\",        // encryptwallet walletpassphrase\r\n\"prevtxs\",           // signrawtransaction\r\n\"priority_delta\",    // prioritisetransaction\r\n\"privkey\",           // signmessagewithprivkey importprivkey\r\n\"privkeys\",          // signrawtransaction\r\n\"proof\",             // verifytxoutproof\r\n\"pubkey\",            // importpubkey\r\n\"rawtransaction\",    // importprunedfunds\r\n\"requests\",          // importmulti\r\n\"rescan\",            // importprivkey importaddress importpubkey\r\n\"sighashtype\",       // signrawtransaction\r\n\"signature\",         // verifymessage\r\n\"skip\",              // listtransactions\r\n\"state\",             // setnetworkactive\r\n\"subnet\",            // setban\r\n\"subtractfeefrom\",   // sendmany\r\n\"subtractfeefromamount\", // sendtoaddress\r\n\"target_confirmations\", // listsinceblock\r\n\"template_request\",  // getblocktemplate\r\n\"timeout\",           // waitfornewblock waitforblock waitforblockheight walletpassphrase\r\n\"timestamp\",         // setmocktime\r\n\"toaccount\",         // move\r\n\"toaddress\",         // sendfrom\r\n\"transactions\",      // createrawtransaction lockunspent\r\n\"txid\",              // getmempoolancestors getmempooldescendants getmempoolentry gettxout prioritisetransaction getrawtransaction abandontransaction gettransaction removeprunedfunds\r\n\"txids\",             // gettxoutproof\r\n\"txoutproof\",        // importprunedfunds\r\n\"unlock\",            // lockunspent\r\n\"verbose\",           // getblock getblockheader getmempoolancestors getmempooldescendants getrawmempool getrawtransaction\r\n```\r\n> @laanwj If this pull is merged as-is, then flattening the options will involve breaking backward compatibility with this, no? ie, it may be better to just not allow for already-named options at all right now.\r\n\r\nIf a RPC call has a designated options argument now, then a future pull - that has functionality to pass the object down to the RPC call as-is - could allow specifying those options on the top level instead. **If** we decide that flattening is desirable at all.\r\nI don't want to handle any RPC-call-specific changes here. Mind that I don't add any \"null\" argument handling in RPC calls here either. This just lays the ground work.\r\n\r\n",
      "created_at" : "2016-11-26T08:57:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263052377",
      "id" : 263052377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-12T12:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263052377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89668397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89668397"
         }
      },
      "body" : "Added a comment :)",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-11-26T09:09:28Z",
      "diff_hunk" : "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89668397",
      "id" : 89668397,
      "original_commit_id" : "76973f42f8bc377cede1f279d39cc9d50693a1c9",
      "original_position" : 21,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 10212415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89668397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "This looks like a good candidate for unification. Any opinions on \"hexdata\" versus \"hexstring\"?\r\n```\r\n\"hexdata\",           // submitblock\r\n\"hexstring\",         // decoderawtransaction decodescript sendrawtransaction signrawtransaction fundrawtransaction\r\n```",
      "created_at" : "2016-11-26T11:08:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263057588",
      "id" : 263057588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T11:21:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263057588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj GBT/submitblock probably shouldn't accept named parameters at all, since they are according to BIPs...?",
      "created_at" : "2016-11-26T11:40:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263058828",
      "id" : 263058828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T11:40:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263058828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "You don't *have* to use named arguments. For consistency I prefer all calls\nto have the possibility to have their arguments named, though.\n",
      "created_at" : "2016-11-26T12:10:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263060055",
      "id" : 263060055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-11-26T12:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263060055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased for #9144, squashed (into logically separate commits)",
      "created_at" : "2016-12-02T04:24:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-264370417",
      "id" : 264370417,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-02T04:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264370417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I think travis wants you to include stdexcept",
      "created_at" : "2016-12-02T17:38:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-264513851",
      "id" : 264513851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-02T17:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264513851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90891244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90891244"
         }
      },
      "body" : "needs to be `std::runtime_error` since we're not using namespace std",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-12-05T15:48:13Z",
      "diff_hunk" : "@@ -286,7 +286,30 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw std::runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        // Check for named arguments.\n+        // Note that ParseParameters stops at the first argument that doesn't\n+        // start with a switch character, which happens to be the method. This\n+        // starts scanning after the method, so arguments before and after the\n+        // command will never interfere.\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && IsSwitchChar(s[0]))\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90891244",
      "id" : 90891244,
      "original_commit_id" : "dd9b157f0369760788a5a6ec7bdea829470346a8",
      "original_position" : 23,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 11404565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90891244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90894145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90894145"
         }
      },
      "body" : "I believe this breaks passing in negative numbers as a positional argument. For example, the following cli command is valid prior to this commit:\r\n\r\n`bitcoin-cli getnetworkhashps -1`\r\n\r\nand returns the estimated network hashes per second in the current difficulty window. After this commit, the method fails:\r\n\r\n```\r\nvagrant@vagrant-ubuntu-trusty-64:~$ bitcoin-cli getnetworkhashps -1\r\nerror: No '=' in named argument, a value needs to be provided for every argument\r\n```\r\n\r\nI haven't checked whether there are arguments that accept negative numbers in other RPC methods.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-12-05T16:00:23Z",
      "diff_hunk" : "@@ -286,7 +286,30 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw std::runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        // Check for named arguments.\n+        // Note that ParseParameters stops at the first argument that doesn't\n+        // start with a switch character, which happens to be the method. This\n+        // starts scanning after the method, so arguments before and after the\n+        // command will never interfere.\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && IsSwitchChar(s[0]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90894145",
      "id" : 90894145,
      "original_commit_id" : "dd9b157f0369760788a5a6ec7bdea829470346a8",
      "original_position" : 15,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 11407412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90894145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Good point about the negative values. Hadn't thought about that. Same will\r\nhold for string values that start with '-', such as labels. Any argument\r\ncould have been meant as literal value.\r\n\r\nThinking of it this could even be a security issue. Say someone controls\r\nthe first argument to a call, they could now instead provide the second by\r\nusing, say --amount=123.\r\n\r\n It should be made explicit instead of auto-detected. E.g.\r\n\r\n    bitcoin-cli {method} val1 val2. ..\r\n    bitcoin-cli -named {method} -arg1=val1 -arg2=val2 ...\r\n",
      "created_at" : "2016-12-05T18:29:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-264935466",
      "id" : 264935466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T06:22:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264935466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90980630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90980630"
         }
      },
      "body" : "should be nblocks",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-12-05T23:29:47Z",
      "diff_hunk" : "@@ -20,111 +20,130 @@ class CRPCConvertParam\n public:\n     std::string methodName; //!< method whose params want conversion\n     int paramIdx;           //!< 0-based idx of param to convert\n+    std::string paramName;  //!< parameter name\n };\n \n+/**\n+ * Specifiy a (method, idx, name) here if the argument is a non-string RPC\n+ * argument and needs to be converted from JSON.\n+ *\n+ * @note Parameter indexes start from 0.\n+ */\n static const CRPCConvertParam vRPCConvertParams[] =\n {\n-    { \"stop\", 0 },\n-    { \"setmocktime\", 0 },\n-    { \"generate\", 0 },\n-    { \"generate\", 1 },\n-    { \"generatetoaddress\", 0 },\n-    { \"generatetoaddress\", 2 },\n-    { \"getnetworkhashps\", 0 },\n-    { \"getnetworkhashps\", 1 },\n-    { \"sendtoaddress\", 1 },\n-    { \"sendtoaddress\", 4 },\n-    { \"settxfee\", 0 },\n-    { \"getreceivedbyaddress\", 1 },\n-    { \"getreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaddress\", 0 },\n-    { \"listreceivedbyaddress\", 1 },\n-    { \"listreceivedbyaddress\", 2 },\n-    { \"listreceivedbyaccount\", 0 },\n-    { \"listreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaccount\", 2 },\n-    { \"getbalance\", 1 },\n-    { \"getbalance\", 2 },\n-    { \"getblockhash\", 0 },\n-    { \"waitforblockheight\", 0 },\n-    { \"waitforblockheight\", 1 },\n-    { \"waitforblock\", 1 },\n-    { \"waitforblock\", 2 },\n-    { \"waitfornewblock\", 0 },\n-    { \"waitfornewblock\", 1 },\n-    { \"move\", 2 },\n-    { \"move\", 3 },\n-    { \"sendfrom\", 2 },\n-    { \"sendfrom\", 3 },\n-    { \"listtransactions\", 1 },\n-    { \"listtransactions\", 2 },\n-    { \"listtransactions\", 3 },\n-    { \"listaccounts\", 0 },\n-    { \"listaccounts\", 1 },\n-    { \"walletpassphrase\", 1 },\n-    { \"getblocktemplate\", 0 },\n-    { \"listsinceblock\", 1 },\n-    { \"listsinceblock\", 2 },\n-    { \"sendmany\", 1 },\n-    { \"sendmany\", 2 },\n-    { \"sendmany\", 4 },\n-    { \"addmultisigaddress\", 0 },\n-    { \"addmultisigaddress\", 1 },\n-    { \"createmultisig\", 0 },\n-    { \"createmultisig\", 1 },\n-    { \"listunspent\", 0 },\n-    { \"listunspent\", 1 },\n-    { \"listunspent\", 2 },\n-    { \"getblock\", 1 },\n-    { \"getblockheader\", 1 },\n-    { \"gettransaction\", 1 },\n-    { \"getrawtransaction\", 1 },\n-    { \"createrawtransaction\", 0 },\n-    { \"createrawtransaction\", 1 },\n-    { \"createrawtransaction\", 2 },\n-    { \"signrawtransaction\", 1 },\n-    { \"signrawtransaction\", 2 },\n-    { \"sendrawtransaction\", 1 },\n-    { \"fundrawtransaction\", 1 },\n-    { \"gettxout\", 1 },\n-    { \"gettxout\", 2 },\n-    { \"gettxoutproof\", 0 },\n-    { \"lockunspent\", 0 },\n-    { \"lockunspent\", 1 },\n-    { \"importprivkey\", 2 },\n-    { \"importaddress\", 2 },\n-    { \"importaddress\", 3 },\n-    { \"importpubkey\", 2 },\n-    { \"importmulti\", 0 },\n-    { \"importmulti\", 1 },\n-    { \"verifychain\", 0 },\n-    { \"verifychain\", 1 },\n-    { \"keypoolrefill\", 0 },\n-    { \"getrawmempool\", 0 },\n-    { \"estimatefee\", 0 },\n-    { \"estimatepriority\", 0 },\n-    { \"estimatesmartfee\", 0 },\n-    { \"estimatesmartpriority\", 0 },\n-    { \"prioritisetransaction\", 1 },\n-    { \"prioritisetransaction\", 2 },\n-    { \"setban\", 2 },\n-    { \"setban\", 3 },\n-    { \"setnetworkactive\", 0 },\n-    { \"getmempoolancestors\", 1 },\n-    { \"getmempooldescendants\", 1 },\n+    { \"setmocktime\", 0, \"timestamp\" },\n+    { \"generate\", 0, \"blocks\" },\n+    { \"generate\", 1, \"maxtries\" },\n+    { \"generatetoaddress\", 0, \"blocks\" },\n+    { \"generatetoaddress\", 2, \"maxtries\" },\n+    { \"getnetworkhashps\", 0, \"blocks\" },\n+    { \"getnetworkhashps\", 1, \"height\" },\n+    { \"sendtoaddress\", 1, \"amount\" },\n+    { \"sendtoaddress\", 4, \"subtractfeefromamount\" },\n+    { \"settxfee\", 0, \"amount\" },\n+    { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaccount\", 1, \"minconf\" },\n+    { \"listreceivedbyaddress\", 0, \"minconf\" },\n+    { \"listreceivedbyaddress\", 1, \"include_empty\" },\n+    { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaccount\", 0, \"minconf\" },\n+    { \"listreceivedbyaccount\", 1, \"include_empty\" },\n+    { \"listreceivedbyaccount\", 2, \"include_watchonly\" },\n+    { \"getbalance\", 1, \"minconf\" },\n+    { \"getbalance\", 2, \"include_watchonly\" },\n+    { \"getblockhash\", 0, \"index\" },\n+    { \"waitforblockheight\", 0, \"height\" },\n+    { \"waitforblockheight\", 1, \"timeout\" },\n+    { \"waitforblock\", 1, \"timeout\" },\n+    { \"waitfornewblock\", 0, \"timeout\" },\n+    { \"move\", 2, \"amount\" },\n+    { \"move\", 3, \"minconf\" },\n+    { \"sendfrom\", 2, \"amount\" },\n+    { \"sendfrom\", 3, \"minconf\" },\n+    { \"listtransactions\", 1, \"count\" },\n+    { \"listtransactions\", 2, \"from\" },\n+    { \"listtransactions\", 3, \"include_watchonly\" },\n+    { \"listaccounts\", 0, \"minconf\" },\n+    { \"listaccounts\", 1, \"include_watchonly\" },\n+    { \"walletpassphrase\", 1, \"timeout\" },\n+    { \"getblocktemplate\", 0, \"template_request\" },\n+    { \"listsinceblock\", 1, \"target_confirmations\" },\n+    { \"listsinceblock\", 2, \"include_watchonly\" },\n+    { \"sendmany\", 1, \"amounts\" },\n+    { \"sendmany\", 2, \"minconf\" },\n+    { \"sendmany\", 4, \"subtractfeefrom\" },\n+    { \"addmultisigaddress\", 0, \"nrequired\" },\n+    { \"addmultisigaddress\", 1, \"keys\" },\n+    { \"createmultisig\", 0, \"nrequired\" },\n+    { \"createmultisig\", 1, \"keys\" },\n+    { \"listunspent\", 0, \"minconf\" },\n+    { \"listunspent\", 1, \"maxconf\" },\n+    { \"listunspent\", 2, \"addresses\" },\n+    { \"getblock\", 1, \"verbose\" },\n+    { \"getblockheader\", 1, \"verbose\" },\n+    { \"gettransaction\", 1, \"include_watchonly\" },\n+    { \"getrawtransaction\", 1, \"verbose\" },\n+    { \"createrawtransaction\", 0, \"transactions\" },\n+    { \"createrawtransaction\", 1, \"outputs\" },\n+    { \"createrawtransaction\", 2, \"locktime\" },\n+    { \"signrawtransaction\", 1, \"prevtxs\" },\n+    { \"signrawtransaction\", 2, \"privkeys\" },\n+    { \"sendrawtransaction\", 1, \"allowhighfees\" },\n+    { \"fundrawtransaction\", 1, \"options\" },\n+    { \"gettxout\", 1, \"n\" },\n+    { \"gettxout\", 2, \"include_mempool\" },\n+    { \"gettxoutproof\", 0, \"txids\" },\n+    { \"lockunspent\", 0, \"unlock\" },\n+    { \"lockunspent\", 1, \"transactions\" },\n+    { \"importprivkey\", 2, \"rescan\" },\n+    { \"importaddress\", 2, \"rescan\" },\n+    { \"importaddress\", 3, \"p2sh\" },\n+    { \"importpubkey\", 2, \"rescan\" },\n+    { \"importmulti\", 0, \"requests\" },\n+    { \"importmulti\", 1, \"options\" },\n+    { \"verifychain\", 0, \"checklevel\" },\n+    { \"verifychain\", 1, \"blocks\" },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90980630",
      "id" : 90980630,
      "original_commit_id" : "dd9b157f0369760788a5a6ec7bdea829470346a8",
      "original_position" : 174,
      "path" : "src/rpc/client.cpp",
      "position" : null,
      "pull_request_review_id" : 11493524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90980630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@laanwj +1 for explicit",
      "created_at" : "2016-12-06T06:09:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265069262",
      "id" : 265069262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T06:09:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265069262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "The issue only exists for string arguments, as anything else would be invalid JSON anyway.\r\n\r\nAlso, I have a slight preference for `bitcoin-cli getblock hash=X` over `bitcoin-cli getblock -hash=X`... it feels like the latter is an option to `bitcoin-cli` rather than `getblock` (but feel free to ignore this if I'm alone with that opinion).",
      "created_at" : "2016-12-06T06:34:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265072599",
      "id" : 265072599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T06:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265072599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> The issue only exists for string arguments, as anything else would be invalid JSON anyway.\r\n\r\nYes, only a problem for string arguments and negative numbers. But unfortunately that's enough to make it irresponsible to 'guess'.\r\n\r\n> Also, I have a slight preference for bitcoin-cli getblock hash=X over bitcoin-cli getblock -hash=X... it feels like the latter is an option to bitcoin-cli rather than getblock (but feel free to ignore this if I'm alone with that opinion).\r\n\r\nI have thought about that, but didn't propose it because I think some shells interpret A=B tuples after the command as environment settings - or if not - that is a convention people assume to be so because of autoconf/make.\r\n",
      "created_at" : "2016-12-06T06:40:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265073423",
      "id" : 265073423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T06:40:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265073423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019924"
         }
      },
      "body" : "will rename it",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-12-06T06:40:54Z",
      "diff_hunk" : "@@ -20,111 +20,130 @@ class CRPCConvertParam\n public:\n     std::string methodName; //!< method whose params want conversion\n     int paramIdx;           //!< 0-based idx of param to convert\n+    std::string paramName;  //!< parameter name\n };\n \n+/**\n+ * Specifiy a (method, idx, name) here if the argument is a non-string RPC\n+ * argument and needs to be converted from JSON.\n+ *\n+ * @note Parameter indexes start from 0.\n+ */\n static const CRPCConvertParam vRPCConvertParams[] =\n {\n-    { \"stop\", 0 },\n-    { \"setmocktime\", 0 },\n-    { \"generate\", 0 },\n-    { \"generate\", 1 },\n-    { \"generatetoaddress\", 0 },\n-    { \"generatetoaddress\", 2 },\n-    { \"getnetworkhashps\", 0 },\n-    { \"getnetworkhashps\", 1 },\n-    { \"sendtoaddress\", 1 },\n-    { \"sendtoaddress\", 4 },\n-    { \"settxfee\", 0 },\n-    { \"getreceivedbyaddress\", 1 },\n-    { \"getreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaddress\", 0 },\n-    { \"listreceivedbyaddress\", 1 },\n-    { \"listreceivedbyaddress\", 2 },\n-    { \"listreceivedbyaccount\", 0 },\n-    { \"listreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaccount\", 2 },\n-    { \"getbalance\", 1 },\n-    { \"getbalance\", 2 },\n-    { \"getblockhash\", 0 },\n-    { \"waitforblockheight\", 0 },\n-    { \"waitforblockheight\", 1 },\n-    { \"waitforblock\", 1 },\n-    { \"waitforblock\", 2 },\n-    { \"waitfornewblock\", 0 },\n-    { \"waitfornewblock\", 1 },\n-    { \"move\", 2 },\n-    { \"move\", 3 },\n-    { \"sendfrom\", 2 },\n-    { \"sendfrom\", 3 },\n-    { \"listtransactions\", 1 },\n-    { \"listtransactions\", 2 },\n-    { \"listtransactions\", 3 },\n-    { \"listaccounts\", 0 },\n-    { \"listaccounts\", 1 },\n-    { \"walletpassphrase\", 1 },\n-    { \"getblocktemplate\", 0 },\n-    { \"listsinceblock\", 1 },\n-    { \"listsinceblock\", 2 },\n-    { \"sendmany\", 1 },\n-    { \"sendmany\", 2 },\n-    { \"sendmany\", 4 },\n-    { \"addmultisigaddress\", 0 },\n-    { \"addmultisigaddress\", 1 },\n-    { \"createmultisig\", 0 },\n-    { \"createmultisig\", 1 },\n-    { \"listunspent\", 0 },\n-    { \"listunspent\", 1 },\n-    { \"listunspent\", 2 },\n-    { \"getblock\", 1 },\n-    { \"getblockheader\", 1 },\n-    { \"gettransaction\", 1 },\n-    { \"getrawtransaction\", 1 },\n-    { \"createrawtransaction\", 0 },\n-    { \"createrawtransaction\", 1 },\n-    { \"createrawtransaction\", 2 },\n-    { \"signrawtransaction\", 1 },\n-    { \"signrawtransaction\", 2 },\n-    { \"sendrawtransaction\", 1 },\n-    { \"fundrawtransaction\", 1 },\n-    { \"gettxout\", 1 },\n-    { \"gettxout\", 2 },\n-    { \"gettxoutproof\", 0 },\n-    { \"lockunspent\", 0 },\n-    { \"lockunspent\", 1 },\n-    { \"importprivkey\", 2 },\n-    { \"importaddress\", 2 },\n-    { \"importaddress\", 3 },\n-    { \"importpubkey\", 2 },\n-    { \"importmulti\", 0 },\n-    { \"importmulti\", 1 },\n-    { \"verifychain\", 0 },\n-    { \"verifychain\", 1 },\n-    { \"keypoolrefill\", 0 },\n-    { \"getrawmempool\", 0 },\n-    { \"estimatefee\", 0 },\n-    { \"estimatepriority\", 0 },\n-    { \"estimatesmartfee\", 0 },\n-    { \"estimatesmartpriority\", 0 },\n-    { \"prioritisetransaction\", 1 },\n-    { \"prioritisetransaction\", 2 },\n-    { \"setban\", 2 },\n-    { \"setban\", 3 },\n-    { \"setnetworkactive\", 0 },\n-    { \"getmempoolancestors\", 1 },\n-    { \"getmempooldescendants\", 1 },\n+    { \"setmocktime\", 0, \"timestamp\" },\n+    { \"generate\", 0, \"blocks\" },\n+    { \"generate\", 1, \"maxtries\" },\n+    { \"generatetoaddress\", 0, \"blocks\" },\n+    { \"generatetoaddress\", 2, \"maxtries\" },\n+    { \"getnetworkhashps\", 0, \"blocks\" },\n+    { \"getnetworkhashps\", 1, \"height\" },\n+    { \"sendtoaddress\", 1, \"amount\" },\n+    { \"sendtoaddress\", 4, \"subtractfeefromamount\" },\n+    { \"settxfee\", 0, \"amount\" },\n+    { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaccount\", 1, \"minconf\" },\n+    { \"listreceivedbyaddress\", 0, \"minconf\" },\n+    { \"listreceivedbyaddress\", 1, \"include_empty\" },\n+    { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaccount\", 0, \"minconf\" },\n+    { \"listreceivedbyaccount\", 1, \"include_empty\" },\n+    { \"listreceivedbyaccount\", 2, \"include_watchonly\" },\n+    { \"getbalance\", 1, \"minconf\" },\n+    { \"getbalance\", 2, \"include_watchonly\" },\n+    { \"getblockhash\", 0, \"index\" },\n+    { \"waitforblockheight\", 0, \"height\" },\n+    { \"waitforblockheight\", 1, \"timeout\" },\n+    { \"waitforblock\", 1, \"timeout\" },\n+    { \"waitfornewblock\", 0, \"timeout\" },\n+    { \"move\", 2, \"amount\" },\n+    { \"move\", 3, \"minconf\" },\n+    { \"sendfrom\", 2, \"amount\" },\n+    { \"sendfrom\", 3, \"minconf\" },\n+    { \"listtransactions\", 1, \"count\" },\n+    { \"listtransactions\", 2, \"from\" },\n+    { \"listtransactions\", 3, \"include_watchonly\" },\n+    { \"listaccounts\", 0, \"minconf\" },\n+    { \"listaccounts\", 1, \"include_watchonly\" },\n+    { \"walletpassphrase\", 1, \"timeout\" },\n+    { \"getblocktemplate\", 0, \"template_request\" },\n+    { \"listsinceblock\", 1, \"target_confirmations\" },\n+    { \"listsinceblock\", 2, \"include_watchonly\" },\n+    { \"sendmany\", 1, \"amounts\" },\n+    { \"sendmany\", 2, \"minconf\" },\n+    { \"sendmany\", 4, \"subtractfeefrom\" },\n+    { \"addmultisigaddress\", 0, \"nrequired\" },\n+    { \"addmultisigaddress\", 1, \"keys\" },\n+    { \"createmultisig\", 0, \"nrequired\" },\n+    { \"createmultisig\", 1, \"keys\" },\n+    { \"listunspent\", 0, \"minconf\" },\n+    { \"listunspent\", 1, \"maxconf\" },\n+    { \"listunspent\", 2, \"addresses\" },\n+    { \"getblock\", 1, \"verbose\" },\n+    { \"getblockheader\", 1, \"verbose\" },\n+    { \"gettransaction\", 1, \"include_watchonly\" },\n+    { \"getrawtransaction\", 1, \"verbose\" },\n+    { \"createrawtransaction\", 0, \"transactions\" },\n+    { \"createrawtransaction\", 1, \"outputs\" },\n+    { \"createrawtransaction\", 2, \"locktime\" },\n+    { \"signrawtransaction\", 1, \"prevtxs\" },\n+    { \"signrawtransaction\", 2, \"privkeys\" },\n+    { \"sendrawtransaction\", 1, \"allowhighfees\" },\n+    { \"fundrawtransaction\", 1, \"options\" },\n+    { \"gettxout\", 1, \"n\" },\n+    { \"gettxout\", 2, \"include_mempool\" },\n+    { \"gettxoutproof\", 0, \"txids\" },\n+    { \"lockunspent\", 0, \"unlock\" },\n+    { \"lockunspent\", 1, \"transactions\" },\n+    { \"importprivkey\", 2, \"rescan\" },\n+    { \"importaddress\", 2, \"rescan\" },\n+    { \"importaddress\", 3, \"p2sh\" },\n+    { \"importpubkey\", 2, \"rescan\" },\n+    { \"importmulti\", 0, \"requests\" },\n+    { \"importmulti\", 1, \"options\" },\n+    { \"verifychain\", 0, \"checklevel\" },\n+    { \"verifychain\", 1, \"blocks\" },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019924",
      "id" : 91019924,
      "original_commit_id" : "dd9b157f0369760788a5a6ec7bdea829470346a8",
      "original_position" : 174,
      "path" : "src/rpc/client.cpp",
      "position" : null,
      "pull_request_review_id" : 11530437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019951"
         }
      },
      "body" : "no longer, no",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2016-12-06T06:41:15Z",
      "diff_hunk" : "@@ -286,7 +286,30 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw std::runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        // Check for named arguments.\n+        // Note that ParseParameters stops at the first argument that doesn't\n+        // start with a switch character, which happens to be the method. This\n+        // starts scanning after the method, so arguments before and after the\n+        // command will never interfere.\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && IsSwitchChar(s[0]))\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019951",
      "id" : 91019951,
      "original_commit_id" : "dd9b157f0369760788a5a6ec7bdea829470346a8",
      "original_position" : 23,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 11530459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Worth mentioning how subarg syntax is handled by other familiar progs:\r\n\r\ngit:```./bitcoin-cli -testnet -- --hash=X```\r\nor\r\ngdb: ```./bitcoin-cli -testnet --args --hash=X```",
      "created_at" : "2016-12-06T06:45:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265074094",
      "id" : 265074094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T06:45:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265074094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Another idea: named arguments have to precede the command (so `bitcoin-cli -hash=X getblock`), that's never ambiguous.",
      "created_at" : "2016-12-06T06:57:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265075847",
      "id" : 265075847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T06:57:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265075847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> ./bitcoin-cli -testnet -- --hash=X\r\n> ./bitcoin-cli -testnet --args --hash=X\r\n\r\nI like supporting at least one of those. Mind that the `--`/`--args` delimiter has to be *before* the command for it to be nonambigious, otherwise it may be a legitimate string argument.\r\n\r\n> Another idea: named arguments have to precede the command (so bitcoin-cli -hash=X getblock), that's never ambiguous.\r\n\r\nSure, but then they can collide with bitcoin-cli's own arguments, which we were trying to avoid at the same time. It will be tricky to figure out what arguments to send to the server and which ones to keep for ourselves, and may change per version.\r\n\r\nBut even if we manage to get that sorted out, it looks like \"putting the cart before the horse\" syntax-wise.\r\n",
      "created_at" : "2016-12-06T07:51:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265083688",
      "id" : 265083688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T07:51:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265083688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> Sure, but then they can collide with bitcoin-cli's own arguments, which we were trying to avoid at the same time. It will be tricky to figure out what arguments to send to the server and which ones to keep for ourselves, and may change per version.\r\n\r\nThat can be avoided by using `hash=X` style naming ;)\r\n\r\n> But even if we manage to get that sorted out, it looks like \"putting the cart before the horse\" syntax-wise.\r\n\r\nYes, I agree there. ",
      "created_at" : "2016-12-06T07:54:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265084145",
      "id" : 265084145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T07:54:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265084145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I agree with the explicit `bitcoin-cli -named {method} -arg1=val1 -arg2=val2 ...` syntax. It guarantees backwards compatibility for any applications that are calling into bitcoin-cli with the current positional argument syntax.\r\n\r\nIf we're explicitly specifying that the arguments are named, then we could even drop the dashes before the argument names, ie `bitcoin-cli -named {method} arg1=val1 arg2=val2 ...`",
      "created_at" : "2016-12-06T10:13:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265111615",
      "id" : 265111615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T10:13:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265111615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "> If we're explicitly specifying that the arguments are named, then we could even drop the dashes before the argument names, ie bitcoin-cli -named {method} arg1=val1 arg2=val2 ...\r\n\r\nThat's what @sipa is suggesting too. Seems fine to me *if* we can be sure that there are no shells that eat these. I've only seen the syntax used for passing arguments to make/configure  and always assumed it was setting environment variables .",
      "created_at" : "2016-12-06T11:30:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265127449",
      "id" : 265127449,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T11:30:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265127449",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Not sure if you were just using configure/make as an example, but in those cases anyway, those assignments are separate from environment vars.\r\n\r\nThat's why, for ex, ```CC=clang ./configure``` != ```./configure CC=clang```. The first sets env vars that aren't necessarily persistent to the resulting builds unless the user persists them explicitly in the shell. The second allows configure to forward the vars without polluting the env. If you pass a var using the 2nd syntax, and it's not understood (\"precious\" in autotools-speak), it will not be forwarded. afaik, the same goes for make.\r\n\r\nEdit: Just to be explicit, it's configure/make swallowing the args in those cases, not the shell itself.",
      "created_at" : "2016-12-06T12:24:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265137513",
      "id" : 265137513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T12:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265137513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@laanwj `dd` and `bitcoin-tx` also use key=value.",
      "created_at" : "2016-12-06T19:01:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265240089",
      "id" : 265240089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T19:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265240089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "concept ACK\r\nI will review more thoroughly after update\r\n\r\nI think I have a slight preference for eliminating the dashes\r\n",
      "created_at" : "2016-12-06T20:54:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265269055",
      "id" : 265269055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-06T20:54:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265269055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "- Dashes have been successfully eliminated. New syntax:\r\n\r\n```\r\n     $ src/bitcoin-cli -testnet -named echo arg0=\"dfdf\"\r\n     [\r\n     \"dfdf\"\r\n     ]\r\n```\r\n\r\nArgument conversion also works, for arguments thus flagged in the table in\r\n`src/rpc/client.cpp`.\r\n\r\n```\r\n    $ src/bitcoin-cli -testnet -named echojson arg0=\"[1,2,3]\"\r\n    [\r\n      [\r\n        1,\r\n        2,\r\n        3\r\n      ]\r\n    ]\r\n```\r\n\r\nUnknown parameter (detected server-side):\r\n\r\n```\r\n    $ src/bitcoin-cli -testnet -named getinfo arg0=\"dfdf\"\r\n    error code: -8\r\n    error message:\r\n    Unknown named parameter arg0\r\n```\r\n\r\nAlso updated \"more examples\" above.\r\n\r\n- Renamed the remaining instances of `nblocks` and made sure the naming is consistent between `client.cpp` and the appropriate dispatch table (I have a script for this, which we could make part of the travis checks at some point).\r\n- Rebased and squashed\r\n",
      "created_at" : "2016-12-08T11:04:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265714367",
      "id" : 265714367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-08T11:05:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265714367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I've spent some time looking through the RPC arguments, and my view is that the following argument names should be changed to be more descriptive:\r\n\r\n- `getblock/index` becomes `getblock/height` to conform with `waitforblockheight` and `getnetworkhashps`\r\n- `createrawtransaction/transactions` becomes `createrawtransaction/inputs` to conform with `createrawtransaction/outputs`\r\n- `listtransactions/from` becomes `listtransactions/skip` to avoid confusion with 'from' as in 'from address...'\r\n- `getblock/hash` becomes `getblock/blockhash` ...\r\n- `getblockheader/hash` becomes `getblockheader/blockhash` ..\r\n- `preciousblock/hash` becomes `preciousblock/blockhash` ...\r\n- `invalidateblock/hash` becomes `invalidateblock/blockhash` ...\r\n- `reconsiderblock/hash` becomes `reconsiderblock/blockhash` ...\r\n- ... and `waitforblock/hash` becomes `reconsiderblock/blockhash` to confirm with `gettxoutproof` `listsinceblock` and to avoid confusion with other hash types\r\n\r\nThere's a patch set which makes these changes (as well as generally cleaning up RPC comments) at https://github.com/jnewbery/bitcoin/commit/f08b91c21b9e715ec273cf431d2ec2bb8916def7",
      "created_at" : "2016-12-09T17:08:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266067278",
      "id" : 266067278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-09T17:08:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266067278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Sounds good to me, thanks, will cherry-pick that.",
      "created_at" : "2016-12-12T12:15:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266417306",
      "id" : 266417306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-12T12:15:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266417306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Oops - I didn't change the named arguments in rpcnamedargs.py to match the new argument names.\r\n\r\nFix is here: https://github.com/jnewbery/bitcoin/commit/d45ef7c02cf682f59f129b2af5df064270b20e03",
      "created_at" : "2016-12-12T14:59:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266452071",
      "id" : 266452071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-12T14:59:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266452071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Thanks - cherry-picked and squashed into the last commit.",
      "created_at" : "2016-12-14T09:16:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266982891",
      "id" : 266982891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-14T09:16:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266982891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased for a small add/add conflict in `rpc-tests.py`.",
      "created_at" : "2016-12-19T09:15:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-267916494",
      "id" : 267916494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2016-12-19T09:15:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267916494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased for minor argument documentation conflict.",
      "created_at" : "2017-01-05T10:34:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-270613693",
      "id" : 270613693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2017-01-05T10:34:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270613693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "utACK 65bf5d27c578e7560128a28af08fef57135ec841.\r\n\r\nI have not read through the test code in detail, nor verified whether the RPC help names match the named arguments in the server and client tables. I have also not checked the consistency of the chosen names (but I don't care strongly). I have played around briefly with the new `echo` and `echojson` commands and they seem to work as expected.",
      "created_at" : "2017-01-07T23:28:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-271117540",
      "id" : 271117540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2017-01-07T23:28:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271117540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95069551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069551"
         }
      },
      "body" : "Because univalue does not check for duplicate keys, things are a bit weird. I'm not sure if there's much that this PR could/should do about this, but as long as we're adding more user-provided-json-parsing stuff I thought I'd mention it.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-08T01:27:27Z",
      "diff_hunk" : "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95069551",
      "id" : 95069551,
      "original_commit_id" : "6f1c76ae14c884c919db9ed720c7776aa0748244",
      "original_position" : 58,
      "path" : "src/rpc/server.cpp",
      "position" : 58,
      "pull_request_review_id" : 15615440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95084461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95084461"
         }
      },
      "body" : "Docs here still say \"blockheight\" for one-line help but height for multi-line.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-08T17:36:09Z",
      "diff_hunk" : "@@ -279,7 +279,7 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n             \"of the current tip.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. block height to wait for (int)\\n\"\n+            \"1. height  (required, int) Block height to wait for (int)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95084461",
      "id" : 95084461,
      "original_commit_id" : "65bf5d27c578e7560128a28af08fef57135ec841",
      "original_position" : 16,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 22,
      "pull_request_review_id" : 15615440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95084461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95085202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95085202"
         }
      },
      "body" : "Why?",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-08T18:17:26Z",
      "diff_hunk" : "@@ -171,3 +191,31 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        size_t pos = s.find(\"=\");\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument '\"+s+\"', this needs to be present for every argument (even if it is empty)\"));\n+        }\n+\n+        std::string name = s.substr(0, pos);\n+        std::string value = s.substr(pos+1);\n+\n+        // allow include-mempool=true as well as include_mempool=true",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95085202",
      "id" : 95085202,
      "original_commit_id" : "65bf5d27c578e7560128a28af08fef57135ec841",
      "original_position" : 255,
      "path" : "src/rpc/client.cpp",
      "position" : null,
      "pull_request_review_id" : 15615440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95085202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107579"
         }
      },
      "body" : "Almost no JSON implementation checks for duplicate keys. The usual behavior is that the last value assigned to the key takes precedence. I think that will happen here?",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-09T06:57:21Z",
      "diff_hunk" : "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107579",
      "id" : 95107579,
      "original_commit_id" : "6f1c76ae14c884c919db9ed720c7776aa0748244",
      "original_position" : 58,
      "path" : "src/rpc/server.cpp",
      "position" : 58,
      "pull_request_review_id" : 15651620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107679"
         }
      },
      "body" : "This was useful when the syntax was -arg=value. I guess it no longer really is now that plain name=value pairs are used.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-09T06:58:27Z",
      "diff_hunk" : "@@ -171,3 +191,31 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        size_t pos = s.find(\"=\");\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument '\"+s+\"', this needs to be present for every argument (even if it is empty)\"));\n+        }\n+\n+        std::string name = s.substr(0, pos);\n+        std::string value = s.substr(pos+1);\n+\n+        // allow include-mempool=true as well as include_mempool=true",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107679",
      "id" : 95107679,
      "original_commit_id" : "65bf5d27c578e7560128a28af08fef57135ec841",
      "original_position" : 255,
      "path" : "src/rpc/client.cpp",
      "position" : null,
      "pull_request_review_id" : 15651709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107724"
         }
      },
      "body" : "OK, will make that consistent.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-09T06:58:37Z",
      "diff_hunk" : "@@ -279,7 +279,7 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n             \"of the current tip.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. block height to wait for (int)\\n\"\n+            \"1. height  (required, int) Block height to wait for (int)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107724",
      "id" : 95107724,
      "original_commit_id" : "65bf5d27c578e7560128a28af08fef57135ec841",
      "original_position" : 16,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 22,
      "pull_request_review_id" : 15651752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95198148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95198148"
         }
      },
      "body" : "Yes, I believe the last one will take precedence. I'm ok with not fixing this, but it seems super strange.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-09T17:02:40Z",
      "diff_hunk" : "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95198148",
      "id" : 95198148,
      "original_commit_id" : "6f1c76ae14c884c919db9ed720c7776aa0748244",
      "original_position" : 58,
      "path" : "src/rpc/server.cpp",
      "position" : 58,
      "pull_request_review_id" : 15745405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95198148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95341492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95341492"
         }
      },
      "body" : "Well if it's any guide, python's JSON behaves exactly the same:\r\n```\r\n>>> json.loads('{\"a\":\"b\",\"a\":\"C\"}')\r\n{'a': 'C'}\r\n```\r\nWhat I would not mind is checking at the client side for duplicate arguments, as a user friendly feature, but I'm not going to do it in this pull.",
      "commit_id" : "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
      "created_at" : "2017-01-10T11:00:06Z",
      "diff_hunk" : "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95341492",
      "id" : 95341492,
      "original_commit_id" : "6f1c76ae14c884c919db9ed720c7776aa0748244",
      "original_position" : 58,
      "path" : "src/rpc/server.cpp",
      "position" : 58,
      "pull_request_review_id" : 15891778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
      "updated_at" : "2017-01-10T11:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95341492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Fixed @bluematt's documentation nit and removed the `_`/`-` interchangeability for key names, and squashed. Should be ready for merge now if travis passes.\r\n",
      "created_at" : "2017-01-10T11:06:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-271548050",
      "id" : 271548050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2017-01-10T11:06:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271548050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK (I'm surprised I didn't do it before).",
      "created_at" : "2017-01-10T17:46:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-271645459",
      "id" : 271645459,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
      "updated_at" : "2017-01-10T17:46:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271645459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]

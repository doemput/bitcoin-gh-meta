{
   "assignee" : null,
   "assignees" : [],
   "body" : "VerifyHeader basically calls CheckBlockHeader and ContextualCheckBlockHeader for a given CBlockHeader (and all the required parameters).\r\n\r\nSince ContextualCheckBlockHeader previously depends on CBlockIndex, some kind of C-compatible API for it must be exposed if we want a complete libconsensus to remain storage agnostic. \r\nAlternative implementations of BlockIndexInterface are more than welcomed.\r\nIf there's parts of this PR that you think would be acceptable separately, please, say so.\r\nIf you come up with alternative preparations for making this PR (or an alternative) smaller, that's welcomed too. And nits, if I haven't said so before, are always welcomed.\r\n\r\n We could also expose CheckBlockHeader independently. An SPV wallet using libconsensus for verifyscript already would bea easily able to also easily check CheckTransaction (which @NicolasDorier is working on) and CheckBlockHeader without any context. If we do so, we could easily move the time checks from ContextualCheckBlockHeader to CheckBlockHeader if we accept the current time of the node as a \"non-contextual\" parameter for CheckBlockHeader. Obviously time is context, but being pragmatic, these checks are to easy not to expose in CheckBlockHeader and everybody can be expected to have a clock they can trust (the error margins in your clock seem quite safe to me and, maybe more importante, VerifyHeader is going to use the caller's clock anyway).\r\n\r\nPlease feel free to ask for squashes as well.\r\n\r\nReplaces #5995\r\n\r\nDepdendencies:\r\n- [ ] Consensus: MOVEONLY: Move functions for header verification #8337\r\n- [x] finish implementing bitcoinconsensus_create_consensus_parameters (and remove whatever is not needed anymore from the base_blob<> preparations).\r\n\r\nDeath TODOs:\r\n\r\n~~\\- Hide uint256 and DifficultyAdjustmentInterval() in Consensus::Params~~: the create interface should be enough.\r\n~~\\- [ ] The interface for CBlockIndex (`const BlockIndexInterface* iBlockIndex`) could be hidden in libconsensus using the same create/destroy blockindexInterfaceTrick, even if some of the parameters are going to be function pointers. Or we could offer both and see what happens...discussion welcomed here, but allowing BlockIndexInterface\\* to be passed as void\\* it's in the todo list whether for necessary or just to see how it looks like. If we ever need a DifficultyAdjustmentInterval-like method internally, void\\* will be transparent. It's simply the same argument and we should do the same.~~\r\n~~\\- [ ] new warnings~~",
   "closed_at" : "2017-06-19T06:57:22Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
      "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jtimon/followers",
      "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jtimon",
      "id" : 1008458,
      "login" : "jtimon",
      "organizations_url" : "https://api.github.com/users/jtimon/orgs",
      "received_events_url" : "https://api.github.com/users/jtimon/received_events",
      "repos_url" : "https://api.github.com/users/jtimon/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jtimon"
   },
   "comments" : 15,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8493/comments",
   "created_at" : "2016-08-09T23:43:01Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8493/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/8493",
   "id" : 170296708,
   "labels" : [
      {
         "color" : "E6F6D6",
         "default" : false,
         "id" : 135961,
         "name" : "Refactoring",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8493/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 8493,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/8493.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8493",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/8493.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8493"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Untested: libconsensus: Expose VerifyHeader",
   "updated_at" : "2017-06-19T06:57:22Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8493",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
      "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jtimon/followers",
      "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jtimon",
      "id" : 1008458,
      "login" : "jtimon",
      "organizations_url" : "https://api.github.com/users/jtimon/orgs",
      "received_events_url" : "https://api.github.com/users/jtimon/received_events",
      "repos_url" : "https://api.github.com/users/jtimon/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jtimon"
   }
}

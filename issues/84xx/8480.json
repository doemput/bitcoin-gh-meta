{
   "assignee" : null,
   "assignees" : [],
   "body" : "I am using fourth chair adjustment logic to calculate miner reward for a given block. If miner can insert additional inputs in coinbase transaction and transaction outputs do not cover input value, it may be possible to generate negative mining reward and decrease bitcoin supply.\r\n\r\nRevelant part of logic expressed in python 3 goes below. Variables `data2jsonobject`, `requestrpcjobqueue`, `rpcsocketqueue`, `ipportpair`, `rpcauthpair` are defined outside from this part of code. Last parameter pushed in `requestrpcjobqueue` returns a pair with status and raw data returned from bitcoin client.\r\n\r\n```\r\ntransactioncountstatus = b'not processed'\r\ntransactioncount = b''\r\nminerrewardstatus = b'not processed'\r\nminerreward = b''\r\ntry:\r\n    coinbasetransactionid = data2jsonobject['result']['tx'][0].encode()\r\n    transactioncount = str(len(data2jsonobject['result']['tx'])).encode()\r\n    transactioncountstatus = b'ok'\r\n    coinbasetransactionhandle = queue.Queue()\r\n    requestrpcjobqueue.put((rpcsocketqueue, ipportpair, rpcauthpair, b'{\"jsonrpc\": \"1.0\", \"method\": \"getrawtransaction\", \"params\": [\"' + coinbasetransactionid + b'\", 1]}', coinbasetransactionhandle))\r\n    rpcstatus3, data3 = coinbasetransactionhandle.get()\r\n    if rpcstatus3 = b'received':\r\n        try:\r\n            data3jsonobject = json.loads(data3.decode())\r\n            txinput = data3jsonobject['result']['vin'][0]\r\n            txinputcount = len(data3jsonobject['result']['vin'])\r\n            k = 0\r\n            coinbaseinputstatus = b'not found'\r\n            coinbaseoutputvalue = 0\r\n            txoutput = data3jsonobject['result']['vout'][0]\r\n            txoutputcount = len(data3jsonobject['result']['vin'])\r\n            while k < txoutputcount:\r\n                coinbaseoutputvalue += data3jsonobject['result']['vin'][k]['value']\r\n                k += 1\r\n            k = 0\r\n            noncoinbaseinputvalue = 0\r\n            while k < txinputcount:\r\n                txinput = data3jsonobject['result']['vin'][k]\r\n                col84status = b'no failures'\r\n                try:\r\n                    col88x = txinput['coinbase']\r\n                    coinbaseinputstatus = b'found'\r\n                except KeyError:\r\n                    col88txid = txinput['txid'].encode()\r\n                    col88vout = str(txinput['vout']).encode()\r\n                    col88handle = queue.Queue()\r\n                    requestrpcjobqueue.put((rpcsocketqueue, ipportpair, rpcauthpair, b'{\"jsonrpc\": \"1.0\", \"method\": \"getrawtransaction\", \"params\": [\"' + col88txid + b'\", 1]}', col88handle))\r\n                    col88rpcstatus, col88data = col88handle.get()\r\n                    col88status = b'not processed'\r\n                    if col88rpcstatus == b'received':\r\n                        col92jsonobject = json.loads(col88data.decode())\r\n                        col92count = len(col92jsonobject['result']['vout'])\r\n                        col92i = 0\r\n                        while col92i < col92count:\r\n                            if str(col92jsonobject['result']['vout'][col92i]['n']).encode() == col88vout:\r\n                                noncoinbaseinputvalue += col92jsonobject['result']['vout'][col92i]['value']\r\n                                col88status = b'ok'\r\n                            col92i += 1\r\n                    if col88status != b'ok':\r\n                        col84status = b'could not find transaction ' + col88txid + b' with output ' + col88vout\r\n                if col84status != b'no failures':\r\n                    coinbaseinputstatus = col84status\r\n                    break\r\n                k += 1\r\n            if coinbaseinputstatus == b'found':\r\n                minerreward = str(coinbaseoutputvalue - noncoinbaseinputvalue).encode()\r\n                minerrewardstatus = b'ok'\r\n        except json.decoder.JSONDecodeError:\r\n            minerrewardstatus = b'could not interpret rpc json response'\r\n        except KeyError:\r\n            minerrewardstatus = b'unexpected rpc json response structure'\r\n            try:\r\n                minerrewardstatus = b'rpc json error message: ' + json.loads(data3.decode())['error']['message'].encode()\r\n            except KeyError:\r\n                pass\r\nexcept KeyError:\r\n    transactioncountstatus = b'unexpected rpc json response structure'\r\n    try:\r\n        transactioncountstatus = b'rpc json error message: ' + data2jsonobject['error']['message'].encode()\r\n    except KeyError:\r\n        pass\r\n```\r\n",
   "closed_at" : "2016-08-16T10:50:00Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
      "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sipa/followers",
      "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sipa",
      "id" : 548488,
      "login" : "sipa",
      "organizations_url" : "https://api.github.com/users/sipa/orgs",
      "received_events_url" : "https://api.github.com/users/sipa/received_events",
      "repos_url" : "https://api.github.com/users/sipa/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sipa"
   },
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8480/comments",
   "created_at" : "2016-08-07T10:20:48Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8480/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/8480",
   "id" : 169789920,
   "labels" : [
      {
         "color" : "009800",
         "name" : "Consensus",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8480/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 8480,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Negative mining reward may not be disallowed",
   "updated_at" : "2016-08-16T10:50:00Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8480",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/17480000?v=3",
      "events_url" : "https://api.github.com/users/johnjacksonbtc/events{/privacy}",
      "followers_url" : "https://api.github.com/users/johnjacksonbtc/followers",
      "following_url" : "https://api.github.com/users/johnjacksonbtc/following{/other_user}",
      "gists_url" : "https://api.github.com/users/johnjacksonbtc/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/johnjacksonbtc",
      "id" : 17480000,
      "login" : "johnjacksonbtc",
      "organizations_url" : "https://api.github.com/users/johnjacksonbtc/orgs",
      "received_events_url" : "https://api.github.com/users/johnjacksonbtc/received_events",
      "repos_url" : "https://api.github.com/users/johnjacksonbtc/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/johnjacksonbtc/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/johnjacksonbtc/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/johnjacksonbtc"
   }
}

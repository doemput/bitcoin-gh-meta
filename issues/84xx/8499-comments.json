[
   {
      "body" : "Concept ACK",
      "created_at" : "2016-08-11T19:56:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-239273140",
      "id" : 239273140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-11T19:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239273140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "I think this is only a temporary solution to protect some of the most common script types. It's easy for P2WPKH. For P2WSH, it could only be done on a case-by-case basis. This approach won't work for more complicated scripts like MAST ",
      "created_at" : "2016-08-12T00:50:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-239335582",
      "id" : 239335582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-12T00:50:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239335582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "`*segwit.py` tests fail.",
      "created_at" : "2016-08-12T11:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-239424171",
      "id" : 239424171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-12T11:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239424171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Updated to do more sanity checks:\r\n1. If the public key in P2WPKH is bigger than 33 bytes, make sure it matches the witness program\r\n2. Make sure the witnessScript is <= 10000 bytes and matches the witness program",
      "created_at" : "2016-08-19T03:51:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-240921201",
      "id" : 240921201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-19T03:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/240921201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75657219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75657219"
         }
      },
      "body" : "Why only when the size is above 33 bytes?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-08-22T10:58:04Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75657219",
      "id" : 75657219,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 47,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75657219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75660562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75660562"
         }
      },
      "body" : "The main objective of this PR is to detect extra witness data in some known forms of scripts, and DoS ban if found.\r\n\r\nThe normal size for compressed key is 33. If the size is 33, we are sure that no extra data is added. Whether the provided key matches the hash or not will be tested later in script evaluation. Testing here is just duplicated work.\r\n\r\nIf the size is bigger than 33, we don't know whether it is legit (uncompressed key) or not (malleated witness). To exclude the invalid case we must compare the hash early, and DoS ban if it does not match. If we don't compare the hash here, an attacker may increase the key size up to 65 bytes, get the transaction rejected due to insufficient fee, and not get banned",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-08-22T11:28:01Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75660562",
      "id" : 75660562,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 47,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75660562",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75686509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75686509"
         }
      },
      "body" : "More tests could be added here to protect some common scripts. For example, canonical n-of-m multisig must have exactly n + 1 stack items (excluding the witnessScript). The first one must be empty (assuming BIP146) and the followings must be <= 73 bytes. Otherwise we kick the peer. Some common HTLC could be protected in a similar way, until there is a more permanent solution\r\n\r\nNon-canonical scripts are still accepted but they could be vulnerable to malleated witness attack",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-08-22T14:23:31Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return true;\n+            }\n+        }\n+\n+        // Witness for P2WSH must not be empty.\n+        // Make sure the witnessScript size is <= 10000 bytes and matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 32) {\n+            if (tx.wit.vtxinwit[i].IsNull())\n+                return true;\n+            CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+            uint256 hashWitnessScript;\n+            if (witnessScript.size() > 10000)\n+                return true;\n+            CSHA256().Write(begin_ptr(witnessScript), witnessScript.size()).Finalize(hashWitnessScript.begin());\n+            if (memcmp(hashWitnessScript.begin(), &witnessprogram[0], 32))\n+                return true;\n+            // more P2WSH tests could be added here",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75686509",
      "id" : 75686509,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 66,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75686509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75686929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75686929"
         }
      },
      "body" : "Comparing the hash here guarantees that the script size and sigOpCount must be correct. And we could further observe the script with static analysis",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-08-22T14:25:36Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return true;\n+            }\n+        }\n+\n+        // Witness for P2WSH must not be empty.\n+        // Make sure the witnessScript size is <= 10000 bytes and matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 32) {\n+            if (tx.wit.vtxinwit[i].IsNull())\n+                return true;\n+            CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+            uint256 hashWitnessScript;\n+            if (witnessScript.size() > 10000)\n+                return true;\n+            CSHA256().Write(begin_ptr(witnessScript), witnessScript.size()).Finalize(hashWitnessScript.begin());\n+            if (memcmp(hashWitnessScript.begin(), &witnessprogram[0], 32))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r75686929",
      "id" : 75686929,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 64,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75686929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "I don't think this belongs in policy. It detects witness transaction inputs that are unambiguously invalid by consensus rules, so I think it belongs in script/interpreter.cpp, but for that it can't depend on CCoinsView. Would it be possible to just have a function per input, that just takes the prevout, scriptsig, and scriptwitness?",
      "created_at" : "2016-08-23T11:34:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-241703701",
      "id" : 241703701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-23T11:34:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241703701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa: can I still use `Solver` and `txnouttype` after moving to interpreter.cpp? That'd would useful when we define more common script types (e.g. HTLC)\r\n\r\nThe `IsBadWitness` function is only a very small subset of consensus rules and it should never be used in the consensus critical path. Actually, we don't need `IsBadWitness` if we fully execute the script before doing any size related policy check. So it may be reasonable to consider this as part of policy.\r\n\r\nThis is more like an \"assertion\" for the following policy checking, rather than for consensus purpose",
      "created_at" : "2016-08-23T17:44:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-241814932",
      "id" : 241814932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-23T17:54:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241814932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "need a 0.13.1 tag?",
      "created_at" : "2016-08-25T02:49:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-242267433",
      "id" : 242267433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-08-25T02:49:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242267433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77349831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77349831"
         }
      },
      "body" : "Unless I'm missing something, I think this is over-eager optimization. It took me a few reads of even this explanation to understand the reasoning behind this line, and even then I'm not quite sure if I've fully understood it. Is the only harm in being more general that we are duplicating work later?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-02T13:56:14Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77349831",
      "id" : 77349831,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 47,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77349831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77351905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77351905"
         }
      },
      "body" : "At a minimum there should be a comment something like:\r\n\"We want to make sure malleated pubkeys don't trigger too-low-fee to avoid DoS ban\"",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-02T14:09:30Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77351905",
      "id" : 77351905,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 47,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77351905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77454583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77454583"
         }
      },
      "body" : "@instagibbs >Is the only harm in being more general that we are duplicating work later?\r\nyes, because the only purpose of this PR is to early detect some kinds of witness mutation that would trigger too-low-fee ban. We don't care if the size is same as expected or too small. Otherwise we are just doing the validation twice.\r\n\r\nBut this one is probably over optimized.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-04T15:43:29Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77454583",
      "id" : 77454583,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 47,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77454583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77516318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77516318"
         }
      },
      "body" : "I believe this is over-optimized, yes. Let's just always check it.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-05T12:44:35Z",
      "diff_hunk" : "@@ -154,6 +154,75 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return false; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut& prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector<std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;\n+        // get the scriptPubKey corresponding to this input:\n+        CScript prevScript = prev.scriptPubKey;\n+        Solver(prevScript, whichType, vSolutions);\n+\n+        if (whichType == TX_SCRIPTHASH)\n+        {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                return true;\n+            if (stack.empty())\n+                return true;\n+            prevScript = CScript(stack.back().begin(), stack.back().end());\n+        }\n+\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+\n+        // Non-witness program must not be associated with any witness\n+        if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+            return true;\n+\n+        // Witness for P2WPKH must have 2 stack items. Signature must be <= 73 bytes.\n+        // Pubkey must be <= 65 bytes.\n+        // If pubkey size > 33 bytes, make sure it matches witness program.\n+        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                return true;\n+            std::vector<unsigned char> hashPubKey(20);\n+            std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+            if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73 || pubKey.size() > 65)\n+                return true;\n+            if (pubKey.size() > 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77516318",
      "id" : 77516318,
      "original_commit_id" : "47335e4b401cd51765bd8e21f0a9ba2471cbb5b7",
      "original_position" : 47,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77516318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "The function is updated. It returns 1 for witness-related error, and 2 for P2SH-related error. We shouldn't mark corruption possible for P2SH related error.\r\n\r\nIt also always checks the HASH160 in P2WPKH",
      "created_at" : "2016-09-06T09:06:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-244892906",
      "id" : 244892906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-06T09:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244892906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77598282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77598282"
         }
      },
      "body" : "Can you define an enum instead?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-06T09:09:58Z",
      "diff_hunk" : "@@ -154,6 +154,105 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+int IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77598282",
      "id" : 77598282,
      "original_commit_id" : "cf802ffc8640a216a73de9d0eefbdacf1180fedc",
      "original_position" : 4,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77598282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77617118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77617118"
         }
      },
      "body" : "Revised",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-06T11:28:42Z",
      "diff_hunk" : "@@ -154,6 +154,105 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+int IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77617118",
      "id" : 77617118,
      "original_commit_id" : "cf802ffc8640a216a73de9d0eefbdacf1180fedc",
      "original_position" : 4,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77617118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "utACK 056dc99bdc538a7af04b21fe3b25586afbc03861",
      "created_at" : "2016-09-06T12:01:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-244929181",
      "id" : 244929181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-06T12:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244929181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77683006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77683006"
         }
      },
      "body" : "Please use the constant found here: https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L31",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-06T17:40:03Z",
      "diff_hunk" : "@@ -154,6 +154,97 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return TX_MAYBE_OK; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+                return TX_BAD_WITNESS;\n+\n+            // Witness for P2WPKH must have 2 stack items. Pubkey must match the witness program.\n+            // Signature must be <= 73 bytes (BIP66). Since signature size is variable, it is not impossible to bloat a\n+            // 70-byte signature to 73-byte and trigger fee rejection for marginal cases but the impact is negligible.\n+            if (witnessversion == 0 && witnessprogram.size() == 20) {\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                    return TX_BAD_WITNESS;\n+                std::vector<unsigned char> hashPubKey(20);\n+                std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73)\n+                    return TX_BAD_WITNESS;\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return TX_BAD_WITNESS;\n+            }\n+\n+            // P2WSH requires at least 1 witness stack item but we already know the witness is not empty.\n+            // Make sure the witnessScript size is <= 10000 bytes and matches witness program.\n+            if (witnessversion == 0 && witnessprogram.size() == 32) {\n+                CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+                uint256 hashWitnessScript;\n+                if (witnessScript.size() > 10000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r77683006",
      "id" : 77683006,
      "original_commit_id" : "056dc99bdc538a7af04b21fe3b25586afbc03861",
      "original_position" : 61,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/77683006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "nit aside utACK https://github.com/bitcoin/bitcoin/pull/8499/commits/056dc99bdc538a7af04b21fe3b25586afbc03861",
      "created_at" : "2016-09-06T17:40:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-245029517",
      "id" : 245029517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-06T17:40:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/245029517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "08f5e22: addressing nits and include rpc-test",
      "created_at" : "2016-09-08T08:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-245527825",
      "id" : 245527825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-08T08:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/245527825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "2 commits added:\r\n\r\n----------------\r\nThe first one is alternative to #8685. It implements a policy limit for P2WSH, with witnessScript <= 3600 bytes, witness stack item size <= 80 bytes, and witness stack items <= 100\r\n\r\n3600 bytes witnessScript and 100 stack items are adequate for a n-of-100 multisig using OP_CHECKSIG, OP_ADD, and OP_EQUAL\r\n\r\nThe max size for ECDSA signature is 73 bytes and nothing should use more than that with the current scripting language.\r\n\r\nThis is to prevent abuse of witness space, and reduce the risks of DoS attack with some unknown special and big scripts.\r\n\r\n----------------\r\n\r\nThe second one redefines SCRIPT_VERIFY_STRICTENC to require that only compressed keys are allowed in segwit scripts. This is a policy only and non-compressed keys are still valid in a block. \r\n\r\nWe can't softfork non-compressed keys away for non-segwit scripts since there are many UTXOs being stored this way. Since segwit is a completely new script system, there is no strong reasons to support non-compressed keys.",
      "created_at" : "2016-09-09T10:19:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-245876000",
      "id" : 245876000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-09T10:19:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/245876000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "(Ready for review)\r\n\r\nThis PR includes several policy rules for segwit:\r\n\r\n1. It detects some types of bad witness injected by malicious relay nodes, before the fee and SigOpCount is calculated. All the rules examined are consensus critical. Nodes sending violating transactions will be banned. See also: #8279, #8525\r\n\r\n2. It a policy limit for P2WSH, with witnessScript <= 3600 bytes, witness stack item size <= 80 bytes, and witness stack items <= 100\r\n3600 bytes witnessScript and 100 stack items are adequate for a n-of-100 multisig using OP_CHECKSIG, OP_ADD, and OP_EQUAL\r\nThe max size for ECDSA signature is 73 bytes and nothing should use more than that with the current scripting language.\r\nThis is to prevent abuse of witness space, and reduce the risks of DoS attack with some unknown special and big scripts.\r\nAlternative to #8685\r\n\r\n3. It redefines SCRIPT_VERIFY_STRICTENC to require that only compressed keys are allowed in segwit scripts. This is a policy only and non-compressed keys are still valid in a block.\r\nWe can't softfork non-compressed keys away for non-segwit scripts since there are many UTXOs being stored this way. Since segwit is a completely new script system, there is no strong reasons to support non-compressed keys.\r\n\r\n4. As a consequence of 3, addwitnessaddress should not return a witness address if the key is an uncompressed one.",
      "created_at" : "2016-09-09T20:42:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-246033843",
      "id" : 246033843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-09T20:42:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246033843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2016-09-13T08:03:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-246606041",
      "id" : 246606041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-13T08:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246606041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649160?v=3",
         "events_url" : "https://api.github.com/users/rubensayshi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rubensayshi/followers",
         "following_url" : "https://api.github.com/users/rubensayshi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rubensayshi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rubensayshi",
         "id" : 649160,
         "login" : "rubensayshi",
         "organizations_url" : "https://api.github.com/users/rubensayshi/orgs",
         "received_events_url" : "https://api.github.com/users/rubensayshi/received_events",
         "repos_url" : "https://api.github.com/users/rubensayshi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rubensayshi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rubensayshi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rubensayshi"
      }
   },
   {
      "body" : "Tested ACK 603fa20\r\n",
      "created_at" : "2016-09-13T14:55:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-246709281",
      "id" : 246709281,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-13T14:55:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246709281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78613491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78613491"
         }
      },
      "body" : "Please describe this enum value in the comment above",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-13T18:08:45Z",
      "diff_hunk" : "@@ -68,6 +74,24 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnes\n      */\n bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs);\n \n+/**\n+ * This is to analyse witness-bearing transactions to identify maliciously malleated witness, especially with\n+ * bloated witness that may trigger fee/sigop policy rejection.\n+ * TX_MAYBE_OK is returned if the transaction superficially looks ok\n+ * TX_BAD_WITNESS is returned if the transaction is consensus-invalid only due to incorrect witness\n+ *   -- DoS ban but corruption possible\n+ * TX_BAD_P2SH is returned if the transaction is consensus-invalid not due to bad P2SH scriptSig\n+ *   -- DoS ban and not corruption possible\n+ */\n+enum BadTransaction\n+{\n+    TX_MAYBE_OK = 0,\n+    TX_BAD_WITNESS = 1,\n+    TX_BAD_P2SH = 2,\n+    TX_NONSTD_BIG_P2WSH = 3,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78613491",
      "id" : 78613491,
      "original_commit_id" : "603fa2071ff61b6c4b6e66e1bfbdc54657fa076c",
      "original_position" : 31,
      "path" : "src/policy/policy.h",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78613491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78614116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78614116"
         }
      },
      "body" : "/must/can/ ?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-13T18:12:13Z",
      "diff_hunk" : "@@ -154,6 +154,123 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    BadTransaction ret = TX_MAYBE_OK;\n+    if (tx.IsCoinBase())\n+        return ret; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+                return TX_BAD_WITNESS;\n+\n+            // Witness for P2WPKH must have 2 stack items. Pubkey must match the witness program.\n+            // Signature must be <= 73 bytes (BIP66). Since signature size is variable, it is not impossible to bloat a\n+            // 70-byte signature to 73-byte and trigger fee rejection for marginal cases but the impact is negligible.\n+            if (witnessversion == 0 && witnessprogram.size() == 20) {\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                    return TX_BAD_WITNESS;\n+                std::vector<unsigned char> hashPubKey(20);\n+                std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73)\n+                    return TX_BAD_WITNESS;\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return TX_BAD_WITNESS;\n+            }\n+\n+            // P2WSH requires at least 1 witness stack item but we already know the witness is not empty.\n+            // Make sure the witnessScript size is <= 10000 bytes (MAX_SCRIPT_SIZE) and matches witness program.\n+            // Max standard witnessScript size is 3600 bytes\n+            if (witnessversion == 0 && witnessprogram.size() == 32) {\n+                CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+                uint256 hashWitnessScript;\n+                if (witnessScript.size() > MAX_SCRIPT_SIZE)\n+                    return TX_BAD_WITNESS;\n+                if (witnessScript.size() > MAX_STANDARD_P2WSH_SCRIPT_SIZE)\n+                    ret = TX_NONSTD_BIG_P2WSH;\n+                CSHA256().Write(begin_ptr(witnessScript), witnessScript.size()).Finalize(hashWitnessScript.begin());\n+                if (memcmp(hashWitnessScript.begin(), &witnessprogram[0], 32))\n+                    return TX_BAD_WITNESS;\n+\n+                /*\n+                 * Count the witness stack size without the witnessScript.\n+                 *\n+                 * Max standard witness stack size is 100.\n+                 * Due to the implicit CLEANSTACK rule and nOpCount limit of 201, the maximum consensus valid\n+                 * witness stack size is 412, with 9 OP_CHECKMULTISIGVERIFY and 12 OP_2DROP in witnessScript.\n+                 * Anything bigger than 412 must not leave a single true value after execution.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78614116",
      "id" : 78614116,
      "original_commit_id" : "603fa2071ff61b6c4b6e66e1bfbdc54657fa076c",
      "original_position" : 77,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78614116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78617806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78617806"
         }
      },
      "body" : "Could you spell out the math here? I'm not a Script wizard and can't figure what's being asserted here.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-13T18:33:05Z",
      "diff_hunk" : "@@ -154,6 +154,123 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    BadTransaction ret = TX_MAYBE_OK;\n+    if (tx.IsCoinBase())\n+        return ret; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+                return TX_BAD_WITNESS;\n+\n+            // Witness for P2WPKH must have 2 stack items. Pubkey must match the witness program.\n+            // Signature must be <= 73 bytes (BIP66). Since signature size is variable, it is not impossible to bloat a\n+            // 70-byte signature to 73-byte and trigger fee rejection for marginal cases but the impact is negligible.\n+            if (witnessversion == 0 && witnessprogram.size() == 20) {\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                    return TX_BAD_WITNESS;\n+                std::vector<unsigned char> hashPubKey(20);\n+                std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73)\n+                    return TX_BAD_WITNESS;\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return TX_BAD_WITNESS;\n+            }\n+\n+            // P2WSH requires at least 1 witness stack item but we already know the witness is not empty.\n+            // Make sure the witnessScript size is <= 10000 bytes (MAX_SCRIPT_SIZE) and matches witness program.\n+            // Max standard witnessScript size is 3600 bytes\n+            if (witnessversion == 0 && witnessprogram.size() == 32) {\n+                CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+                uint256 hashWitnessScript;\n+                if (witnessScript.size() > MAX_SCRIPT_SIZE)\n+                    return TX_BAD_WITNESS;\n+                if (witnessScript.size() > MAX_STANDARD_P2WSH_SCRIPT_SIZE)\n+                    ret = TX_NONSTD_BIG_P2WSH;\n+                CSHA256().Write(begin_ptr(witnessScript), witnessScript.size()).Finalize(hashWitnessScript.begin());\n+                if (memcmp(hashWitnessScript.begin(), &witnessprogram[0], 32))\n+                    return TX_BAD_WITNESS;\n+\n+                /*\n+                 * Count the witness stack size without the witnessScript.\n+                 *\n+                 * Max standard witness stack size is 100.\n+                 * Due to the implicit CLEANSTACK rule and nOpCount limit of 201, the maximum consensus valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78617806",
      "id" : 78617806,
      "original_commit_id" : "603fa2071ff61b6c4b6e66e1bfbdc54657fa076c",
      "original_position" : 75,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78617806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78627627"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78627627"
         }
      },
      "body" : "There is a 201 op limit in a script. Except CHECKMULTISIG(CMS), 2DROP is the most efficient code to clean up the stack (1 opcode to clean 2 items). A 20-of-20 CMS will clean up 1 dummy +20 sig + 1 nSig + 20 key + 1nKey = 43 items, and it is equivalent to 21 ops, so it's more efficient (1 to 2.05 items). \r\n\r\nTherefore, I could have a witnessScript = 9 CMSV + 12 2DROP, which is exactly 201 ops. They will clean up 411 items. So when I put one more item the script to evaluate to true. (total = 412)",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-13T19:28:40Z",
      "diff_hunk" : "@@ -154,6 +154,123 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    BadTransaction ret = TX_MAYBE_OK;\n+    if (tx.IsCoinBase())\n+        return ret; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+                return TX_BAD_WITNESS;\n+\n+            // Witness for P2WPKH must have 2 stack items. Pubkey must match the witness program.\n+            // Signature must be <= 73 bytes (BIP66). Since signature size is variable, it is not impossible to bloat a\n+            // 70-byte signature to 73-byte and trigger fee rejection for marginal cases but the impact is negligible.\n+            if (witnessversion == 0 && witnessprogram.size() == 20) {\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                    return TX_BAD_WITNESS;\n+                std::vector<unsigned char> hashPubKey(20);\n+                std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73)\n+                    return TX_BAD_WITNESS;\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return TX_BAD_WITNESS;\n+            }\n+\n+            // P2WSH requires at least 1 witness stack item but we already know the witness is not empty.\n+            // Make sure the witnessScript size is <= 10000 bytes (MAX_SCRIPT_SIZE) and matches witness program.\n+            // Max standard witnessScript size is 3600 bytes\n+            if (witnessversion == 0 && witnessprogram.size() == 32) {\n+                CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+                uint256 hashWitnessScript;\n+                if (witnessScript.size() > MAX_SCRIPT_SIZE)\n+                    return TX_BAD_WITNESS;\n+                if (witnessScript.size() > MAX_STANDARD_P2WSH_SCRIPT_SIZE)\n+                    ret = TX_NONSTD_BIG_P2WSH;\n+                CSHA256().Write(begin_ptr(witnessScript), witnessScript.size()).Finalize(hashWitnessScript.begin());\n+                if (memcmp(hashWitnessScript.begin(), &witnessprogram[0], 32))\n+                    return TX_BAD_WITNESS;\n+\n+                /*\n+                 * Count the witness stack size without the witnessScript.\n+                 *\n+                 * Max standard witness stack size is 100.\n+                 * Due to the implicit CLEANSTACK rule and nOpCount limit of 201, the maximum consensus valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78627627",
      "id" : 78627627,
      "original_commit_id" : "603fa2071ff61b6c4b6e66e1bfbdc54657fa076c",
      "original_position" : 75,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78627627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78629656"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78629656"
         }
      },
      "body" : "Sorry, I think the max is 100 CHECKMULTISIGVERIFY for 502 items. Will correct it or just use a bigger number like 1000. The propose is just anti-DoS so the actual number is not very important",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-13T19:41:51Z",
      "diff_hunk" : "@@ -154,6 +154,123 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    BadTransaction ret = TX_MAYBE_OK;\n+    if (tx.IsCoinBase())\n+        return ret; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())\n+                return TX_BAD_WITNESS;\n+\n+            // Witness for P2WPKH must have 2 stack items. Pubkey must match the witness program.\n+            // Signature must be <= 73 bytes (BIP66). Since signature size is variable, it is not impossible to bloat a\n+            // 70-byte signature to 73-byte and trigger fee rejection for marginal cases but the impact is negligible.\n+            if (witnessversion == 0 && witnessprogram.size() == 20) {\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack.size() != 2)\n+                    return TX_BAD_WITNESS;\n+                std::vector<unsigned char> hashPubKey(20);\n+                std::vector<unsigned char> pubKey = tx.wit.vtxinwit[i].scriptWitness.stack[1];\n+                if (tx.wit.vtxinwit[i].scriptWitness.stack[0].size() > 73)\n+                    return TX_BAD_WITNESS;\n+                CHash160().Write(begin_ptr(pubKey), pubKey.size()).Finalize(begin_ptr(hashPubKey));\n+                if (hashPubKey != witnessprogram)\n+                    return TX_BAD_WITNESS;\n+            }\n+\n+            // P2WSH requires at least 1 witness stack item but we already know the witness is not empty.\n+            // Make sure the witnessScript size is <= 10000 bytes (MAX_SCRIPT_SIZE) and matches witness program.\n+            // Max standard witnessScript size is 3600 bytes\n+            if (witnessversion == 0 && witnessprogram.size() == 32) {\n+                CScript witnessScript = CScript(tx.wit.vtxinwit[i].scriptWitness.stack.back().begin(), tx.wit.vtxinwit[i].scriptWitness.stack.back().end());\n+                uint256 hashWitnessScript;\n+                if (witnessScript.size() > MAX_SCRIPT_SIZE)\n+                    return TX_BAD_WITNESS;\n+                if (witnessScript.size() > MAX_STANDARD_P2WSH_SCRIPT_SIZE)\n+                    ret = TX_NONSTD_BIG_P2WSH;\n+                CSHA256().Write(begin_ptr(witnessScript), witnessScript.size()).Finalize(hashWitnessScript.begin());\n+                if (memcmp(hashWitnessScript.begin(), &witnessprogram[0], 32))\n+                    return TX_BAD_WITNESS;\n+\n+                /*\n+                 * Count the witness stack size without the witnessScript.\n+                 *\n+                 * Max standard witness stack size is 100.\n+                 * Due to the implicit CLEANSTACK rule and nOpCount limit of 201, the maximum consensus valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r78629656",
      "id" : 78629656,
      "original_commit_id" : "603fa2071ff61b6c4b6e66e1bfbdc54657fa076c",
      "original_position" : 75,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78629656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "Comments added and max stack item calculation corrected.\r\n\r\nThere is a 201 nOpCount limit per script. n-of-m CHECKMULTISIG(VERIFY) is counted as m+1 nOp. 0-of-0 CHECKMULTISIG(VERIFY), despite totally useless, is valid and counts as 1 nOp. It removes 3 items from stack: the dummy item (must be 0 if NULLDUMMY is active), nSig (0 in this case), and nKey (also 0 in this case). This is the only way to remove more than 2 stack items with only 1 nOpCount.\r\n\r\nTherefore, the worst case is 201 CHECKMULTISIGVERIFY, which remove 603 zero-value items, plus 1 true-value item at the beginning of stack so the evaluation will be true.\r\n\r\nTherefore, if the stack size is above 604, we know that the evaluation must fail even without running the script, due to the implicit CLEANSTACK rule in segwit.\r\n\r\nThis example is demonstrated in p2p-segwit.py\r\n\r\n(Other opcodes remove 2 items at most, including 2DROP, CHECKSIGVERIFY, EQUALVERIFY, NUMEQUALVERIFY. Multisig configurations other than 0-of-0 are worse stack cleaner. For example, 1-of-1 will clean 5 items, but is counted as 2 nOp)",
      "created_at" : "2016-09-14T06:33:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-246919223",
      "id" : 246919223,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-14T06:33:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246919223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79279159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79279159"
         }
      },
      "body" : "I would do `if(witnessEnabled && !tx.wit.IsNull())`, as with it you can see what segwit is impacting by following where `witnessEnabled` is used. It makes review easier. (NIT)",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T08:22:16Z",
      "diff_hunk" : "@@ -1258,6 +1258,18 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n             return state.Invalid(false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n \n+        // Check for bad witness\n+        bool fNonStandardWitness = false;\n+        if (!tx.wit.IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79279159",
      "id" : 79279159,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 6,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 452685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79279159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79279293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79279293"
         }
      },
      "body" : "Better creating a new ScriptFlags rather than hijacking an existing one. That we you won't have to add a parameter to CheckPubkeyEncoding.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T08:31:02Z",
      "diff_hunk" : "@@ -941,7 +945,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         // Note how this makes the exact order of pubkey/signature evaluation\n                         // distinguishable by CHECKMULTISIG NOT if the STRICTENC flag is set.\n                         // See the script_(in)valid tests for details.\n-                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n+                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, sigversion, serror)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79279293",
      "id" : 79279293,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 30,
      "path" : "src/script/interpreter.cpp",
      "position" : 54,
      "pull_request_review_id" : 452685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79279293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79279815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79279815"
         }
      },
      "body" : "`&& !tx.wit.vtxinwit[i].IsNull()` is not needed, you do already the check above.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T09:02:24Z",
      "diff_hunk" : "@@ -154,6 +154,126 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    BadTransaction ret = TX_MAYBE_OK;\n+    if (tx.IsCoinBase())\n+        return ret; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79279815",
      "id" : 79279815,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 39,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 453233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79279815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79280619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79280619"
         }
      },
      "body" : "I would prefer you create a function for that, as you are repeating it twice.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T09:47:08Z",
      "diff_hunk" : "@@ -1045,6 +1049,18 @@ class Witnessifier : public boost::static_visitor<bool>\n                 result = scriptID;\n                 return true;\n             }\n+            txnouttype typ;\n+            std::vector<std::vector<unsigned char> > vSolutions;\n+            if (Solver(subscript, typ, vSolutions) && typ == TX_MULTISIG) {\n+                for (size_t i = 1; i < vSolutions.size() - 1; i++) {\n+                    if (vSolutions[i].size() != 33)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79280619",
      "id" : 79280619,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 453844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79280619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290457"
         }
      },
      "body" : "the types are different. One is CPubKey and one is std::vector",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T19:26:30Z",
      "diff_hunk" : "@@ -1045,6 +1049,18 @@ class Witnessifier : public boost::static_visitor<bool>\n                 result = scriptID;\n                 return true;\n             }\n+            txnouttype typ;\n+            std::vector<std::vector<unsigned char> > vSolutions;\n+            if (Solver(subscript, typ, vSolutions) && typ == TX_MULTISIG) {\n+                for (size_t i = 1; i < vSolutions.size() - 1; i++) {\n+                    if (vSolutions[i].size() != 33)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290457",
      "id" : 79290457,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 462436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290576"
         }
      },
      "body" : "Addressed with ec344d9",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T19:34:48Z",
      "diff_hunk" : "@@ -154,6 +154,126 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+BadTransaction IsBadWitness(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    BadTransaction ret = TX_MAYBE_OK;\n+    if (tx.IsCoinBase())\n+        return ret; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated. Also, before segwit\n+        // activation, it is valid to spend segwit outputs without witness and we are not sure what's happening.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {\n+            const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+            std::vector <std::vector<unsigned char>> vSolutions;\n+            txnouttype whichType;\n+            // get the scriptPubKey corresponding to this input:\n+            CScript prevScript = prev.scriptPubKey;\n+            Solver(prevScript, whichType, vSolutions);\n+\n+            if (whichType == TX_SCRIPTHASH) {\n+                std::vector <std::vector<unsigned char>> stack;\n+                // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n+                // into a stack. We do not check IsPushOnly nor compare the hash as these will be done later anyway.\n+                // If the check fails at this stage, we know that this txid must be a bad one.\n+                if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SIGVERSION_BASE))\n+                    return TX_BAD_P2SH;\n+                if (stack.empty())\n+                    return TX_BAD_P2SH;\n+                prevScript = CScript(stack.back().begin(), stack.back().end());\n+            }\n+\n+            int witnessversion = 0;\n+            std::vector<unsigned char> witnessprogram;\n+\n+            // Non-witness program must not be associated with any witness\n+            if (!prevScript.IsWitnessProgram(witnessversion, witnessprogram) && !tx.wit.vtxinwit[i].IsNull())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290576",
      "id" : 79290576,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 39,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 462551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290578"
         }
      },
      "body" : "Addressed with ec344d9",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T19:34:56Z",
      "diff_hunk" : "@@ -1258,6 +1258,18 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n             return state.Invalid(false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n \n+        // Check for bad witness\n+        bool fNonStandardWitness = false;\n+        if (!tx.wit.IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290578",
      "id" : 79290578,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 6,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 462552,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290837"
         }
      },
      "body" : "Even with a new flag, the sigversion is still required in CheckPubkeyEncoding because applicability of the rules is based on the type of tx (base vs witness), not the flag.\r\n\r\nHowever, a new error message type is added to correctly describe this error. (516f9f1)",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-17T19:52:58Z",
      "diff_hunk" : "@@ -941,7 +945,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         // Note how this makes the exact order of pubkey/signature evaluation\n                         // distinguishable by CHECKMULTISIG NOT if the STRICTENC flag is set.\n                         // See the script_(in)valid tests for details.\n-                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n+                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, sigversion, serror)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79290837",
      "id" : 79290837,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 30,
      "path" : "src/script/interpreter.cpp",
      "position" : 54,
      "pull_request_review_id" : 462793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79290837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79295079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79295079"
         }
      },
      "body" : "Another reason to use a flag would be to enforce this rule at policy level for old type the other sigversion. But maybe this would need to be in another PR.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-18T01:10:52Z",
      "diff_hunk" : "@@ -941,7 +945,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         // Note how this makes the exact order of pubkey/signature evaluation\n                         // distinguishable by CHECKMULTISIG NOT if the STRICTENC flag is set.\n                         // See the script_(in)valid tests for details.\n-                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n+                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, sigversion, serror)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79295079",
      "id" : 79295079,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 30,
      "path" : "src/script/interpreter.cpp",
      "position" : 54,
      "pull_request_review_id" : 466337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79295079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79295176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79295176"
         }
      },
      "body" : "I think you should add empty signature as standard signature.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-18T01:20:40Z",
      "diff_hunk" : "@@ -1045,6 +1049,18 @@ class Witnessifier : public boost::static_visitor<bool>\n                 result = scriptID;\n                 return true;\n             }\n+            txnouttype typ;\n+            std::vector<std::vector<unsigned char> > vSolutions;\n+            if (Solver(subscript, typ, vSolutions) && typ == TX_MULTISIG) {\n+                for (size_t i = 1; i < vSolutions.size() - 1; i++) {\n+                    if (vSolutions[i].size() != 33)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79295176",
      "id" : 79295176,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 466421,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79295176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79298672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79298672"
         }
      },
      "body" : "This is pub key, not signature.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-18T06:38:33Z",
      "diff_hunk" : "@@ -1045,6 +1049,18 @@ class Witnessifier : public boost::static_visitor<bool>\n                 result = scriptID;\n                 return true;\n             }\n+            txnouttype typ;\n+            std::vector<std::vector<unsigned char> > vSolutions;\n+            if (Solver(subscript, typ, vSolutions) && typ == TX_MULTISIG) {\n+                for (size_t i = 1; i < vSolutions.size() - 1; i++) {\n+                    if (vSolutions[i].size() != 33)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79298672",
      "id" : 79298672,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 469435,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79298672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79304615"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79304615"
         }
      },
      "body" : "Many people are still using and will use uncompressed keys. We could never have any policy to reject that",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-18T12:30:08Z",
      "diff_hunk" : "@@ -941,7 +945,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         // Note how this makes the exact order of pubkey/signature evaluation\n                         // distinguishable by CHECKMULTISIG NOT if the STRICTENC flag is set.\n                         // See the script_(in)valid tests for details.\n-                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n+                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, sigversion, serror)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79304615",
      "id" : 79304615,
      "original_commit_id" : "9199ff2ba920f610f6a5935df76afb30cc814f6b",
      "original_position" : 30,
      "path" : "src/script/interpreter.cpp",
      "position" : 54,
      "pull_request_review_id" : 474342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79304615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79305077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79305077"
         }
      },
      "body" : "Does it makes sense to check `flags & SCRIPT_VERIFY_STRICTENC` at all ? if segwit is activated (and it is if the sigversion is SIGVERSION_WITNESS_V0 ) then SCRIPT_VERIFY_STRICTENC is enforced anyway by BIP66. To be sure it is always the case, we can add `flags |= SCRIPT_VERIFY_DERSIG` at https://github.com/bitcoin/bitcoin/blob/39ac1ec6426447b924052c2da3f80e0220c308c3/src/main.cpp#L2388\r\n\r\nIt would be an hard fork is there was a way to get an alt chain activating segwit before bip66... but I don't think it is reasonable to think it is possible now. If it was, it would be bigger problem.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-18T12:56:08Z",
      "diff_hunk" : "@@ -199,10 +199,14 @@ bool CheckSignatureEncoding(const vector<unsigned char> &vchSig, unsigned int fl\n     return true;\n }\n \n-bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {\n+bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, const SigVersion &sigversion, ScriptError* serror) {\n     if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && !IsCompressedOrUncompressedPubKey(vchSig)) {\n         return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n     }\n+    // Only compressed keys are accepted in segwit\n+    if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && sigversion == SIGVERSION_WITNESS_V0 && vchSig.size() != 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79305077",
      "id" : 79305077,
      "original_commit_id" : "516f9f114c1d3240470df536b72c717054f07c25",
      "original_position" : 10,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 474687,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79305077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79305473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79305473"
         }
      },
      "body" : "BIP66 enforced DERSIG, not STRICTENC. STRICTENC is a pure policy and will never be a consensus rule.\r\n\r\nEven in a parallel universe that DERSIG is enforced after WITNESS, they are still softforks. And this is actually impossible, since BIP9 will activate BIP66. Anyway, this is off-topic",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-18T13:16:48Z",
      "diff_hunk" : "@@ -199,10 +199,14 @@ bool CheckSignatureEncoding(const vector<unsigned char> &vchSig, unsigned int fl\n     return true;\n }\n \n-bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {\n+bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, const SigVersion &sigversion, ScriptError* serror) {\n     if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && !IsCompressedOrUncompressedPubKey(vchSig)) {\n         return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n     }\n+    // Only compressed keys are accepted in segwit\n+    if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && sigversion == SIGVERSION_WITNESS_V0 && vchSig.size() != 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79305473",
      "id" : 79305473,
      "original_commit_id" : "516f9f114c1d3240470df536b72c717054f07c25",
      "original_position" : 10,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 475004,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79305473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79322990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79322990"
         }
      },
      "body" : "oh indeed I always inverse them!",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-19T02:37:12Z",
      "diff_hunk" : "@@ -199,10 +199,14 @@ bool CheckSignatureEncoding(const vector<unsigned char> &vchSig, unsigned int fl\n     return true;\n }\n \n-bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {\n+bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, const SigVersion &sigversion, ScriptError* serror) {\n     if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && !IsCompressedOrUncompressedPubKey(vchSig)) {\n         return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n     }\n+    // Only compressed keys are accepted in segwit\n+    if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && sigversion == SIGVERSION_WITNESS_V0 && vchSig.size() != 33) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r79322990",
      "id" : 79322990,
      "original_commit_id" : "516f9f114c1d3240470df536b72c717054f07c25",
      "original_position" : 10,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 489368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79322990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "Rebased and squashed",
      "created_at" : "2016-09-23T09:59:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249151786",
      "id" : 249151786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-23T09:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249151786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r80267525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80267525"
         }
      },
      "body" : "nit: I wouldn't complain if you renamed vchSig to vchPubKey...",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-23T15:28:23Z",
      "diff_hunk" : "@@ -199,10 +199,14 @@ bool CheckSignatureEncoding(const vector<unsigned char> &vchSig, unsigned int fl\n     return true;\n }\n \n-bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {\n+bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, const SigVersion &sigversion, ScriptError* serror) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r80267525",
      "id" : 80267525,
      "original_commit_id" : "d216177332f75cbbf9138ccf79d24109adb37c20",
      "original_position" : 5,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 1350190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80267525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "tests are failing for some reason?",
      "created_at" : "2016-09-23T15:58:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249231788",
      "id" : 249231788,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-23T15:58:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249231788",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "@instagibbs , oh it failed the newly merged NULLDUMMY softfork. Will fix",
      "created_at" : "2016-09-23T16:19:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249236820",
      "id" : 249236820,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-23T16:19:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249236820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "Hmm, so I don't know if everyone is already sold on the approach here, but conceptually, I'm not sure the benefits outweigh the costs of introducing the BAD_WITNESS and BAD_P2SH checks with their associated DoS-banning.\r\n\r\nIn order for the banning to be a reasonable thing to do, it should really only occur for things that would be invalid-according-to-consensus, or else we'd risk partitioning some software off the network over differences in node policy.  So while I don't think it's likely, there are some negative consequences if somehow something gets flagged as BAD_WITNESS that actually passes consensus (eg the script with higher stack:opcount ratio @jl2012 came up with while discussing this above https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-246919223).\r\n\r\nWhereas if we get this right, then the benefit is merely that nodes have one fewer method to waste our resources (after #8525, there should be no network-wide effects of an attacker relaying malleated segwit transactions).  Given the wide variety of other ways our resources can be wasted, this seems like a small benefit for the complexity that would be introduced (as well as code and logic duplication -- eg I believe the BAD_P2SH+subsequent ban behavior is duplicative of the existing ban-behavior if a peer sends us an invalid P2SH?).\r\n\r\nI suggest that we drop the node-banning behavior in this PR, and simplify IsBadWitness to only check for the proposed policy changes (number of witness program script elements, size of witness script, size of script elements), rather than look for harder-to-reason-about characteristics that we think the consensus rules imply.  This would substantially reduce the negative consequences just in case we got something wrong and reduce the amount of code in this PR, which taken together would make the changes easier to review.\r\n\r\nThen in the future, I'd suggest we pursue something in the direction of #8593, where we could try to limit peer misbehavior using our existing calls into consensus functions, and in particular without introducing a lot of new code that tries to re-implement consensus calculations.\r\n\r\nAnyway, I know there are some ACKs here already, so if everyone is comfortable with this code and approach as-is then I don't object too strongly; I just wanted to lay out my reasons for preferring an alternate approach.",
      "created_at" : "2016-09-23T19:21:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249280354",
      "id" : 249280354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-23T19:21:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249280354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar I think your suggestions make sense as long as #8525 does what it is supposed to do. Especially, since `IsStandardTx` may reject a tx based on its weight, and this is done before the IsBadWitness check, the IsBadWitness is actually not very useful (unless we reject based on the witness-stripped size).\r\n\r\nAnyway, I have created a policy-only version based on your suggestions, which has a much smaller diff:\r\nhttps://github.com/jl2012/bitcoin/commits/badwitnesscheck-new\r\nIf there is no objection I will move on to this direction\r\n\r\n(p.s. you may notice that this PR was proposed before #8525, and therefore I was not aware of other approaches to fix this problem)",
      "created_at" : "2016-09-24T08:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249353755",
      "id" : 249353755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-24T08:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249353755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@btcdrak @sipa @instagibbs @rubensayshi @NicolasDorier As you have reviewed this PR, do you agree with @sdaftuar 's https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249280354 to remove the DoS-banning parts in this PR?\r\n\r\nI have created a policy-only version, which has a much smaller diff:\r\nhttps://github.com/jl2012/bitcoin/commits/badwitnesscheck-new\r\nIf it's ok I will replace it so we could move on.",
      "created_at" : "2016-09-25T18:00:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249435981",
      "id" : 249435981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-25T18:00:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249435981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@jl2012 I like less code when possible, and DoS banning should indeed be done sparingly. concept ACK on the alternative version.",
      "created_at" : "2016-09-26T20:13:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249683696",
      "id" : 249683696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-26T20:13:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249683696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "@jl2012 utACK f55cee5b91c9dfe11437e647e69046e64cbf851c (from https://github.com/jl2012/bitcoin/commits/badwitnesscheck-new)",
      "created_at" : "2016-09-27T15:24:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249898955",
      "id" : 249898955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-27T15:24:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249898955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "replaced with f55cee5 (policy only)",
      "created_at" : "2016-09-27T15:46:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249906403",
      "id" : 249906403,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-27T15:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249906403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "Prefer the policy only version.\r\n\r\nutACK f55cee5",
      "created_at" : "2016-09-27T16:04:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249912250",
      "id" : 249912250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-27T16:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249912250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "utACK ~~https://github.com/bitcoin/bitcoin/pull/8499/commits/fdb47150c55bcaf0f0569a77ece0abacadbfef38~~ https://github.com/bitcoin/bitcoin/commit/f55cee5b91c9dfe11437e647e69046e64cbf851c",
      "created_at" : "2016-09-27T18:54:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-249961973",
      "id" : 249961973,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T12:32:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249961973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r80835992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80835992"
         }
      },
      "body" : "nit: would prefer early exit of this iteration with `continue;` it makes review easier by not having to check what happen if it is indeed null.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-28T02:57:26Z",
      "diff_hunk" : "@@ -154,6 +154,60 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r80835992",
      "id" : 80835992,
      "original_commit_id" : "fdb47150c55bcaf0f0569a77ece0abacadbfef38",
      "original_position" : 13,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 1861919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80835992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "utACK fdb47150c55bcaf0f0569a77ece0abacadbfef38",
      "created_at" : "2016-09-28T03:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250060031",
      "id" : 250060031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T03:04:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250060031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "utACK, testing now on testnet with RequireStandard = true;",
      "created_at" : "2016-09-28T09:22:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250116392",
      "id" : 250116392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T09:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250116392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "utACK f55cee5",
      "created_at" : "2016-09-28T10:14:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250127590",
      "id" : 250127590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T10:14:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250127590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r80998469"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80998469"
         }
      },
      "body" : "Why is this being checked after transaction validation?  I thought that the goal of these segwit policy limits was to mitigate potential DoS risk from unwieldy scripts that we haven't thought of; is there any downside to having this happen before transaction validation?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-28T19:30:07Z",
      "diff_hunk" : "@@ -1520,6 +1520,10 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n                 __func__, hash.ToString(), FormatStateMessage(state));\n         }\n \n+        // Check for non-standard witness in P2WSH after transaction is validated",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r80998469",
      "id" : 80998469,
      "original_commit_id" : "fdb47150c55bcaf0f0569a77ece0abacadbfef38",
      "original_position" : 4,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2011786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80998469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81004284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81004284"
         }
      },
      "body" : "It's about the #8279. But since this is just one of the many ways to mutate the witness and we won't ban the peer anyway, maybe it makes more sense to move it before validation and after `AreInputsStandard`?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-28T20:00:59Z",
      "diff_hunk" : "@@ -1520,6 +1520,10 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n                 __func__, hash.ToString(), FormatStateMessage(state));\n         }\n \n+        // Check for non-standard witness in P2WSH after transaction is validated",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81004284",
      "id" : 81004284,
      "original_commit_id" : "fdb47150c55bcaf0f0569a77ece0abacadbfef38",
      "original_position" : 4,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2017227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81004284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "The first and last commits seem reasonable to me (haven't reviewed in detail yet), but I'm not sure about actually enforcing compressed pubkeys as a standardness rule. In general, I think we should be considering standardness rules only for a) things which we intend to soft fork or b) things which we are afraid of DoS risks from.\r\nObviously uncompressed pubkeys dont particularly fit into category (b), but I'm not sure about (a). I'm really not a fan of the idea of soft-forking out something like uncompressed pubkeys in a future soft-fork: we dont really have strong motivation to do it and it risks (though not a ton, due to policy rules today) UTXOs becomming unspendable. IMO it should either be a day-1 part of segwit (I dont have a strong opinion, but I think consensus would be that this is maybe a bit late) or not happen right now.",
      "created_at" : "2016-09-28T20:16:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250286720",
      "id" : 250286720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T20:16:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250286720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "On that note, could we get a justification for this PR's commits up at the top? The linked one is out of date now anyways. Makes reviewing much easier.",
      "created_at" : "2016-09-28T20:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250288021",
      "id" : 250288021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T20:22:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250288021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "@TheBlueMatt The compressed pubkeys rule is only applied to segwit scripts,\nso if it is nonstandard from the start it's absolutely potentially\nsoftforkable in the future.\n",
      "created_at" : "2016-09-28T20:28:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250289794",
      "id" : 250289794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-28T20:28:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250289794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "This PR includes several policy rules for segwit:\r\n\r\n- It implements a policy limit for P2WSH, with witnessScript <= 3600 bytes, witness stack item size <= 80 bytes, and witness stack items <= 100\r\n- 3600 bytes witnessScript and 100 stack items are adequate for a n-of-100 multisig using OP_CHECKSIG, OP_ADD, and OP_EQUAL\r\n- The max size for ECDSA signature is 73 bytes and nothing should use more than that with the current scripting language.\r\n- This is to prevent abuse of witness space, and reduce the risks of DoS attack with some unknown special and big scripts.\r\n- Alternative to #8685\r\n\r\n- It redefines SCRIPT_VERIFY_STRICTENC to require that only compressed keys are allowed in segwit scripts. This is a policy only and non-compressed keys are still valid in a block.\r\n- We can't softfork non-compressed keys away for non-segwit scripts since there are many UTXOs being stored this way. Since segwit is a completely new script system, there is no strong reasons to support non-compressed keys.\r\n- If we implement it as a policy now, we may have a softfork later to disable non-compressed keys in segwit.\r\n- To avoid creation of unspendable address, addwitnessaddress should not return a witness address if the key is an uncompressed one.",
      "created_at" : "2016-09-29T04:44:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250369017",
      "id" : 250369017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T04:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250369017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@sipa I do not agree that it is a good candidate for soft-fork in the future. There is little direct benifit from doing so and \"it was always policy in Bitcoin Core to not let you spend this\" is not sufficient to make some not-insane outputs unspendable to me. I'm happy to be overruled on this (because I dont think its a huge deal), but I would not advocate for such a soft-fork in the future.",
      "created_at" : "2016-09-29T13:41:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250469112",
      "id" : 250469112,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T13:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250469112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "2 commits added. 620fee0 is a minor fix for the test. 60ea68a is moving IsWitnessStandard before validation, as suggested by @sdaftuar. If we think it's a better idea, I will squash it",
      "created_at" : "2016-09-29T15:03:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250493182",
      "id" : 250493182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T15:03:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250493182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@TheBlueMatt I don't see any reason why we'd continue to support\nuncompressed pubkeys. They're a waste of space for no benefit.\n\nIt would indeed have been better to include this in segwit's proposed\nconsensus rules, but it's worth changing at this point I think. If we don't\nuse this opportunity now to get rid of them, we probably won't ever be\nuntil a new script revision entirely.\n",
      "created_at" : "2016-09-29T15:18:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250497587",
      "id" : 250497587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T15:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250497587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa agreed on everything there except that its reasonable to soft-fork them out if we do make it non-standard now. It would absolutely be wonderful to get rid of them in segwit on day 1, but if we think its too late for that, then I think its too late, full stop. In any case, I think its marginally setting the wrong precedent (I dont think policy is a strong enough \"you may not use this\" flag to make UTXOs unspenable in non-obvious ways (ie not things like NOPcodes, etc) unless there is a really significant reason to), but if others actually feel strongly, then OK.",
      "created_at" : "2016-09-29T15:42:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250504499",
      "id" : 250504499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T15:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250504499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Revised the new commits a bit. Now the tests in 0c4ef07 shows that moving IsWitnessStandard before validation wouldn't blind a node to a transaction due to #8525 ",
      "created_at" : "2016-09-29T15:46:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250505917",
      "id" : 250505917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T15:46:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250505917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@sipa @TheBlueMatt I don't have strong opinion about having the uncompressed key policy. Maybe one reason for doing it now is to procrastinate the debate about the softfork. I don't think this is a big deal and we should try to decide in today's meeting.",
      "created_at" : "2016-09-29T15:53:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250507939",
      "id" : 250507939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T15:53:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250507939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "I prefer not allowing uncompressed keys with segwit.\r\n\r\nWith normal transactions there's the argument that uncompressed keys have to remain supported forever, because there may be old time-locked transactions that use them.\r\n\r\nBy never allowing them for segwit that won't be an issue there.\r\n\r\nPolicy is not 100% strong but experience has shown that it is an effective way to discourage people from trying it in the first place.",
      "created_at" : "2016-09-29T16:00:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250509968",
      "id" : 250509968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T16:00:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250509968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@TheBlueMatt \r\n\r\nLook at p2sh usage-- there is no ongoing uncompressed pubkey usage there. I expect effectively none for segwit. But because there has been uncompressed pubkey usage in p2sh, we're stuck forever supporting it there and taking the costs of doing so.  Several weeks ago we wanted to simply bar uncompressed keys with segwit and you argued that it was too late to add a consensus rule. OKAY, so a compromise-- make it non-standard and state outright that it will be soft-forked out later. And now you're arguing that it should be consensus enforced? :-/\r\n\r\nThe \"don't use it\" comes not primarily from the standardness but from the widespread obvious intent to remove it. Making it non-standard makes the next step safe from griefers, and expresses more clearly what not to use. And every soft-fork takes some pattern of bytes from only-prohibited-by-policy to prohibited.",
      "created_at" : "2016-09-29T17:06:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250529406",
      "id" : 250529406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-29T17:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250529406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81333772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81333772"
         }
      },
      "body" : "Agree with @NicolasDorier ",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-30T13:01:47Z",
      "diff_hunk" : "@@ -154,6 +154,60 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81333772",
      "id" : 81333772,
      "original_commit_id" : "fdb47150c55bcaf0f0569a77ece0abacadbfef38",
      "original_position" : 13,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 2321151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81333772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "body" : "Unless there is a compelling use-case(or expectation thereof) for uncompressed pubkeys in Segwit, I think policy and eventual softfork is desired.",
      "created_at" : "2016-09-30T13:23:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250743092",
      "id" : 250743092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-30T13:23:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250743092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81345799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81345799"
         }
      },
      "body" : "done with 8d7146c",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-09-30T14:10:05Z",
      "diff_hunk" : "@@ -154,6 +154,60 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (!tx.wit.vtxinwit[i].IsNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81345799",
      "id" : 81345799,
      "original_commit_id" : "fdb47150c55bcaf0f0569a77ece0abacadbfef38",
      "original_position" : 13,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 2332815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81345799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "I would also prefer not allowing uncompressed keys with segwit as consensus rule from the start. I disagree it is too late for that. But if other people do, I don't mind having it as a default policy (I don't really like saying \"standardness rule\").\r\nFast review ACK.",
      "created_at" : "2016-09-30T15:21:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250773012",
      "id" : 250773012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-30T15:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250773012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "ACK.\r\n\r\nFYI I was able to hack up a test to check that uncompressed pubkeys with segwit are valid in blocks, though not accepted under default policy.\r\n\r\nRegarding the uncompressed pubkey discussion: if people think we might want to softfork out uncompressed pubkeys in segwit altogether in the future, then perhaps it's worth considering whether the policy should be implemented with its own validation flag rather than an extra behavior of STRICTENC?  (I have no opinion on this myself.)",
      "created_at" : "2016-09-30T20:10:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250840634",
      "id" : 250840634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-09-30T20:10:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250840634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "I have a scenario but haven't tested. I have an used uncompressed key in my wallet, say 0x04aabbccddeeff... . Someone finds that on the blockchain, and without asking me he tries to send a few mBTC to scriptPubKey = 0x00 Hash160(0x04aabbccddeeff...), would that show up in the balance of my account and would my wallet keep trying to spending it? If yes we need more fixes for the wallet",
      "created_at" : "2016-10-01T02:59:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250888504",
      "id" : 250888504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-01T02:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250888504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "Added a new flag for compressed key policy and rebased",
      "created_at" : "2016-10-01T03:39:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250890012",
      "id" : 250890012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-01T03:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250890012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "cheers\n\nOn 01/10/2016, Johnson Lau <notifications@github.com> wrote:\n> Added a new flag for compressed key policy and rebased\n>\n> --\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250890012\n\n\n-- \nwaxmigs2902@gmail.com\nwaxmiguel@mail.ru\nwaxmiguel@bitrix24.com\njmiguel2902@outlook.com\n",
      "created_at" : "2016-10-01T06:28:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250895750",
      "id" : 250895750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-01T06:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250895750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15656017?v=3",
         "events_url" : "https://api.github.com/users/waxmihs2902/events{/privacy}",
         "followers_url" : "https://api.github.com/users/waxmihs2902/followers",
         "following_url" : "https://api.github.com/users/waxmihs2902/following{/other_user}",
         "gists_url" : "https://api.github.com/users/waxmihs2902/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/waxmihs2902",
         "id" : 15656017,
         "login" : "waxmihs2902",
         "organizations_url" : "https://api.github.com/users/waxmihs2902/orgs",
         "received_events_url" : "https://api.github.com/users/waxmihs2902/received_events",
         "repos_url" : "https://api.github.com/users/waxmihs2902/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/waxmihs2902/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/waxmihs2902/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/waxmihs2902"
      }
   },
   {
      "body" : "fixed the issue I mentioned earlier (https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250888504) with 92e8bf8 . Squashed and rebased",
      "created_at" : "2016-10-01T16:09:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-250920587",
      "id" : 250920587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-01T16:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250920587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81452670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81452670"
         }
      },
      "body" : "I think you should keep the IsMine call.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-01T16:12:44Z",
      "diff_hunk" : "@@ -80,9 +88,8 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         CScriptID scriptID = CScriptID(hash);\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMine(keystore, subscript);\n-            if (ret == ISMINE_SPENDABLE)\n-                return ret;\n+            if (AreMultisigKeysCompressed(subscript))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81452670",
      "id" : 81452670,
      "original_commit_id" : "92e8bf8f96a8b8a7ac31f67256febed846911fc7",
      "original_position" : 35,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 2433904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81452670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81453178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81453178"
         }
      },
      "body" : "oh, you are right",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-01T16:28:06Z",
      "diff_hunk" : "@@ -80,9 +88,8 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         CScriptID scriptID = CScriptID(hash);\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMine(keystore, subscript);\n-            if (ret == ISMINE_SPENDABLE)\n-                return ret;\n+            if (AreMultisigKeysCompressed(subscript))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r81453178",
      "id" : 81453178,
      "original_commit_id" : "92e8bf8f96a8b8a7ac31f67256febed846911fc7",
      "original_position" : 35,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 2434366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81453178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "utACK 3a4048de42e351d302c202ee8879a8fd4706e7f2",
      "created_at" : "2016-10-05T15:13:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-251704577",
      "id" : 251704577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-05T15:13:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251704577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Added rpc tests by @sdaftuar, and some script tests",
      "created_at" : "2016-10-07T07:59:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252177071",
      "id" : 252177071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-07T07:59:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252177071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "tACK 137a84e (replicated it on NBitcoin https://github.com/MetacoSA/NBitcoin/commit/b7425bcc564f593e3c0156dc21e4520e96b2716b)",
      "created_at" : "2016-10-07T08:50:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252186467",
      "id" : 252186467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-07T08:50:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252186467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "(71cd2df) This PR includes several policy rules for segwit:\r\n\r\n- It implements a policy limit for P2WSH, with witnessScript <= 3600 bytes, witness stack item size <= 80 bytes, and witness stack items <= 100\r\n - 3600 bytes witnessScript and 100 stack items are adequate for a n-of-100 multisig using OP_CHECKSIG, OP_ADD, and OP_EQUAL\r\n - The max size for ECDSA signature is 73 bytes and nothing should use more than that with the current scripting language.\r\n - This is to prevent abuse of witness space, and reduce the risks of DoS attack with some unknown special and big scripts.\r\n\r\n- It creates a new verification flag SCRIPT_VERIFY_WITNESS_PUBKEYTYPE to require that only compressed keys are allowed in segwit scripts.\r\n - At this moment, it is a policy only and non-compressed keys are still valid in a block. \r\n - We can't softfork non-compressed keys away for non-segwit scripts since there are many UTXOs being stored this way. Since segwit is a completely new script system, there is no strong reasons to support non-compressed keys.\r\n - If we implement it as a policy now, we may have a softfork later to disable non-compressed keys in segwit.\r\n\r\n- To avoid creation of unspendable address, addwitnessaddress should not return a witness address if the key is an uncompressed one.\r\n\r\n- Bitcoin sent to a witness address with uncompressed keys should not be shown in the wallet balance. Signing is also disabled for such outputs.",
      "created_at" : "2016-10-08T11:48:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252420342",
      "id" : 252420342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-08T11:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252420342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "(**CAVEAT**: I need to confirm the exact state of the code. If I'm wrong, I'll come back and delete or edit out this comment.)\r\n\r\nHello. Just FYI, it's possible that, for now at least, this relay policy will break Armory. Right now, Armory supports only uncompressed keys for regular transactions. Compressed key support was going to be added eons ago but never happened. (Long story.) It's still in the cards. The problem is that it requires a major wallet refactor, meaning it could be awhile.\r\n\r\nI'm not trying to throw up a roadblock or anything like that. I'm just making an observation. Also, please keep in mind that I don't know what Armory does under the hood to support SegWit. It may be that it uses only compressed keys, hence my caveat at the top.",
      "created_at" : "2016-10-09T12:37:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252484132",
      "id" : 252484132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T12:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252484132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5931802?v=3",
         "events_url" : "https://api.github.com/users/droark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/droark/followers",
         "following_url" : "https://api.github.com/users/droark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/droark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/droark",
         "id" : 5931802,
         "login" : "droark",
         "organizations_url" : "https://api.github.com/users/droark/orgs",
         "received_events_url" : "https://api.github.com/users/droark/received_events",
         "repos_url" : "https://api.github.com/users/droark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/droark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/droark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/droark"
      }
   },
   {
      "body" : "@droark This PR would indeed break Armory. We have discussed this on the IRC channel and there is already a solution in the works. The uncompressed keys will be dynamically converted to compressed keys when segwit scripts are being created.",
      "created_at" : "2016-10-09T14:16:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252488898",
      "id" : 252488898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T14:16:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252488898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "@droark @achow101 The policy is for segwit txs only, and no existing released version of Armory support segwit. So any existing versions of Armory will work exactly as it works today, with or without this PR.\r\n\r\nTo support segwit, any existing wallets need some level of refactor anyway. Using uncompressed keys is a loss for users for absolutely no benefit. As an Armory user since 2012 I hope the Armory team could take this major update as an opportunity to support compressed key, at least in segwit.\r\n\r\n@achow101 I don't know how Armory's wallet exactly works but I could imagine that you will store and process the key uncompressed internally, and have one more step to compress it when generating the address. Since you need new address encoding and decoding codes anyway, this should be just a few lines of codes on top of that.",
      "created_at" : "2016-10-09T14:27:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252489492",
      "id" : 252489492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T14:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252489492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@jl2012 Current releases of Armory actually completely break with segwit because they read the block files from the disk. Our next release already has that part fixed.\r\n\r\nWith compressed keys, the plan is to store the keys uncompressed as we do now and then convert them to compressed for any segwit scripts. It is indeed just a few extra lines between getting the key and putting it into the script.",
      "created_at" : "2016-10-09T14:56:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252491203",
      "id" : 252491203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T14:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252491203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "@sipa @TheBlueMatt @laanwj @gmaxwell @jl2012  ~~Dropping uncompressed public key support with segwit is **dangerous** and can easily lead to people creating unspendable outputs, losing their money and being very upset.  Consider the following scenario:~~\r\n\r\n* ~~User generates a key/address pair with vanitygen, which uses uncompressed public keys.~~\r\n\r\n* ~~User creates a transaction with RPC 'createrawtransaction' spending to the uncompressed address, then signs and broadcasts the tx. The output of this transaction is now unspendable.~~\r\n\r\n",
      "created_at" : "2016-10-09T20:31:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252510661",
      "id" : 252510661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T22:16:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252510661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6071028?v=3",
         "events_url" : "https://api.github.com/users/mmgen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmgen/followers",
         "following_url" : "https://api.github.com/users/mmgen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmgen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmgen",
         "id" : 6071028,
         "login" : "mmgen",
         "organizations_url" : "https://api.github.com/users/mmgen/orgs",
         "received_events_url" : "https://api.github.com/users/mmgen/received_events",
         "repos_url" : "https://api.github.com/users/mmgen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmgen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmgen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmgen"
      }
   },
   {
      "body" : "@mmgen : To make it clear this PR affects *ONLY* segwit outputs. Your wallet, which apparently does not yet support segwit, is totally unaffected.\r\n\r\nVanitygen (https://github.com/samr7/vanitygen), which is not updated since 2012, will definitely be unaffected.\r\n\r\nELI5:\r\n- If you are dealing with addresses starting with 1, you are definitely unaffected.\r\n- If you are dealing with addresses starting with 3 and you have not tried to do anything to support segwit, you are very very likely unaffected.\r\n- If you are dealing with raw scriptPubKey and you don't fully understand what you are doing, you are already at very high risks.",
      "created_at" : "2016-10-09T21:00:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252512374",
      "id" : 252512374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T21:00:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252512374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@jl2012 \r\n> To make it clear this PR affects ONLY segwit outputs.\r\n\r\n~~My wallet generates addresses using vanitygen and uses Bitcoin Core RPC as a backend for tx creation.  If Core's 'createrawtransaction' creates segwit outputs by default, then my wallet *is* affected, unless you can convice me otherwise.~~\r\n",
      "created_at" : "2016-10-09T21:33:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252514196",
      "id" : 252514196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T22:17:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252514196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6071028?v=3",
         "events_url" : "https://api.github.com/users/mmgen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmgen/followers",
         "following_url" : "https://api.github.com/users/mmgen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmgen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmgen",
         "id" : 6071028,
         "login" : "mmgen",
         "organizations_url" : "https://api.github.com/users/mmgen/orgs",
         "received_events_url" : "https://api.github.com/users/mmgen/received_events",
         "repos_url" : "https://api.github.com/users/mmgen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmgen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmgen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmgen"
      }
   },
   {
      "body" : "@mmgen `createrawtransaction` will not create transactions with segwit outputs. If an address begins with a 1 (as vanitygen addresses do), then it will create a P2PKH output because that is what an address beginning with a 1 means.",
      "created_at" : "2016-10-09T21:37:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252514470",
      "id" : 252514470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T21:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252514470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "@achow101 Thanks!  That answers my question and puts my fears to rest. ",
      "created_at" : "2016-10-09T21:41:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252514720",
      "id" : 252514720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T21:43:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252514720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6071028?v=3",
         "events_url" : "https://api.github.com/users/mmgen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmgen/followers",
         "following_url" : "https://api.github.com/users/mmgen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmgen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmgen",
         "id" : 6071028,
         "login" : "mmgen",
         "organizations_url" : "https://api.github.com/users/mmgen/orgs",
         "received_events_url" : "https://api.github.com/users/mmgen/received_events",
         "repos_url" : "https://api.github.com/users/mmgen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmgen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmgen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmgen"
      }
   },
   {
      "body" : "It isn't necessary to document that IMO. By definition, an address with a 1 means the output is P2PKH, an address with a 3 means the output is P2SH (with any script you want). Segwit outputs have no address so you should not confuse them with any address.",
      "created_at" : "2016-10-09T21:44:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252514935",
      "id" : 252514935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T21:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252514935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "@achow101 \r\n> Segwit outputs have no address\r\n\r\nInteresting.  How is that possible?  How does one receive payment then?\r\n\r\n",
      "created_at" : "2016-10-09T21:49:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252515231",
      "id" : 252515231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T21:50:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252515231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6071028?v=3",
         "events_url" : "https://api.github.com/users/mmgen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmgen/followers",
         "following_url" : "https://api.github.com/users/mmgen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmgen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmgen",
         "id" : 6071028,
         "login" : "mmgen",
         "organizations_url" : "https://api.github.com/users/mmgen/orgs",
         "received_events_url" : "https://api.github.com/users/mmgen/received_events",
         "repos_url" : "https://api.github.com/users/mmgen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmgen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmgen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmgen"
      }
   },
   {
      "body" : "@mmgen we're getting OT... If you have questions on segwit, go to the IRC channel.\r\n\r\nSegwit scripts are nested inside P2SH addresses. Like P2SH scripts, they can be put into the output script, but most wallets aren't going to recognize that so you have to do it by hand. Remember, addresses are just abstractions.",
      "created_at" : "2016-10-09T21:53:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252515463",
      "id" : 252515463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-09T21:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252515463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "@mmgen @achow101 : If you are using an \"1\" address, Bitcoin Core wallet will always send it in the old way, to a scriptPubKey that does not support segwit.\r\n\r\nHowever, I won't be surprised if some wallet devs will try to ignore the spec and convert an \"1\" address to a segwit output. This is extremely dangerous with or without this PR. There are thousands of ways people could do stupid things like this and it's very difficult to prevent it at protocol level. Please stop it if you find anyone trying to do this.",
      "created_at" : "2016-10-10T04:36:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252536979",
      "id" : 252536979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-10T04:36:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252536979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "@jl2012 Thanks much to both you and @achow101 for your help. My wallet deals only with '1' addresses, so it turns out I'm not affected.\r\n\r\nAnd of course, my concerns were silly in the first place, since obviously the core devs aren't going to introduce a change in the protocol that would turn existing addresses into 'black holes'.\r\n\r\nIt would be great if info like what you've provided in this discussion were published in a Segwit FAQ for the benefit of idiots like me. Or better yet, if someone created a Segwit Developer's Guide. I, for one, would like to make [my wallet](https://github.com/mmgen/mmgen/) segwit capable, but I don't know how to go about that or whether it will require major changes. The wallet is basically a front-end for Bitcoin Core, generating key/address pairs independently from a seed but using the Core wallet for tracking addresses and Core RPC commands for creating, signing and sending transactions.\r\n\r\n**Edit:** BIP 143 answered a lot of my questions.  A FAQ could point developers to BIPS 141, 143 and 144.",
      "created_at" : "2016-10-10T12:11:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252600696",
      "id" : 252600696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-15T09:34:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252600696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6071028?v=3",
         "events_url" : "https://api.github.com/users/mmgen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmgen/followers",
         "following_url" : "https://api.github.com/users/mmgen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmgen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmgen",
         "id" : 6071028,
         "login" : "mmgen",
         "organizations_url" : "https://api.github.com/users/mmgen/orgs",
         "received_events_url" : "https://api.github.com/users/mmgen/received_events",
         "repos_url" : "https://api.github.com/users/mmgen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmgen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmgen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmgen"
      }
   },
   {
      "body" : "Squashed and rebased",
      "created_at" : "2016-10-10T12:31:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252605029",
      "id" : 252605029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-10T12:31:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252605029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "re-utACK 69e8362\r\n\r\n> It would be great if info like what you've provided in this discussion were published in a Segwit FAQ for the benefit of idiots like me.\r\n\r\nYes, this would definitely be useful. There's a [segwit benefits](https://bitcoincore.org/en/2016/01/26/segwit-benefits/) FAQ, but no technical one.\r\nThere are so many things that even hard-core devs get confused once in a while. But indeed this is not the place for discussing this, maybe open an issue for the [bitcoincore.org](https://github.com/bitcoin-core/bitcoincore.org) site.\r\n",
      "created_at" : "2016-10-10T13:32:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252619287",
      "id" : 252619287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-10T13:42:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252619287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@mmgen @laanwj changes that happen here should probably be documented on https://bitcoincore.org/en/segwit_wallet_dev/ (and all the other stuff that has happened that isn't there). Also that page should be a bit more accessible.",
      "created_at" : "2016-10-10T13:38:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252620601",
      "id" : 252620601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-10T13:38:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252620601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "Thanks, @laanwj @achow101.  Will take under advisement.",
      "created_at" : "2016-10-10T14:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-252629674",
      "id" : 252629674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-10T14:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252629674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6071028?v=3",
         "events_url" : "https://api.github.com/users/mmgen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmgen/followers",
         "following_url" : "https://api.github.com/users/mmgen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmgen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmgen",
         "id" : 6071028,
         "login" : "mmgen",
         "organizations_url" : "https://api.github.com/users/mmgen/orgs",
         "received_events_url" : "https://api.github.com/users/mmgen/received_events",
         "repos_url" : "https://api.github.com/users/mmgen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmgen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmgen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmgen"
      }
   },
   {
      "body" : "A couple of issues with the wallet changes came up during in-person code review the last couple days; specifically there are some open issues with IsMine() and how addwitnessaddress() is using it that need to be addressed before this should be merged.  Patch in progress...",
      "created_at" : "2016-10-12T11:08:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-253184633",
      "id" : 253184633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-12T11:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/253184633",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "The commits e6110a0 and f275d55 are new to cover many edge cases we found, in order to make uncompressed keys in segwit scripts invisible in wallet for both spendable and watch-only keys",
      "created_at" : "2016-10-14T21:20:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-253922392",
      "id" : 253922392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-14T21:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/253922392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "More tests added to cover premature addwitnessaddress. addwitnessaddress should fail if the P2SH version of the given address is unknown",
      "created_at" : "2016-10-15T09:51:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-253974119",
      "id" : 253974119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-15T09:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/253974119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "utACK 61c15dfad3e94d2c30e2a6aee96971017c287ff1",
      "created_at" : "2016-10-16T13:18:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254046402",
      "id" : 254046402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-16T13:18:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254046402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83552722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83552722"
         }
      },
      "body" : "You either need to initialize this or check the return value of Solver.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T14:46:55Z",
      "diff_hunk" : "@@ -154,6 +154,61 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (tx.wit.vtxinwit[i].IsNull())\n+            continue;\n+\n+        const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector <std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83552722",
      "id" : 83552722,
      "original_commit_id" : "61c15dfad3e94d2c30e2a6aee96971017c287ff1",
      "original_position" : 19,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 4390366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83552722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553305"
         }
      },
      "body" : "Also, probably Solver should init the type to NONSTD always...",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T15:16:03Z",
      "diff_hunk" : "@@ -154,6 +154,61 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (tx.wit.vtxinwit[i].IsNull())\n+            continue;\n+\n+        const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector <std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553305",
      "id" : 83553305,
      "original_commit_id" : "61c15dfad3e94d2c30e2a6aee96971017c287ff1",
      "original_position" : 19,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 4390840,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553327"
         }
      },
      "body" : "Also, in this case, you're using Solver to just check IsPayToScriptHash(), so maybe do that.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T15:17:25Z",
      "diff_hunk" : "@@ -154,6 +154,61 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (tx.wit.vtxinwit[i].IsNull())\n+            continue;\n+\n+        const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector <std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553327",
      "id" : 83553327,
      "original_commit_id" : "61c15dfad3e94d2c30e2a6aee96971017c287ff1",
      "original_position" : 19,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 4390861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553947"
         }
      },
      "body" : "How does this protect against uncompressed pubkey matching?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T15:52:43Z",
      "diff_hunk" : "@@ -53,12 +65,35 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n+        if (sigversion != SIGVERSION_BASE && vSolutions[0].size() != 33) {\n+            isInvalid = true;\n+            return ISMINE_NO;\n+        }\n         if (keystore.HaveKey(keyID))\n             return ISMINE_SPENDABLE;\n         break;\n-    case TX_PUBKEYHASH:\n     case TX_WITNESS_V0_KEYHASH:\n+    {\n+        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+            // We do not support bare witness outputs unless the P2SH version of it would be\n+            // acceptable as well. This protects against matching before segwit activates or\n+            // uncompressed pubkey matching. This also applies to the P2WSH case.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553947",
      "id" : 83553947,
      "original_commit_id" : "e6110a0acba60b64a11c71e0cd1596f0455aa875",
      "original_position" : 46,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 4391392,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553980"
         }
      },
      "body" : "fixed and squashed",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T15:54:51Z",
      "diff_hunk" : "@@ -154,6 +154,61 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n     return true;\n }\n \n+bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n+{\n+    if (tx.IsCoinBase())\n+        return true; // Coinbases are skipped\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        // We don't care if witness for this input is empty, since it must not be bloated.\n+        // If the script is invalid without witness, it would be caught sooner or later during validation.\n+        if (tx.wit.vtxinwit[i].IsNull())\n+            continue;\n+\n+        const CTxOut &prev = mapInputs.GetOutputFor(tx.vin[i]);\n+\n+        std::vector <std::vector<unsigned char> > vSolutions;\n+        txnouttype whichType;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83553980",
      "id" : 83553980,
      "original_commit_id" : "61c15dfad3e94d2c30e2a6aee96971017c287ff1",
      "original_position" : 19,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_review_id" : 4391420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83553980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554018"
         }
      },
      "body" : "Because it means the keystore needs to contain a witness-specific CScript for this branch not to trigger.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T15:57:47Z",
      "diff_hunk" : "@@ -53,12 +65,35 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n+        if (sigversion != SIGVERSION_BASE && vSolutions[0].size() != 33) {\n+            isInvalid = true;\n+            return ISMINE_NO;\n+        }\n         if (keystore.HaveKey(keyID))\n             return ISMINE_SPENDABLE;\n         break;\n-    case TX_PUBKEYHASH:\n     case TX_WITNESS_V0_KEYHASH:\n+    {\n+        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+            // We do not support bare witness outputs unless the P2SH version of it would be\n+            // acceptable as well. This protects against matching before segwit activates or\n+            // uncompressed pubkey matching. This also applies to the P2WSH case.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554018",
      "id" : 83554018,
      "original_commit_id" : "f8679c03bec7c2cdcd0ef500e5bdf9a8e127f8d8",
      "original_position" : 46,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 4391455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554076"
         }
      },
      "body" : "If the P2SH version of a witness program is unknown, we don't consider that is \"mine\". That means the user has to explicitly import the P2SH version with importaddress or addwitnessaddress, and the latter is disabled by default before segwit activation. So it is not possible to confuse users by picking random pubkey on the blockchain and send some dust to a corresponding witness output, which is unspendable before segwit activation.\r\n\r\nBut I think now this is not for uncompressed key protection. The uncompressed key comment is just a leftover of an earlier version",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:01:22Z",
      "diff_hunk" : "@@ -53,12 +65,35 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n+        if (sigversion != SIGVERSION_BASE && vSolutions[0].size() != 33) {\n+            isInvalid = true;\n+            return ISMINE_NO;\n+        }\n         if (keystore.HaveKey(keyID))\n             return ISMINE_SPENDABLE;\n         break;\n-    case TX_PUBKEYHASH:\n     case TX_WITNESS_V0_KEYHASH:\n+    {\n+        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+            // We do not support bare witness outputs unless the P2SH version of it would be\n+            // acceptable as well. This protects against matching before segwit activates or\n+            // uncompressed pubkey matching. This also applies to the P2WSH case.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554076",
      "id" : 83554076,
      "original_commit_id" : "e6110a0acba60b64a11c71e0cd1596f0455aa875",
      "original_position" : 46,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 4391511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554112"
         }
      },
      "body" : "I think @instagibbs is correct that it is no longer needed for uncompressed pubkey matching. But this is still needed for my other reason provided.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:03:22Z",
      "diff_hunk" : "@@ -53,12 +65,35 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n+        if (sigversion != SIGVERSION_BASE && vSolutions[0].size() != 33) {\n+            isInvalid = true;\n+            return ISMINE_NO;\n+        }\n         if (keystore.HaveKey(keyID))\n             return ISMINE_SPENDABLE;\n         break;\n-    case TX_PUBKEYHASH:\n     case TX_WITNESS_V0_KEYHASH:\n+    {\n+        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+            // We do not support bare witness outputs unless the P2SH version of it would be\n+            // acceptable as well. This protects against matching before segwit activates or\n+            // uncompressed pubkey matching. This also applies to the P2WSH case.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554112",
      "id" : 83554112,
      "original_commit_id" : "f8679c03bec7c2cdcd0ef500e5bdf9a8e127f8d8",
      "original_position" : 46,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 4391537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554180"
         }
      },
      "body" : "Could we get an explanation of the different arguments here? `isInvalid` seems to have a particular meaning and use that is non-obvious, so it would benefit reviewers. ",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:06:22Z",
      "diff_hunk" : "@@ -28,7 +28,9 @@ enum isminetype\n /** used for bitflags of isminetype */\n typedef uint8_t isminefilter;\n \n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion = SIGVERSION_BASE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554180",
      "id" : 83554180,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 6,
      "path" : "src/script/ismine.h",
      "position" : null,
      "pull_request_review_id" : 4391582,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554228"
         }
      },
      "body" : "this `isInvalid` check is to prevent the wallet from \"finding\" funds that have WatchOnly with uncompressed pubkey in Segwit via https://github.com/bitcoin/bitcoin/pull/8499/commits/26bd36ba64cd090c862ca19d64e8e73ee79184d2#diff-1dbee12e01d094e7366545ec024c5041R153?",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:08:55Z",
      "diff_hunk" : "@@ -53,12 +65,35 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n+        if (sigversion != SIGVERSION_BASE && vSolutions[0].size() != 33) {\n+            isInvalid = true;\n+            return ISMINE_NO;\n+        }\n         if (keystore.HaveKey(keyID))\n             return ISMINE_SPENDABLE;\n         break;\n-    case TX_PUBKEYHASH:\n     case TX_WITNESS_V0_KEYHASH:\n+    {\n+        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+            // We do not support bare witness outputs unless the P2SH version of it would be\n+            // acceptable as well. This protects against matching before segwit activates or\n+            // uncompressed pubkey matching. This also applies to the P2WSH case.\n+            break;\n+        }\n+        isminetype ret = ::IsMine(keystore, GetScriptForDestination(CKeyID(uint160(vSolutions[0]))), isInvalid, SIGVERSION_WITNESS_V0);\n+        if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554228",
      "id" : 83554228,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 50,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 4391621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554368"
         }
      },
      "body" : "yes, both watchonly and spendable uncompressed keys in segwit scripts should be caught by this logic.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:18:02Z",
      "diff_hunk" : "@@ -53,12 +65,35 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         break;\n     case TX_PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();\n+        if (sigversion != SIGVERSION_BASE && vSolutions[0].size() != 33) {\n+            isInvalid = true;\n+            return ISMINE_NO;\n+        }\n         if (keystore.HaveKey(keyID))\n             return ISMINE_SPENDABLE;\n         break;\n-    case TX_PUBKEYHASH:\n     case TX_WITNESS_V0_KEYHASH:\n+    {\n+        if (!keystore.HaveCScript(CScriptID(CScript() << OP_0 << vSolutions[0]))) {\n+            // We do not support bare witness outputs unless the P2SH version of it would be\n+            // acceptable as well. This protects against matching before segwit activates or\n+            // uncompressed pubkey matching. This also applies to the P2WSH case.\n+            break;\n+        }\n+        isminetype ret = ::IsMine(keystore, GetScriptForDestination(CKeyID(uint160(vSolutions[0]))), isInvalid, SIGVERSION_WITNESS_V0);\n+        if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554368",
      "id" : 83554368,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 50,
      "path" : "src/script/ismine.cpp",
      "position" : null,
      "pull_request_review_id" : 4391747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554386"
         }
      },
      "body" : "isInvalid here will never be true. This value is only set to true if sigversion != SIGVERSION_BASE. This call has `SIGVERSION_BASE` as its default argument in the line above.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:18:46Z",
      "diff_hunk" : "@@ -67,21 +102,24 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         CScriptID scriptID = CScriptID(uint160(vSolutions[0]));\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMine(keystore, subscript);\n-            if (ret == ISMINE_SPENDABLE)\n+            isminetype ret = IsMine(keystore, subscript, isInvalid);\n+            if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554386",
      "id" : 83554386,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 73,
      "path" : "src/script/ismine.cpp",
      "position" : 73,
      "pull_request_review_id" : 4391767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554483"
         }
      },
      "body" : "If the subscript is a P2WPKH or P2WSH, the sigversion will become SIGVERSION_WITNESS_V0",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:20:51Z",
      "diff_hunk" : "@@ -67,21 +102,24 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         CScriptID scriptID = CScriptID(uint160(vSolutions[0]));\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {\n-            isminetype ret = IsMine(keystore, subscript);\n-            if (ret == ISMINE_SPENDABLE)\n+            isminetype ret = IsMine(keystore, subscript, isInvalid);\n+            if (ret == ISMINE_SPENDABLE || ret == ISMINE_WATCH_SOLVABLE || (ret == ISMINE_NO && isInvalid))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554483",
      "id" : 83554483,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 73,
      "path" : "src/script/ismine.cpp",
      "position" : 73,
      "pull_request_review_id" : 4391848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554512"
         }
      },
      "body" : "ie If it's only going to be checking for uncompressed pubkeys, we should say so, or rename the variable.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:22:07Z",
      "diff_hunk" : "@@ -28,7 +28,9 @@ enum isminetype\n /** used for bitflags of isminetype */\n typedef uint8_t isminefilter;\n \n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion = SIGVERSION_BASE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554512",
      "id" : 83554512,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 6,
      "path" : "src/script/ismine.h",
      "position" : null,
      "pull_request_review_id" : 4391869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554609"
         }
      },
      "body" : "I think this could be generalized to a similar situation in the future, if we have valid script in one SIGVERSION which is invalid in another",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:26:38Z",
      "diff_hunk" : "@@ -28,7 +28,9 @@ enum isminetype\n /** used for bitflags of isminetype */\n typedef uint8_t isminefilter;\n \n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion = SIGVERSION_BASE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554609",
      "id" : 83554609,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 6,
      "path" : "src/script/ismine.h",
      "position" : null,
      "pull_request_review_id" : 4391941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554778"
         }
      },
      "body" : "`isInvalidForSigVersion` or something similar might make sense then.",
      "commit_id" : "67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T16:34:39Z",
      "diff_hunk" : "@@ -28,7 +28,9 @@ enum isminetype\n /** used for bitflags of isminetype */\n typedef uint8_t isminefilter;\n \n-isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n+isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion = SIGVERSION_BASE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#discussion_r83554778",
      "id" : 83554778,
      "original_commit_id" : "26bd36ba64cd090c862ca19d64e8e73ee79184d2",
      "original_position" : 6,
      "path" : "src/script/ismine.h",
      "position" : null,
      "pull_request_review_id" : 4392070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8499",
      "updated_at" : "2016-10-16T19:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83554778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "Sync is failing to complete for some reason in p2p-segwit.py\r\n\r\nutACK fixes at 26bd36ba64cd090c862ca19d64e8e73ee79184d2 with only a couple nits",
      "created_at" : "2016-10-16T16:36:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254057601",
      "id" : 254057601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-16T16:36:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254057601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "Comments added and edited. By the way, it seems the p2p-segwit.py would fail randomly\r\n\r\n  File \"./qa/rpc-tests/p2p-segwit.py\", line 2000, in run_test\r\n    self.test_non_standard_witness()\r\n  File \"./qa/rpc-tests/p2p-segwit.py\", line 1909, in test_non_standard_witness\r\n    self.std_node.announce_tx_and_wait_for_getdata(p2sh_txs[1])\r\n  File \"./qa/rpc-tests/p2p-segwit.py\", line 108, in announce_tx_and_wait_for_getdata\r\n    self.wait_for_getdata(timeout)\r\n  File \"./qa/rpc-tests/p2p-segwit.py\", line 98, in wait_for_getdata\r\n    self.sync(test_function, timeout)\r\n  File \"./qa/rpc-tests/p2p-segwit.py\", line 82, in sync\r\n    raise AssertionError(\"Sync failed to complete\")\r\n",
      "created_at" : "2016-10-16T16:36:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254057627",
      "id" : 254057627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-16T16:36:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254057627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "I'm removing the tests that causing random sync fail. A similar test is done already to show that policy-rejection won't blind a node to the tx, so I think it's just redundant to try it again.",
      "created_at" : "2016-10-16T19:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254068127",
      "id" : 254068127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-16T19:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254068127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8403418?v=3",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "body" : "utACK 67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-16T21:02:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254074662",
      "id" : 254074662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-16T21:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254074662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK 67d6ee1e3679504f46473fe0818970565ff3b137",
      "created_at" : "2016-10-17T11:56:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254187113",
      "id" : 254187113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-17T11:56:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254187113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "Backported in #8916",
      "created_at" : "2016-10-17T12:21:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254192026",
      "id" : 254192026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-17T12:21:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254192026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "post-merge ACK https://github.com/laanwj/bitcoin/commit/9777fe12722ddab7b1b17df11077d448c7a25006",
      "created_at" : "2016-10-17T13:49:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8499#issuecomment-254212756",
      "id" : 254212756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8499",
      "updated_at" : "2016-10-17T13:49:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254212756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]

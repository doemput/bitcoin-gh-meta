[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87544540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87544540"
         }
      },
      "body" : "thank you!!\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-11T06:50:46Z",
      "diff_hunk" : "@@ -6502,9 +6509,13 @@ bool SendMessages(CNode* pto, CConnman& connman)\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     {\n         // Don't send anything until we get its version message\n-        if (pto->nVersion == 0)\n+        if (!pto->fSuccessfullyConnected || pto->fDisconnect)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87544540",
      "id" : 87544540,
      "original_commit_id" : "2392f30d5f8f6de4f0177885056b2880ebf997e3",
      "original_position" : 402,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 8153354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87544540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87544654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87544654"
         }
      },
      "body" : "> // Don't send anything until we get its version message\n\nComment is out-of-date?\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-11T06:52:30Z",
      "diff_hunk" : "@@ -6502,9 +6509,13 @@ bool SendMessages(CNode* pto, CConnman& connman)\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     {\n         // Don't send anything until we get its version message\n-        if (pto->nVersion == 0)\n+        if (!pto->fSuccessfullyConnected || pto->fDisconnect)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87544654",
      "id" : 87544654,
      "original_commit_id" : "2392f30d5f8f6de4f0177885056b2880ebf997e3",
      "original_position" : 402,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 8153472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87544654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87545473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87545473"
         }
      },
      "body" : "@dcousens the version message sets fSuccessfullyConnected, but I guess that's not as clear after this change.\n\nHow about \"don't send anything until we're successfully connected and ok with the peer's version\" ?\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-11T07:03:53Z",
      "diff_hunk" : "@@ -6502,9 +6509,13 @@ bool SendMessages(CNode* pto, CConnman& connman)\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     {\n         // Don't send anything until we get its version message\n-        if (pto->nVersion == 0)\n+        if (!pto->fSuccessfullyConnected || pto->fDisconnect)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87545473",
      "id" : 87545473,
      "original_commit_id" : "2392f30d5f8f6de4f0177885056b2880ebf997e3",
      "original_position" : 402,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 8154266,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87545473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Grr, will fix up the Windows build problem in the morning.",
      "created_at" : "2016-11-11T07:04:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-259894936",
      "id" : 259894936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-11T07:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259894936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87547251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87547251"
         }
      },
      "body" : "I think if we are still referencing version here to explain why,  then `fSuccessfullyConnected` isn't appropriate.\nOtherwise,  just say \"don't send anything until we're successfully connected\".\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-11T07:27:19Z",
      "diff_hunk" : "@@ -6502,9 +6509,13 @@ bool SendMessages(CNode* pto, CConnman& connman)\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     {\n         // Don't send anything until we get its version message\n-        if (pto->nVersion == 0)\n+        if (!pto->fSuccessfullyConnected || pto->fDisconnect)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87547251",
      "id" : 87547251,
      "original_commit_id" : "2392f30d5f8f6de4f0177885056b2880ebf997e3",
      "original_position" : 402,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 8155918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87547251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Concept ACK, though I'm not convinced there arent too many copies when making the message and passing it into CConnman, but will audit when you fix up build, etc.",
      "created_at" : "2016-11-12T02:46:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-260096967",
      "id" : 260096967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-12T02:46:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260096967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt there's only 1 copy (other than the serialization itself), and it comes from combining the header and payload. See the note here: https://github.com/bitcoin/bitcoin/pull/9128/files#diff-9a82240fe7dfe86564178691cc57f2f1R2590\r\n\r\nEither way, it for sure cuts down on copies compared to before.",
      "created_at" : "2016-11-12T04:11:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-260100422",
      "id" : 260100422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-12T04:11:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260100422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87962952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87962952"
         }
      },
      "body" : "nit: indent\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-15T07:52:01Z",
      "diff_hunk" : "@@ -5723,8 +5730,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 pfrom->id,\n                 FormatStateMessage(state));\n             if (state.GetRejectCode() < REJECT_INTERNAL) // Never send AcceptToMemoryPool's internal codes over P2P\n-                connman.PushMessage(pfrom, NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n-                                   state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), inv.hash);\n+                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r87962952",
      "id" : 87962952,
      "original_commit_id" : "2392f30d5f8f6de4f0177885056b2880ebf997e3",
      "original_position" : 271,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 8551053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87962952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2016-11-15T07:54:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-260572024",
      "id" : 260572024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-15T07:54:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260572024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "winsok needs an extra cast:\r\n```\r\n../../src/net.cpp: In function Ã¢ÂÂsize_t SocketSendData(CNode*)Ã¢ÂÂ:\r\n../../src/net.cpp:777:131: error: invalid conversion from Ã¢ÂÂconst value_type* {aka const unsigned char*}Ã¢ÂÂ to Ã¢ÂÂconst char*Ã¢ÂÂ [-fpermissive]\r\n         int nBytes = send(pnode->hSocket, &data[pnode->nSendOffset], data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);    \r\n```",
      "created_at" : "2016-11-15T09:49:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-260595573",
      "id" : 260595573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-15T09:49:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260595573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Fixed several things:\r\n- Fixed @jonasschnelli's whitespace nit\r\n- Fixed win32 build, broken due to missing cast\r\n- Addressed @TheBlueMatt's complaints:\r\n - Back to using ```pnode->nVersion == 0``` to detect lack of version message\r\n - Added a change to hold off on setting fDisconnect for feelers until later, to avoid attempting to send messages to a disconnected node. The behavior is kept the same here, but imo it should be changed as a follow-up.\r\n  - zero copies when sending to the net. CSerializedNetMsg now advises how much padding it may possibly need. Its copy ctor and copy assignment operator are deleted to ensure no copies.\r\n   - CVectorInserter::pad and CVectorOverWriter::skip. I'm not sure if these are exactly what you needed, but I took a guess :)",
      "created_at" : "2016-11-16T05:39:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-260858970",
      "id" : 260858970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-16T05:39:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260858970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I'm testing this + #9125",
      "created_at" : "2016-11-17T15:09:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-261271735",
      "id" : 261271735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-17T15:09:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261271735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Needs rebase after #9075.",
      "created_at" : "2016-11-17T21:25:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-261374227",
      "id" : 261374227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-17T21:25:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261374227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88556871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88556871"
         }
      },
      "body" : "CSizeComputer uses 'seek' for this function (inspired by the dd command, where skip is something you do on input, and seek is something you do on output).\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-17T22:01:34Z",
      "diff_hunk" : "@@ -69,6 +69,98 @@ OverrideStream<S> WithOrVersion(S* s, int nVersionFlag)\n     return OverrideStream<S>(s, s->GetType(), s->GetVersion() | nVersionFlag);\n }\n \n+/* Minimal stream for appending the contents of an existing byte vector\n+ *\n+ * The referenced vector will grow as necessary\n+ */\n+class CVectorInserter\n+{\n+ public:\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn)\n+    {\n+    }\n+    template <typename... Args>\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, Args&&... args) : CVectorInserter(nTypeIn, nVersionIn, vchDataIn)\n+    {\n+        ::SerializeMany(*this, std::forward<Args>(args)...);\n+    }\n+    template<typename T>\n+    CVectorInserter& operator<<(const T& obj)\n+    {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj);\n+        return (*this);\n+    }\n+    void write(const char* pch, size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), reinterpret_cast<const unsigned char*>(pch), reinterpret_cast<const unsigned char*>(pch) + nSize);\n+    }\n+    int GetVersion() const\n+    {\n+        return nVersion;\n+    }\n+    int GetType() const\n+    {\n+        return nType;\n+    }\n+    void pad(size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), nSize, 0);\n+    }\n+private:\n+    const int nType;\n+    const int nVersion;\n+    std::vector<unsigned char>& vchData;\n+};\n+\n+/* Minimal stream for overwriting the contents of an existing byte vector without causing reallocations\n+ *\n+ * Note that the referenced vector must already be large enough to hold all data to be serialized.\n+ */\n+class CVectorOverWriter\n+{\n+ public:\n+    CVectorOverWriter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn), nPos(0)\n+    {\n+    }\n+    template <typename... Args>\n+    CVectorOverWriter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, Args&&... args) : CVectorOverWriter(nTypeIn, nVersionIn, vchDataIn)\n+    {\n+        ::SerializeMany(*this, std::forward<Args>(args)...);\n+    }\n+    void write(const char* pch, size_t nSize)\n+    {\n+        assert(nSize + nPos <= vchData.size());\n+        memcpy(vchData.data() + nPos, reinterpret_cast<const unsigned char*>(pch), nSize);\n+        nPos += nSize;\n+    }\n+    template<typename T>\n+    CVectorOverWriter& operator<<(const T& obj)\n+    {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj);\n+        return (*this);\n+    }\n+    int GetVersion() const\n+    {\n+        return nVersion;\n+    }\n+    int GetType() const\n+    {\n+        return nType;\n+    }\n+    void skip(size_t nSize)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88556871",
      "id" : 88556871,
      "original_commit_id" : "28b1cca20d0101081a3f08baa45fc6a77f8770c3",
      "original_position" : 84,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 9128369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88556871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88557735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88557735"
         }
      },
      "body" : "Makes sense. Will change.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-17T22:06:08Z",
      "diff_hunk" : "@@ -69,6 +69,98 @@ OverrideStream<S> WithOrVersion(S* s, int nVersionFlag)\n     return OverrideStream<S>(s, s->GetType(), s->GetVersion() | nVersionFlag);\n }\n \n+/* Minimal stream for appending the contents of an existing byte vector\n+ *\n+ * The referenced vector will grow as necessary\n+ */\n+class CVectorInserter\n+{\n+ public:\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn)\n+    {\n+    }\n+    template <typename... Args>\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, Args&&... args) : CVectorInserter(nTypeIn, nVersionIn, vchDataIn)\n+    {\n+        ::SerializeMany(*this, std::forward<Args>(args)...);\n+    }\n+    template<typename T>\n+    CVectorInserter& operator<<(const T& obj)\n+    {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj);\n+        return (*this);\n+    }\n+    void write(const char* pch, size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), reinterpret_cast<const unsigned char*>(pch), reinterpret_cast<const unsigned char*>(pch) + nSize);\n+    }\n+    int GetVersion() const\n+    {\n+        return nVersion;\n+    }\n+    int GetType() const\n+    {\n+        return nType;\n+    }\n+    void pad(size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), nSize, 0);\n+    }\n+private:\n+    const int nType;\n+    const int nVersion;\n+    std::vector<unsigned char>& vchData;\n+};\n+\n+/* Minimal stream for overwriting the contents of an existing byte vector without causing reallocations\n+ *\n+ * Note that the referenced vector must already be large enough to hold all data to be serialized.\n+ */\n+class CVectorOverWriter\n+{\n+ public:\n+    CVectorOverWriter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn), nPos(0)\n+    {\n+    }\n+    template <typename... Args>\n+    CVectorOverWriter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, Args&&... args) : CVectorOverWriter(nTypeIn, nVersionIn, vchDataIn)\n+    {\n+        ::SerializeMany(*this, std::forward<Args>(args)...);\n+    }\n+    void write(const char* pch, size_t nSize)\n+    {\n+        assert(nSize + nPos <= vchData.size());\n+        memcpy(vchData.data() + nPos, reinterpret_cast<const unsigned char*>(pch), nSize);\n+        nPos += nSize;\n+    }\n+    template<typename T>\n+    CVectorOverWriter& operator<<(const T& obj)\n+    {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj);\n+        return (*this);\n+    }\n+    int GetVersion() const\n+    {\n+        return nVersion;\n+    }\n+    int GetType() const\n+    {\n+        return nType;\n+    }\n+    void skip(size_t nSize)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88557735",
      "id" : 88557735,
      "original_commit_id" : "28b1cca20d0101081a3f08baa45fc6a77f8770c3",
      "original_position" : 84,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 9129192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88557735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88558738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88558738"
         }
      },
      "body" : "I'm not convinced there is a need to separate CVectorOverWriter and and CVectorInserter. Couldn't you have a single one, which a constructor that initialized the write pointer at the beginning, and one that initializes it at the end?\n\nWrites would involve first checking whether we'd not go out of bounds, and resizing if necessary.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-17T22:11:18Z",
      "diff_hunk" : "@@ -69,6 +69,98 @@ OverrideStream<S> WithOrVersion(S* s, int nVersionFlag)\n     return OverrideStream<S>(s, s->GetType(), s->GetVersion() | nVersionFlag);\n }\n \n+/* Minimal stream for appending the contents of an existing byte vector\n+ *\n+ * The referenced vector will grow as necessary\n+ */\n+class CVectorInserter\n+{\n+ public:\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn)\n+    {\n+    }\n+    template <typename... Args>\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, Args&&... args) : CVectorInserter(nTypeIn, nVersionIn, vchDataIn)\n+    {\n+        ::SerializeMany(*this, std::forward<Args>(args)...);\n+    }\n+    template<typename T>\n+    CVectorInserter& operator<<(const T& obj)\n+    {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj);\n+        return (*this);\n+    }\n+    void write(const char* pch, size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), reinterpret_cast<const unsigned char*>(pch), reinterpret_cast<const unsigned char*>(pch) + nSize);\n+    }\n+    int GetVersion() const\n+    {\n+        return nVersion;\n+    }\n+    int GetType() const\n+    {\n+        return nType;\n+    }\n+    void pad(size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), nSize, 0);\n+    }\n+private:\n+    const int nType;\n+    const int nVersion;\n+    std::vector<unsigned char>& vchData;\n+};\n+\n+/* Minimal stream for overwriting the contents of an existing byte vector without causing reallocations\n+ *\n+ * Note that the referenced vector must already be large enough to hold all data to be serialized.\n+ */\n+class CVectorOverWriter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88558738",
      "id" : 88558738,
      "original_commit_id" : "28b1cca20d0101081a3f08baa45fc6a77f8770c3",
      "original_position" : 52,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 9130144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88558738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88560893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88560893"
         }
      },
      "body" : "Yes, I think that should work fine. Will change.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-17T22:23:47Z",
      "diff_hunk" : "@@ -69,6 +69,98 @@ OverrideStream<S> WithOrVersion(S* s, int nVersionFlag)\n     return OverrideStream<S>(s, s->GetType(), s->GetVersion() | nVersionFlag);\n }\n \n+/* Minimal stream for appending the contents of an existing byte vector\n+ *\n+ * The referenced vector will grow as necessary\n+ */\n+class CVectorInserter\n+{\n+ public:\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn)\n+    {\n+    }\n+    template <typename... Args>\n+    CVectorInserter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, Args&&... args) : CVectorInserter(nTypeIn, nVersionIn, vchDataIn)\n+    {\n+        ::SerializeMany(*this, std::forward<Args>(args)...);\n+    }\n+    template<typename T>\n+    CVectorInserter& operator<<(const T& obj)\n+    {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj);\n+        return (*this);\n+    }\n+    void write(const char* pch, size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), reinterpret_cast<const unsigned char*>(pch), reinterpret_cast<const unsigned char*>(pch) + nSize);\n+    }\n+    int GetVersion() const\n+    {\n+        return nVersion;\n+    }\n+    int GetType() const\n+    {\n+        return nType;\n+    }\n+    void pad(size_t nSize)\n+    {\n+        vchData.insert(vchData.end(), nSize, 0);\n+    }\n+private:\n+    const int nType;\n+    const int nVersion;\n+    std::vector<unsigned char>& vchData;\n+};\n+\n+/* Minimal stream for overwriting the contents of an existing byte vector without causing reallocations\n+ *\n+ * Note that the referenced vector must already be large enough to hold all data to be serialized.\n+ */\n+class CVectorOverWriter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88560893",
      "id" : 88560893,
      "original_commit_id" : "28b1cca20d0101081a3f08baa45fc6a77f8770c3",
      "original_position" : 52,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 9132367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88560893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88605429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88605429"
         }
      },
      "body" : "Shouldnt this happen inside CNetMsgMaker::Make? That way we can just have a BIP151MsgMaker?\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T06:27:26Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n+    unsigned int nTotalSize = msg.data.size();\n+    unsigned int nMessageSize = nTotalSize - msg.header_pad_size;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);\n \n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n-\n-void CConnman::PushMessage(CNode* pnode, CDataStream& strm, const std::string& sCommand)\n-{\n-    if(strm.empty())\n-        return;\n-\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(sCommand.c_str()), nSize, pnode->id);\n+    uint256 hash = Hash(msg.data.data() + msg.header_pad_size, msg.data.data() + msg.data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88605429",
      "id" : 88605429,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 49,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9174430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88605429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88605598"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88605598"
         }
      },
      "body" : "Shouldn't this be CSerializedNetMsg&&? It seems super strange that we're secretly destroying the object passed in, but only because the CSerializedNetMsg class doesnt have a copy-constructor.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T06:30:08Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88605598",
      "id" : 88605598,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9174430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88605598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88605935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88605935"
         }
      },
      "body" : "Over-use of std::move, much? Can we stick with const std::string& in the function declaration and then use operator=() to make the copy instead of creating a new object just to std::move the data over?\n(Also, could definitely be missing some part of rvalue stuff, here)\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T06:34:35Z",
      "diff_hunk" : "@@ -0,0 +1,37 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NETMESSAGEMAKER_H\n+#define BITCOIN_NETMESSAGEMAKER_H\n+\n+#include \"net.h\"\n+#include \"serialize.h\"\n+\n+class CNetMsgMaker\n+{\n+public:\n+    CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n+\n+    template <typename... Args>\n+    CSerializedNetMsg Make(int nFlags, std::string sCommand, Args&&... args)\n+    {\n+        CSerializedNetMsg msg;\n+        msg.data.assign(CSerializedNetMsg::header_pad_size, 0);\n+        msg.command = std::move(sCommand);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88605935",
      "id" : 88605935,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/netmessagemaker.h",
      "position" : null,
      "pull_request_review_id" : 9174430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88605935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88609971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88609971"
         }
      },
      "body" : "Sure.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T07:25:43Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88609971",
      "id" : 88609971,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9178668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88609971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88610354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88610354"
         }
      },
      "body" : "Nothing secret is being done. This would fail, for example:\n\n``` c++\nCSerializedNetMsg x = ...;\npconman->PushMessage(pnode, x);\n```\n\nas the binding of the actual parameter x would need a copy constructor to assign to the formal parameter msg.\n\nPassing a && would be preferable, though. The move construction here is slower, and only adds the possibility of passing in something that is implicitly convertible to a CSerializedNetMsg (which afaik doesn't exist).\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T07:30:14Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88610354",
      "id" : 88610354,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9179018,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88610354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88611323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88611323"
         }
      },
      "body" : "This is standard c++11 pass-by-value-by-default. If you pass in a const-reference, a copy is guaranteed since we're storing the result. If you pass by value, it can be moved and the copy can be skipped.\n\nNot sure why you'd prefer a copy over 2 cheap moves.\n\nArguably NetMsgType should become a\n`std::array<char, CMessageHeader::COMMAND_SIZE>`\nso we can do away with the char arrays/strings, but that's a change for another day.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T07:42:52Z",
      "diff_hunk" : "@@ -0,0 +1,37 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NETMESSAGEMAKER_H\n+#define BITCOIN_NETMESSAGEMAKER_H\n+\n+#include \"net.h\"\n+#include \"serialize.h\"\n+\n+class CNetMsgMaker\n+{\n+public:\n+    CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n+\n+    template <typename... Args>\n+    CSerializedNetMsg Make(int nFlags, std::string sCommand, Args&&... args)\n+    {\n+        CSerializedNetMsg msg;\n+        msg.data.assign(CSerializedNetMsg::header_pad_size, 0);\n+        msg.command = std::move(sCommand);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88611323",
      "id" : 88611323,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/netmessagemaker.h",
      "position" : null,
      "pull_request_review_id" : 9179948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88611323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88612000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88612000"
         }
      },
      "body" : "It was left out of CNetMsgMaker because I assumed that we'd want CNode making the decision about how to wrap the data for sending. If it's to be encrypted, we'll need some per-node state vars.\n\nSo I guess it depends whether encryption status and state are to end up somewhere in main like CNodeState, or in CNode. Since (for once) this seems like something CConnman should know about but nobody else should have to care, I figured CNode was the likely place.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T07:50:21Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n+    unsigned int nTotalSize = msg.data.size();\n+    unsigned int nMessageSize = nTotalSize - msg.header_pad_size;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);\n \n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n-\n-void CConnman::PushMessage(CNode* pnode, CDataStream& strm, const std::string& sCommand)\n-{\n-    if(strm.empty())\n-        return;\n-\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(sCommand.c_str()), nSize, pnode->id);\n+    uint256 hash = Hash(msg.data.data() + msg.header_pad_size, msg.data.data() + msg.data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88612000",
      "id" : 88612000,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 49,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9180572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88612000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88612064"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88612064"
         }
      },
      "body" : "Yup, didnt realize it would avoid a copy there (though I'd be OK copying the sCommand field...), anyway, comment withdrawn.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T07:51:08Z",
      "diff_hunk" : "@@ -0,0 +1,37 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NETMESSAGEMAKER_H\n+#define BITCOIN_NETMESSAGEMAKER_H\n+\n+#include \"net.h\"\n+#include \"serialize.h\"\n+\n+class CNetMsgMaker\n+{\n+public:\n+    CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n+\n+    template <typename... Args>\n+    CSerializedNetMsg Make(int nFlags, std::string sCommand, Args&&... args)\n+    {\n+        CSerializedNetMsg msg;\n+        msg.data.assign(CSerializedNetMsg::header_pad_size, 0);\n+        msg.command = std::move(sCommand);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88612064",
      "id" : 88612064,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/netmessagemaker.h",
      "position" : null,
      "pull_request_review_id" : 9180634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88612064",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88612774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88612774"
         }
      },
      "body" : "I should mention: I've gone back and forth a few times on this (probably in this PR even). If anyone has a strong preference for a different approach that makes sense, I'm fine with changing it.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T07:58:34Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n+    unsigned int nTotalSize = msg.data.size();\n+    unsigned int nMessageSize = nTotalSize - msg.header_pad_size;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);\n \n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n-\n-void CConnman::PushMessage(CNode* pnode, CDataStream& strm, const std::string& sCommand)\n-{\n-    if(strm.empty())\n-        return;\n-\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(sCommand.c_str()), nSize, pnode->id);\n+    uint256 hash = Hash(msg.data.data() + msg.header_pad_size, msg.data.data() + msg.data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88612774",
      "id" : 88612774,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 49,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9181321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88612774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88613291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88613291"
         }
      },
      "body" : "It was done this way originally so that a message could be serialized once and sent to multiple peers. If an rvalue is required, we can't do that.\n\nI don't think there's a use-case for that at the moment, though, so changing to && is fine by me.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T08:03:47Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88613291",
      "id" : 88613291,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 22,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9181788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88613291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Rebased and updated for comments from @sipa and @TheBlueMatt.\r\n- Combined the vector serializers into CVectorWriter as requested.\r\n- skip() -> seek()\r\n- Added tests for CVectorWriter.\r\n- PushMessage requires an rvalue",
      "created_at" : "2016-11-18T08:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-261472435",
      "id" : 261472435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-18T08:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261472435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88613811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88613811"
         }
      },
      "body" : "This isnt in CNode, though? If it were in CNode I'd be OK with that, but putting it in CConnman seems like /the/ layer violation this PR intends to fix?\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T08:09:33Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n+    unsigned int nTotalSize = msg.data.size();\n+    unsigned int nMessageSize = nTotalSize - msg.header_pad_size;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);\n \n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n-\n-void CConnman::PushMessage(CNode* pnode, CDataStream& strm, const std::string& sCommand)\n-{\n-    if(strm.empty())\n-        return;\n-\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(sCommand.c_str()), nSize, pnode->id);\n+    uint256 hash = Hash(msg.data.data() + msg.header_pad_size, msg.data.data() + msg.data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88613811",
      "id" : 88613811,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 49,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9182315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88613811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Hmm, I would consider CNode and CConnman to be the same layer (after all\nits processing related stated is moved out, and the rest is made private to\nthe net module).\n",
      "created_at" : "2016-11-18T08:13:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-261473136",
      "id" : 261473136,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-18T08:13:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261473136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Heh, well if you consider CNode to be a part of CConnman, then the type-of-message-to-send logic should be in net_processing...either way CConnman shouldnt know anything about the serialization of messages on the wire.",
      "created_at" : "2016-11-18T08:16:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-261473622",
      "id" : 261473622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-18T08:16:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261473622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88614744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88614744"
         }
      },
      "body" : "The result of this PR is that CConnman now receives only dumb bytes with no knowledge of what they are. All internal structures could change without affecting the net side.\n\nDealing with wrapping the raw bytes up for transmission is something different, and arguably not something that the bitcoin side should have to know/care about. If you have a different model in your mind, please suggest it.\n\nCNode is slowly moving towards an internal dumb storage class. So in this case, I don't make much distinction.\n",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-18T08:18:58Z",
      "diff_hunk" : "@@ -2581,30 +2581,17 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n+    unsigned int nTotalSize = msg.data.size();\n+    unsigned int nMessageSize = nTotalSize - msg.header_pad_size;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);\n \n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n-\n-void CConnman::PushMessage(CNode* pnode, CDataStream& strm, const std::string& sCommand)\n-{\n-    if(strm.empty())\n-        return;\n-\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(sCommand.c_str()), nSize, pnode->id);\n+    uint256 hash = Hash(msg.data.data() + msg.header_pad_size, msg.data.data() + msg.data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r88614744",
      "id" : 88614744,
      "original_commit_id" : "6d331d673693283d1a9ac494d31d79495fdedaef",
      "original_position" : 49,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 9183162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T01:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88614744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Needs rebase",
      "created_at" : "2016-11-21T23:08:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262096693",
      "id" : 262096693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-21T23:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262096693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "Code review ACK 02d463d\r\nHave been testing an earlier revision on a node for 6 days without issues.",
      "created_at" : "2016-11-23T07:02:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262445640",
      "id" : 262445640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-23T07:02:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262445640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "updated after a discussion with @TheBlueMatt and @sipa today, I think we're all finally aligned.\r\n\r\n@laanwj Sadly removing the \"skb\" was part of the compromise as it was a slight layer violation. We instead use 2 send()s (later scatter/gather) to avoid the copy.",
      "created_at" : "2016-11-23T22:08:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262642102",
      "id" : 262642102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-23T22:08:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262642102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Needs rebase, sorry!",
      "created_at" : "2016-11-24T00:18:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262661247",
      "id" : 262661247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-24T00:18:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262661247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased after ca8549d2bd32f17f8b69d1edbe3f2976fba504b4.",
      "created_at" : "2016-11-24T01:09:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262666966",
      "id" : 262666966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-24T01:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262666966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "utACK 09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-24T03:30:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262682552",
      "id" : 262682552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-24T03:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262682552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "ACK 09a92c2",
      "created_at" : "2016-11-24T11:33:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-262755652",
      "id" : 262755652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-24T11:33:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262755652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89545990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89545990"
         }
      },
      "body" : "This comment is very confusing...if nPos is 1 and vchData.size() is 1, the documentation implies that vchData will be resized so that nPos isnt past-the-end, but it will not be. Instead, vchData is resized so that, at maximum, nPos is 1-past-the-end.",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-24T21:03:43Z",
      "diff_hunk" : "@@ -69,6 +69,75 @@ OverrideStream<S> WithOrVersion(S* s, int nVersionFlag)\n     return OverrideStream<S>(s, s->GetType(), s->GetVersion() | nVersionFlag);\n }\n \n+/* Minimal stream for overwriting and/or appending to an existing byte vector\n+ *\n+ * The referenced vector will grow as necessary\n+ */\n+class CVectorWriter\n+{\n+ public:\n+\n+/*\n+ * @param[in]  nTypeIn Serialization Type\n+ * @param[in]  nVersionIn Serialization Version (including any flags)\n+ * @param[in]  vchDataIn  Referenced byte vector to overwrite/append\n+ * @param[in]  nPosIn Starting position. Vector index where writes should start. If the index is past the end, the\n+ *                    vector will first be resized to fit. So to append, use vec.size().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89545990",
      "id" : 89545990,
      "original_commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "original_position" : 17,
      "path" : "src/streams.h",
      "position" : 17,
      "pull_request_review_id" : 10092097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T21:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89545990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89547250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89547250"
         }
      },
      "body" : "You changed the print - should print nMessageSize, not nTotalSize.",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-24T21:29:21Z",
      "diff_hunk" : "@@ -2612,30 +2612,19 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n-\n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n+    size_t nMessageSize = msg.data.size();\n+    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89547250",
      "id" : 89547250,
      "original_commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "original_position" : 40,
      "path" : "src/net.cpp",
      "position" : 40,
      "pull_request_review_id" : 10092097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-24T21:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89547250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89637922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89637922"
         }
      },
      "body" : "Good call. I assumed it'd never say \"sending 0 bytes\", but you're right, I'll avoid a behavioral change here.",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-25T16:13:53Z",
      "diff_hunk" : "@@ -2612,30 +2612,19 @@ void CNode::AskFor(const CInv& inv)\n     mapAskFor.insert(std::make_pair(nRequestTime, inv));\n }\n \n-CDataStream CConnman::BeginMessage(CNode* pnode, int nVersion, int flags, const std::string& sCommand)\n+void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n-    return {SER_NETWORK, (nVersion ? nVersion : pnode->GetSendVersion()) | flags, CMessageHeader(Params().MessageStart(), sCommand.c_str(), 0) };\n-}\n-\n-void CConnman::EndMessage(CDataStream& strm)\n-{\n-    // Set the size\n-    assert(strm.size () >= CMessageHeader::HEADER_SIZE);\n-    unsigned int nSize = strm.size() - CMessageHeader::HEADER_SIZE;\n-    WriteLE32((uint8_t*)&strm[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n-    // Set the checksum\n-    uint256 hash = Hash(strm.begin() + CMessageHeader::HEADER_SIZE, strm.end());\n-    memcpy((char*)&strm[CMessageHeader::CHECKSUM_OFFSET], hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-}\n+    size_t nMessageSize = msg.data.size();\n+    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89637922",
      "id" : 89637922,
      "original_commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "original_position" : 40,
      "path" : "src/net.cpp",
      "position" : 40,
      "pull_request_review_id" : 10183264,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-25T16:13:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89637922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89642554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89642554"
         }
      },
      "body" : "Hmm, yes. Will clarify.",
      "commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "created_at" : "2016-11-25T16:57:54Z",
      "diff_hunk" : "@@ -69,6 +69,75 @@ OverrideStream<S> WithOrVersion(S* s, int nVersionFlag)\n     return OverrideStream<S>(s, s->GetType(), s->GetVersion() | nVersionFlag);\n }\n \n+/* Minimal stream for overwriting and/or appending to an existing byte vector\n+ *\n+ * The referenced vector will grow as necessary\n+ */\n+class CVectorWriter\n+{\n+ public:\n+\n+/*\n+ * @param[in]  nTypeIn Serialization Type\n+ * @param[in]  nVersionIn Serialization Version (including any flags)\n+ * @param[in]  vchDataIn  Referenced byte vector to overwrite/append\n+ * @param[in]  nPosIn Starting position. Vector index where writes should start. If the index is past the end, the\n+ *                    vector will first be resized to fit. So to append, use vec.size().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#discussion_r89642554",
      "id" : 89642554,
      "original_commit_id" : "09a92c27d46a62d10aed95b742e891e204dcee4e",
      "original_position" : 17,
      "path" : "src/streams.h",
      "position" : 17,
      "pull_request_review_id" : 10188098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9128",
      "updated_at" : "2016-11-25T16:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89642554",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Updated and squashed for @TheBlueMatt's comments. The diff from before is very straightforward:\r\n```diff\r\ncory@cory-i7:~/dev/bitcoin/src(connman-send)$ git diff theuni/connman-send\r\ndiff --git a/src/main.cpp b/src/main.cpp\r\nindex 4520afb..5595381 100644\r\n--- a/src/main.cpp\r\n+++ b/src/main.cpp\r\n@@ -6983,7 +6983,7 @@ bool SendMessages(CNode* pto, CConnman& connman)\r\n         // Message: feefilter\r\n         //\r\n         // We don't want white listed peers to filter txs to us if we have -whitelistforcerelay\r\n-        if (!pto->fDisconnect && pto->nVersion >= FEEFILTER_VERSION && GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\r\n+        if (pto->nVersion >= FEEFILTER_VERSION && GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\r\n             !(pto->fWhitelisted && GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY))) {\r\n             CAmount currentFilter = mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\r\n             int64_t timeNow = GetTimeMicros();\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex e05c174..ce87150 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2616,7 +2616,7 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\r\n {\r\n     size_t nMessageSize = msg.data.size();\r\n     size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\r\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nTotalSize, pnode->id);\r\n+    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->id);\r\n \r\n     std::vector<unsigned char> serializedHeader;\r\n     serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\r\ndiff --git a/src/streams.h b/src/streams.h\r\nindex ef22620..b508784 100644\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -81,8 +81,8 @@ class CVectorWriter\r\n  * @param[in]  nTypeIn Serialization Type\r\n  * @param[in]  nVersionIn Serialization Version (including any flags)\r\n  * @param[in]  vchDataIn  Referenced byte vector to overwrite/append\r\n- * @param[in]  nPosIn Starting position. Vector index where writes should start. If the index is past the end, the\r\n- *                    vector will first be resized to fit. So to append, use vec.size().\r\n+ * @param[in]  nPosIn Starting position. Vector index where writes should start. The vector will initially\r\n+ *                    grow as necessary to  max(index, vec.size()). So to append, use vec.size().\r\n */\r\n     CVectorWriter(int nTypeIn, int nVersionIn, std::vector<unsigned char>& vchDataIn, size_t nPosIn) : nType(nTypeIn), nVersion(nVersionIn), vchData(vchDataIn), nPos(nPosIn)\r\n     {\r\n```",
      "created_at" : "2016-11-25T17:40:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-263003342",
      "id" : 263003342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-25T17:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263003342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "utACK c7be56dceff625991cb2884f2ce053996ac613cd",
      "created_at" : "2016-11-25T18:14:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9128#issuecomment-263007054",
      "id" : 263007054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9128",
      "updated_at" : "2016-11-25T18:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263007054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]

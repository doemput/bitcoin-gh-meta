[
   {
      "body" : "ACK https://github.com/bitcoin/bitcoin/pull/9131/commits/079142b75771c5b39a76a1eaa6347bce5e99c0b3",
      "created_at" : "2016-11-11T20:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260049838",
      "id" : 260049838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-11T20:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260049838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Is this enough? Does bool actually behave differently as an atomic if we don't use the atomic-specific functions? I would think using .exchange() would be necessary to ensure the logic is itself atomic as well.",
      "created_at" : "2016-11-12T01:14:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260090999",
      "id" : 260090999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-12T01:14:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260090999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr Yes. An assignment to an std::atomic results in a fully sequentially serialized behaviour. You can use .store(value, memory_order_relaxed) for example if you want weaker consistency (but still atomic) behaviour.",
      "created_at" : "2016-11-12T01:45:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260093329",
      "id" : 260093329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-12T01:45:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260093329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@theuni Can you comment here? You probably understand CConnman's threading model best.",
      "created_at" : "2016-11-12T01:46:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260093392",
      "id" : 260093392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-12T01:46:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260093392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Sure, making it atomic should solve the problem at hand.\r\n\r\n@sipa I avoided commenting on the network active PR because IMO the model needs to change a bit to make it completely safe. I have some of those changes queued up, but I didn't want to stand in the way of the feature. For now, let's just make this atomic.\r\n\r\nUltimately, CConnman::Start and CConnman::Stop need to be used for network activation. They were designed to function that way, it's just not complete yet. The idea is that the network threads stop when the toggle is set, which would guarantee that p2p is really down. What's missing is the ability to bring it back up with the same config.",
      "created_at" : "2016-11-12T21:47:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260150521",
      "id" : 260150521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-12T21:47:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260150521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Slightly OT, but when is it best to use locks vs atomics?",
      "created_at" : "2016-11-13T03:33:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260164785",
      "id" : 260164785,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-13T03:33:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260164785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad Whenever you can use atomics, atomics. They are many times faster than locks.",
      "created_at" : "2016-11-13T05:03:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260167351",
      "id" : 260167351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-13T05:03:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260167351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "utACK 079142b75771c5b39a76a1eaa6347bce5e99c0b3",
      "created_at" : "2016-11-15T22:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260794819",
      "id" : 260794819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-15T22:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260794819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "utACK https://github.com/bitcoin/bitcoin/commit/079142b75771c5b39a76a1eaa6347bce5e99c0b3\r\n\r\n> Slightly OT, but when is it best to use locks vs atomics?\r\n\r\nThis is not the first time that a question you ask is just a google search away. There is literally tons of CS literature about synchronization primitives. \r\nIn any case atomic access 'protects' only one variable, whereas locks can protect multiple from concurrent access. As there is nothing else that needs to remain internally consistent at the same time as fNetworkActive changes, an atomic will do.",
      "created_at" : "2016-11-16T09:09:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260892296",
      "id" : 260892296,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9131",
      "updated_at" : "2016-11-16T09:09:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260892296",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

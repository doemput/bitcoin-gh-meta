[
   {
      "author_association" : "MEMBER",
      "body" : "Hmm... I hope someone can verify that.\r\nBut it could indeed be a BDB issue. BerkleyDB operates on a directory & a file. Maybe this is another reason to either have a directory / BDB env per wallet or just finally make some progress for a new database format.",
      "created_at" : "2017-10-01T03:14:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11429#issuecomment-333350369",
      "id" : 333350369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11429",
      "updated_at" : "2017-10-01T03:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333350369",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here's a simple way to reproduce the problem:\r\n\r\n    $ ls -l ~/.bitcoin/wallet.dat.x1\r\n    ls: cannot access '/home/chris/.bitcoin/wallet.dat.x1': No such file or directory\r\n    $ ls -l ~/.bitcoin/wallet.dat.x2\r\n    ls: cannot access '/home/chris/.bitcoin/wallet.dat.x2': No such file or directory\r\n    $ btc -wallet=wallet.dat.x1 &\r\n    $ bc getblockcount\r\n    488234\r\n    $ bc stop\r\n    Bitcoin server stopping\r\n    $ cp wallet.dat.x1 wallet.dat.x2\r\n    $ btc -wallet=wallet.dat.x3 &\r\n    $ sleep 300 [or whatever]\r\n    $ bc getblockcount\r\n    488235\r\n    $ bc stop\r\n    Bitcoin server stopping\r\n    $ btc -wallet=wallet.dat.x1 -wallet=wallet.dat.x2 -printtoconsole | grep -i rescan\r\n    2017-10-04 03:57:31 [wallet.dat.x1] rescan? checking tip()\r\n    2017-10-04 03:57:31 [wallet.dat.x1] rescan? maybe: chainActive.Tip() is true\r\n    2017-10-04 03:57:31 [wallet.dat.x1] rescan? yes: 0x7f0cb341d450 (488235) != 0x7f0cca494000 (488234)\r\n    2017-10-04 03:57:31 init message: Rescanning...\r\n    2017-10-04 03:57:31 [wallet.dat.x1] Rescanning last 1 blocks (from block 488234)...\r\n    2017-10-04 03:57:31 [wallet.dat.x1]  rescan                   25ms\r\n    2017-10-04 03:57:31 [wallet.dat.x2] rescan? checking tip()\r\n    2017-10-04 03:57:31 [wallet.dat.x2] rescan? maybe: chainActive.Tip() is true\r\n    2017-10-04 03:57:31 [wallet.dat.x2] rescan? no: 0x7f0cb341d450 (488235) == 0x7f0cb341d450 (488235)\r\n    $ \r\n\r\n* show that x1 and x2 don't exist\r\n* create x1 and run getblockcount\r\n* copy x1 to x2\r\n* run new wallet x3 until a new block is found\r\n* run wallets x1 and x2, and note that only x1 is rescanned while both x1 and x2 require a 1 block rescan",
      "created_at" : "2017-10-04T04:01:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11429#issuecomment-334044129",
      "id" : 334044129,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11429",
      "updated_at" : "2017-10-04T04:04:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334044129",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/573356?v=4",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I was able to reproduce this, and I think I can add better error handling to detect it, but it doesn't appear to be fixable because Berkeley db can't distinguish between the two copies of the wallet file. Basically your idea about wallet databases having \"some kind of unique ID\" is right. From https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html:\r\n\r\n> Because system file identification information (for example, filenames, device and inode numbers, volume and file IDs, and so on) are not necessarily unique or maintained across system reboots, each Berkeley DB database file contains a unique 20-byte file identification bytestring. When multiple processes or threads open the same database file in Berkeley DB, it is this bytestring that is used to ensure the same underlying pages are updated in the database environment cache, no matter which Berkeley DB handle is used for the operation.\r\n\r\nWhat happens as a result is that after WriteBestBlock is called on the first wallet file following the rescan, the ReadBestBlock call on the second wallet picks up the not fully flushed value from the first wallet, instead of the right value inside its own wallet file.\r\n\r\nWe can retrieve the file id's with `pdb->get_mpf()->get_fileid()`, so it should be possible to add a check  that will refuse to load more than one wallet with the same id. I'll try to open a PR that does this today.",
      "created_at" : "2017-10-10T18:50:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11429#issuecomment-335571653",
      "id" : 335571653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11429",
      "updated_at" : "2017-10-10T18:50:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335571653",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @ryanofsky. I'm glad you took the time to look into this. I'm guessing the bug could result in wallet file corruption if two wallet files are sharing a single database cache, so it's good to fix and backport.",
      "created_at" : "2017-10-10T20:08:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11429#issuecomment-335592379",
      "id" : 335592379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11429",
      "updated_at" : "2017-10-10T20:08:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335592379",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/573356?v=4",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   }
]

[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95488219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95488219"
         }
      },
      "body" : "maybe define these constants ourselves rather than inlining them?",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T00:17:23Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95488219",
      "id" : 95488219,
      "original_commit_id" : "4fde6a8b8ba6806054e2ab4add32cc301624c300",
      "original_position" : 5,
      "path" : "src/test/scriptnum_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 16044458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95488219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571569"
         }
      },
      "body" : "Interesting. This would also have failed on CPUs that don't support non-aligned reads (though I know of no such instances reported).",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T12:47:51Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571569",
      "id" : 95571569,
      "original_commit_id" : "4fde6a8b8ba6806054e2ab4add32cc301624c300",
      "original_position" : 31,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16129835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571816"
         }
      },
      "body" : "What is the problem that sanitize reports here? I don't understand the rationale for using \"40\" here.",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T12:49:41Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571816",
      "id" : 95571816,
      "original_commit_id" : "4fde6a8b8ba6806054e2ab4add32cc301624c300",
      "original_position" : 5,
      "path" : "src/test/scriptnum_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 16130087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624023"
         }
      },
      "body" : "I've just replaced them with integer constants and added a comment.",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T17:05:22Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624023",
      "id" : 95624023,
      "original_commit_id" : "4fde6a8b8ba6806054e2ab4add32cc301624c300",
      "original_position" : 5,
      "path" : "src/test/scriptnum_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 16185633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624120"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624120"
         }
      },
      "body" : "Seems ARM supports unaligned reads pretty much since the architecture we support.",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T17:05:48Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624120",
      "id" : 95624120,
      "original_commit_id" : "4fde6a8b8ba6806054e2ab4add32cc301624c300",
      "original_position" : 31,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16185729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624410"
         }
      },
      "body" : "Overflow of signed integers is undefined behaviour. These numbers are added/subtracted from eachother, so that behaviour triggers. However, it doesn't matter in practice, as we only use scriptnums up to 4 bytes (which can turn into 5 bytes after arithmetic).",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T17:07:07Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624410",
      "id" : 95624410,
      "original_commit_id" : "4fde6a8b8ba6806054e2ab4add32cc301624c300",
      "original_position" : 5,
      "path" : "src/test/scriptnum_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 16186024,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I measure a 1.5% slowdown from these changes for the SHA256_32b benchmark (i7-6820HQ CPU @ 2.70GHz).",
      "created_at" : "2017-01-11T18:19:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-271950266",
      "id" : 271950266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-11T18:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271950266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661490"
         }
      },
      "body" : "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T20:11:55Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661490",
      "id" : 95661490,
      "original_commit_id" : "c6400a5ff590ac6f006fa992988101bbfd2005fa",
      "original_position" : 45,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16224887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661679"
         }
      },
      "body" : "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T20:12:56Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661679",
      "id" : 95661679,
      "original_commit_id" : "c6400a5ff590ac6f006fa992988101bbfd2005fa",
      "original_position" : 54,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16224887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661756"
         }
      },
      "body" : "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T20:13:23Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n }\n \n void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htole64(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n+    ptr[4] = (x >> 32) & 0xFF;\n+    ptr[5] = (x >> 40) & 0xFF;\n+    ptr[6] = (x >> 48) & 0xFF;\n+    ptr[7] = (x >> 56) & 0xFF;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661756",
      "id" : 95661756,
      "original_commit_id" : "c6400a5ff590ac6f006fa992988101bbfd2005fa",
      "original_position" : 67,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16224887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662046"
         }
      },
      "body" : "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T20:14:55Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n }\n \n void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htole64(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n+    ptr[4] = (x >> 32) & 0xFF;\n+    ptr[5] = (x >> 40) & 0xFF;\n+    ptr[6] = (x >> 48) & 0xFF;\n+    ptr[7] = (x >> 56) & 0xFF;\n }\n \n uint32_t static inline ReadBE32(const unsigned char* ptr)\n {\n-    return be32toh(*((uint32_t*)ptr));\n+    return (((uint32_t)(ptr[0])) << 24) |\n+           (((uint32_t)(ptr[1])) << 16) |\n+           (((uint32_t)(ptr[2])) << 8) |\n+           ((uint32_t)(ptr[3]));\n }\n \n uint64_t static inline ReadBE64(const unsigned char* ptr)\n {\n-    return be64toh(*((uint64_t*)ptr));\n+    return (((uint64_t)(ptr[0])) << 56) |\n+           (((uint64_t)(ptr[1])) << 48) |\n+           (((uint64_t)(ptr[2])) << 40) |\n+           (((uint64_t)(ptr[3])) << 32) |\n+           (((uint64_t)(ptr[4])) << 24) |\n+           (((uint64_t)(ptr[5])) << 16) |\n+           (((uint64_t)(ptr[6])) << 8) |\n+           ((uint64_t)(ptr[7]));\n }\n \n void static inline WriteBE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htobe32(x);\n+    ptr[0] = (x >> 24) & 0xFF;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662046",
      "id" : 95662046,
      "original_commit_id" : "c6400a5ff590ac6f006fa992988101bbfd2005fa",
      "original_position" : 95,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16224887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662129"
         }
      },
      "body" : "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
      "commit_id" : "82e8baab3caaadb1d923d1332c577fb91b9c5747",
      "created_at" : "2017-01-11T20:15:16Z",
      "diff_hunk" : "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n }\n \n void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htole64(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n+    ptr[4] = (x >> 32) & 0xFF;\n+    ptr[5] = (x >> 40) & 0xFF;\n+    ptr[6] = (x >> 48) & 0xFF;\n+    ptr[7] = (x >> 56) & 0xFF;\n }\n \n uint32_t static inline ReadBE32(const unsigned char* ptr)\n {\n-    return be32toh(*((uint32_t*)ptr));\n+    return (((uint32_t)(ptr[0])) << 24) |\n+           (((uint32_t)(ptr[1])) << 16) |\n+           (((uint32_t)(ptr[2])) << 8) |\n+           ((uint32_t)(ptr[3]));\n }\n \n uint64_t static inline ReadBE64(const unsigned char* ptr)\n {\n-    return be64toh(*((uint64_t*)ptr));\n+    return (((uint64_t)(ptr[0])) << 56) |\n+           (((uint64_t)(ptr[1])) << 48) |\n+           (((uint64_t)(ptr[2])) << 40) |\n+           (((uint64_t)(ptr[3])) << 32) |\n+           (((uint64_t)(ptr[4])) << 24) |\n+           (((uint64_t)(ptr[5])) << 16) |\n+           (((uint64_t)(ptr[6])) << 8) |\n+           ((uint64_t)(ptr[7]));\n }\n \n void static inline WriteBE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htobe32(x);\n+    ptr[0] = (x >> 24) & 0xFF;\n+    ptr[1] = (x >> 16) & 0xFF;\n+    ptr[2] = (x >> 8) & 0xFF;\n+    ptr[3] = x & 0xFF;\n }\n \n void static inline WriteBE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htobe64(x);\n+    ptr[0] = (x >> 56) & 0xFF;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662129",
      "id" : 95662129,
      "original_commit_id" : "c6400a5ff590ac6f006fa992988101bbfd2005fa",
      "original_position" : 104,
      "path" : "src/crypto/common.h",
      "position" : null,
      "pull_request_review_id" : 16224887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
      "updated_at" : "2017-01-12T20:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@sipa it's frustrating that the compiler doesn't recognize that pattern and peephole optimize it on platforms that support unaligned reads.  At the same time, we really should be using platform optimized SIMD sha256 on our primary platforms, so the performance of this code won't matter once we do.",
      "created_at" : "2017-01-11T22:09:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272011414",
      "id" : 272011414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-11T22:09:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272011414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Specifying &0xff for an unsigned char operation will just be ignored by the compiler (this is a no-brainer optimization). I doubt that is the cause of the slowdown.\r\n\r\nI wonder, isn't there some compiler intrinsic for \"non-aligned read of larger type\" that could be detected by autoconf and used if available?\r\n",
      "created_at" : "2017-01-12T10:50:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272132864",
      "id" : 272132864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-12T10:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272132864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Updated to use a different approach to avoiding unaligned access, which seems as fast as master for the SHA256_32b benchmark (or even faster, I consistently across different runs see a minimum duration speedup of 0.02-0.025%).\r\n\r\nI've also added a commit to remove the use of boost::dynamic_bitset (which ubsan complains about, though I can't see exactly how or why).\r\n\r\nNow all unit tests and rpc tests run succesfully with `-fsanitize=address -fsanitize=undefined -fsanitize=leak` in GCC 6.2.0.",
      "created_at" : "2017-01-12T20:32:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272275259",
      "id" : 272275259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-12T20:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272275259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "utACK individual commits: 5a0b7e4106bc97a7a67bda6bf6fbd7f26d892420 99f001eb52dda703bd326833430054b108de35a1\r\n\r\nNote: I will edit this post as I go, the list with 2 will hopefully grow, maybe up to 6",
      "created_at" : "2017-01-13T01:14:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272334094",
      "id" : 272334094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-13T01:17:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272334094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK.",
      "created_at" : "2017-01-13T06:22:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272370488",
      "id" : 272370488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-13T06:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272370488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "ACK.",
      "created_at" : "2017-01-17T14:28:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-273180085",
      "id" : 273180085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-17T14:28:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273180085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "utACK 82e8baa",
      "created_at" : "2017-01-17T14:31:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-273181786",
      "id" : 273181786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
      "updated_at" : "2017-01-17T14:31:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273181786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

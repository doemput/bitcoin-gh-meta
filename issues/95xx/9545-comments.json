[
   {
      "body" : "concept ACK, but please prefer final where possible",
      "created_at" : "2017-01-13T19:32:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272526604",
      "id" : 272526604,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-13T19:32:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272526604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni Done :-)",
      "created_at" : "2017-01-13T20:04:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272534231",
      "id" : 272534231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-13T20:04:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272534231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "same binaries on 9d847d2474a229f7a10d6e5fffd433aba7ce85cc, fyi",
      "created_at" : "2017-01-14T11:37:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272618763",
      "id" : 272618763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-14T11:37:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272618763",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9545#discussion_r96120956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9545"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96120956"
         }
      },
      "body" : "Isn't it easier to mark the entire class CCoinsViewTest as final?",
      "commit_id" : "9d847d2474a229f7a10d6e5fffd433aba7ce85cc",
      "created_at" : "2017-01-14T17:51:10Z",
      "diff_hunk" : "@@ -28,7 +28,7 @@ class CCoinsViewTest : public CCoinsView\n     std::map<uint256, CCoins> map_;\n \n public:\n-    bool GetCoins(const uint256& txid, CCoins& coins) const\n+    bool GetCoins(const uint256& txid, CCoins& coins) const final",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#discussion_r96120956",
      "id" : 96120956,
      "original_commit_id" : "9d847d2474a229f7a10d6e5fffd433aba7ce85cc",
      "original_position" : 5,
      "path" : "src/test/coins_tests.cpp",
      "position" : 5,
      "pull_request_review_id" : 16698859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9545",
      "updated_at" : "2017-01-14T17:51:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96120956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I verified that with GCC 6.2 at -O2, a final on either a method or a class can avoid a vtable lookup, so concept ACK for sure.\r\n\r\nI don't think we have a need for specifying final on a per-method bases, though - all examples you are applying this to can use class finals.\r\n\r\nOther classes: CCoinsViewCache (coins.h), CCoinsViewDB (txdb.h), CCoinsViewMempool (txmempool.h), CWallet (wallet/wallet.h).",
      "created_at" : "2017-01-14T18:10:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272641844",
      "id" : 272641844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-14T18:10:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272641844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa how does that mesh with @marcofalke's observation of same binaries?   Different gcc?\r\n\r\nI'd prefer if we decide to do this that we add some documentation that it's just for performance reasons and that if people change the code so there are non obvious requirements for a derived class that they should document that. It seems to me final is sometimes used to indicate don't footgun yourself by trying to derive from this.   ",
      "created_at" : "2017-01-15T22:36:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272743594",
      "id" : 272743594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-15T22:36:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272743594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos Agreed, and I think that a comment at the location of the \"final\" in that case would suffice. For ex:\r\n```\r\nclass Derived : Base\r\n{\r\n    foo() final // unsafe for derivation. Do not change to 'override'.\r\n};\r\n\r\nclass Fickle final // deriving from Fickle would be unsafe.\r\n{\r\n};\r\n```\r\nThere's no way for me to override foo() or Fickle without removing those warnings. If nothing else, it would be painfully obvious in review, and a change would have to be paired with a justification.",
      "created_at" : "2017-01-16T15:34:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272893343",
      "id" : 272893343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-16T15:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272893343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@morcos I only tested with isolated example, where class B derives from class A, and an overridden method is called on a variable of type B that comes from another module. As the compiler can't know that B isn't a reference to an object of a class C that derives from B, it has to emit the vtable lookup. But in many cases, analysis can show that this B variable points to an object of type B exactly (especially if it was constructed within the same module). If adding `final` does not change the binary, I guess that for all cases where it was introduced, the compiler was already able to infer enough. Note that there are more classes were `final` could apply.",
      "created_at" : "2017-01-16T16:00:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-272900167",
      "id" : 272900167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-01-16T16:00:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272900167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Let's not just randomly pepper `final` behind method signatures because we can.\r\n\r\n> There's no way for me to override foo() or Fickle without removing those warnings. If nothing else, it would be painfully obvious in review, and a change would have to be paired with a justification.\r\n\r\nThis sounds like a better use of `final`. Document *why* on a per-case basis.\r\nAnd prefer doing it per class instead of for every single method.\r\n",
      "created_at" : "2017-04-26T09:56:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9545#issuecomment-297327736",
      "id" : 297327736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9545",
      "updated_at" : "2017-04-26T09:56:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297327736",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

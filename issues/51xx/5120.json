{
   "assignee" : null,
   "assignees" : [],
   "body" : "We (at <a href=\"http://www.ziftr.com/\">ziftr</a>) are working on a cryptocurrency API and may want to alter the RPC interface in our copy of the codebase. We think that the alterations to the RPC interface that we would like to make may be useful to others, and we hope that any work we do will be available to the bitcoin community. Here we are outlining the proposal to get some feedback about how one could implement these changes.\n\nEssentially, we want to split up the work that is done in <tt>signrawtransaction</tt> so that the different parts can be used individually. This will make the RPC calls more modular, offering more flexibility to any developer who is using the daemon's RPC interface.\n\nThe basic idea is that <tt>signrawtransaction</tt> currently has to calculate the hashes that need to be signed, sign them with the appropriate private keys, and then bundle everything up into a raw transaction. We would like to make it so that each of these could be done separately. For us, this means the middle step, the calculation of signatures, being done on a different device.\n\nThe first change we would like to make is to add an RPC method call named <tt>getdatatosign</tt>. This takes the raw transaction and a few optional parameters, and calculates all data that must be signed. The returned value from this could be fed directly to <tt>signrawtransaction</tt>.\n\n// Creates an array of data that needs to be signed\n\n<pre>\ngetdatatosign \"hexstring\"ÃÂ ( [{\"txid\":\"id\", \"vout\":n, \"scriptPubKey\":\"hex\", \"redeemScript\":\"hex\"}, ...] sighashtype )\n</pre>\n\n\nReturn data format:\n\n<pre>\n[\n  {\n    \"txid\":\"id\",\n    \"vout\":n,\n    \"scriptPubKey\":\"hex\",\n    \"redeemScript\":\"hex\", /* Only present if p2sh. */\n    \"tosign\":\"hex\",\n    \"pubkey\": \"hex\", /* Present if not pay to pub key, which is most of the time. */\n    \"r\":\"\",\n    \"s\":\"\"\n  }\n]\n</pre>\n\n\n// If r and s are filled in, possibly by someone else who owns the keys,\n// then this can just bundle them up into the transaction ready to send.ÃÂ \n// If they don't exist,ÃÂ the daemon will look for the appropriate\n// keys to sign with and fill them in (or use the given private keys).\n// The datatosign, r, and s fields are not required to be keys in the\n// JSON object, so that this change is backwards compatible.ÃÂ \n\n<pre>\nsignrawtransactionÃÂ \"hexstring\"ÃÂ (ÃÂ [{\"txid\":\"id\",ÃÂ \"vout\":n,ÃÂ \"scriptPubKey\":\"hex\",ÃÂ \"redeemScript\":\"hex\",ÃÂ \"datatosign\":\"hex\",ÃÂ \"r\":\"hex\",ÃÂ \"s\":\"hex\"ÃÂ }]ÃÂ [\"privatekey1\",...] sighashtype )\n</pre>\n\n<pre>\n{\n    \"hex\": \"0100000001ba8bb652d537989726d242bf99153fb4e5de262ecbaa975ab1715abbb0597fe7000000006b483045022100e6db653e65c48838fc7d58f7696b20bb74d27b315a0a3cba3e80f6b9e5fc0d3402207a2613efe02663d8f8933922a328b8333d0acd31d43c738e2fbcc58d3f3ace87012102c1e842bd2c8314f0699d606a1c712e26abc9836d6f76fc64ee3f73f31b753945ffffffff0110a8a600000000001976a9142badcf56c4fb168773ff661606e5c9b8eb55d5fd88ac00000000\",\n    \"complete\": true\n}\n</pre>\n\n\nEssentially, this just exports some of the work that currently is done inÃÂ <tt>signrawtransaction</tt>ÃÂ to a second method, andÃÂ <tt>signrawtransaction</tt>ÃÂ can still be used as it was before, but now it can make a call toÃÂ <tt>getdatatosign</tt>ÃÂ to do the first part of its work.\n\nThese may not be the optimal method names, parameters, or return values for such methods, but hopefully they convey the proposal. The goal is that this will make the rpc calls more modular, so that developers will have more flexibility in their applications. In particular, it will make it easier for applications where the signing is to be done on a different device.\n\nI'm sure there are details that need to be worked out, but I think the core idea here is a good one. Please let me know if there is anything here you think can be improved! Any feedback on this proposal would be greatly appreciated.\n",
   "closed_at" : "2017-03-28T02:47:47Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/4519249?v=3",
      "events_url" : "https://api.github.com/users/scmorse/events{/privacy}",
      "followers_url" : "https://api.github.com/users/scmorse/followers",
      "following_url" : "https://api.github.com/users/scmorse/following{/other_user}",
      "gists_url" : "https://api.github.com/users/scmorse/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/scmorse",
      "id" : 4519249,
      "login" : "scmorse",
      "organizations_url" : "https://api.github.com/users/scmorse/orgs",
      "received_events_url" : "https://api.github.com/users/scmorse/received_events",
      "repos_url" : "https://api.github.com/users/scmorse/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/scmorse/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/scmorse/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/scmorse"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5120/comments",
   "created_at" : "2014-10-22T22:07:19Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5120/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/5120",
   "id" : 46566651,
   "labels" : [
      {
         "color" : "0052cc",
         "default" : false,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5120/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 5120,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Proposal: RPC Interface Improvements",
   "updated_at" : "2017-03-28T02:47:47Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5120",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/4519249?v=3",
      "events_url" : "https://api.github.com/users/scmorse/events{/privacy}",
      "followers_url" : "https://api.github.com/users/scmorse/followers",
      "following_url" : "https://api.github.com/users/scmorse/following{/other_user}",
      "gists_url" : "https://api.github.com/users/scmorse/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/scmorse",
      "id" : 4519249,
      "login" : "scmorse",
      "organizations_url" : "https://api.github.com/users/scmorse/orgs",
      "received_events_url" : "https://api.github.com/users/scmorse/received_events",
      "repos_url" : "https://api.github.com/users/scmorse/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/scmorse/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/scmorse/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/scmorse"
   }
}

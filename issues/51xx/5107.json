{
   "assignee" : null,
   "body" : "This is a step in the direction of completely decoupling the RPC server from the rest of the application.\r\n\r\nThis commit specifically addresses three issues:\r\n\r\n1) Thread locking of RPC commands at the level of server dispatch is not a good idea for two reasons:\r\n   - the RPC server shouldn't require any application-specific knowledge nor global synchronization objects (i.e. cs_main and cs_wallet)\r\n   - we completely lose the ability to optimize concurrency; it is much better to push these locks further down the call stack, ideally just around the lines of code where contention arises. For now, we take a very conservative approach and just push them down a single level by wrapping the individual non-thread-safe RPC command functions in locks.\r\n\r\nThis solution is incomplete - it is only intended to move us in the right direction. The locks are still too coarse, and some locks appear unnecessary altogether (i.e. decoderawtransaction). We just stick to the command table flags as is for now to preserve existing behavior.\r\n\r\n2) Certain RPC commands might be disabled in certain contexts (i.e. safe mode, no wallet loaded). Rather than having the RPC server handle this logic, it is preferable to have the application subscribe handlers that can throw exceptions before attempting to execute the command. So we've added a handler that gets called prior to executing the command, where the application has the opportunity to throw an exception. Another handler has been added which gets called after executing the command which is currently unused, but might be useful later on.\r\n\r\nThis solution is also incomplete. The RPC server unit still defines the command table structure, which is application-specific knowledge. This is a step in the direction of mapping method names to abstract callable objects that can be subclassed and registered by the application.\r\n\r\n3) The getblocktemplate method uses long-polling which means the connection thread must be woken up when the RPC server is shut down. Rather than signaling the condition variable cvBlockChange directly when the RPC server is stopping, it is better to provide a general signaling mechanism to let the application subscribe handlers when the server starts and stops.\r\n\r\nUltimately, it would be a good idea to have the mining rpc unit register its own handler and contain this mechanism to this unit.",
   "closed_at" : "2015-01-26T12:56:49Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5107/comments",
   "created_at" : "2014-10-20T05:37:22Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5107/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/5107",
   "id" : 46233333,
   "labels" : [
      {
         "color" : "E6F6D6",
         "name" : "Refactoring",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5107/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 5107,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/5107.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5107",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/5107.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/5107"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Remove main.h dependency from rpcserver",
   "updated_at" : "2015-01-26T12:56:49Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5107",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
      "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
      "followers_url" : "https://api.github.com/users/CodeShark/followers",
      "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/CodeShark",
      "id" : 894059,
      "login" : "CodeShark",
      "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
      "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
      "repos_url" : "https://api.github.com/users/CodeShark/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/CodeShark"
   }
}

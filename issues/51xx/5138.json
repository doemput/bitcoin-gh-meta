{
   "assignee" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
      "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sipa/followers",
      "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sipa",
      "id" : 548488,
      "login" : "sipa",
      "organizations_url" : "https://api.github.com/users/sipa/orgs",
      "received_events_url" : "https://api.github.com/users/sipa/received_events",
      "repos_url" : "https://api.github.com/users/sipa/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sipa"
   },
   "body" : "I ran into this writing a regression test; it is a weird edge case with the headers-first logic.\r\n\r\nThe setup:\r\n\r\nCreate a 200-block blockchain with blocks that have 'old' timestamps\r\n  (see https://github.com/gavinandresen/bitcoin-git/tree/chainalerts for code to do that)\r\n\r\nStart up two nodes, both of which read in that 200-block chain.\r\nConnect node_b to node_a.\r\nHave node_b generate a new block.\r\n  RESULT: node_a ignores it.\r\n\r\nHere's -debug=net output from node_b:\r\n```\r\nUpdateTip: new best=00004900679d6cfbac61afa36cd6fda7f27af0e69e909373b947567d6dcc1d74  height=201\r\nsending: inv (37 bytes) peer=1\r\nreceived: getheaders (645 bytes) peer=1\r\ngetheaders 201 to 00004900679d6cfbac61afa36cd6fda7f27af0e69e909373b947567d6dcc1d74 from peer=1\r\nsending: headers (82 bytes) peer=1\r\n```\r\nand from node_a:\r\n```\r\ngetheaders 200 to 0000000000000000000000000000000000000000000000000000000000000000 from peer=1\r\ngot inv: block 00004900679d6cfbac61afa36cd6fda7f27af0e69e909373b947567d6dcc1d74  new peer=1\r\nreceived: headers (82 bytes) peer=1\r\n```\r\n\r\nI think the bug is because since both nodes just started up and read blocks from disk, pindexLastCommonBlock is NULL -- it should be block 200. I think.\r\n```\r\n(lldb) p state\r\n(<anonymous>::CNodeState) $60 = {\r\n  nMisbehavior = 0\r\n  fShouldBan = false\r\n  name = \"127.0.0.1:59518\"\r\n  rejects = size=0 {}\r\n  pindexBestKnownBlock = 0x0000000105122e10\r\n  hashLastUnknownBlock = {\r\n    base_uint<256> = {\r\n      pn = ([0] = 0, [1] = 0, [2] = 0, [3] = 0, [4] = 0, [5] = 0, [6] = 0, [7] = 0)\r\n    }\r\n  }\r\n  pindexLastCommonBlock = 0x0000000000000000\r\n  fSyncStarted = false\r\n  nStallingSince = 0\r\n  vBlocksInFlight = size=0 {}\r\n  nBlocksInFlight = 0\r\n}\r\n```\r\n\r\nAnyway, fFetch is never set to true on line 4422:\r\n```-> 4422\t        bool fFetch = !pto->fInbound || (pindexBestHeader && (state.pindexLastCommonBlock ? state.pindexLastCommonBlock->nHeight : 0) + 144 > pindexBestHeader->nHeight);```\r\n\r\n... because state.pindexLastCommonBlock is NULL, and 0+144 < 201\r\n\r\nWriting this all down... would it make sense to fix this by always fetching when state.pindexLastCommonBlock is NULL ?\r\n\r\n",
   "closed_at" : "2015-06-01T08:53:27Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 9,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138/comments",
   "created_at" : "2014-10-24T19:06:56Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/5138",
   "id" : 46772806,
   "labels" : [
      {
         "color" : "FBBAAB",
         "name" : "Bug",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 5138,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Headers-first sync never gets going",
   "updated_at" : "2015-06-01T08:53:27Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5138",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
      "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
      "followers_url" : "https://api.github.com/users/gavinandresen/followers",
      "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/gavinandresen",
      "id" : 331997,
      "login" : "gavinandresen",
      "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
      "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
      "repos_url" : "https://api.github.com/users/gavinandresen/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/gavinandresen"
   }
}

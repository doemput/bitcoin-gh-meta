[
   {
      "body" : "This is true IMO.\r\n`WatchKeyMap::const_iterator it = mapWatchKeys.find(address);` at L22 should only be called while holding `cs_KeyStore`.\r\nI think running into a concurrency issue is very unlikely because `if (!GetKey(address, key)) {` at L21 takes (and releases though) `cs_KeyStore`.",
      "created_at" : "2016-04-18T06:44:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7901#issuecomment-211228715",
      "id" : 211228715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7901",
      "updated_at" : "2016-04-18T06:44:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211228715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Are we sure this is completely fixed? In particular, my reasoning is that key `GetPubKey()`:line30 might not be thread safe, since `GetPubKey()` uses `secp256k1_context_sign`:key.cpp:line16, which is a global variable. It seems to me that any concurrent reading and writing will result in a race condition of one kind or another. I might well be wrong about this particular example, but I think we should be sure of the fact that `GetPubKey()` and whatever it happens to call is thread safe.",
      "created_at" : "2016-04-22T17:44:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7901#issuecomment-213525731",
      "id" : 213525731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7901",
      "updated_at" : "2016-04-22T17:44:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213525731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1923530?v=3",
         "events_url" : "https://api.github.com/users/lyle-nel/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lyle-nel/followers",
         "following_url" : "https://api.github.com/users/lyle-nel/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lyle-nel/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lyle-nel",
         "id" : 1923530,
         "login" : "lyle-nel",
         "organizations_url" : "https://api.github.com/users/lyle-nel/orgs",
         "received_events_url" : "https://api.github.com/users/lyle-nel/received_events",
         "repos_url" : "https://api.github.com/users/lyle-nel/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lyle-nel/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lyle-nel/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lyle-nel"
      }
   }
]

[
   {
      "body" : "I found the issue: https://github.com/bitcoin/bitcoin/blob/326f010332a68b5b8bbf2ae9c1413d580b1bb9be/src/qt/trafficgraphwidget.cpp#L152\r\n\r\nThe backing data for the graph is sampled based on the graph range. Any change to the graph range means a different sample size so the previous data is invalid. Could:  \r\n* Always use the smallest sample size.\r\n* Change the data to store the current sample size with each sample and draw accordingly.\r\n* Resample the data on range update only if the range increases. If the graph range decreases just clear as we are now. Might not work if the range updates frequently as the slider is being dragged and not on mouse up.\r\n\r\nI would think using the smallest sample size is the best idea. Could cache the averaged values when the path is rendered, and then just clear the cache when the graph range is updated.",
      "created_at" : "2016-02-09T01:51:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7481#issuecomment-181666062",
      "id" : 181666062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7481",
      "updated_at" : "2016-02-09T01:51:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/181666062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1704049?v=3",
         "events_url" : "https://api.github.com/users/cjmalloy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjmalloy/followers",
         "following_url" : "https://api.github.com/users/cjmalloy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjmalloy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjmalloy",
         "id" : 1704049,
         "login" : "cjmalloy",
         "organizations_url" : "https://api.github.com/users/cjmalloy/orgs",
         "received_events_url" : "https://api.github.com/users/cjmalloy/received_events",
         "repos_url" : "https://api.github.com/users/cjmalloy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjmalloy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjmalloy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjmalloy"
      }
   },
   {
      "body" : "Ideally, you'd want to use the smallest sample size, but squash it as it gets older. Eg, save 375ms samples for 5 minutes, and as they age older than 5 minutes, average every pair. This doesn't work with the current scale easily, however, since the next increase after 10 minutes is 15. If approximation is good enough, though, it could start with 5m37.5s, 11m15s, 22m30s, 45m, 1h30m, 3h, 6h, 12h, 1d, etc... (disclaimer: I am biased toward this, since it describes Tonal time units)",
      "created_at" : "2016-02-09T02:03:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7481#issuecomment-181668172",
      "id" : 181668172,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7481",
      "updated_at" : "2016-02-09T02:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/181668172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "If we stay with 375ms and compress the data as it is accumulated we would need approx log2(1day / 5 m) = log2(288) = 8.17 times more storing data than the current 800 samples, or 6400 floats. If we store 375ms samples for the whole day we would need 288 times more than the current 800 samples, or 230400 floats.\r\n\r\nThe first method is tricky because the existing time intervals don't double nicely. The memory savings are 896kB (x2 for in/out), is that enough to worry about?",
      "created_at" : "2016-02-09T03:35:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7481#issuecomment-181690893",
      "id" : 181690893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7481",
      "updated_at" : "2016-02-09T04:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/181690893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1704049?v=3",
         "events_url" : "https://api.github.com/users/cjmalloy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjmalloy/followers",
         "following_url" : "https://api.github.com/users/cjmalloy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjmalloy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjmalloy",
         "id" : 1704049,
         "login" : "cjmalloy",
         "organizations_url" : "https://api.github.com/users/cjmalloy/orgs",
         "received_events_url" : "https://api.github.com/users/cjmalloy/received_events",
         "repos_url" : "https://api.github.com/users/cjmalloy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjmalloy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjmalloy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjmalloy"
      }
   },
   {
      "body" : "Yes. This is a issue.\r\n\r\nIMO, the current sessions network statistics should be stored in the core (CNode) and should be available over RPC (for external statistic tools) and from the GUI.\r\nI did some work there (not PRed). The historical network consumption values should be stored without an additional thread. This could be achieved by storing a samples in a list whenever data goes in our out while respecting the min-delta time. This would result in non-lineare samples, so the consuming app (GUI) needs to interpolate the values in between.\r\n\r\nAlso the statics should include the recent log-per-command feature (https://github.com/bitcoin/bitcoin/pull/6589).\r\n\r\nThe RAM consumption (sample rate/history size in time) should be configurable and maybe extremely limited for bitcoind by default (non GUI usage).",
      "created_at" : "2016-02-19T16:31:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7481#issuecomment-186289253",
      "id" : 186289253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7481",
      "updated_at" : "2016-02-19T16:31:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/186289253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]

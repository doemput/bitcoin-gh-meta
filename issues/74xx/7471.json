{
   "assignee" : null,
   "assignees" : [],
   "body" : "I tried out a few options for compiling on low memory systems and collected\r\ndata on build time and memory usage.\r\n\r\nThe takeaways first (but please review the data and provide comment):\r\n\r\n1) Issue #6658 from September identified the memory requirements of the build as\r\na problem. The concern was around 1 GB, but this data shows that this can be\r\ncomfortably mitigated with gcc options or by using clang. This also holds for\r\nsystems with 512 MB memory plus 512 MB swap. Given this, issue 6658 can\r\nbe closed.\r\n\r\n2) Building with 512 MB and no swap (think Raspberry Pi 1 and Zero) is\r\npossible, but there isn't a lot of headroom. If the build becomes more memory\r\nhungry, it will push this category of users to a different option for getting\r\nbinaries. Since this is future-looking, this may not warrant this issue remaining\r\nopen, but it is worth discussing and monitoring going forward.\r\n\r\n3) The '--disable-tests' option doesn't reduce memory use.\r\n\r\n\r\nTrending Importance (Sept. 2015 to Feb. 2016)\r\n---------------------------------------------\r\n\r\nThe recent new features for pruning, mempool limiting and libsecp256k1 have\r\nmade bitcoind on low-end hardware more practical. Also very inexpensive\r\nsingle-board computers with 512 MB RAM are becoming widely available, so we can\r\nanticipate the number of node-running systems in this category to be growing.\r\n\r\nIt is desirable to preserve compile-from-source as an option running node with\r\na decent security/convenience trade-off.\r\n\r\nTest Configurations\r\n-------------------\r\n\r\n512 MB to 1 GB is assumed as the window of interest. The three system\r\nconfigurations tested are:\r\n\r\n1) A Raspberry Pi 1 Model B - 512MB RAM, no disk swap, single-core 700Mhz ARM,\r\nClass 10 SD card for the filesystem, Raspbian Jessie Lite, running headless.\r\ngcc v4.9.2, clang 3.5.0-10+rpi1\r\n\r\n2) A Raspberry Pi 2 Model B - 1GB RAM, no disk swap, quad-core 900Mhz ARM,\r\nClass 10 SD card for the filesystem, Raspbian Jessie, running an idle desktop\r\nenvironment. gcc version 4.9.2, clang version 3.5.0-10+rpi1\r\n\r\n3) A VirtualBox VM, 512MB RAM, 575MB swap, assigned one core of a AMD 1650Mhz\r\nE-450 CPU, virtual drive backed by 5400 RPM 3.5\" desktop SATA drive for swap\r\nand filesystem, Debian Jessie amd64, running headless. gcc version 4.9.2, clang\r\nversion 3.5.0-10\r\n\r\nTest Method\r\n-----------\r\n\r\n- All builds are on the branch v0.12.0rc2\r\n- All building is done with a single process to use a single core.\r\n- The GUI wallet is not part of the build\r\n- The build is with the stock distro libdb-dev and libdb++-dev, which requires\r\n--with-incompatible-bdb flag for './configure'\r\n- The elapsed time for 'make' is measured with the console 'time' utility, for\r\nreal time, user CPU time and system CPU time.\r\n- Fields marked FAIL are for when the build was not successful under the\r\nparameters of the trial.\r\n\r\nThe measurements for memory used is obtained by polling the /proc file for the\r\ncomplier pid and recording the VmPeak value like so:\r\n\r\n    $ for((i=0;;++i)) { echo $i ` grep VmPeak /proc/\\`pidof cc1plus\\`/status\r\n    | grep -o '[0-9]*'`; sleep 1 || break; } > VmPeak.txt\r\n\r\nFor clang, 'clang' is substituted for 'cc1plus':\r\n\r\n    $ for((i=0;;++i)) { echo $i ` grep VmPeak /proc/\\`pidof clang\\`/status\r\n    | grep -o '[0-9]*'`; sleep 1 || break; } > VmPeak.txt\r\n\r\nThe highest value is then extracted like so:\r\n\r\n    $ cat VmPeak.txt |awk '{print $2}' |sort -g |uniq -c |tail -n 1\r\n\r\nTrial 1.A - GCC without tuning\r\n------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb\r\n\r\n Time    | Pi 1      | Pi 2      | VM\r\n --------|-----------|-----------|-----------\r\n real    | FAIL      | FAIL      | FAIL\r\n user    | FAIL      | FAIL      | FAIL\r\n sys     | FAIL      | FAIL      | FAIL\r\n VmPeak  | 503932 kB | 734708 kB | 1037012 kB\r\n\r\nPi 1 died with error:\r\n\r\n     virtual memory exhausted: Cannot allocate memory\r\n\r\nPi 2 and the VM died with error:\r\n\r\n     g++: internal compiler error: Killed (program cc1plus)\r\n\r\nThis is Matt's original 6658 error and it happened as memory usage approached 100%.\r\n\r\nTrial 1.B - GCC without tuning, tests disabled\r\n----------------------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb --disable-tests\r\n\r\n Time    | Pi 1      | Pi 2      | VM\r\n --------|-----------|-----------|-----------\r\n real    | FAIL      | FAIL      | FAIL\r\n user    | FAIL      | FAIL      | FAIL\r\n sys     | FAIL      | FAIL      | FAIL\r\n VmPeak  | 503924 kB | 725432 kB | 1031176 kB\r\n\r\nSame result as 1.A\r\n\r\nPi 1 died with error:\r\n\r\n     virtual memory exhausted: Cannot allocate memory\r\n\r\nPi 2 and the VM died with error\r\n\r\n     g++: internal compiler error: Killed (program cc1plus)\r\n\r\n\r\nTrial 2.A - Clang\r\n-----------------\r\n\r\n    $ ./configure --with-incompatible-bdb CC=clang CXX=clang++\r\n\r\n Time    | Pi 1      | Pi 2       | VM\r\n --------|-----------|------------|-----------\r\n real    | FAIL      | 87m40.539s | 62m41.597s\r\n user    | FAIL      | 81m21.470s | 47m20.512s\r\n sys     | FAIL      | 2m4.330s   | 2m59.824s\r\n VmPeak  | 529644 kB | 638112 kB  | 990080 kB\r\n\r\nPi 1 died with error:\r\n\r\n    clang: error: unable to execute command: Segmentation fault\r\n\r\nThis was when memory use was at 100%.\r\n\r\nTrial 2.B - Clang, tests disabled\r\n---------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb --disable-tests CC=clang CXX=clang++\r\n\r\n Time    | Pi 1      | Pi 2       | VM\r\n --------|-----------|------------|-----------\r\n real    | FAIL      | 53m34.138s | 43m26.447s\r\n user    | FAIL      | 49m36.690s | 30m13.548s\r\n sys     | FAIL      | 1m14.260s  | 2m9.580s\r\n VmPeak  | 529644 kB | 638352 kB  | 990092 kB\r\n\r\nSame result as 2.A\r\n\r\nPi 1 died with error:\r\n\r\n    clang: error: unable to execute command: Segmentation fault\r\n\r\nTrial 3.A - GCC tuned with recommended options\r\n----------------------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb CXXFLAGS=\" --param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\r\n\r\n Time    | Pi 1        | Pi 2        | VM\r\n --------|-------------|-------------|-----------\r\n real    | 591m47.976s | 183m6.240s  | 103m9.526s\r\n user    | 500m14.560s | 177m33.270s | 98m38.500s\r\n sys     | 16m19.190s  | 3m11.130s   | 2m34.136s\r\n VmPeak  | 426956 kB   | 426960 kB   | 627860 kB\r\n\r\nTrial 3.B - GCC tuned with recommended options, tests disabled\r\n--------------------------------------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb --disable-tests CXXFLAGS=\" --param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\r\n\r\n Time    | Pi 1         | Pi 2        | VM\r\n --------|--------------|-------------|-----------\r\n real    | 334m52.635s  | 104m2.129s | 70m11.030s\r\n user    | 281m42.100s  | 99m40.200s | 63m27.220s\r\n sys     | 9m14.980s    | 1m52.270s  | 1m59.780s\r\n VmPeak  | 426960 kB    | 426956 kB  | 627872 kB\r\n\r\nTrial 4 - GCC tuned with aggressive ggc-min-heapsize\r\n----------------------------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb CXXFLAGS=\" --param ggc-min-expand=1 --param ggc-min-heapsize=4096\"\r\n\r\n Time    | Pi 1        | Pi 2        | VM\r\n --------|-------------|-------------|-----------\r\n real    | 626m17.587s | 196m14.033s | 112m59.351s\r\n user    | 529m31.800s | 190m44.230s | 104m0.372s\r\n sys     | 16m42.750s  | 3m10.960s   | 2m45.296s\r\n VmPeak  | 426956 kB   | 426960 kB   | 627868 kB\r\n\r\nTrial 5 - GCC tuned with aggressive ggc-min-expand\r\n--------------------------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb CXXFLAGS=\" --param ggc-min-expand=0 --param ggc-min-heapsize=32768\"\r\n\r\n Time    | Pi 1        | Pi 2        | VM\r\n --------|-------------|-------------|-----------\r\n real    | FAIL        | FAIL        | FAIL\r\n user    | FAIL        | FAIL        | FAIL\r\n sys     | FAIL        | FAIL        | FAIL\r\n VmPeak  | FAIL        | FAIL        | FAIL\r\n\r\nThis also makes the compiler EXTREMELY slow. I let it run for a day and it\r\nbarely got anywhere - probably less than 10% of the way through. It will\r\nprobably complete eventually, this is not a practical option.\r\n\r\nTrial 6 - GCC tuned with aggressive ggc-min-expand and ggc-min-heapsize\r\n-----------------------------------------------------------------------\r\n\r\n    $ ./configure --with-incompatible-bdb CXXFLAGS=\" --param ggc-min-expand=0 --param ggc-min-heapsize=4096\"\r\n\r\n Time    | Pi 1  | Pi 2  | VM\r\n --------|-------|-------|-----------\r\n real    | FAIL  | FAIL  | FAIL\r\n user    | FAIL  | FAIL  | FAIL\r\n sys     | FAIL  | FAIL  | FAIL\r\n VmPeak  | FAIL  | FAIL  | FAIL\r\n\r\nThis also runs at a milli-crawl. It also ran for a day before I killed it and\r\nit made less progress than above.\r\n\r\n\r\nYour thoughts?",
   "closed_at" : "2016-09-25T06:16:57Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 12,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7471/comments",
   "created_at" : "2016-02-05T04:07:38Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7471/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/7471",
   "id" : 131549080,
   "labels" : [
      {
         "color" : "5319e7",
         "name" : "Build system",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "02d7e1",
         "name" : "Docs and Output",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs%20and%20Output"
      },
      {
         "color" : "981023",
         "name" : "Resource usage",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7471/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 7471,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Not a lot of headroom for building with 512 MB RAM",
   "updated_at" : "2016-09-25T06:16:57Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7471",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/528853?v=3",
      "events_url" : "https://api.github.com/users/jarret/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jarret/followers",
      "following_url" : "https://api.github.com/users/jarret/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jarret/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jarret",
      "id" : 528853,
      "login" : "jarret",
      "organizations_url" : "https://api.github.com/users/jarret/orgs",
      "received_events_url" : "https://api.github.com/users/jarret/received_events",
      "repos_url" : "https://api.github.com/users/jarret/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jarret/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jarret/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jarret"
   }
}

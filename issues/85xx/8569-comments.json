[
   {
      "body" : "As defined in the [bitcoin.org developer documentation](https://bitcoin.org/en/developer-reference#version) a ```verack``` should not be <s>sent</s> processed (at all) before a mutual exchange of ```version``` messages.\r\n\r\nI'm not sure if the linked developer documentation superceeds actual reference client behavior, but it only seems good and proper that all clients must observe this handshake behavior.\r\n\r\nRather than move functionality to where it will activate (because of protocol breach), or queue a ```verack``` message until its *probably* associated ```version``` message arrives, it seems best that client code enforces the correct order? I assume (but have not established for a fact) that this is already the case for Core. \r\n\r\n> Ok, I realize all these examples are the same node, ...\r\n\r\nYour logs show ~~four~~ one peer is misbehaving and reconnecting as <peer> 2, 8, 11 and 4. Do you mean that you have only observed these premature ```verack``` messages on the node whose logs you quote above, or only from that IP address?",
      "created_at" : "2016-08-25T05:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242282351",
      "id" : 242282351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T07:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242282351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6916056?v=3",
         "events_url" : "https://api.github.com/users/venzen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/venzen/followers",
         "following_url" : "https://api.github.com/users/venzen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/venzen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/venzen",
         "id" : 6916056,
         "login" : "venzen",
         "organizations_url" : "https://api.github.com/users/venzen/orgs",
         "received_events_url" : "https://api.github.com/users/venzen/received_events",
         "repos_url" : "https://api.github.com/users/venzen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/venzen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/venzen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/venzen"
      }
   },
   {
      "body" : "To simplify my query: What should a node do if a verack (after sending version) is not received during a defined period of time? If nothing, then I think code that runs as a result of a verack should only be code that deals with the verack (which currently, is no code, and so the response to a verack should be the same as the current response to a NOTFOUND message - i.e. nothing).",
      "created_at" : "2016-08-26T06:04:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242637984",
      "id" : 242637984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T06:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242637984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Doesn't the normal receive timeout kick in in that case?\n",
      "created_at" : "2016-08-26T07:17:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242648947",
      "id" : 242648947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T07:17:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242648947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@rebroad, ```version``` sets ```pfrom->fSuccessfullyConnected``` and the subsequent ```verack``` sets state ```fCurrentlyConnected = true```, so the implication of *not* sending a ```verack``` ensues from there.\r\n\r\nWhichever way, according to main.cpp, the node in your example gets punished (presumably for the incoming ```verack``` in response to the local node's initiating ```version``` message). The ```verack``` is correctly logged as FAILED since it arrived *before* the obligatory ```version``` message - which arrives but is never verack'd - and an eventual connection timeout should result.\r\n\r\nAt the risk of seeming rude, I have to agree with @sipa that self-study is a basic requirement in this project. All of the above information is apparent from the code. Sometimes it is easy to just ask the general audience in Github, but consider that *everyone* subscribed to this project receives *every* comment via email. If the person asking the question shows that they have not done the required foundation or research reading away from this repository, then rudimentary questions can break concentration, distract, or even be plain annoying. Instead of spraying with a machine gun, we should do homework on our own and then snipe issues and bugs like a self-sufficient sharpshooter. That way no-one has to \"carry\" someone else and the work is autonomous and a contribution.\r\n\r\nThe node in your logs is behaving irregularly. There may be many reasons for that - the primary being that it is running modified code or that it is an alternative implementation that masquerades as a Satoshi client.\r\n\r\nI must mention that in the time since your original comment I have tested outbound connections to a 0.11.1 client without sending ```verack``` and the peer connections persisted beyond timeout, with the remote node seemingly \"forgiving\" the incomplete handshake. 0.12.1 behaves as in your logs and times out a connection that is not verack'd. So your comment is useful despite lacking due diligence on your part.",
      "created_at" : "2016-08-26T08:38:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242667856",
      "id" : 242667856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T08:38:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242667856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6916056?v=3",
         "events_url" : "https://api.github.com/users/venzen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/venzen/followers",
         "following_url" : "https://api.github.com/users/venzen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/venzen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/venzen",
         "id" : 6916056,
         "login" : "venzen",
         "organizations_url" : "https://api.github.com/users/venzen/orgs",
         "received_events_url" : "https://api.github.com/users/venzen/received_events",
         "repos_url" : "https://api.github.com/users/venzen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/venzen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/venzen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/venzen"
      }
   },
   {
      "body" : "If a node receives a verack before receiving a version, it should disconnect the peer who sent it, as they are not obeying the protocol.",
      "created_at" : "2016-08-27T13:32:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242917372",
      "id" : 242917372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-27T13:32:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242917372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I'm inclined to agree with you. However, this is not what the satoshi client has ever done so far. I'm just making this code change to bring clarity to what the code does - i.e. make it more understandable and help avoid changes that change the functionality in adverse ways. Would you like me to change my pull that makes verack a no-op and instead make it disconnect a node after a certain timeout?",
      "created_at" : "2016-08-29T06:15:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-243040363",
      "id" : 243040363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-29T06:15:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243040363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@venzen I'm running 0.13 and my node isn't timing out connections that don't send a verack... I've not managed to locate the code which is supposed to do that - I will have another look for it. I also don't receive any emails from github for updates to issues, so I wasn't aware other people did. I'll try to figure out why this is too - I would expect that people only subscribe to these comments when they click the subscribe button to the right (or perhaps they subscribe automatically when they comment).\r\n\r\nOk, looking at my the latest HEAD, when a verack is received, if fNetworkNode is set (I'm not clear why we need this variable - are you?) fCurrentlyConnected is also set to true. This variable is used only by main.cpp and only used in 4 places. (1. where it's defined. 2. where it's initialised to false. 3. In FinalizeNode which is only run when a node is already being disconnected, and finally 4. Setting it to true when receiving the verack!) so therefore, verack doesn't appear to form any part of any disconnection logic, and fCurrentlyConnected seems to be a pretty redundant variable.\r\n\r\nIf I've overlooked anything, please feel free to let me know, but I do think I've been doing my research!",
      "created_at" : "2016-08-29T06:22:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-243041367",
      "id" : 243041367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-29T06:28:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243041367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   }
]

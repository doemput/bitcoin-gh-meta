[
   {
      "body" : "Concept ACK, thanks for doing this!\r\n",
      "created_at" : "2016-08-25T08:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-242313821",
      "id" : 242313821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-08-25T08:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242313821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@daira This is probably interesting to you as well.\n\nThe reason for this alternative is that @laanwj pointed out that #8451 is a step in the wrong direction if we want a more encapsulated CTransaction (which perhaps no longer uses the same representation, but uses a single-malloced block of data for example).",
      "created_at" : "2016-08-25T09:14:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-242326076",
      "id" : 242326076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-08-25T09:19:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242326076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r76509386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76509386"
         }
      },
      "body" : "This ignores witness data. Is that intentional?\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-08-27T03:35:24Z",
      "diff_hunk" : "@@ -455,10 +457,20 @@ struct CMutableTransaction\n         SerializeTransaction(*this, s, ser_action, nType, nVersion);\n     }\n \n+    template <typename Stream>\n+    CMutableTransaction(Stream& s, int nType, int nVersion) {\n+        ::Unserialize(s, *this, nType, nVersion);\n+    }\n+\n     /** Compute the hash of this CMutableTransaction. This is computed on the\n      * fly, as opposed to GetHash() in CTransaction, which uses a cached result.\n      */\n     uint256 GetHash() const;\n+\n+    friend bool operator==(const CMutableTransaction& a, const CMutableTransaction& b)\n+    {\n+        return a.GetHash() == b.GetHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r76509386",
      "id" : 76509386,
      "original_commit_id" : "870833d120e9b17e88e6b0cbcdaf734c643b4148",
      "original_position" : 70,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76509386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr: No, but it's what the old code did as well (it automatically converted the CMutableTransactions to CTransaction, and then invoked its operator== which only compares the hashes).",
      "created_at" : "2016-08-27T16:45:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-242927693",
      "id" : 242927693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-08-27T16:45:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242927693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> This PR implements the latter - which I believe to be well-defined but very ugly. Suggestions or rants welcome.\r\n\r\nMy understanding was that even this hack is [illegal and UB](https://stackoverflow.com/questions/12908398/can-placement-new-and-vectordata-be-used-to-replace-elements-in-a-vector).\r\nAnother [good explanation of the edge cases and reasons against this](https://stackoverflow.com/questions/4136156/const-member-and-assigment-operator-how-to-avoid-the-ub).\r\nThe triviality of causing UB,  even with extreme caution is probably not acceptable,  especially for miners who could potentially lose out on their reward.\r\n\r\nAs for an alternative solution,  I don't see one beyond the mass-copy at this point, but I'm having a look around.\r\n\r\nThe underlying conflict is assignment and `const`... you usually can't have both without doing something illegal... (in C++)",
      "created_at" : "2016-08-29T00:59:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-243011281",
      "id" : 243011281,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-08-29T07:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243011281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@dcousens Thanks. I will switch to a less efficient mechanism.\n",
      "created_at" : "2016-08-29T07:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-243052533",
      "id" : 243052533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-08-29T07:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243052533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "S&M request: please rebase pain ;-)",
      "created_at" : "2016-09-15T08:00:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-247262653",
      "id" : 247262653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-09-15T08:00:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247262653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2016-09-19T11:15:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-247966715",
      "id" : 247966715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-09-19T11:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247966715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Would it be possible to simply change the representation of a block so the first transaction is handled separately? Perhaps even building up the hashtree so updating the root doesn't require recomputing everything?",
      "created_at" : "2016-09-23T17:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249253589",
      "id" : 249253589,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-09-23T17:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249253589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "As a follow-up I just plan to turn CBlock::vtx into a vector of\nshared_ptr's. That way we can more easily construct blocks from the\nmempool, more easily readd disconnected transactions back to the mempool,\nand don't need all this hackery to update the coinbase.\n",
      "created_at" : "2016-09-23T17:32:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249254325",
      "id" : 249254325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-09-23T17:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249254325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2016-09-23T19:29:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249282002",
      "id" : 249282002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-09-23T19:29:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249282002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Needs rebase.",
      "created_at" : "2016-09-24T12:39:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249362805",
      "id" : 249362805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-09-24T12:39:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249362805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2016-10-02T23:46:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-251004497",
      "id" : 251004497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-10-02T23:46:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251004497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2016-10-21T19:40:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-255448553",
      "id" : 255448553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-10-21T19:40:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255448553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85583860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85583860"
         }
      },
      "body" : "make CSerActionSerialize::ForRead() and CSerActionUnserialize::ForRead() constexpr, then you can static_assert at build-time instead.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T18:21:16Z",
      "diff_hunk" : "@@ -376,22 +372,29 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n-\n-    CTransaction& operator=(const CTransaction& tx);\n+    CTransaction(CMutableTransaction &&tx);\n \n     ADD_SERIALIZE_METHODS;\n \n+    template <typename Stream>\n+    CTransaction(Stream& s, int nType, int nVersion) : CTransaction(CMutableTransaction(s, nType, nVersion)) {}\n+\n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        assert(!ser_action.ForRead()); /* Cannot deserialize CTransaction directly, as it has const fields */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85583860",
      "id" : 85583860,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 38,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 6293878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85583860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85593812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85593812"
         }
      },
      "body" : "nit: lol, can we get a real variable name here?\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T19:17:05Z",
      "diff_hunk" : "@@ -173,16 +182,32 @@ class CBlockHeaderAndShortTxIDs {\n                     static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\n                 }\n             }\n+\n+            uint64_t nptx;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85593812",
      "id" : 85593812,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 91,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85593812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595237"
         }
      },
      "body" : "Nit: could accept a unique_ptr&& so the API documents the ownership semantics\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T19:26:33Z",
      "diff_hunk" : "@@ -29,9 +27,15 @@ QList<SendCoinsRecipient> WalletModelTransaction::getRecipients()\n \n CWalletTx *WalletModelTransaction::getTransaction()\n {\n-    return walletTransaction;\n+    return walletTransaction.get();\n }\n \n+void WalletModelTransaction::setTransaction(CWalletTx* tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595237",
      "id" : 85595237,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 27,
      "path" : "src/qt/walletmodeltransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 6304822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595901"
         }
      },
      "body" : "Can you make this a define based on the other block size limits and min transaction size isntead of making it unexplained magic?\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T19:30:29Z",
      "diff_hunk" : "@@ -10,6 +10,8 @@\n #include \"serialize.h\"\n #include \"uint256.h\"\n \n+#define MAX_BLOCK_TRANSACTIONS 16665",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595901",
      "id" : 85595901,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 4,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85598579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85598579"
         }
      },
      "body" : "Can't you std::move here? That object is not used anywhere hereafter, except to be destructed.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T19:48:38Z",
      "diff_hunk" : "@@ -3511,10 +3511,19 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n             out.scriptPubKey[5] = 0xed;\n             memcpy(&out.scriptPubKey[6], witnessroot.begin(), 32);\n             commitment = std::vector<unsigned char>(out.scriptPubKey.begin(), out.scriptPubKey.end());\n-            const_cast<std::vector<CTxOut>*>(&block.vtx[0].vout)->push_back(out);\n-            block.vtx[0].UpdateHash();\n+            mcoinbase.vout.emplace_back(std::move(out));\n         }\n     }\n+\n+    // We need a full copy of vtx to modify the coinbase.\n+    std::vector<CTransaction> vtx;\n+    vtx.reserve(block.vtx.size());\n+    vtx.emplace_back(std::move(mcoinbase));\n+    for (size_t i = 1; i < block.vtx.size(); i++) {\n+        vtx.emplace_back(block.vtx[i]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85598579",
      "id" : 85598579,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 33,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85598579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599223"
         }
      },
      "body" : "It seems like you're making a needless copy here? Why not just\nCTransaction tx(vRecv, vRecv.nType, vRecv.nVersion) (or, better yet, make a new constructor which knows how to pull out nType and nVersion).\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T19:52:56Z",
      "diff_hunk" : "@@ -5530,8 +5539,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         deque<COutPoint> vWorkQueue;\n         vector<uint256> vEraseQueue;\n-        CTransaction tx;\n-        vRecv >> tx;\n+        CTransaction tx = vRecv.Construct<CTransaction>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599223",
      "id" : 85599223,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 55,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599247"
         }
      },
      "body" : "I think you can move here, too.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T19:53:08Z",
      "diff_hunk" : "@@ -603,6 +602,14 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n-    pblock->vtx[0] = txCoinbase;\n+    // We need a full copy of vtx to modify the coinbase.\n+    std::vector<CTransaction> vtx;\n+    vtx.reserve(pblock->vtx.size());\n+    vtx.emplace_back(std::move(txCoinbase));\n+    for (size_t i = 1; i < pblock->vtx.size(); i++) {\n+        vtx.emplace_back(pblock->vtx[i]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599247",
      "id" : 85599247,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 20,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85606084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85606084"
         }
      },
      "body" : "Same here: needless copy sucks.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T20:38:37Z",
      "diff_hunk" : "@@ -75,8 +81,7 @@ static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptP\n {\n     try {\n         TxInputStream stream(SER_NETWORK, PROTOCOL_VERSION, txTo, txToLen);\n-        CTransaction tx;\n-        stream >> tx;\n+        CTransaction tx = stream.Construct<CTransaction>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85606084",
      "id" : 85606084,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 19,
      "path" : "src/script/bitcoinconsensus.cpp",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85606084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608383"
         }
      },
      "body" : "moved here, used below\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T20:53:00Z",
      "diff_hunk" : "@@ -2422,7 +2420,9 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.reset(new CWalletTx(this, CTransaction(std::move(txNew))));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608383",
      "id" : 85608383,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 62,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 6304822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608862"
         }
      },
      "body" : "I really dont like adding methods here that we just assert(false) on...would prefer to just call the constructor directly instead.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T20:55:48Z",
      "diff_hunk" : "@@ -958,6 +958,25 @@ class CSizeComputer\n     size_t size() const {\n         return nSize;\n     }\n+\n+    /** Unimplemented, but needed inside unused SerializeOp deserialization branches */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608862",
      "id" : 85608862,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 5,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85609261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85609261"
         }
      },
      "body" : "Tiny nit: can you move this down to right above SendMoney, so its clear that its not init'd until then 9and in the next two functions as well)\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T20:58:50Z",
      "diff_hunk" : "@@ -410,21 +413,23 @@ UniValue sendtoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount for send\");\n \n     // Wallet comments\n-    CWalletTx wtx;\n-    if (request.params.size() > 2 && !request.params[2].isNull() && !request.params[2].get_str().empty())\n-        wtx.mapValue[\"comment\"] = request.params[2].get_str();\n-    if (request.params.size() > 3 && !request.params[3].isNull() && !request.params[3].get_str().empty())\n-        wtx.mapValue[\"to\"]      = request.params[3].get_str();\n+    std::unique_ptr<CWalletTx> wtx;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85609261",
      "id" : 85609261,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 30,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85609261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85610849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85610849"
         }
      },
      "body" : "Might as well make the line above this an assert as well (and remove this line)\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-28T21:09:47Z",
      "diff_hunk" : "@@ -319,15 +349,10 @@ class CWalletTx : public CMerkleTx\n             Init(NULL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85610849",
      "id" : 85610849,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 45,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 6303406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85610849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I'd like to first get #9039 reviewed, as that would remove the need for the Construct method in streams (and thus allowing to construct an object directly by passing a stream into its constructor).",
      "created_at" : "2016-10-29T23:43:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-257122605",
      "id" : 257122605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-10-29T23:43:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Agreed, let's do #9039 first.\n\nOn October 29, 2016 7:43:16 PM EDT, Pieter Wuille <notifications@github.com> wrote:\n>I'd like to first get #9039 reviewed, as that would remove the need for\n>the Construct method in streams (and thus allowing to construct an\n>object directly by passing a stream into its constructor).\n>\n>-- \n>You are receiving this because you commented.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-257122605\n",
      "created_at" : "2016-10-29T23:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-257122633",
      "id" : 257122633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-10-29T23:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122633",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650371"
         }
      },
      "body" : "If CTransaction is entirely immutable, a move constructor would just be identical to a copy constructor, so no need. We could leave a move constructor that only moves the (mutable) witness field, but that would get more complicated with #8589 (which moves the witness data inside CTxIn). I think a better (but follow-up) change would be changing CBlock::vtx to a `std::vector<std::shared_ptr<CTransaction>>`.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-29T23:47:02Z",
      "diff_hunk" : "@@ -3511,10 +3511,19 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n             out.scriptPubKey[5] = 0xed;\n             memcpy(&out.scriptPubKey[6], witnessroot.begin(), 32);\n             commitment = std::vector<unsigned char>(out.scriptPubKey.begin(), out.scriptPubKey.end());\n-            const_cast<std::vector<CTxOut>*>(&block.vtx[0].vout)->push_back(out);\n-            block.vtx[0].UpdateHash();\n+            mcoinbase.vout.emplace_back(std::move(out));\n         }\n     }\n+\n+    // We need a full copy of vtx to modify the coinbase.\n+    std::vector<CTransaction> vtx;\n+    vtx.reserve(block.vtx.size());\n+    vtx.emplace_back(std::move(mcoinbase));\n+    for (size_t i = 1; i < block.vtx.size(); i++) {\n+        vtx.emplace_back(block.vtx[i]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650371",
      "id" : 85650371,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 33,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 6355861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650377"
         }
      },
      "body" : "See #9039.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-29T23:47:43Z",
      "diff_hunk" : "@@ -5530,8 +5539,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         deque<COutPoint> vWorkQueue;\n         vector<uint256> vEraseQueue;\n-        CTransaction tx;\n-        vRecv >> tx;\n+        CTransaction tx = vRecv.Construct<CTransaction>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650377",
      "id" : 85650377,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 55,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 6355864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650386"
         }
      },
      "body" : "See #9039 (though I think after that, we won't actually need this unimplemented branch anymore).\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-10-29T23:49:26Z",
      "diff_hunk" : "@@ -376,22 +372,29 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n-\n-    CTransaction& operator=(const CTransaction& tx);\n+    CTransaction(CMutableTransaction &&tx);\n \n     ADD_SERIALIZE_METHODS;\n \n+    template <typename Stream>\n+    CTransaction(Stream& s, int nType, int nVersion) : CTransaction(CMutableTransaction(s, nType, nVersion)) {}\n+\n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        assert(!ser_action.ForRead()); /* Cannot deserialize CTransaction directly, as it has const fields */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650386",
      "id" : 85650386,
      "original_commit_id" : "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
      "original_position" : 38,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 6355870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased on top of #9125, using a more efficent approach that turns more CTransactions into shared_ptrs (see updated PR description).\r\n\r\nThis invalidates any earlier review, sorry.",
      "created_at" : "2016-11-13T01:33:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-260160521",
      "id" : 260160521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-11-13T01:38:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260160521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88551255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88551255"
         }
      },
      "body" : "unneeded?\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-17T21:33:51Z",
      "diff_hunk" : "@@ -642,10 +642,12 @@ static int CommandLineRawTx(int argc, char* argv[])\n                 throw runtime_error(\"invalid transaction encoding\");\n \n             startArg = 2;\n-        } else\n+        } else {\n+            txDecodeTmp = MakeTransactionRef();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88551255",
      "id" : 88551255,
      "original_commit_id" : "f630f2ee0de07c1d7b605acb7822478939b6aae6",
      "original_position" : 15,
      "path" : "src/bitcoin-tx.cpp",
      "position" : null,
      "pull_request_review_id" : 9122837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88551255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581370"
         }
      },
      "body" : "Where is this operator used? CTransactionRef tx is public.\nMaybe a getter and making it protected would be better?\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-18T00:58:05Z",
      "diff_hunk" : "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581370",
      "id" : 88581370,
      "original_commit_id" : "c1955323ad9135d8e845a885063eb608c250beb3",
      "original_position" : 32,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 9152005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581548"
         }
      },
      "body" : "This is an implicit conversion operator. It allows you to pass a CWalletTx in any place where a 'const CTransaction&' is expected. I can avoid it by changing a number of extra lines.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-18T00:59:58Z",
      "diff_hunk" : "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581548",
      "id" : 88581548,
      "original_commit_id" : "c1955323ad9135d8e845a885063eb608c250beb3",
      "original_position" : 32,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 9152176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88582257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88582257"
         }
      },
      "body" : "Nope, without it, `bitocin-tx -create` segfaults.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-18T01:05:46Z",
      "diff_hunk" : "@@ -642,10 +642,12 @@ static int CommandLineRawTx(int argc, char* argv[])\n                 throw runtime_error(\"invalid transaction encoding\");\n \n             startArg = 2;\n-        } else\n+        } else {\n+            txDecodeTmp = MakeTransactionRef();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88582257",
      "id" : 88582257,
      "original_commit_id" : "f630f2ee0de07c1d7b605acb7822478939b6aae6",
      "original_position" : 15,
      "path" : "src/bitcoin-tx.cpp",
      "position" : null,
      "pull_request_review_id" : 9152833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88582257",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88584661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88584661"
         }
      },
      "body" : "oh, I see, it's just to avoid extra disruption. I would prefer it gone, yes. But it doesn't need to be in this PR. Thoughts on the getter instead of a tx being public? Changing that shouldn't extra disruption. I guess this can be done later too, but it's \"free\" now disruption-wise.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-18T01:27:42Z",
      "diff_hunk" : "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88584661",
      "id" : 88584661,
      "original_commit_id" : "c1955323ad9135d8e845a885063eb608c250beb3",
      "original_position" : 32,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 9155041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88584661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88585691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88585691"
         }
      },
      "body" : "Perhaps this could be turned into doxygen documentation for the deserializer constructor. ie \"This constructor is provided instead of a deserialize method since the latter requires violating the const nature of most fields in CTransaction\" or something of the sort. \n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-18T01:38:58Z",
      "diff_hunk" : "@@ -374,25 +382,27 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n     CTransaction(CMutableTransaction &&tx);\n \n-    CTransaction& operator=(const CTransaction& tx);\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        SerializeTransaction(*this, s, ser_action);\n-        if (ser_action.ForRead()) {\n-            UpdateHash();\n-        }\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        SerializeTransaction(*this, s);\n     }\n \n+    /* No Unserialize method. Use the deserializing constructor below instead. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88585691",
      "id" : 88585691,
      "original_commit_id" : "63296e690a0805bc6501d69d100add8c0abdeb3c",
      "original_position" : 167,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 9156005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88585691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK c1955323ad9135d8e845a885063eb608c250beb3 \r\nleft-UnserializeTransaction-separation-from-SerializeTransaction-for-another-day utACK  63296e690a0805bc6501d69d100add8c0abdeb3c",
      "created_at" : "2016-11-18T01:50:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-261426628",
      "id" : 261426628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-11-18T01:51:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261426628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88631885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88631885"
         }
      },
      "body" : "Whoops, I see. Initializing txDecodeTmp above (line 628) with a nullptr might make it more obvious to a casual reader that this points to nowhere initially (though you'd think the \"Ref\" part would've given it away...). No big deal though.\n",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-18T10:22:03Z",
      "diff_hunk" : "@@ -642,10 +642,12 @@ static int CommandLineRawTx(int argc, char* argv[])\n                 throw runtime_error(\"invalid transaction encoding\");\n \n             startArg = 2;\n-        } else\n+        } else {\n+            txDecodeTmp = MakeTransactionRef();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88631885",
      "id" : 88631885,
      "original_commit_id" : "f630f2ee0de07c1d7b605acb7822478939b6aae6",
      "original_position" : 15,
      "path" : "src/bitcoin-tx.cpp",
      "position" : null,
      "pull_request_review_id" : 9199894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88631885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2016-11-22T19:08:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-262334910",
      "id" : 262334910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-11-22T19:08:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262334910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "tested ACK! (you might want to rebase, it applies with a bit of fuzz)",
      "created_at" : "2016-11-25T20:10:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-263017714",
      "id" : 263017714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-11-25T20:10:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263017714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89933330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89933330"
         }
      },
      "body" : "Hmm...this behavior is very strange. We are leaving hash null, and while this isnt a behavior change, I cant imagine it is good...",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-29T03:01:35Z",
      "diff_hunk" : "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89933330",
      "id" : 89933330,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 35,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10461172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89933330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89934348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89934348"
         }
      },
      "body" : "nit: I believe the usual term is \"Deserialize\"",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-29T03:13:55Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89934348",
      "id" : 89934348,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 7,
      "path" : "src/primitives/transaction.h",
      "position" : 7,
      "pull_request_review_id" : 10461172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89934348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937091"
         }
      },
      "body" : "It basically defines the hash of the empty transaction (which by consensus is always invalid) as 0, rather than technically SHA256^2(0x00000000000000000000).",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-29T03:57:08Z",
      "diff_hunk" : "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937091",
      "id" : 89937091,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 35,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10464888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937126"
         }
      },
      "body" : "I agree, but whomever wrote serialize.h originally did not. The implicitly-defined method that classes get for deserialization is called `Unserialize`.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-29T03:57:49Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937126",
      "id" : 89937126,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 7,
      "path" : "src/primitives/transaction.h",
      "position" : 7,
      "pull_request_review_id" : 10464917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89944332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89944332"
         }
      },
      "body" : "It seems strange that you could construct the same transaction via CMutableTransaction or via CTransaction, and have them have a different hash, and be operator!=. Maybe not something to fix for this PR, though.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-29T05:43:44Z",
      "diff_hunk" : "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89944332",
      "id" : 89944332,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 35,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10471696,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89944332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90330945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330945"
         }
      },
      "body" : "Maybe `DecodeHexTx` should be changed to return `CMutableTransaction` instead of `CTransaction`. It seems awkward to require use of shared_ptr for a low-level decoding function, and `CMutableTransaction` would also let you get rid of the segfault workaround in bitcoin-tx.cpp.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-30T21:22:18Z",
      "diff_hunk" : "@@ -90,7 +90,7 @@ CScript ParseScript(const std::string& s)\n     return result;\n }\n \n-bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx, bool fTryNoWitness)\n+bool DecodeHexTx(CTransactionRef& tx, const std::string& strHexTx, bool fTryNoWitness)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90330945",
      "id" : 90330945,
      "original_commit_id" : "0482f43c171f035ebb72567d1325ff8f10820488",
      "original_position" : 5,
      "path" : "src/core_read.cpp",
      "position" : null,
      "pull_request_review_id" : 10851901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90333411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90333411"
         }
      },
      "body" : "Maybe add a todo comment to remove this operator in the future.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-30T21:34:56Z",
      "diff_hunk" : "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90333411",
      "id" : 90333411,
      "original_commit_id" : "c1955323ad9135d8e845a885063eb608c250beb3",
      "original_position" : 32,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 10851901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90333411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90339716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90339716"
         }
      },
      "body" : "This `std::forward` stuff is interesting because it means that the `SetTx` method and the `CMerkleTx` and `CWalletTx` constructors can all be called with arguments for any of the 3 non-template overloads of `MakeTransactionRef`, or with arguments for any of the 4 overloaded `CTransaction` constructors. But I wonder if you would consider defining `SetTx` more simply as:\r\n\r\n```\r\nvoid SetTx(CTransactionRef ref)\r\n{\r\n    tx = std::move(ref);\r\n}\r\n```\r\n\r\nand similarly replacing the template constructors with regular constructors accepting `CTransactionRef`s.\r\n\r\nThe advantage of doing this for someone reading the code is that you won't have to look 3 levels deep to see what arguments a `SetTx` call or constructor will accept, and of course won't have to know anything about std::forward either.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-30T22:07:05Z",
      "diff_hunk" : "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }\n \n     void Init()\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n     }\n \n+    template<typename... Args>\n+    void SetTx(Args&&... args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90339716",
      "id" : 90339716,
      "original_commit_id" : "6f7b5fa60de6715e195ed0fa1ff124cb5894b602",
      "original_position" : 41,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 10851901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90339716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351391"
         }
      },
      "body" : "I've changed CMerkleTx and CWalletTx to just take a `CTransactionRef` argument now as you suggested, effectively moving the `MakeTransactionRef` call to the constructor callers. By doing so, I discovered a few places where an `std::move` could be introduced to avoid a copy, so that makes the change worth it already.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-30T23:17:34Z",
      "diff_hunk" : "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }\n \n     void Init()\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n     }\n \n+    template<typename... Args>\n+    void SetTx(Args&&... args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351391",
      "id" : 90351391,
      "original_commit_id" : "6f7b5fa60de6715e195ed0fa1ff124cb5894b602",
      "original_position" : 41,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 10871765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351466"
         }
      },
      "body" : "Agree, changed.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-30T23:18:01Z",
      "diff_hunk" : "@@ -90,7 +90,7 @@ CScript ParseScript(const std::string& s)\n     return result;\n }\n \n-bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx, bool fTryNoWitness)\n+bool DecodeHexTx(CTransactionRef& tx, const std::string& strHexTx, bool fTryNoWitness)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351466",
      "id" : 90351466,
      "original_commit_id" : "0482f43c171f035ebb72567d1325ff8f10820488",
      "original_position" : 5,
      "path" : "src/core_read.cpp",
      "position" : null,
      "pull_request_review_id" : 10871825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351504"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351504"
         }
      },
      "body" : "Agree, let's fix this, but not in this PR.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-11-30T23:18:16Z",
      "diff_hunk" : "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351504",
      "id" : 90351504,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 35,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10871859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased, and addressed @ryanofsky's comments.",
      "created_at" : "2016-11-30T23:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-264028075",
      "id" : 264028075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-11-30T23:20:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264028075",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90480532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90480532"
         }
      },
      "body" : "Maybe rename these `tx` variables to `mtx`. It would make the diff a little bigger, but also make the code review easier in confirming that all uses of these variables are still valid (especially with the new std::move calls which trash them).",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T16:16:22Z",
      "diff_hunk" : "@@ -520,13 +520,13 @@ UniValue decoderawtransaction(const JSONRPCRequest& request)\n     LOCK(cs_main);\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR));\n \n-    CTransaction tx;\n+    CMutableTransaction tx;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90480532",
      "id" : 90480532,
      "original_commit_id" : "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
      "original_position" : 5,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90480532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90482811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90482811"
         }
      },
      "body" : "Maybe revert the change in this line and instead insert a `CTransaction tx(std::move(mtx));` declaration at line 889 after the decode. This would make it easier to understand the variable lifetimes in this function and also avoid calculating the tx hash twice.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T16:26:51Z",
      "diff_hunk" : "@@ -901,7 +901,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, tx, fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {\n+        if (!AcceptToMemoryPool(mempool, state, CTransaction(std::move(tx)), fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90482811",
      "id" : 90482811,
      "original_commit_id" : "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
      "original_position" : 30,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90482811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486310"
         }
      },
      "body" : "If you change `txNew` to `std::move(txNew)` here and `GetTransactionWeight(txNew)` to `GetTransactionWeight(*wtxNew->tx)` immediately below, you could avoid two transaction copies and hash computation.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T16:41:38Z",
      "diff_hunk" : "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(txNew));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486310",
      "id" : 90486310,
      "original_commit_id" : "343dfda84af91942cb55bf22b34917d69c51af3a",
      "original_position" : 264,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486807"
         }
      },
      "body" : "Template line not needed.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T16:43:54Z",
      "diff_hunk" : "@@ -267,17 +282,8 @@ class CWalletTx : public CMerkleTx\n         Init(NULL);\n     }\n \n-    CWalletTx(const CWallet* pwalletIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CMerkleTx& txIn) : CMerkleTx(txIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CTransaction& txIn) : CMerkleTx(txIn)\n+    template<typename... Args>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486807",
      "id" : 90486807,
      "original_commit_id" : "343dfda84af91942cb55bf22b34917d69c51af3a",
      "original_position" : 81,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90488689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90488689"
         }
      },
      "body" : "Maybe add an explicit hash() initializer or comment to make the behavior more obvious & document it.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T16:52:23Z",
      "diff_hunk" : "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90488689",
      "id" : 90488689,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 35,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90488689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90492669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90492669"
         }
      },
      "body" : "~~Isn't a `WriteCompactSize(s, tx.wit.vtxinwit.size());` call needed here? The previous code was calling `READWRITE(tx.wit)` which serialized the whole vector, and the Unserialize function here also seems to deserialize the entire vector instead of the individual elements.~~\r\n\r\nEdit: Never mind, I confused serializing the witness vector with serializing the `CTxWitness` class which wraps the vector and assumes a predetermined vector size.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T17:12:20Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n+    if (fAllowWitness) {\n+        /* Check whether witnesses need to be serialized. */\n+        if (!tx.wit.IsNull()) {\n+            flags |= 1;\n         }\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        if (flags & 1) {\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n+    }\n+    if (flags) {\n+        /* Use extended format in case witnesses are to be serialized. */\n+        std::vector<CTxIn> vinDummy;\n+        s << vinDummy;\n+        s << flags;\n+    }\n+    s << tx.vin;\n+    s << tx.vout;\n+    if (flags & 1) {\n+        for (size_t i = 0; i < tx.vin.size(); i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90492669",
      "id" : 90492669,
      "original_commit_id" : "450ca59e1205c1f17e5c51ce36753baf4683c94d",
      "original_position" : 109,
      "path" : "src/primitives/transaction.h",
      "position" : 109,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90492669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90495774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495774"
         }
      },
      "body" : "I realize you didn't change this code, but should Unserialize throw an exception if vin size is 0 and fAllowWitness is false? In this case the comment below \"We read a non-empty vin. Assume a normal vout follows,\" would not be accurate and the flags field would seemingly be misinterpreted as the vout vector length.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T17:28:09Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90495774",
      "id" : 90495774,
      "original_commit_id" : "450ca59e1205c1f17e5c51ce36753baf4683c94d",
      "original_position" : 44,
      "path" : "src/primitives/transaction.h",
      "position" : 44,
      "pull_request_review_id" : 10999194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90528995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90528995"
         }
      },
      "body" : "Done, and added a TODO to remove the constructor entirely.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:19:04Z",
      "diff_hunk" : "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90528995",
      "id" : 90528995,
      "original_commit_id" : "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
      "original_position" : 35,
      "path" : "src/primitives/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90528995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90529030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90529030"
         }
      },
      "body" : "Done.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:19:14Z",
      "diff_hunk" : "@@ -374,25 +382,27 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n     CTransaction(CMutableTransaction &&tx);\n \n-    CTransaction& operator=(const CTransaction& tx);\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        SerializeTransaction(*this, s, ser_action);\n-        if (ser_action.ForRead()) {\n-            UpdateHash();\n-        }\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        SerializeTransaction(*this, s);\n     }\n \n+    /* No Unserialize method. Use the deserializing constructor below instead. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90529030",
      "id" : 90529030,
      "original_commit_id" : "63296e690a0805bc6501d69d100add8c0abdeb3c",
      "original_position" : 167,
      "path" : "src/primitives/transaction.h",
      "position" : null,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90529030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530434"
         }
      },
      "body" : "Done.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:27:25Z",
      "diff_hunk" : "@@ -901,7 +901,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, tx, fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {\n+        if (!AcceptToMemoryPool(mempool, state, CTransaction(std::move(tx)), fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530434",
      "id" : 90530434,
      "original_commit_id" : "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
      "original_position" : 30,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530449"
         }
      },
      "body" : "Done.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:27:30Z",
      "diff_hunk" : "@@ -520,13 +520,13 @@ UniValue decoderawtransaction(const JSONRPCRequest& request)\n     LOCK(cs_main);\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR));\n \n-    CTransaction tx;\n+    CMutableTransaction tx;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530449",
      "id" : 90530449,
      "original_commit_id" : "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
      "original_position" : 5,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530449",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531052"
         }
      },
      "body" : "Done.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:30:59Z",
      "diff_hunk" : "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(txNew));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531052",
      "id" : 90531052,
      "original_commit_id" : "343dfda84af91942cb55bf22b34917d69c51af3a",
      "original_position" : 264,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531052",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531185"
         }
      },
      "body" : "Done.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:31:44Z",
      "diff_hunk" : "@@ -267,17 +282,8 @@ class CWalletTx : public CMerkleTx\n         Init(NULL);\n     }\n \n-    CWalletTx(const CWallet* pwalletIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CMerkleTx& txIn) : CMerkleTx(txIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CTransaction& txIn) : CMerkleTx(txIn)\n+    template<typename... Args>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531185",
      "id" : 90531185,
      "original_commit_id" : "343dfda84af91942cb55bf22b34917d69c51af3a",
      "original_position" : 81,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531458"
         }
      },
      "body" : "No. When fAllowWitness is false, this code explicitly supports transactions with vin.size()=0. Even those are not valid due to consensus rules, it is necessary to correctly implement the ambiguitity detection in the `decoderawtransaction` and `fundrawtransaction` RPCs (which accept incomplete transactions as inputs).",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:33:21Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531458",
      "id" : 90531458,
      "original_commit_id" : "450ca59e1205c1f17e5c51ce36753baf4683c94d",
      "original_position" : 44,
      "path" : "src/primitives/transaction.h",
      "position" : 44,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531503"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531503"
         }
      },
      "body" : "Indeed. The code is a bit ugly in that the serializer does the witness serialization inline, while the deserializer uses `CTxWitness`. In #8589 `CTxWitness` is removed entirely.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T20:33:35Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n+    if (fAllowWitness) {\n+        /* Check whether witnesses need to be serialized. */\n+        if (!tx.wit.IsNull()) {\n+            flags |= 1;\n         }\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        if (flags & 1) {\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n+    }\n+    if (flags) {\n+        /* Use extended format in case witnesses are to be serialized. */\n+        std::vector<CTxIn> vinDummy;\n+        s << vinDummy;\n+        s << flags;\n+    }\n+    s << tx.vin;\n+    s << tx.vout;\n+    if (flags & 1) {\n+        for (size_t i = 0; i < tx.vin.size(); i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531503",
      "id" : 90531503,
      "original_commit_id" : "450ca59e1205c1f17e5c51ce36753baf4683c94d",
      "original_position" : 109,
      "path" : "src/primitives/transaction.h",
      "position" : 109,
      "pull_request_review_id" : 11048550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531503",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90542705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90542705"
         }
      },
      "body" : "Need to change this to `GetTransactionWeight(*wtxNew.tx)` since `txNew` is moved from.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T21:37:10Z",
      "diff_hunk" : "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(std::move(txNew)));\n \n                 // Limit size\n                 if (GetTransactionWeight(txNew) >= MAX_STANDARD_TX_WEIGHT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90542705",
      "id" : 90542705,
      "original_commit_id" : "f006fcc1da680540def6c7d7d1f9b3d8aca8a1f8",
      "original_position" : 267,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11062535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90542705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90543745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90543745"
         }
      },
      "body" : "I see, and thanks for clarifying even though this code isn't really changed by your PR. Two other comments I would make (maybe for a separate PR) are:\r\n\r\n- The \"We read a non-empty vin\" part of the comment below is misleading and should probably be dropped or reworded.\r\n- The `if (flags != 0)` condition is confusing and should never be false.\r\n\r\nMaybe the following would be an improvement:\r\n\r\n```\r\n    s >> tx.vin;\r\n    if (tx.vin.size() == 0 && fAllowWitness) {\r\n        /* We read a dummy or an empty vin. */\r\n        s >> flags;\r\n        if (flags == 0)\r\n            throw std::ios_base::failure(\"Invalid transaction flags\");\r\n        s >> tx.vin;\r\n    }\r\n    s >> tx.vout;\r\n```",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T21:42:58Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90543745",
      "id" : 90543745,
      "original_commit_id" : "450ca59e1205c1f17e5c51ce36753baf4683c94d",
      "original_position" : 44,
      "path" : "src/primitives/transaction.h",
      "position" : 44,
      "pull_request_review_id" : 11062535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90543745",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90555939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90555939"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-01T22:56:24Z",
      "diff_hunk" : "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(std::move(txNew)));\n \n                 // Limit size\n                 if (GetTransactionWeight(txNew) >= MAX_STANDARD_TX_WEIGHT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90555939",
      "id" : 90555939,
      "original_commit_id" : "f006fcc1da680540def6c7d7d1f9b3d8aca8a1f8",
      "original_position" : 267,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 11075770,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-03T02:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90555939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Is there anything else this is waiting on?",
      "created_at" : "2016-12-04T22:05:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-264735208",
      "id" : 264735208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-12-04T22:05:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264735208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90789545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90789545"
         }
      },
      "body" : "Well there is a (perhaps misguided) attempt to parse the 10-byte `[nVersion] 0x00 0x00 [nLockTime]` as an empty transaction, rather than as an (incorrectly encoded) witness transaction.",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-04T23:25:28Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90789545",
      "id" : 90789545,
      "original_commit_id" : "450ca59e1205c1f17e5c51ce36753baf4683c94d",
      "original_position" : 44,
      "path" : "src/primitives/transaction.h",
      "position" : 44,
      "pull_request_review_id" : 11305215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-04T23:25:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90789545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "utACK 81e3228",
      "created_at" : "2016-12-05T07:03:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-264781624",
      "id" : 264781624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
      "updated_at" : "2016-12-05T07:03:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264781624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91072582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91072582"
         }
      },
      "body" : "This assert is the cause of SIGSEGV when paying in the UI.\r\n```\r\nAssertion failed: (tx.wit.vtxinwit.size() <= tx.vin.size()), function SerializeTransaction, file ./primitives/transaction.h, line 331.\r\n```",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-06T13:02:36Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91072582",
      "id" : 91072582,
      "original_commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "original_position" : 88,
      "path" : "src/primitives/transaction.h",
      "position" : 88,
      "pull_request_review_id" : 11582301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-06T13:02:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91072582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91078551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91078551"
         }
      },
      "body" : "I remember a PR of @sipa where he made witness scripts part of the TxIn class. I wished it was merged so such error would not possibly happen. :(",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-06T13:40:47Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91078551",
      "id" : 91078551,
      "original_commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "original_position" : 88,
      "path" : "src/primitives/transaction.h",
      "position" : 88,
      "pull_request_review_id" : 11588357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-06T13:40:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91078551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91082667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91082667"
         }
      },
      "body" : "See #9296 ",
      "commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "created_at" : "2016-12-06T14:03:17Z",
      "diff_hunk" : "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91082667",
      "id" : 91082667,
      "original_commit_id" : "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
      "original_position" : 88,
      "path" : "src/primitives/transaction.h",
      "position" : 88,
      "pull_request_review_id" : 11592359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
      "updated_at" : "2016-12-06T14:03:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91082667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]

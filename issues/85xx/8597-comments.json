[
   {
      "body" : "Why do you want to make verack a no-op? It's nice to know the peer received and understood our version message before continuing.",
      "created_at" : "2016-08-26T12:39:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-242724391",
      "id" : 242724391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-08-26T12:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242724391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "NACK, this part of the protocol is not broken, let's not fix it.",
      "created_at" : "2016-08-26T14:18:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-242748079",
      "id" : 242748079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-08-26T14:18:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242748079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@sipa you say \"before continuing\" but this is not how the code currently works. There is no stopping or waiting for the verack currently, instead some code is simply not executed as a result of the verack not being received. That code (which is important that it runs) is what I have now moved to run upon receipt of a \"version\" message - which DOES cause the required continuation that you mention.\r\n\r\nThe githib diff doesn't show this code in question so it's not clear from the github diff.\r\n\r\nThe code in question is the sending of the SENDHEADERS and SENDCMPCT messages.\r\n\r\nTherefore if no VERACK is received the node will default to receiving INVs for block announcements and will not be using Compact Blocks - this is currently DEPENDENT on verack messages being received. Other than this the node functions the same in every other way.\r\n\r\n@laanwj If that's not considered broken then you are saying this is intentional - why do you want compact blocks and headers announcements to be dependant on verack messages? It's certainly not, IMHO, intuitive that this is how the protocol would function, based on a typical understanding of ACK messages. Headers announcements and compact block technology are recent additions so it seems a bit strange to me that only this new functionality is dependant on verack messages yet all other functionality will continue as normal without veracks.",
      "created_at" : "2016-08-28T02:45:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-242952772",
      "id" : 242952772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-08-28T02:55:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242952772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad Ok, so the history behind VERACK is that it was introduced together with protocol checksums.\r\n\r\nOriginally, the protocol version started at 0, and then VERSION is used to propose by peer A that peer B can start using a higher protocol version number. Peer A however needs to know when B received that VERSION message, as he doesn't know when to start decoding the received messages using the new protocol, so the switchover to enable decoding checksums happens when B sends a VERACK back.\r\n\r\nSince february 20, 2012 the protocol version starts at 209, which has checksums from the start (including the VERSION and VERACK messages themselves).\r\n\r\nSince then, VERACK has effectively not had any function, but it should also not slow anything down, apart from sending an extra message. There may also be a use for it in the future, if we'd ever want to propose a protocol change that modifies the checksums again, or otherwise modifies the based protocol structure.\r\n\r\nDon't fix what isn't broken.",
      "created_at" : "2016-08-30T15:36:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-243481475",
      "id" : 243481475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-08-30T15:36:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243481475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Thanks for that. I wouldn't be proposing this pull request if I didn't think there was something broken that it fixes. But broken is a subjective term. If you're happy with Bitcoin Core NOT requesting announcements by headers or preferrring compact blocks, then it's not broken. But given that most Bitcoin Core nodes ARE requesting these things, then it would seem broken to me.",
      "created_at" : "2016-09-01T07:16:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-243996110",
      "id" : 243996110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-01T07:16:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243996110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "You have a peer who is sending messages before sending a verack. That peer\nis broken.\n",
      "created_at" : "2016-09-01T07:36:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-244000012",
      "id" : 244000012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-01T07:36:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244000012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa The peer you refer to is indeed behaving strangely, but it's brokenness is a co-creation between it sending the VERACK before the VERSION (which clearly is wrong), and the standard node waiting for a VERACK after VERSION before sending SENDHEADERS and SENDCMPCT.\r\n\r\nNow, given that waiting for the VERACK does nothing but facilitate this brokenness and provides no other value that I am aware of, then why don't we actively avoid facilitation of brokenness? This is surely what every pull request is aiming to do, as far as I understand the process.",
      "created_at" : "2016-09-13T02:46:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-246557748",
      "id" : 246557748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-13T02:46:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246557748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad What value does this change have?",
      "created_at" : "2016-09-13T02:57:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-246559236",
      "id" : 246559236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-13T02:57:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246559236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa One word - interoperability. I think I am realising that perhaps many of my desired changes have this goal in mind, and for some reason it seems that a significant number of Core developers are mainly considering that any non-Satoshi node is an oddity that doesn't really need to be supported, or something like this. My idea of an ideal node is one that can communicate usefully to as many nodes as possible. They ought to avoid disconnection unless it provides value (which is does with FILTERLOAD and FILTERADD, but not FILTERCLEAR). No SPV node out there currently starts with FILTERCLEAR, that I know of. They usually start with FILTERLOAD (one of more of them) followed by a MEMPOOL request. Sorry, I am referring to my other pull request now, but the gist is the same.\r\n\r\n#4389 was also motivated along similar lines - i.e. allow nodes to learn how to inter-operate with each other rather than making assumptions.\r\n\r\nApologies that I am getting on my soap-box a little here, but to summarise, I ask you - what value does NOT making this change have? I believe I have communicated the value it has, albeit (in the case of this one peer) of little impact. In the greater sense it helps to bring clarity to the protocol - i.e. that VERACKS are now (or in most cases, should be) redundant.",
      "created_at" : "2016-09-13T03:06:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-246560381",
      "id" : 246560381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-15T23:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246560381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad the initial handshake is best left the way it is. As @sipa describes in a comment above, VERACK may not have a function now, but it may very well become useful in future. \r\n\r\nFor example [BIP151](https://github.com/jonasschnelli/bips/blob/88245718e1518d464500c9a1d81731358c7acafe/bip-0151.mediawiki) uses a similar handshake to establish an encrypted session between peers. \r\n\r\nThe implementation of ```encinit``` and ```encack``` in BIP151 mirrors the ```version``` and ```verack``` process as it stands and shows its usefulness, so best not to code it away.",
      "created_at" : "2016-09-13T03:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-246561182",
      "id" : 246561182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-13T03:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246561182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6916056?v=3",
         "events_url" : "https://api.github.com/users/venzen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/venzen/followers",
         "following_url" : "https://api.github.com/users/venzen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/venzen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/venzen",
         "id" : 6916056,
         "login" : "venzen",
         "organizations_url" : "https://api.github.com/users/venzen/orgs",
         "received_events_url" : "https://api.github.com/users/venzen/received_events",
         "repos_url" : "https://api.github.com/users/venzen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/venzen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/venzen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/venzen"
      }
   },
   {
      "body" : "@venzen (no idea why github doesn't let me tag you!). If sipa is indeed saying that VERACK doesn't have a function now, then this surely would strengthen the case for this pull - i.e. I am seeking to make it clearer that it doesn't have a function now.",
      "created_at" : "2016-09-13T03:15:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-246561569",
      "id" : 246561569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-13T03:15:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246561569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "read my comment again :)\r\n\r\nBesides, remember VERACK's critical function in the connection handshake.\r\n\r\nThe process of connecting and the decision to peer should be bilateral. PeerA (sends ```version```) - this is my version, my network_services, and best_height. PeerB - this is useful (reply with ```version``` and ```verack```). PeerA (considers VERSION information) - actually, this is not useful (doesn't reply with a  ```verack```) and declines the connection. \r\n\r\nVERACK represents the decision to peer based on what was learnt from VERSION. Any connection attempt must be initiated and then, based on what is learnt, acknowledged (or not), surely? ",
      "created_at" : "2016-09-13T03:16:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-246561650",
      "id" : 246561650,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-13T03:37:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246561650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6916056?v=3",
         "events_url" : "https://api.github.com/users/venzen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/venzen/followers",
         "following_url" : "https://api.github.com/users/venzen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/venzen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/venzen",
         "id" : 6916056,
         "login" : "venzen",
         "organizations_url" : "https://api.github.com/users/venzen/orgs",
         "received_events_url" : "https://api.github.com/users/venzen/received_events",
         "repos_url" : "https://api.github.com/users/venzen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/venzen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/venzen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/venzen"
      }
   },
   {
      "body" : "@venzen which comment are you referring to? verack may have been part of a handshake in the past, but it is no longer, and certainly hasn't been since 2012. there is no timeout regarding version message - i.e. no disconnection logic if a VERACK is not received. Once version is received, pretty much everything is on (except for the recently added SENDHEADERS and SENDCMPCT). My point is - was the recent dependency on VERACK intended or accidental? (since prior to this it was not a dependent).",
      "created_at" : "2016-09-15T09:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-247277086",
      "id" : 247277086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-15T09:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247277086",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "I still don't understand what problem this change is supposed to address.\n\nYes, the code could be slightly simplified if we change the protocol to\nmake verack a no-op corresponding to patch you propose. But that *is* a\nprotocol change. Admittedly a very simple one, but what is the benefit?\nThat some implementations which were misimplementing a very simple part of\nthe protocol before would know simple start working? They were broken\nbefore, so they're likely doing other things wrong as well.\n\nIn general, in modern protocol design, you do not try to be lax in\nprocessing input. It just creates unclear expectations about what is\nnecessary to interact with peers.\n",
      "created_at" : "2016-09-15T14:48:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-247350390",
      "id" : 247350390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-15T14:48:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247350390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Let me invite you instead to consider how you would document the bitcoin protocol. Currently, as of protocol 70013 you would now need to explain that verack messages are necessary if you want to allow nodes to request block announcements by headers, and as of protocol 70014, verack is necessary if you want to allow nodes to advertise that they can process compact blocks.\r\n\r\nIt just sounds a little odd, don't you think? Had the logic for those messages been put in the version section instead, verack would not need to be mentioned at all.\r\n\r\nI think it's important we keep in mind how the documented protocol reads and that there's a level of intuitiveness - i.e. that the message names have some bearing on what they do. Since 70013, \"verack\" as a message name has no bearing on its function, and if you were to try to come up with a suitable message name instead of \"verack\" for what verack now achieves, I think you might struggle to find an intuitive one.",
      "created_at" : "2016-09-16T00:00:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-247487280",
      "id" : 247487280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-16T00:04:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247487280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "No offence, but if that is the stumble block you have problems with for\nimplementing the p2p protocol, you're in for a world of pain.\n\nI really don't see the benefit of *changing the protocol* for the benefit\nof being able to remove two lines of text from a hypothetical\nspecification, and I don't see the benefit of continuing to spend time on\ndiscussing it.\n",
      "created_at" : "2016-09-16T00:04:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-247487838",
      "id" : 247487838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-16T00:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247487838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa As a programmer, I thought you would already have an appreciation of the KISS principle. Or, to quote Albert Einstein, \"Make everything as simple as possible, but not simpler\".",
      "created_at" : "2016-09-16T00:06:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-247488099",
      "id" : 247488099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-16T00:14:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247488099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad As a programmer, I thought you would already have an appreciation for not fixing what isn't broken.\r\n\r\nYes, if we'd design Bitcoin from scratch, I'm sure we could let VERACK out. We're not doing that. We're wasting hours of discussion on changing a triviality.",
      "created_at" : "2016-09-16T00:45:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8597#issuecomment-247493022",
      "id" : 247493022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8597",
      "updated_at" : "2016-09-16T00:45:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247493022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]

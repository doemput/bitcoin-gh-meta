[
   {
      "body" : "Screen-shot (nearly 300kB) actual capture is less than 2kB.\r\n![jun2014_sx_send_1bitcoin](https://cloud.githubusercontent.com/assets/6768234/3416315/b11849d8-fe2b-11e3-9b96-717eb99f7996.png)\r\n\r\n### Edit: Packet capture files:\r\n\r\nReceive first transaction (*casey*):\r\nhttp://phillipsjk.ca/bin/jun2014_bc_recv_1Bitcoin.pcap\r\nSend first transaction (*torchlight*):\r\nhttp://phillipsjk.ca/bin/jun2014_sx_send_1Bitcoin.pcap\r\nReceive second transation (*casey*):\r\nhttp://phillipsjk.ca/bin/jun2014_bc_recv_1ExAmpLE.pcap\r\nSend second transaction (*torchlight*):\r\nhttp://phillipsjk.ca/bin/jun2014_sx_send_1ExAmpLE.pcap\r\nBonus: Sending invalid version of second transaction (*torchlight*)\r\nhttp://phillipsjk.ca/bin/jun2014_sx_send_1ExAmpLEf.pcap\r\n\r\n",
      "created_at" : "2014-06-27T18:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-47386688",
      "id" : 47386688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-06-29T22:09:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47386688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6768234?v=3",
         "events_url" : "https://api.github.com/users/phillipsjk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/phillipsjk/followers",
         "following_url" : "https://api.github.com/users/phillipsjk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/phillipsjk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/phillipsjk",
         "id" : 6768234,
         "login" : "phillipsjk",
         "organizations_url" : "https://api.github.com/users/phillipsjk/orgs",
         "received_events_url" : "https://api.github.com/users/phillipsjk/received_events",
         "repos_url" : "https://api.github.com/users/phillipsjk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/phillipsjk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/phillipsjk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/phillipsjk"
      }
   },
   {
      "body" : "# Second investigation\r\n\r\nThe last report involved re-sending the transaction, even after it was buried in the block-chain. For this report, I will send a new transaction with debugging turned up, and recording the bytes on the wire. That way, I eliminate the possibility that the behavior changes with subsequent sends.\r\n\r\nNote that this appears to be a regression: I had successfully sent a similar transaction approximately one month ago. Unfortunately, during that time, I have upgraded both Bitcoind (from 0.8.6) and the sx tools. My maintenance logs are spotty, though I do try to actually make a habit of taking notes. Maybe I can find version hints in automated logs.\r\n\r\n## TCPdump options\r\n\r\nSame as above, with new filenames.\r\n\r\n## sx sendtx-node log\r\n```\r\njames@torchlight:~/coinjoin$ sx sendtx-node signed.tx casey.economicprisoner.com\r\nDEBUG [network]: s: version (103 bytes)\r\nDEBUG [network]: r: version (101 bytes)\r\nDEBUG [network]: s: verack (0 bytes)\r\nDEBUG [network]: r: verack (0 bytes)\r\nsendtx: Sending 183675b1ed865e35dbc874491bde63b62bbad9c9ad1c5794a307c2f1c8f8ef58\r\nDEBUG [network]: s: tx (224 bytes)\r\nsendtx: Sent 1403993724\r\njames@torchlight:~/coinjoin$ sx sendtx-bci signed.tx\r\nTransaction Submitted\r\n```\r\n\r\n\r\n## bitcoind log\r\n\r\nApproximate start-time:\r\nSat Jun 28 16:15:21 MDT 2014\r\n\r\nApproximate interesting time:\r\n2014-06-28 22:15:24 accepted connection 70.74.233.146:40870\r\n\r\nApproximate stop time:\r\nSat Jun 28 16:15:32 MDT 2014\r\n\r\n### bitcoin-cli\r\nAfter sx sendtx-node:\r\n```\r\n$ bitcoin-cli -datadir=/home/bitcoin -conf=/home/bitcoin/bitcoin.conf \\\r\n> getrawtransaction \"183675b1ed865e35dbc874491bde63b62bbad9c9ad1c5794a307c2f1c8f8ef58\"\r\nerror: {\"code\":-5,\"message\":\"No information available about transaction\"}\r\n```\r\nAfter sx sendtx-bci (sends to blockchain.info web interface):\r\n```\r\n$ bitcoin-cli -datadir=/home/bitcoin -conf=/home/bitcoin/bitcoin.conf \\\r\n> getrawtransaction \"183675b1ed865e35dbc874491bde63b62bbad9c9ad1c5794a307c2f1c8f8ef58\"\r\n01000000010778ca848c35297d5afc1eedc4b7832e2de6a2556a394c1e7b0f5635e7c3f143010000008b48304502205e07002585d30b19f912a6c0fe5b6e1413c92e\r\ned314f8ebce6ed887eba42fc16022100f998c06b4aff381c9d78cd7a30a575d3893c7f02efa1bd073725efccfe6e868b014104c3620767bd6e3fa7329939b02010ef\r\n21c78e2b06bc7c6c7e7d6bff0c381b5517367a0bbd8887ce0554a0a7f5489780069518b3bfb3c48b48c185f145e5f66f0cffffffff0140787d01000000001976a914\r\na33727db1cde4b2af394c15baa770bbc545dc14b88ac00000000\r\n```\r\n\r\n\r\n### bitcoind log\r\n```\r\n2014-06-28 22:15:24 accepted connection 70.74.233.146:40870\r\n2014-06-28 22:15:24 sending: inv (73 bytes)\r\n2014-06-28 22:15:24 received: version (103 bytes)\r\n2014-06-28 22:15:24 send version message: version 70002, blocks=308370, us=66.18.211.158:8333, them=70.74.233.146:40870, peer=70.74.\r\n233.146:40870\r\n2014-06-28 22:15:24 sending: version (101 bytes)\r\n2014-06-28 22:15:24 sending: verack (0 bytes)\r\n2014-06-28 22:15:24 receive version message: /libbitcoin:2.0.0/: version 60000, blocks=0, us=10.0.0.1:8333, them=10.0.0.1:8333, peer\r\n=70.74.233.146:40870\r\n2014-06-28 22:15:24 received: inv (73 bytes)\r\n2014-06-28 22:15:24   got inventory: tx 2de80bd43e4e0e8a605dc58b1c6c3100972e3b0bbfbc3690e4a6a8702924faa2  have\r\n2014-06-28 22:15:24   got inventory: tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f  new\r\n2014-06-28 22:15:24 askfor tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f   0 (00:00:00)\r\n2014-06-28 22:15:24 sending getdata: tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f\r\n2014-06-28 22:15:24 sending: getdata (37 bytes)\r\n2014-06-28 22:15:24 received: verack (0 bytes)\r\n2014-06-28 22:15:24 socket closed\r\n2014-06-28 22:15:24 disconnecting node 70.74.233.146:40870\r\n2014-06-28 22:15:24 received: inv (37 bytes)\r\n2014-06-28 22:15:24   got inventory: tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f  new\r\n2014-06-28 22:15:24 askfor tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f   1403993723000000 (22:15:23)\r\n2014-06-28 22:15:24 sending: inv (37 bytes)\r\n2014-06-28 22:15:24 sending: inv (73 bytes)\r\n2014-06-28 22:15:24 received: inv (37 bytes)\r\n2014-06-28 22:15:24   got inventory: tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f  new\r\n2014-06-28 22:15:24 askfor tx 527aa3f1bee6cdd168547dde87c9ef8e3b9549b1cf429045efa6a4b7083a1b9f   1403993843000000 (22:17:23)\r\n2014-06-28 22:15:24 received: tx (4541 bytes)\r\n```\r\nNote: first received tx after connection from *torchlight* is again the wrong size (4541 >  224 bytes)",
      "created_at" : "2014-06-29T22:14:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-47478927",
      "id" : 47478927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-08-02T22:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47478927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6768234?v=3",
         "events_url" : "https://api.github.com/users/phillipsjk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/phillipsjk/followers",
         "following_url" : "https://api.github.com/users/phillipsjk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/phillipsjk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/phillipsjk",
         "id" : 6768234,
         "login" : "phillipsjk",
         "organizations_url" : "https://api.github.com/users/phillipsjk/orgs",
         "received_events_url" : "https://api.github.com/users/phillipsjk/received_events",
         "repos_url" : "https://api.github.com/users/phillipsjk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/phillipsjk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/phillipsjk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/phillipsjk"
      }
   },
   {
      "body" : "I'm not sure this is a bitcoind bug. It looks like bitcoind would discard a message if ThreadSocketHandler reads a close and sets fDisconnect before ProcessMessages has read the message, but closing right after a send can cause the data to be discarded at the TCP level anyway; why add guarantees at the application level the transport level won't reliably uphold?\r\n\r\nSx needs to ensure the tx has been received before closing the connection, by e.g. send tx -> send ping -> wait for pong -> close.",
      "created_at" : "2014-07-28T18:27:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50378206",
      "id" : 50378206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-28T20:47:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50378206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "body" : "This is the first I heard that the TCP layer will discard data in a FIN packet.\r\n\r\nI Tried searching for \"TCP discards data in fin packet\" and came up with this as a result:\r\nhttp://stackoverflow.com/questions/8702646/packet-capture-can-a-packet-with-the-fin-flag-also-have-data\r\n\r\nThe only answer listed there is that RFC 739 says it is allowed. ~~I believe that RFC also says that stateful fire-walling is not a thing either, so YMMV.~~ (That was the IP RFC)",
      "created_at" : "2014-07-29T00:25:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50420369",
      "id" : 50420369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T01:47:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50420369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6768234?v=3",
         "events_url" : "https://api.github.com/users/phillipsjk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/phillipsjk/followers",
         "following_url" : "https://api.github.com/users/phillipsjk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/phillipsjk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/phillipsjk",
         "id" : 6768234,
         "login" : "phillipsjk",
         "organizations_url" : "https://api.github.com/users/phillipsjk/orgs",
         "received_events_url" : "https://api.github.com/users/phillipsjk/received_events",
         "repos_url" : "https://api.github.com/users/phillipsjk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/phillipsjk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/phillipsjk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/phillipsjk"
      }
   },
   {
      "body" : "TCP stacks that implement half-duplex close (notably, Linux's) may discard unread data when close() is called [http://www.freesoft.org/CIE/RFC/1122/99.htm].",
      "created_at" : "2014-07-29T00:41:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50421441",
      "id" : 50421441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T00:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50421441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "body" : "If the close at the TCP level happens before the data of the FIN packet is processed, that is a bug.\r\n\r\nIn your bug report against sx tools you mention that the Bitcoind node may want to send more information to the client. That is still possible with a half-open connection, but not if the client's stack did a half-duplex close as described in the link.\r\n\r\nAccording to that link, data is only aggressively discarded after seeing a RST packet.\r\n",
      "created_at" : "2014-07-29T01:21:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50423883",
      "id" : 50423883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T01:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50423883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6768234?v=3",
         "events_url" : "https://api.github.com/users/phillipsjk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/phillipsjk/followers",
         "following_url" : "https://api.github.com/users/phillipsjk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/phillipsjk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/phillipsjk",
         "id" : 6768234,
         "login" : "phillipsjk",
         "organizations_url" : "https://api.github.com/users/phillipsjk/orgs",
         "received_events_url" : "https://api.github.com/users/phillipsjk/received_events",
         "repos_url" : "https://api.github.com/users/phillipsjk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/phillipsjk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/phillipsjk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/phillipsjk"
      }
   },
   {
      "body" : "The RST packet is sent by the host discarding data to indicate that data has been discarded.\r\n\r\nWe could be careful not to call close() with any unread data, and to continue processing certain messages even after fDisconnect is set (or delay setting fDisconnect). Those would probably be positive changes, because they'd prevent losing a tx sent by a terminating node every once in a while.\r\n\r\nSuch a behavior change would not really affect what one-shot clients like sx would need to do, assuming they'll want to support existing versions of bitcoind. Even if everyone running bitcoind upgraded to a new version compatible with push-and-run, sx should use the ping approach to see if the tx has been rejected.",
      "created_at" : "2014-07-29T01:37:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50424805",
      "id" : 50424805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T01:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50424805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "body" : "After looking at it some more, I don't think we're calling close() when there could be pending data in this case; the lost messages due to disconnect must just be due to the fDisconnect check in ProcessMessages.",
      "created_at" : "2014-07-29T01:44:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50425214",
      "id" : 50425214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T01:44:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50425214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "body" : "With TCP, close() should not result in loss of information. You can close the connection immediately after sending data, and the other end will be able receive all the data. This is because of states such as CLOSE_WAIT, in which a connection lingers as 'zombie' for a while making sure that everything was sent.\r\n\r\nOtherwise, HTTP servers (for ex.) would have to keep open the connection to wait whether the client has got everything. This is luckily handled by the OS.\r\n\r\nSo my guess is that there is some bug/race in bitcoind here.\r\n\r\n",
      "created_at" : "2014-07-29T06:37:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50440747",
      "id" : 50440747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T06:50:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50440747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I think there's a fDisconnect race where:\r\n1: ThreadSocketHandler pushes data into vRecvMsg\r\n2a: ProcessMessages checks vRecvMsg, or aborts if fDisconnect\r\n2b: the other end closes the socket, so ThreadSocketHandler reads 0 bytes and sets fDisconnect\r\n\r\nEither 2a or 2b can happen first; if 2b is first, messages not yet processed will be discarded. This race has probably been overlooked because there is no point in handling many messages from a node that is shutting down and there's only a limited window at the end of a connection when messages would be lost, but some should still be handled (addr, tx, block, alert, reject).",
      "created_at" : "2014-07-29T07:08:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-50442755",
      "id" : 50442755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2014-07-29T07:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50442755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "body" : "@theuni Is this fixed since #9441?",
      "created_at" : "2017-01-23T18:05:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-274567775",
      "id" : 274567775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2017-01-23T18:05:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274567775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa No, as I'm not sure what behavior would be considered \"fixed\" here.\r\n\r\nWe obviously don't process an arbitrarily long message queue after a node has disconnected, but it makes sense to guarantee _some_ depth, to allow for use-cases like nodes that would like to connect, push a tx, and disconnect.\r\n\r\nSo.. maybe process a single message after remote disconnect?",
      "created_at" : "2017-01-23T20:35:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-274608935",
      "id" : 274608935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2017-01-23T20:35:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274608935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "What I was expecting was that the data in the last packet would processed.\r\nIn the absence of jumbo frames or fragmentation, this would be generally limited to 1460 bytes.\r\n",
      "created_at" : "2017-07-17T13:11:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4432#issuecomment-315751094",
      "id" : 315751094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4432",
      "updated_at" : "2017-07-17T13:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315751094",
      "user" : {
         "avatar_url" : "https://avatars5.githubusercontent.com/u/6768234?v=4",
         "events_url" : "https://api.github.com/users/phillipsjk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/phillipsjk/followers",
         "following_url" : "https://api.github.com/users/phillipsjk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/phillipsjk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/phillipsjk",
         "id" : 6768234,
         "login" : "phillipsjk",
         "organizations_url" : "https://api.github.com/users/phillipsjk/orgs",
         "received_events_url" : "https://api.github.com/users/phillipsjk/received_events",
         "repos_url" : "https://api.github.com/users/phillipsjk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/phillipsjk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/phillipsjk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/phillipsjk"
      }
   }
]

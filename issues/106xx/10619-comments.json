[
   {
      "body" : "Under which circumstances can Tip() be NULL? \r\nIsn't there always at least the genesis block? \r\n\r\nIf it is NULL, it crashes anyway as there are many more instances  of Tip() dereferences without NULL checks in the same function alone (i.e. for `bestblockhash`, chainwork`, etc.).\r\n \r\nIf it can be NULL, then we should define how the rpc output should look like in this case, and fix all instances / make the output consistent.\r\n\r\nIf it can't be null, we should ensure that in the Tip() function.",
      "created_at" : "2017-06-17T12:15:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309211611",
      "id" : 309211611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:15:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309211611",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "If Tip() never returns NULL, then checking `block` for nullness in the following statment:\r\n`while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\n is redundant.\r\n\r\nDo you think this should become:\r\n`while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\nwith the rest of the code remaining as is?\r\n\r\nSince Tip() can theoretically return NULL, I think that the best coding practice is to check for nullness somehow.",
      "created_at" : "2017-06-17T12:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309211996",
      "id" : 309211996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309211996",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "> If Tip() never returns NULL [...] Do you think this should become:\r\n`while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\nwith the rest of the code remaining as is?\r\n\r\nIn that case, yes.\r\n\r\nAs I said, if tip actually returns null, the function will crash as it is today, so we should either fix all of that (and document/test it), or have tip() not return null (and work backwards to ensure correctness).\r\n ",
      "created_at" : "2017-06-17T12:31:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309212366",
      "id" : 309212366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:31:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309212366",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "I think that checking the return value of a function that returns a pointer for nullness is a good practice that will safeguard the code from dereferencing a null pointer either under the current or under any other future implementation of Tip().\r\n\r\nActually, I see that in other parts of the code the return value of Tip() is checked for nullness. \r\nDo you think this PR should be merged to ensure consistency with that, before a more generic solution is investigated?\r\n",
      "created_at" : "2017-06-17T12:38:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309212741",
      "id" : 309212741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:38:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309212741",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "C++ has the problem that pointers are used for two orthogonal reasons: 1) to avoid unneeded copies, and 2) to encode the possibility of NULL. If a function can't return NULL but still returns a pointer (for the first reason), I don't think callers need to check, as it complicates the code for no good reason. If someone changes the function to return null in the future, it's an API change (unfortunately not caught by the compiler) and they need to fix the callsites.\r\n\r\nThere are probably edge cases in which Tip() returns NULL (on startup and shutdown, and maybe one can even mark the genesis block as invalid via an rpc command?).\r\n\r\nWhat about throwing an `JSONRPCError` in the beginning of the function? If Tip is null and the chain is empty, the whole call doesn't make a lot of sense.\r\n",
      "created_at" : "2017-06-17T12:54:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309213569",
      "id" : 309213569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:54:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309213569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "I have modified the commit for this PR.\r\nNow an `JSONRPCError` is thrown before any return value of Tip() is used.",
      "created_at" : "2017-06-17T13:25:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309215052",
      "id" : 309215052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T13:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309215052",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "Thank you.\r\n\r\nutACK cf67a3c64d0813e1131bc30e7f628b7bfd21fc96 for the code.\r\n\r\nAs for the concept, I'd rather have more people confirm if this makes sense.",
      "created_at" : "2017-06-17T13:39:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309215717",
      "id" : 309215717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T13:39:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309215717",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "Concept ACK.\r\n\r\nIn addition to the check you added I suggest adding an assertion before accessing `block->nHeight`:\r\n\r\n```c++\r\n         CBlockIndex *block = chainActive.Tip();\r\n         while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n             block = block->pprev;\r\n+        assert(block && \"An empty blockchain should not be possible here.\");\r\n         obj.push_back(Pair(\"pruneheight\",        block->nHeight));\r\n```\r\n\r\nI'm assuming a state transition from `chainActive.Tip() != nullptr` (blockchain non-empty) to `chainActive.Tip() == nullptr` (blockchain empty)  is impossible in the current code? If so I think it makes sense to make that clear (via an assertion) since the code here appears to be working under that assumption. It will have the added benefit of silencing this NULL pointer dereference warning for static analysis tools that don't pick up this subtle state change limitation (if such a limitation exists).\r\n\r\nThanks for reporting this @pavlosantoniou. You beat me to reporting it! :-) I had this in my backlog of possible NULL pointer dereferences to report, but as I try to limit the number of open PR:s pertaining to the same class of issues I figured I'd await the merge of a similar issue I reported in #9549:\r\n> [[net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...)](https://github.com/bitcoin/bitcoin/pull/9549)",
      "created_at" : "2017-06-17T14:26:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309218195",
      "id" : 309218195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T14:27:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309218195",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Thank you all for your comments, I have added the assertion in the commit for this PR.",
      "created_at" : "2017-06-17T14:43:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309219195",
      "id" : 309219195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T14:43:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309219195",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "@pavlosantoniou Oh, I forgot to mention: I think you should restore the null check in the while loop too:\r\n\r\n```diff\r\n-        while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n```",
      "created_at" : "2017-06-17T16:44:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309225990",
      "id" : 309225990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T16:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309225990",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@practicalswift that shouldn't be necessary with the check before that the tip is not null?\r\n\r\nIf you are afraid that the return value changes between two calls of Tip() in that function, the result should just be stored in a variable in the beginning and reused.",
      "created_at" : "2017-06-17T16:56:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309226828",
      "id" : 309226828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T16:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309226828",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r122573305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122573305"
         }
      },
      "body" : "This can be an assert too; RPC isn't available before the `InitBlockIndex` call, after which chainActive cannot be empty.",
      "commit_id" : "be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "created_at" : "2017-06-17T17:37:06Z",
      "diff_hunk" : "@@ -1165,6 +1165,11 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\n         );\n \n+    if (!chainActive.Tip())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r122573305",
      "id" : 122573305,
      "original_commit_id" : "2d51f41ed21fc7fd9f0052d6b33c554b5b563524",
      "original_position" : 4,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 44704662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619",
      "updated_at" : "2017-06-20T05:32:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122573305",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@pavlosantoniou I suggest using the following patch (while removing the other changes):\r\n\r\n```diff\r\ndiff --git a/src/rpc/blockchain.cpp b/src/rpc/blockchain.cpp\r\nindex 8f7f768..baf8dae 100644\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -1165,6 +1165,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\r\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\r\n         );\r\n\r\n+    assert(chainActive.Tip() && \"An empty blockchain should not be possible here.\");\r\n     LOCK(cs_main);\r\n\r\n     UniValue obj(UniValue::VOBJ);\r\n@@ -1196,6 +1197,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\r\n         while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n             block = block->pprev;\r\n\r\n+        assert(block && \"An empty blockchain should not be possible here.\");\r\n         obj.push_back(Pair(\"pruneheight\",        block->nHeight));\r\n     }\r\n     return obj;\r\n```",
      "created_at" : "2017-06-18T15:38:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309284918",
      "id" : 309284918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-18T17:53:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309284918",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@practicalswift why are the asserts needed? I guess they don't hurt, on the other hand, those asserts check something trivial.\r\n\r\n@pavlosantoniou can you assign Tip() to one var and reuse it in the rest of the function? Then there should be no doubt about its value.",
      "created_at" : "2017-06-18T16:46:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309288888",
      "id" : 309288888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-18T16:46:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309288888",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@benma The asserts serve as documentation of an assumption that is not obvious from reading the source code. As an added bonus it guides static analysis tools such as `clang-tidy` which will otherwise warn about a potential NULL pointer dereference here.",
      "created_at" : "2017-06-18T17:53:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309292299",
      "id" : 309292299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T12:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309292299",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@practicalswift thanks, I didn't know about this tool. How many warnings like this are there? ",
      "created_at" : "2017-06-19T06:13:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309347796",
      "id" : 309347796,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T06:13:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309347796",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@practicalswift Concerning your proposed patch, I agree with the addition of the two assertions.\r\nBut since `block` is checked for nullness in: \r\n`while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))` \r\nthe possibility of nullness is implied. \r\nShouldn't `block` be dereferenced conditionally then ?\r\ne.g. in:\r\n`obj.push_back(Pair(\"pruneheight\",        block->nHeight));`\r\n\r\nHow about @benma 's proposal, to save the return value of `Tip()` once in the beginning, maybe have an assertion there, and then use the saved value throughout the function with no additional checks.",
      "created_at" : "2017-06-19T07:13:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309357742",
      "id" : 309357742,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T07:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309357742",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "@pavlosantoniou \r\n\r\nIn this code Ã¢ÂÂ¦\r\n\r\n```c++\r\n        CBlockIndex *block = chainActive.Tip();\r\n        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n            block = block->pprev;\r\n```\r\n\r\nÃ¢ÂÂ¦ then `nullptr` check does only cover the `while`. After the `while` the `block` variable could still be set to `nullptr` Ã¢ÂÂ that's why the assertion is needed :-)",
      "created_at" : "2017-06-19T07:27:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309360262",
      "id" : 309360262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T07:28:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309360262",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "\nhttps://minecloud.io/?in=ipoptika\n\n>ÃÂÃÂ¾ÃÂ½ÃÂµÃÂ´ÃÂµÃÂ»ÃÂÃÂ½ÃÂ¸ÃÂº, 19 ÃÂ¸ÃÂÃÂ½ÃÂ 2017, 10:28 +03:00 ÃÂ¾ÃÂ practicalswift <notifications@github.com>:\n>\n>@pavlosantoniou\n>In this code Ã¢ÂÂ¦\n>        CBlockIndex *block = chainActive.Tip();\n        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n            block = block->pprev;\n>Ã¢ÂÂ¦ then null check in while does only cover the while. After the while the block could still be nullptr, so that's why the assertion is needed :-)\n>Ã¢ÂÂ\n>You are receiving this because you are subscribed to this thread.\n>Reply to this email directly,  view it on GitHub , or  mute the thread .\n\n",
      "created_at" : "2017-06-19T09:56:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309393866",
      "id" : 309393866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T09:56:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309393866",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/27605557?v=3",
         "events_url" : "https://api.github.com/users/ipoptika/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ipoptika/followers",
         "following_url" : "https://api.github.com/users/ipoptika/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ipoptika/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ipoptika",
         "id" : 27605557,
         "login" : "ipoptika",
         "organizations_url" : "https://api.github.com/users/ipoptika/orgs",
         "received_events_url" : "https://api.github.com/users/ipoptika/received_events",
         "repos_url" : "https://api.github.com/users/ipoptika/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ipoptika/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ipoptika/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ipoptika"
      }
   },
   {
      "body" : "\nhttps://minecloud.io/?in=ipoptika\n\n>ÃÂÃÂ¾ÃÂ½ÃÂµÃÂ´ÃÂµÃÂ»ÃÂÃÂ½ÃÂ¸ÃÂº, 19 ÃÂ¸ÃÂÃÂ½ÃÂ 2017, 10:14 +03:00 ÃÂ¾ÃÂ pavlosantoniou <notifications@github.com>:\n>\n>@practicalswift Concerning your proposed patch, I agree with the addition of the two assertions.\n>But since 'block is checked for nullness in:\n>while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n>the possibility of nullness is implied.\n>Shouldn't block' be dereferenced conditionally then? e.g. in:obj.push_back(Pair(\"pruneheight\",        block->nHeight));`\n>Ã¢ÂÂ\n>You are receiving this because you are subscribed to this thread.\n>Reply to this email directly,  view it on GitHub , or  mute the thread .\n\n",
      "created_at" : "2017-06-19T09:56:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309393948",
      "id" : 309393948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T09:56:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309393948",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/27605557?v=3",
         "events_url" : "https://api.github.com/users/ipoptika/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ipoptika/followers",
         "following_url" : "https://api.github.com/users/ipoptika/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ipoptika/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ipoptika",
         "id" : 27605557,
         "login" : "ipoptika",
         "organizations_url" : "https://api.github.com/users/ipoptika/orgs",
         "received_events_url" : "https://api.github.com/users/ipoptika/received_events",
         "repos_url" : "https://api.github.com/users/ipoptika/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ipoptika/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ipoptika/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ipoptika"
      }
   },
   {
      "body" : "I have updated the commit with the suggested changes.",
      "created_at" : "2017-06-19T18:26:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309525258",
      "id" : 309525258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T18:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309525258",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "utACK 1859ce837452ba9366ad95409ec9626d0a1435c5",
      "created_at" : "2017-06-19T20:09:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309559158",
      "id" : 309559158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-19T20:09:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309559158",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r122844173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122844173"
         }
      },
      "body" : "wasn't this supposed to be `assert(block && ...)`?",
      "commit_id" : "be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "created_at" : "2017-06-19T22:50:31Z",
      "diff_hunk" : "@@ -1196,6 +1197,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n         while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n             block = block->pprev;\n \n+        assert(chainActive.Tip() && \"An empty blockchain should not be possible here.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r122844173",
      "id" : 122844173,
      "original_commit_id" : "1859ce837452ba9366ad95409ec9626d0a1435c5",
      "original_position" : 12,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 44994523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619",
      "updated_at" : "2017-06-20T05:32:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122844173",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1225267?v=4",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "Yes @benma you are right! Corrected",
      "created_at" : "2017-06-20T05:33:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309649391",
      "id" : 309649391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-20T05:33:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309649391",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "ACK be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "created_at" : "2017-06-20T07:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309669459",
      "id" : 309669459,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-20T07:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309669459",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "utACK be42c0d",
      "created_at" : "2017-06-20T08:17:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309679507",
      "id" : 309679507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-20T08:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309679507",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@benma There are currently three null pointer dereference warnings reported by `clang-tidy`'s module `clang-analyzer-core.NullDereference`:\r\n\r\n* Addressed in PR #9549 Ã¢ÂÂ `net_processing.cpp:345:14: warning: Dereference of null pointer (loaded from variable 'pit')`\r\n* Addressed in PR #10619 Ã¢ÂÂ `rpc/blockchain.cpp:1199:50: warning: Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'block')`\r\n* Addressed in PR #10638 Ã¢ÂÂ `rpc/mining.cpp:560:20: warning: Access to field 'nNonce' results in a dereference of a null pointer (loaded from variable 'pblock')`",
      "created_at" : "2017-06-20T21:31:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309897845",
      "id" : 309897845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-20T21:31:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309897845",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "There are a ton of places we assume chainActive.Tip() is non-NULL, and init makes sure there is something there. Adding assert()s everywhere we dereference chainActive.Tip() during normal runtime seems like an excersize in too many assert()s.",
      "created_at" : "2017-06-21T22:27:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-310223175",
      "id" : 310223175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-21T22:27:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310223175",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt I think it makes sense to add an assertion in this case to guide `clang-tidy`. This is one of only two remaining null pointer dereference warnings emitted by `clang-tidy`'s module `clang-analyzer-core.NullDereference`.",
      "created_at" : "2017-06-22T02:24:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-310257582",
      "id" : 310257582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-22T06:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310257582",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@sipa @benma Is there something more I can do for this PR?",
      "created_at" : "2017-07-06T17:20:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-313462215",
      "id" : 313462215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-06T17:20:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313462215",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "utACK be42c0d80e1de2bfd4f2658014eda18cab5a398d (edit: just noticed I already ACK'd this commit before)\r\n\r\n@pavlosantoniou I feel like https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309357742 hasn't been addressed, really (i.e. why `block &&` should be restored). Not a blocker of course.",
      "created_at" : "2017-07-08T15:20:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-313862315",
      "id" : 313862315,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-08T15:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313862315",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "@benma Are you refering to the saving-and-reusing-block's-value part of the comment?",
      "created_at" : "2017-07-08T17:27:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-313869581",
      "id" : 313869581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-08T17:27:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313869581",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "Yes, with regards to the `block &&` part that you originally removed. In other words, I am not sure why @practicalswift requested this: https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309225990",
      "created_at" : "2017-07-08T18:33:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-313873486",
      "id" : 313873486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-08T18:33:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313873486",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "utACK be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "created_at" : "2017-07-18T22:03:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-316211719",
      "id" : 316211719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-18T22:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316211719",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Agree with @TheBlueMatt.",
      "created_at" : "2017-07-18T22:54:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-316221543",
      "id" : 316221543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-18T22:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316221543",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "\"Avoid possibility of NULL pointer dereference\" is overly alarmist as this cannot happen in practice.\r\n\r\nI agree with @TheBlueMatt . We make sure that `chainActive.Tip()` is non-zero before allowing RPC calls, so asserting everywhere before use should be unnecessary. And adding it only on one place is even less useful, as it's not consistent.\r\n\r\n",
      "created_at" : "2017-07-24T12:16:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-317403946",
      "id" : 317403946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-24T12:16:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317403946",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r129411200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129411200"
         }
      },
      "body" : "This needs to be inside the cs_main, I'd think.",
      "commit_id" : "be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "created_at" : "2017-07-25T20:07:58Z",
      "diff_hunk" : "@@ -1165,6 +1165,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\n         );\n \n+    assert(chainActive.Tip() && \"An empty blockchain should not be possible here.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r129411200",
      "id" : 129411200,
      "original_commit_id" : "be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "original_position" : 4,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 52181600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619",
      "updated_at" : "2017-07-25T20:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129411200",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Which automated warning, from what?",
      "created_at" : "2017-07-26T05:57:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-317955728",
      "id" : 317955728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-26T05:57:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317955728",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I was referring to the one at https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-310257582",
      "created_at" : "2017-07-26T15:10:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-318083634",
      "id" : 318083634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-26T15:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318083634",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Just a bit of advice, I'd prefer that titles like \"Avoid null deference\" be reserved for cases where we believe one is actually possible.   Among other reasons, commits like this in the history will suppress legitimate issue reports when someone sees a crash then \"oh, I guess thats been fixed\". :)\r\n\r\nIn terms of guarding them with asserts, sure. That is a reasonable thing to do which we do elsewhere.  But could PRs like this please get titles like \"Add a null guard in function X\" unless we strongly suspect there was a real issue?   (and obviously, if it was reachable with a null here, an assert wouldn't be the right fix.)",
      "created_at" : "2017-07-26T15:14:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-318084804",
      "id" : 318084804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-26T15:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318084804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@sipa Agree about the wording!\r\n\r\n@laanwj I think the reason for the static analyzer warning in this case (and other cases reported as \"possible null pointer dereference\") is that a `NULL` check is performed earlier in the code which would imply that the variable can indeed be `NULL`. A dereference takes place later in the code where no `NULL` check exists and the static analyzer then concludes that there is a possibility of a `NULL` pointer dereference.\r\n\r\nMore specifically in this case:\r\n\r\n```\r\n    if (fPruneMode)\r\n    {\r\n        CBlockIndex *block = chainActive.Tip();\r\n        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n            block = block->pprev;\r\n\r\n        obj.push_back(Pair(\"pruneheight\",        block->nHeight));\r\n    }\r\n```\r\n\r\nIn this case:\r\n1. `while (block && Ã¢ÂÂ¦)` implies that `block` can theoretically be `NULL`.\r\n2. `block->nHeight` - dereference without checking for `NULL`. Warning!\r\n\r\nBoth `clang-tidy` and `cppcheck` follow that line of reasoning:\r\n\r\n```\r\n# clang-tidy\r\nrpc/blockchain.cpp:1199:50: warning: Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'block') [clang-analyzer-core.NullDereference]\r\n\r\n# cppcheck\r\n[src/rpc/blockchain.cpp:1199] -> [src/rpc/blockchain.cpp:1196]: (warning) Either the condition 'block' is redundant or there is possible null pointer dereference: block.\r\n```\r\n\r\nSo if we're sure that `chainActive.Tip()` cannot be `NULL` in this context the warning can be avoided by:\r\n* a. removing the `NULL`-check in the `while`-loop\r\n* b. adding a `NULL`-check before the dereference, or\r\n* c. adding a `assert` before the dereference",
      "created_at" : "2017-07-26T15:31:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-318090187",
      "id" : 318090187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-07-26T15:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318090187",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r134715519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134715519"
         }
      },
      "body" : "Good point.",
      "commit_id" : "be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "created_at" : "2017-08-23T10:35:51Z",
      "diff_hunk" : "@@ -1165,6 +1165,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\n         );\n \n+    assert(chainActive.Tip() && \"An empty blockchain should not be possible here.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r134715519",
      "id" : 134715519,
      "original_commit_id" : "be42c0d80e1de2bfd4f2658014eda18cab5a398d",
      "original_position" : 4,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 58037939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619",
      "updated_at" : "2017-08-23T10:35:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134715519",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

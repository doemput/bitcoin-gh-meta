[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124427552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124427552"
         }
      },
      "body" : "Why?",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T00:15:32Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124427552",
      "id" : 124427552,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46714443,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124427552",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124427995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124427995"
         }
      },
      "body" : "@sipa To get rid of `clang-tidy`, Clang Static Analyzer and other static analyser warnings along the lines of:\r\n```c++\r\nbench/base58.cpp:23:9: warning: Function call argument is a pointer to uninitialized value [clang-analyzer-core.CallAndMessage]\r\n```\r\n\r\n",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T00:19:39Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124427995",
      "id" : 124427995,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46714908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124427995",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124428189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124428189"
         }
      },
      "body" : "That seems overly pedantic...",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T00:21:31Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124428189",
      "id" : 124428189,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46715096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124428189",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124437559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124437559"
         }
      },
      "body" : "Is that because b+32 is passed to the EncodeBase58 function and clang thinks the function might use it?",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T02:00:13Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124437559",
      "id" : 124437559,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46724904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124437559",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3211283?v=3",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124437694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124437694"
         }
      },
      "body" : "It's perfectly legal to use a pointer that points one past the end of an object (and the function does). You can't dereference it, though.",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T02:01:56Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124437694",
      "id" : 124437694,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46725042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124437694",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124437795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124437795"
         }
      },
      "body" : "Yeah but is that the only reason clang is giving that warning? I agree that it would be pedantic to add an extra element to the array just to get rid of that warning, seems very hacky",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T02:03:10Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124437795",
      "id" : 124437795,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46725159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124437795",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3211283?v=3",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124440099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124440099"
         }
      },
      "body" : "If we're going to change this for pedantic correctness (which I'm not arguing for), I'd 100x rather make this a ```std::array<unsigned char, 32>``` and iterate properly.",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T02:26:38Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124440099",
      "id" : 124440099,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46727439,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124440099",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "> \"ES.20: Always initialize an object\" \r\n\r\nI disagree.  Adding superfluous initialization can conceal real bugs when it prevents valgrind and MSAN from seeing code accessing uninitialized memory because it's been filled with dummy data.  This isn't a hypothetical concern-- I've both seen errors caught this way, and real errors hidden by excess initialization.\r\n\r\nIf the initialization the appropriate initial state, then by all means... but if any use of the initialized value would be a program error then it probably should not be initialized.\r\n",
      "created_at" : "2017-06-28T04:20:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-311552618",
      "id" : 311552618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-06-28T04:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311552618",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124470712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124470712"
         }
      },
      "body" : "Now using `std::array<unsigned char, 32>`. Both `clang-tidy` and Clang Static Analyzer are now happy :-)",
      "commit_id" : "0447039f7ee538b6c547ea36daac4b181924d95e",
      "created_at" : "2017-06-28T07:36:31Z",
      "diff_hunk" : "@@ -13,7 +13,7 @@\n \n static void Base58Encode(benchmark::State& state)\n {\n-    unsigned char buff[32] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#discussion_r124470712",
      "id" : 124470712,
      "original_commit_id" : "287cfc27609bcc70817ed47c6a81cb614cc06da9",
      "original_position" : 4,
      "path" : "src/bench/base58.cpp",
      "position" : 4,
      "pull_request_review_id" : 46760182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10686",
      "updated_at" : "2017-06-28T07:36:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124470712",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@gmaxwell You have a good point there with regards to discovering issues via valgrind and MSAN. (Perhaps worth adding as an counter-argument/exception to ES.20 in the C++ Core Guidelines?)\r\n\r\nIn this specific case with these six changes - are there such risks associated with any of the changes introduced here? Let me know if so and I'll skip any such change.",
      "created_at" : "2017-06-28T10:19:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-311618903",
      "id" : 311618903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-06-28T10:21:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311618903",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "From what I can see, the specific changes here should be fine, I believe it was more of a general note (which I do agree with).",
      "created_at" : "2017-06-28T13:30:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-311660383",
      "id" : 311660383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-06-28T13:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311660383",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3211283?v=3",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "body" : "> In this specific case with these six changes - are there such risks associated with any of the changes introduced here? Let me know if so and I'll skip any such change.\r\n\r\nThere are always risks associated with changes. Especially in consensus-critical code we should thus not make unnecessary ones.",
      "created_at" : "2017-06-28T13:46:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-311664561",
      "id" : 311664561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-06-28T13:46:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311664561",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Is there any of these six changes that touches on consensus-critical code and should be considered unnecessary? Let me know and I'll exclude from this PR :-)",
      "created_at" : "2017-06-28T15:42:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-311700436",
      "id" : 311700436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-06-28T15:42:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311700436",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "I think none of the changes here on themselves are risky, but all of them hide potential future bugs.",
      "created_at" : "2017-06-28T15:43:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-311700819",
      "id" : 311700819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-06-28T15:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311700819",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Thanks for reviewing and thanks for some insightful comments with regards to early initialization potentially hiding issues from runtime detection for code accessing uninitialized memory (when using say `valgrind` or MSAN).\r\n\r\nThe consensus is a clear NACK with regards to early initialization, so I'll close this PR.\r\n\r\nI'll create a separate PR with with the non-initialization change: switching from `char[32]` to `std::array<unsigned char, 32>` to avoid warnings from various static analyzers (`clang-tidy`, clang analyzer, etc.) regarding pointers to uninitialized values as function call arguments when we use `f(arr, arr + 32)`.",
      "created_at" : "2017-07-03T15:13:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10686#issuecomment-312672400",
      "id" : 312672400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10686",
      "updated_at" : "2017-07-03T15:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312672400",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]

[
   {
      "body" : "Sorry for this little change, but...\r\n\r\n@thuni was concerned about introducing globals in policy.h\r\nfIsBareMultisigStd can be easily turned into an attribute later as shown in https://github.com/jtimon/bitcoin/compare/policy_new...jtimon:policy_moveonly (in fact it could be done more easily not moving AreInputsStandard at the same time as IsStandardTx)\r\nBut minRelayTxFee is in many more places, and after proposing some changes to #5159, I am no longer convinced that I want to move things like IsDust to policy directly. One possibility would be to put all the fee policy stuff in the estimator. Then an interface of the estimator can be returned by CPolicy, for example, making a CPolicy::GetFeePolicy() analogous to CChainParams::GetConsensus().\r\nThe minimum fee can still be configured from the constructor of CStandardPolicy but it can pass it directly to the estimator without storing it redundantly.\r\nIn that case some files could be dependent on policy/fees but not in policy/policy (just like some functions depend on Consensus::Params but not on CChainParams), then some of the 5 includes I just removed would have to be changed for policy/fees later.\r\n\r\nFor all these reasons I'm keeping minRelayTxFee in main for now.\r\n\r\nMoving minRelayTxFee to policy/policy could still prevent it from depending on main temporarily when IsStandardTx is moveonly, but it doesn't seem to be worth it.\r\n",
      "created_at" : "2015-04-27T22:55:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-96843767",
      "id" : 96843767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-04-27T22:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96843767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Nodes can do random things, but why encourage them to adopt diverse relay policies, create custom policies, and define custom parameters for others to create more custom relay policies?  \r\n\r\nShouldn't there just be baked-in policy parameters that have predictable effects when deployed with different values, like resource constraints and settings that influence the strength of preference for higher fees?\r\n\r\nI'm not concerned about miner policies, but something more like CokePolicy and PepsiPolicy disrupting the network with divergent relay rules.  What is the argument in favor?",
      "created_at" : "2015-05-01T15:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98163070",
      "id" : 98163070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-01T15:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98163070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "@dgenr8 Non-centralisation. Authority to decide policy lies with the node operators and miners, and it's not a responsibility/power developers should have. Too much policy monoculture also creates incentives to use bad practices (trusting unconfirmed transactions) and make trouble for the outliers. Also, since the current policy monoculture is mostly *reference* policy, it also causes spam problems since there are no effective reference-suitable spam filters; and this is in partly out of necessity due to policy being intimately mixed in with the reference codebase.",
      "created_at" : "2015-05-01T17:06:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98178713",
      "id" : 98178713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-01T17:06:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98178713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I think there are different issues here.\r\n\r\nOne is that this is a step towards separating out policy code from consensus code. This PR is part of that. Eventually, we should end up with a situation where consensus is clearly separated in the source code (so we know when to be extremely careful in review and tests when someone wants to change it), and likewise have policy separated out (so people changing/forking the code know what can be safely changed).\r\n\r\nAnd yes, I think that the ability to change policy is essential, for the reasons that @luke-jr brings up. For one, relay (and other) policy is constantly changing anyway (pretty much every Bitcoin Core release has changed what is being relayed). You should not rely on it being uniform on the network.\r\n\r\nOf course, I think that we, as maintainers of a particular piece of Bitcoin network software, have a responsibility to make the code do what we think is best for the network - and possibly expose only part of the involved parameters to users. But that doesn't mean that others can't disagree. And separating out policy code makes it explicit exactly which part of the code is a choice.",
      "created_at" : "2015-05-01T18:06:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98189841",
      "id" : 98189841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-01T18:06:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98189841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@luke-jr The blockchain is the world's most consistent distributed system.  It makes no sense to promote chaos right up to the assembly point.  If we have CokePolicy and PepsiPolicy, reorgs too become less safe.",
      "created_at" : "2015-05-02T16:09:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98374106",
      "id" : 98374106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-02T16:09:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98374106",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "dgenr8 differences in consensus code can cause reorgs, differences in policy code can't. That's the main reason why we want to separate them. There are people already maintaining alternative policies and there's nothing wrong about it. Let's just make their implementations safer and cleaner. We will safe A LOT of review work  by clearly separating policy proposals, which tend to be numerous, controversial and are also often uninteresting to many reviewers",
      "created_at" : "2015-05-02T16:21:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98374720",
      "id" : 98374720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-02T16:21:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98374720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon He means that when there are different mempool acceptance policies present, a reorg can reduce the (apparent) safety of transactions already in the blockchain.\r\n\r\nAnd that is true - but that's just a sign that you shouldn't be relying on having a consistent policy in the first place, and why you should use confirmations to gauge risk, not mere acceptance.\r\n\r\n@dgenr8 And the assembly point matters. There is a significant economic difference before and after. Miners get paid for what happens after, but not before.",
      "created_at" : "2015-05-02T16:27:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98375784",
      "id" : 98375784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-02T16:27:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98375784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@jtimon Nothing against code separation, but this mixes in a *multi-relay-policy framework*.\r\n\r\n@sipa Use confirmations to gauge risk, but the system should try to reduce risk at all confirmation levels.  Nobody has shown that lower confirmation levels, including 0-conf, cannot be made safer with easily acceptable tradeoffs.  A multi-relay-policy framework is a step in the other direction.\r\n\r\n\r\n",
      "created_at" : "2015-05-02T17:28:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98381574",
      "id" : 98381574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-02T17:28:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98381574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "@dgenr8 \"Unconfirmed\" is *not* a confirmation level at all. It is the absence of any confirmation. You cannot make it \"safe\" except through attempted centralisation and control over others.",
      "created_at" : "2015-05-02T17:33:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98381767",
      "id" : 98381767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-02T17:33:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98381767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr That's a claim, not a proof, and rather than trying to prove a negative, why not think about how to accomplish the positive?",
      "created_at" : "2015-05-02T17:45:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98382255",
      "id" : 98382255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-02T17:45:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98382255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "@dgenr8 feel free to spend your time on how to accomplish the positive.\r\nIn the meantime, policy diversity is what you get with a decentralized system. Multiple relay policies are already deployed and I don't think we can or should fight that.\r\nIn the meantime there's a lot of noise because we don't have support for different policies and because everybody wants their own favorite policy to be everyone else's policy too. Everyone wants his policy to be the standard one, but that's simply not possible.\r\n",
      "created_at" : "2015-05-07T11:15:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-99818340",
      "id" : 99818340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-25T19:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99818340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Built, confirmed `-policy` option exposed, and checked msig tests still pass - ACK\r\n\r\nNote: Had to pull in https://github.com/bitcoin/bitcoin/pull/6114/files, which should be OK as long as you're building with 1.58<",
      "created_at" : "2015-05-10T17:48:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-100674492",
      "id" : 100674492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-10T17:48:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100674492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2230604?v=3",
         "events_url" : "https://api.github.com/users/faizkhan00/events{/privacy}",
         "followers_url" : "https://api.github.com/users/faizkhan00/followers",
         "following_url" : "https://api.github.com/users/faizkhan00/following{/other_user}",
         "gists_url" : "https://api.github.com/users/faizkhan00/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/faizkhan00",
         "id" : 2230604,
         "login" : "faizkhan00",
         "organizations_url" : "https://api.github.com/users/faizkhan00/orgs",
         "received_events_url" : "https://api.github.com/users/faizkhan00/received_events",
         "repos_url" : "https://api.github.com/users/faizkhan00/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/faizkhan00/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/faizkhan00/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/faizkhan00"
      }
   },
   {
      "body" : "Needed trivial rebase after policy/fees got into the makefile.",
      "created_at" : "2015-05-13T22:49:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-101840610",
      "id" : 101840610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-13T22:49:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101840610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Needed rebase.\r\nAlso, after #5669 minRelayTxFee will be the only dependency from main, so I feel more comfortable moving more code.\r\nAdded a couple of squashme commits and a last commit that removes the global @theuni was concerned about.\r\nIf it is ok to extend the scope of the PR (mostly with moveonly stuff), I will squash all the moveonly/rename commits into luke's commit (Luke-Jr was moving all 3 methods in other branches so I'm sure he will be ok with putting that on his name).\r\n",
      "created_at" : "2015-05-27T15:52:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-105970969",
      "id" : 105970969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-27T15:52:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105970969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Needed rebase again.\r\nI didn't squased the fixup commits introduced in the last push though since I was hoping to get some approval on that, but I will do it in the next forced rebased if nobody complains.\r\nAlso if people want me to s/\"main\"/Policy::STANDARD or something similar I'm happy to do so, I should have done it from the beginning. If I get silence about this as well I may do it at any point I feel like it.",
      "created_at" : "2015-06-02T11:36:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-107924068",
      "id" : 107924068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-02T11:36:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107924068",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514373"
         }
      },
      "body" : "Nit: Should be a constant reference.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T11:52:16Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514373",
      "id" : 31514373,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 58,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514423"
         }
      },
      "body" : "Nit: I guess this also could be a constant reference.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T11:53:10Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514423",
      "id" : 31514423,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 65,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514491"
         }
      },
      "body" : "Nit: I'm sure we use const here, too.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T11:54:20Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)\n+{\n+    pCurrentPolicy = &Policy(policy);\n+}\n+\n+const CPolicy& Policy()\n+{\n+    assert(pCurrentPolicy);\n+    return *pCurrentPolicy;\n+}\n+\n+std::string GetPolicyUsageStr(std::string selectedPolicy)\n+{\n+    CPolicy& policy = standardPolicy;\n+    try {\n+        policy = Policy(selectedPolicy);\n+    } catch(std::exception &e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514491",
      "id" : 31514491,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 81,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514629"
         }
      },
      "body" : "Nit: defaultPolicy could also be ``const std::string&``.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T11:56:58Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)\n+{\n+    pCurrentPolicy = &Policy(policy);\n+}\n+\n+const CPolicy& Policy()\n+{\n+    assert(pCurrentPolicy);\n+    return *pCurrentPolicy;\n+}\n+\n+std::string GetPolicyUsageStr(std::string selectedPolicy)\n+{\n+    CPolicy& policy = standardPolicy;\n+    try {\n+        policy = Policy(selectedPolicy);\n+    } catch(std::exception &e) {\n+        selectedPolicy = \"standard\";\n+    }\n+    std::string strUsage = HelpMessageGroup(strprintf(_(\"Policy options (for policy: %s):\"), selectedPolicy));\n+    strUsage += HelpMessageOpt(\"-policy\", strprintf(_(\"Select a specific type of policy (default: %s)\"), \"standard\"));\n+    strUsage += HelpMessagesOpt(policy.GetOptionsHelp());\n+    return strUsage;\n+}\n+\n+void InitPolicyFromArgs(const std::map<std::string, std::string>& mapArgs, std::string defaultPolicy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514629",
      "id" : 31514629,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 90,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514866"
         }
      },
      "body" : "Nit: ``catch(const std::exception& e)``",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:00:41Z",
      "diff_hunk" : "@@ -787,6 +789,13 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (nConnectTimeout <= 0)\n         nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n \n+    // Init Policy\n+    try {\n+        InitPolicyFromArgs(mapArgs, \"standard\");\n+    } catch(std::exception &e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514866",
      "id" : 31514866,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 32,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514939"
         }
      },
      "body" : "Suggestion: The string \"standard\" is used quite often, I guess it could be nice to have some DEFAULT_ constant for it.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:02:01Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)\n+{\n+    pCurrentPolicy = &Policy(policy);\n+}\n+\n+const CPolicy& Policy()\n+{\n+    assert(pCurrentPolicy);\n+    return *pCurrentPolicy;\n+}\n+\n+std::string GetPolicyUsageStr(std::string selectedPolicy)\n+{\n+    CPolicy& policy = standardPolicy;\n+    try {\n+        policy = Policy(selectedPolicy);\n+    } catch(std::exception &e) {\n+        selectedPolicy = \"standard\";\n+    }\n+    std::string strUsage = HelpMessageGroup(strprintf(_(\"Policy options (for policy: %s):\"), selectedPolicy));\n+    strUsage += HelpMessageOpt(\"-policy\", strprintf(_(\"Select a specific type of policy (default: %s)\"), \"standard\"));\n+    strUsage += HelpMessagesOpt(policy.GetOptionsHelp());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31514939",
      "id" : 31514939,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 86,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31514939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31515138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31515138"
         }
      },
      "body" : "Please, make it const and try to compile.\r\nI'm working on a solution (using a real factory and a container) to make it const, though. But I will propose that for chainparams first.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:05:41Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31515138",
      "id" : 31515138,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 58,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31515138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31515751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31515751"
         }
      },
      "body" : "This was just a read-only review of the code, what error is shown?",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:14:58Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31515751",
      "id" : 31515751,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 58,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31515751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31517170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31517170"
         }
      },
      "body" : "Nobody is doing it with strings, I believe the compiler can be smart enough by itself in this case but I'm not 100% sure. @sipa ?",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:34:55Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31517170",
      "id" : 31517170,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 65,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31517170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31517307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31517307"
         }
      },
      "body" : "This is mentioned in the thread, in the last post actually.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:36:30Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)\n+{\n+    pCurrentPolicy = &Policy(policy);\n+}\n+\n+const CPolicy& Policy()\n+{\n+    assert(pCurrentPolicy);\n+    return *pCurrentPolicy;\n+}\n+\n+std::string GetPolicyUsageStr(std::string selectedPolicy)\n+{\n+    CPolicy& policy = standardPolicy;\n+    try {\n+        policy = Policy(selectedPolicy);\n+    } catch(std::exception &e) {\n+        selectedPolicy = \"standard\";\n+    }\n+    std::string strUsage = HelpMessageGroup(strprintf(_(\"Policy options (for policy: %s):\"), selectedPolicy));\n+    strUsage += HelpMessageOpt(\"-policy\", strprintf(_(\"Select a specific type of policy (default: %s)\"), \"standard\"));\n+    strUsage += HelpMessagesOpt(policy.GetOptionsHelp());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31517307",
      "id" : 31517307,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 86,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31517307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31517922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31517922"
         }
      },
      "body" : "Take a look at our codebase or even at https://github.com/bitcoin/bitcoin/pull/6206. IMHO we shouldn't work with copies where not needed.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:43:58Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31517922",
      "id" : 31517922,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 65,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31517922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31518046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31518046"
         }
      },
      "body" : "So you are asking for the way to got with this, do I get that right?",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-06-02T12:45:29Z",
      "diff_hunk" : "@@ -0,0 +1,251 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n+\n+#include \"policy/policy.h\"\n+\n+#include \"main.h\"\n+#include \"tinyformat.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+\n+#include <boost/foreach.hpp>\n+\n+/** Declaration of Standard Policy implementing CPolicy */\n+class CStandardPolicy : public CPolicy\n+{\n+    bool fIsBareMultisigStd;\n+public:\n+    CStandardPolicy() :\n+        fIsBareMultisigStd(true)\n+    {};\n+    virtual std::vector<std::pair<std::string, std::string> > GetOptionsHelp() const;\n+    virtual void InitFromArgs(const std::map<std::string, std::string>&);\n+    virtual bool ApproveScript(const CScript&, txnouttype&) const;\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const;\n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Check transaction inputs, and make sure any\n+     * pay-to-script-hash transactions are evaluating IsStandard scripts\n+     * \n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+    virtual bool ApproveTxInputs(const CTransaction& tx, const CCoinsViewCache& mapInputs) const;\n+};\n+\n+/** Global variables and their interfaces */\n+\n+static CStandardPolicy standardPolicy;\n+\n+static CPolicy* pCurrentPolicy = 0;\n+\n+CPolicy& Policy(std::string policy)\n+{\n+    if (policy == \"standard\")\n+        return standardPolicy;\n+    throw std::runtime_error(strprintf(_(\"Unknown policy '%s'\"), policy));\n+}\n+\n+void SelectPolicy(std::string policy)\n+{\n+    pCurrentPolicy = &Policy(policy);\n+}\n+\n+const CPolicy& Policy()\n+{\n+    assert(pCurrentPolicy);\n+    return *pCurrentPolicy;\n+}\n+\n+std::string GetPolicyUsageStr(std::string selectedPolicy)\n+{\n+    CPolicy& policy = standardPolicy;\n+    try {\n+        policy = Policy(selectedPolicy);\n+    } catch(std::exception &e) {\n+        selectedPolicy = \"standard\";\n+    }\n+    std::string strUsage = HelpMessageGroup(strprintf(_(\"Policy options (for policy: %s):\"), selectedPolicy));\n+    strUsage += HelpMessageOpt(\"-policy\", strprintf(_(\"Select a specific type of policy (default: %s)\"), \"standard\"));\n+    strUsage += HelpMessagesOpt(policy.GetOptionsHelp());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r31518046",
      "id" : 31518046,
      "original_commit_id" : "d21542c7103b2df23246f9a7cf3244d9d878a788",
      "original_position" : 86,
      "path" : "src/policy/policy.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31518046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=3",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "body" : "Fixed most nits and squashed.",
      "created_at" : "2015-06-02T16:37:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-108008729",
      "id" : 108008729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-02T16:37:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108008729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Passing a const reference to a string should be slightly more efficient.\nBut std::string implements reference counting I believe, so copying a\nstring does not require copying the entire data blob, only the (iirc) 24 or\n32 byte header structure. Passing a cost reference only needs 8 bytes\nthough.\n",
      "created_at" : "2015-06-02T17:51:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-108029848",
      "id" : 108029848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-02T17:51:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108029848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Mhmm, I'm not able to reprduce https://travis-ci.org/bitcoin/bitcoin/jobs/65112154 (no wallet) locally...\r\n@laanwj do you know if that may e related to the travis cache issue or is it unrelated? ",
      "created_at" : "2015-06-03T07:39:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-108232542",
      "id" : 108232542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-03T07:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108232542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Could you outline the plan for next steps after this goes in? Standard flags/values are still hard-coded in several places, so I'm not sure that exposing the \"-policy\" option makes sense until it's possible to actually run with a different policy.",
      "created_at" : "2015-06-05T23:50:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-109484717",
      "id" : 109484717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-05T23:50:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109484717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "> Could you outline the plan for next steps after this goes in?\r\n\r\nReopened #5180 as one of the things that I consider an important next step (although @luke-jr wasn't very happy with it the first time I proposed it). Other \"next steps\" (like #5114 ) are related to fees.\r\n\r\n> Standard flags/values are still hard-coded in several places, so I'm not sure that exposing the \"-policy\" option makes sense until it's possible to actually run with a different policy.\r\n\r\nWell, it will take some time until all standard flags/values are encapsulated here (specially if we never take a first step), and some things will be harder to discuss than others.\r\nBut I think the option is useful already. Advanced users (say, miners) can trivially implement their own CCustomPolicy and select it with the option (-policy=custom) without breaking any tests or risking consensus.\r\nAs we encapsulate more policy code in CStandardPolicy, the option will become more useful as the custom policy can modify more things.\r\nI could always leave the -policy option for #5180 but as said I think it's already useful to make it easy for the advanced user to implement and select their own policy.\r\n ",
      "created_at" : "2015-06-06T18:58:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-109637834",
      "id" : 109637834,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-06T18:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109637834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Updated code:\r\n\r\n> But I think the option is useful already. Advanced users (say, miners) can trivially ...\r\n\r\nThinking more about this...if we're assuming advanced users and they want to preserve the standard policy in their build and not simply replace it, they can also trivially add the new option themselves, so there's no reason to expose the new option until it has any use.\r\nSo I starded reducing the scope of this PR.\r\n\r\nSince I was touching the initialization parts, I also realized that @theuni was probably more concerned about was introducing globals in policy.cpp, something we're trying to fix for chainparams.\r\nI previously said to @luke-jr that we shouldn't rely on a policy global, but a global-returning-pseudo-factory function doesn't solve that: only passing CPolicy as parameter to the functions that depend on it will solve that.\r\nMy concern with luke's approach wasn't with the global itself, but with the fact that he was exposing and using a different for CStandardPolicy than for CPolicy. By hidding CStandardPolicy I'm sure I'm respecting advanced users and I'm happy to remove any additions to the \"first step\" (there were previous \"first steps\" before this \"first step\").\r\nActions:\r\n- Remove all globals from policy.cpp and the new -policy option, hopefully pleasing @theuni \r\n- Restore the simple global in main.cpp for the policy, just this time is compatible with CStandardPolicy being hidden by using a Factory. Hopefully this will please @luke-jr .\r\n\r\nI think #5180 is a perfect example for motivating this PR. Even if it's not accepted by itself, it's a simple example of how an advanced user could write his own custom policy (although removing that CChainParams dependecy from AcceptToMemoryPool should even be nicer for an example).\r\n",
      "created_at" : "2015-06-08T03:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-109849096",
      "id" : 109849096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-12T09:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109849096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Rebased",
      "created_at" : "2015-06-18T09:30:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-113089677",
      "id" : 113089677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-18T09:30:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/113089677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "#6335 has been separated from this PR. Please let's focus on merging that first.\r\nAn updated version of this is coming soon...",
      "created_at" : "2015-06-24T17:18:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-114945949",
      "id" : 114945949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-24T17:18:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114945949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "The scope has been reduced again.\r\n@faizkhan00 I'm sorry, but now the -policy option is left for #5180.\r\nAlso, no globals are created since they're not needed (yet, although I would happily put them back if nobody opposes).\r\n@theuni to discuss a solution for the globals that could be reused for chainparams, there's a longer branch in https://github.com/jtimon/bitcoin/tree/policy-global-0.11.99 ",
      "created_at" : "2015-06-25T17:00:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-115323905",
      "id" : 115323905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-25T19:23:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/115323905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Rebased",
      "created_at" : "2015-06-26T16:06:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-115742404",
      "id" : 115742404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-06-26T16:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/115742404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Rebased",
      "created_at" : "2015-07-06T22:02:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-119009282",
      "id" : 119009282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-06T22:02:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119009282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Reduced the scope again to a single commit. This cannot get simpler, so hopefully both @luke-jr and @theuni will be satisfied with this version (we can discuss other things where it seems there's still disagreements better after this has been merged).\r\n",
      "created_at" : "2015-07-07T11:31:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-119177190",
      "id" : 119177190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-07T11:31:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119177190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Well, I added back the example attribute commit since it was mostly reviewed.",
      "created_at" : "2015-07-07T13:08:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-119198667",
      "id" : 119198667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-07T13:08:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119198667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "After a talk with @luke-jr on IRC, I think I understand his vision better. The \"having a class named CStandardPolicy is a bug, because there shouldn't be any standard policy\" part is not clear to me yet though. If we want to make it simple for coders to implement and maintain custom policies (why would we have an interface and an implementation class otherwise?), then we need a name for the class implementing the interface. \r\nHe doesn't oppose to a -policy option either: he just wants to use \"-acceptnonstdtxn\" instead of \"-policy=test\". Which is fine. I can always create a PR with \"-policy=example_custom\" or something (although \"-policy=test\" decouples policy/policy from chainparams, but let's leave that for later).\r\n\r\nAbout the prohibition of  \"-acceptnonstdtxn=0 -testnet=0 -regtest=0\", he doesn't cares, but he feared that #6329 would be rejected otherwise. As discussed with @petertodd  in https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33987204 , I really believe that the whole point of exposing policy options is to allow users to select them, and I don't think we want to maintain the ugly initialization complexity burden of knowing which policy options are prohibited for each particular chain.\r\nThat's why I added f2e8fbd1 at the end, but if we can't arrive to a conclusion on this fast I will leave it for later instead of squashing it. 5c9c0bfc may seem bikeshedding but it's just taking the fest opportunity to fix a little mistake in #6329.\r\nI'll wait for review before squashing or discarding the fixup commits.",
      "created_at" : "2015-07-07T21:00:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-119338762",
      "id" : 119338762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-07T21:00:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119338762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Updated with several minor improvements and squashed \"fixup! RENAME: !fRequireStandard to fAcceptNonStdTxn (for \"-acceptnonstdtxn\")\". So now there's only one fixup commit \"waiting for approval\".\r\n",
      "created_at" : "2015-07-08T11:34:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-119546510",
      "id" : 119546510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-08T11:34:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119546510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Policy::AppendHelpMessages() and CPolicy::InitFromArgs(), the removal of fIsBareMultisigStd and fRequireStandard globals from main.o, the removal of the unnecessary restriction on -acceptnonstdtxn and CStandardPolicy are left for #6423.\r\nIt doesn't seem like anyone is interested in acking or discussing those things here anymore (or for now) so I'm really minimizing the scope of this PR to something that it's so trivial I could not imagine anyone having a nit for it.\r\n",
      "created_at" : "2015-07-11T18:39:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-120651862",
      "id" : 120651862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-11T18:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120651862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Even though I minimized the scope of this PR to make it easily-mergeable, trvially-reviewable/rebasable and nit-unfriendly, @theuni's sharp review found something that forced me to update this:\r\n\r\nIsStandard/CPolicy::ApproveScript only needs to expose the output parameter ```txnouttype& whichType``` internally for CPolicy::ApproveTx, so that can be a private/protected method. This improvement doesn't make the PR less mergeable or reviewable, and since no acks/nacks where received since a minimized the scope I thought it was a no brainer to include it.\r\n\r\nNow I'm 99% that further non-bike-shedding (and I already s/Validate/Approve) nits are possible at all.\r\n\r\nThe biggest subset of what has been moved out is still being kept rebased in #6423 (including CPolicy::GetOptionsHelp() which will supposedly help @luke-jr create qt forms for configuring these options dynamically [when you show me how to do that I will want to do the same for all the options, not just the policy ones]), but it will be closed (for depending on this one) as soon as I know what travis thinks about it and until this is merged.",
      "created_at" : "2015-07-22T23:23:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-123903946",
      "id" : 123903946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-22T23:23:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/123903946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2015-07-22T23:43:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-123908668",
      "id" : 123908668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-22T23:43:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/123908668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r35328102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/35328102"
         }
      },
      "body" : "Bad comment. How about instead:\r\n\r\nNon-consensus-critical policy logic, like whether or not a transaction should be relayed and/or included in blocks created.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-07-23T14:40:34Z",
      "diff_hunk" : "@@ -42,17 +42,26 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n-bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n+/**\n+ * \\class CPolicy\n+ * Generic interface class for policy.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r35328102",
      "id" : 35328102,
      "original_commit_id" : "d227be961afb5f45988c3c6de125daf08ceff399",
      "original_position" : 7,
      "path" : "src/policy/policy.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/35328102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Code review ACK; changes are trivial enough I trust the unit tests / Travis for testing correctness.",
      "created_at" : "2015-07-23T14:44:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-124128912",
      "id" : 124128912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-23T14:44:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/124128912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r35385390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/35385390"
         }
      },
      "body" : "I really want to use the word \"interface\" (because the plan is to have a separated implementation class later and make this one a dumb interface that just always approves everything). But better documentation is always welcomed: I will certainly add your suggestion.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-07-24T00:04:50Z",
      "diff_hunk" : "@@ -42,17 +42,26 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n-bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n+/**\n+ * \\class CPolicy\n+ * Generic interface class for policy.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r35385390",
      "id" : 35385390,
      "original_commit_id" : "d227be961afb5f45988c3c6de125daf08ceff399",
      "original_position" : 7,
      "path" : "src/policy/policy.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/35385390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Updated with @gavinandresen 's improvements to the doc.",
      "created_at" : "2015-07-24T00:13:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-124274205",
      "id" : 124274205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-24T00:13:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/124274205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r35386910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/35386910"
         }
      },
      "body" : "By the way, documentation for the public version of CPolicy::ApproveScript is also welcomed. Specially with this PR where it's a 100% merge-conflict-free to add it (nobody building on top of bitcoin/master will notice the difference).",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-07-24T00:34:54Z",
      "diff_hunk" : "@@ -42,17 +42,27 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n-bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+    bool ApproveScript(const CScript&, txnouttype&) const;\n+public:\n+    bool ApproveScript(const CScript&) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r35386910",
      "id" : 35386910,
      "original_commit_id" : "3ed911747a805e190132b25cd3da12a915006585",
      "original_position" : 14,
      "path" : "src/policy/policy.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/35386910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "I'm sorry about suggesting this after getting some ACKs, but @theuni 's nit made me realize that I went too far with the reduction of the scope. We don't need to wait for having attributes (#6423) to separate the interface CPolicy from the reference implementation CStandardPolicy (but I wanted to leave that out because @luke-jr seems to have a problem with using the term \"standard\" in the reference implementation [I'm happy to paint it CReferencePolicy if that helps]).\r\nNow I'm looking at that private method in CPolicy and thinking that a purely-interface class like CPolicy is intended to be should never have private methods, call me purist if you want.\r\nBy no means I want to delay this (I have plenty of code waiting for this [or that could become cleaner after this]), but if it's not going to do it, I would be happy to squash the latest fixup commit  I added (note that the delta to the total diff count is really small [even moving some documentation from the cpp to the .h, my mistake for thinking that we didn't even wanted CStandardPolicy in policy.h, but hidden in the .cpp]). \r\nIf it's going to delay this, I'm happy leaving it for an independent PR, #6423 or just any other PR that depends on the separation, whatever is preferred.\r\n",
      "created_at" : "2015-07-24T16:08:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-124569208",
      "id" : 124569208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-24T16:08:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/124569208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon Grr, you already had ACKs and this was surely just a day or two from going in. This constant scope-changing is impossible to keep up with.\r\n\r\nI don't have a preference, with or without the new commit is fine. But please, pick one and leave it alone.",
      "created_at" : "2015-07-24T19:40:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-124670787",
      "id" : 124670787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-24T19:40:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/124670787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "> But please, pick one and leave it alone.\r\n\r\nI'll let @laanwj pick between squashing it or taking it out and leave it alone. But yes, sorry for the changes in scope.",
      "created_at" : "2015-07-25T21:35:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-124899263",
      "id" : 124899263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-25T21:36:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/124899263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Removed the fixup commit with @laanwj 's nack and squashed the rest.",
      "created_at" : "2015-07-28T21:03:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-125753274",
      "id" : 125753274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-07-28T21:03:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/125753274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Needed rebase.",
      "created_at" : "2015-08-21T02:09:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-133246418",
      "id" : 133246418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-08-21T02:09:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133246418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167014"
         }
      },
      "body" : "IMO more of AcceptToMemoryPool should be included in ApproveTx. It doesn't have to be immediately, but at the very least, the policy.h docs should mention that the API is not final yet, and further changes are planned. Ideally, the function should get a name like ApproveTx_Partial so that when it is completed, it can be renamed to break the API explicitly.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:31:42Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167014",
      "id" : 38167014,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167035"
         }
      },
      "body" : "Probably any default should call ApproveScript for at least the outputs... maybe easier to just not have defaults at CPolicy for now?",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:32:24Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167035",
      "id" : 38167035,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167243"
         }
      },
      "body" : "Yes, this is a work in progress. I'm not sure what you have in mind for ApproveTx but I would certainly like to include more things in ApproveTxInputs. In any case, one step at a time.\r\n\r\nI don't think we need to mention that the API is not final because it may never be final. Other work in progress (for example, libconsensus) doesn't clarify \"the API is not final\". In any case, if more people think we should clarify that, I'm happy to include more things in the documentation.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:37:54Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167243",
      "id" : 38167243,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167429"
         }
      },
      "body" : "Initially it was a pure abstract class but if I remember correctly somebody complained about it, and it's more useful for alternative policies that don't want to restrict certain things for the base class to always return true in all Approve_ methods.\r\nCPolicy is not the default policy, CStandardPolicy is. CPolicy is just the interface. It just happen to also implement the simplest policy possible: never reject anything on policy grounds.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:43:31Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167429",
      "id" : 38167429,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167723"
         }
      },
      "body" : "Part of the point of libconsensus and policy abstraction is so that the API will some day be final and people can rely on their modifications working when they upgrade the main codebase...",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:52:42Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167723",
      "id" : 38167723,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167758"
         }
      },
      "body" : "But if a subclass overrides ApproveScript, it would be unexpected for ApproveTx to bypass that.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:53:52Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167758",
      "id" : 38167758,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167850"
         }
      },
      "body" : "I almost agree for libconsensus (soft/hardforks may require a change in the API though).\r\nFor policy changes are more likely to be expected (ie someone asks for a change in the API so that it's possible to support some new policy).",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T02:56:30Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167850",
      "id" : 38167850,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38167850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38168008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38168008"
         }
      },
      "body" : "If they extend CPolicy directly, they shouldn't expect ApproveTx to call ApproveScript unless they explicitly do so themselves.\r\nThey can extend CStandardPolicy too tough (which I expect most alternative policies to do, unless they have radically different configurable options). In that case they can expect anything they don't override to act like it does in CStandardPolicy.\r\n",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-08-28T03:01:26Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38168008",
      "id" : 38168008,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38168008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38709797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38709797"
         }
      },
      "body" : "I don't agree. Either there should be no default behaviour at all, or it should be reasonably expected default behaviour.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-03T23:49:41Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38709797",
      "id" : 38709797,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38709797",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38709872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38709872"
         }
      },
      "body" : "Such changes should be backward-compatible with old policies whenever possible, or at the very least cause a compile failure.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-03T23:50:48Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38709872",
      "id" : 38709872,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38709872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38710242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38710242"
         }
      },
      "body" : "There is one default behavior: accept everything that follows the consensus rules.\r\nI can turn CPolicy back into a pure abstract class, though I'm afraid @sipa @laanwj @theuni or @gmaxwell may have issues with a pure abstract class because it may be worse for performance.\r\nI'm fine with either of the two options (not with implementing anything \"reasonable\" in CPolicy): either CPolicy accepts everything or it is a pure interface.\r\n",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-03T23:56:55Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38710242",
      "id" : 38710242,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38710242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38710374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38710374"
         }
      },
      "body" : "I don't think performance matters for this. The cost of accepting a transaction is already in the order of almost a millisecond anyway, the extra indirection of a virtual method is nothing compared to that.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-03T23:59:00Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38710374",
      "id" : 38710374,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38710374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38710604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38710604"
         }
      },
      "body" : "I think encapsulating policy globals as CStandardPolicy attributes and being able to support 2 different policies with different configuration arguments (you didn't like testpolicy so I will go with randomPolicy) as soon as possible is much more of a priority for me than being backward-compatible with \"old policies\" (I think you really meant \"your branches\" there). Anything else can be rebase on top of that and multiple parallel policies will allow implementators to not conflict with policies they don't care about. If you are too lazy to do so, I can do it for you at any point in time: just point me to your longest branch and to the PR you are going to utACK if I do that work (for example, this one).",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-04T00:03:06Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38710604",
      "id" : 38710604,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38710604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38711378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38711378"
         }
      },
      "body" : "No, I don't mean my branches. I mean that policies written today should not break or behave differently in subtle ways tomorrow.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-04T00:18:15Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38711378",
      "id" : 38711378,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38711378",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38764711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38764711"
         }
      },
      "body" : "It won't break in subtle ways: they will break hard and require rebase or they won't.\r\nMore of AcceptToMemoryPool can be moved to policy later and changing the \"API\" will be unavoidable if we want to start with something simple like this.\r\nAnother possibility is keep on complaianing about minor details of a trivial PR and wait another full year to have a policy class.\r\nPlease, if you don't like this PR exactly as it is you can code your particular nits instead of giving vague complains like this one.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-04T15:43:54Z",
      "diff_hunk" : "@@ -794,7 +796,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (fRequireStandard && !IsStandardTx(tx, reason))\n+    if (!policy.ApproveTx(tx, reason))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38764711",
      "id" : 38764711,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38764711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38765080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38765080"
         }
      },
      "body" : "Then I prefer the return true policy simply because it is more convenient when you create custom policies very different from CStandardPolicy (you save the effort to reimplement any method for which you were going to return true, for example, we could have a policy that requires a minimumfee but doesn't have any special requirement for scripts).\r\nAs said I can always go back to the pure abstract class, but I don't see what the problem with a non-abstract interface base class (we have something similar in many places, for example BaseSignatureChecker which always returns false).\r\n",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-04T15:47:44Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38765080",
      "id" : 38765080,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38765080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38817178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38817178"
         }
      },
      "body" : "But to be perfectly clear, I'm happy with either one. @luke-jr do you prefer a pure abstract class or a CPolicy that simply approves everything?",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-06T03:20:33Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38817178",
      "id" : 38817178,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38817178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38817732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38817732"
         }
      },
      "body" : "I prefer pure.",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-06T05:16:54Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38817732",
      "id" : 38817732,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-06T16:24:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38817732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Updated making CPolicy a pure abstract class instead of a regular class that always returns true.",
      "created_at" : "2015-09-06T16:25:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-138097708",
      "id" : 138097708,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-09-06T16:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138097708",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "concept and utACK.",
      "created_at" : "2015-09-07T13:15:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-138295212",
      "id" : 138295212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-09-07T13:15:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138295212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38861124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38861124"
         }
      },
      "body" : "I think the pure abstract class is safer due to users who may inadvertently think the base class was standard.\r\nIt doesn't add any real value to default to true; as that behaviour can trivially be implemented by a user. ",
      "commit_id" : "b0a3343f1cc19e1e0f5698e552dbea38e8f4b097",
      "created_at" : "2015-09-07T13:16:37Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_INTERFACE_H\n+#define BITCOIN_POLICY_INTERFACE_H\n+\n+#include <string>\n+\n+class CCoinsViewCache;\n+class CScript;\n+class CTransaction;\n+\n+/**\n+ * \\class CPolicy\n+ * Interface class for non-consensus-critical policy logic, like whether or not\n+ * a transaction should be relayed and/or included in blocks created.\n+ */\n+class CPolicy\n+{\n+public:\n+    virtual ~CPolicy() {};\n+    virtual bool ApproveScript(const CScript& scriptPubKey) const { return true; };\n+    /**\n+     * Check for standard transaction types\n+     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+     */\n+    virtual bool ApproveTx(const CTransaction& tx, std::string& reason) const { return true; };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38861124",
      "id" : 38861124,
      "original_commit_id" : "e743d04ced57d6a1563433f745564301cc997243",
      "original_position" : 29,
      "path" : "src/policy/interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6068",
      "updated_at" : "2015-09-07T13:16:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38861124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-09-14T23:37:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-140233675",
      "id" : 140233675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-09-14T23:37:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/140233675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos pointed out that some documentation was left with the names of the old functions so I did a grep for each of them to make sure I wasn't leaving anything outdated.",
      "created_at" : "2015-09-14T23:49:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-140235116",
      "id" : 140235116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-09-14T23:49:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/140235116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "ping @laanwj @theuni ",
      "created_at" : "2015-09-22T12:46:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-142277579",
      "id" : 142277579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-09-22T12:46:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142277579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Ping",
      "created_at" : "2015-10-01T16:40:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-144782394",
      "id" : 144782394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-10-01T16:40:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144782394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Needed rebase.",
      "created_at" : "2015-10-01T22:48:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-144869295",
      "id" : 144869295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-10-01T22:48:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144869295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "ACK and well done with the switch to pure abstract class.\r\nCurrent merge conflicts seem trivial, hope @laanwj has time to look at this and merge it.",
      "created_at" : "2015-11-01T15:22:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152834354",
      "id" : 152834354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T15:22:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152834354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/148059?v=3",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "body" : "No objection from me since this is now just encapsulation.  Expire and TrimToSize are candidates for future inclusion too.",
      "created_at" : "2015-11-01T18:04:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152849295",
      "id" : 152849295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T18:04:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152849295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "This is not just encapsulation, is is the creation of an API. Until [this is resolved](https://github.com/bitcoin/bitcoin/pull/6068#discussion_r38167014), it creates practical problems for compatibility. A policy written for 0.12 shouldn't quietly do something different in 0.13, so either the method name should be changed to AcceptTx_WIP, the class names changed with _WIP, or not merged until the desired interface for AcceptTx is implemented.",
      "created_at" : "2015-11-01T18:08:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152849427",
      "id" : 152849427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T18:08:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152849427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I don't think it's a reasonable expectation that policy can encapsulate\nthat much of the mempool/relay behaviour.\n\nIMHO policy ought to be the subset of configuration that is safe to change\nwithout hurting a node's operations. For example, I don't think that can\nencapsulate memory limiting, script verification, double spend prevention,\n... the mempool and the node's resources have specific invariants that have\nbe enforced for correct operation, regardless of what policy is.\n\nThose invariants can change over time, and the logic to which the\nconfiguration applies can change too.\n\nFrankly, I think this type of encapsulation needs to wait until the mempool\ncode itself and the code relying on it is stable, and it is clear which\nparts are configurable and which aren't.\n",
      "created_at" : "2015-11-01T18:28:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152850502",
      "id" : 152850502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T18:28:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152850502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Overall, I agree. The parts I was thinking were fee policies, replacement decisions, rate limiting of gratis txns, ancestor/descendent limits, etc. I'm okay with waiting until mempool code stabilises more, but I don't think mempool code should be placing any limitations on what policy code does, and would consider such limitations to be a bug...",
      "created_at" : "2015-11-01T18:34:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152850870",
      "id" : 152850870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T18:34:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152850870",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "For example, the current mempool code has a feerate index which the size limiting relies on for correctness. It doesn't require that the feerate exactly represents fee per byte, but it does represent an ordering that has to be respected. Policy can reasonably override what a transaction's \"fee\" means and what its \"size\" means, but can't bypass or change the need for such an index in the first place. So no, I think it's unreasonable to say that the mempool can't place any limitation of what the policy can do. Policy is inherently just something that plugs into the other code, and I don't think there can be any expectation of a stable API. If the mempool code changes, what can be configured in it can change too.",
      "created_at" : "2015-11-01T18:43:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152851304",
      "id" : 152851304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T18:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152851304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "It seems we have different ideas of what the policy class will do, and I'm afraid we can only decide that in incremental changes. If I understood @luke-jr correctly, he is not going to utACK unless I rename some of the methods, for example s/AcceptTxInputs/AcceptTxInputs_Incomplete. He agrees that we can AcceptTxInputsV2, AcceptTxInputsV3, etc when/if we change the method (for example, to include fee validation), but he would prefer to \"not start counting until a reasonable baseline\" (although didn't provide a definition for what a \"reasonable baseline\" is). We will have to move on without his utACK because I think it is too late for bike-shedding and he already got me to s/Validate/Accept in all methods.\r\n\r\n@sipa It is true that we won't be able to finish the encapsulation while the mempool code is unstable, but we know that we want a policy interface and we know we want at least the code currently in policy/policy.cpp to be encapsulated behind this interface. We've known this for more than a year (and many more things like #5114 that are waiting for CPolicy to exist). This hardly conflicts with any of the work done in the mempool and if it does, it does it in a trivial-to-rebase way.\r\n\r\nIf it is decided to freeze policy encapsulation until \"the mempool code is stable\", fine. It is very frustrating to try to just with a simple class for policy encapsulation for more than one year (see #5071, #5180, #5595 among other related PRs...) with no success. In the meantime, my policy encapsulation research branches bitrot and I waste my time in the rebase mouse wheel. I could just stop wasting my time and stop any work on policy encapsulation (or at least, stop maintaining open PRs and start maintaining a per-major-release branch or something) until the \"right time\" arrives.\r\n\r\n@laanwj should I rebase before 0.12 or just close it instead?\r\n",
      "created_at" : "2015-11-01T18:56:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152851918",
      "id" : 152851918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T18:56:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152851918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "> We will have to move on without his utACK because I think it is too late for bike-shedding and he already got me to s/Validate/Accept in all methods.\r\n\r\nThis is nonsense. I had made this point originally in #5071 (2014 Oct) which you based your work on initially. Even on this thread, I left the comment to that effect Aug 28, two days after you submitted the PR. Also, understandable API interfaces is not bike-shedding. Finally, it is never too late to address things in an unmerged PR, much less to \"move on without...utACK\" simply because you don't want to address them.",
      "created_at" : "2015-11-01T19:17:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152852945",
      "id" : 152852945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T19:17:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152852945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "You are right, it is never too late to change things. But I've tried my best to understand how renaming a method is not bike-shedding and how  AcceptTxInputs_Incomplete, AcceptTxInputs, AcceptTxInputsV2 is better than  AcceptTxInputs, AcceptTxInputsV2, AcceptTxInputsV3 without success. I've been reducing the scope of the policy PRs (and adapting them from yours and other people's feedback) since I started and now suddenly \"it is incomplete\". If we cannot do this work incrementally I'm out, because I already know that my multi-commit branches will be considered to hard to review. #5071 was also incomplete: we can't do this perfectly in a simple one commit PR, that's simply not possible. \r\nTake into account that I started implementing alternatives to #5071 because I didn't agree with everything that was there. Let's find out where we can agree easier first and then discuss the other more fundamental disagreements. But if our only disagreement and the only reason  why you don't utACK this is the name of a method, then I'm fine not having your utACK (which otherwise I find very interesting because I know you've worked on policy encapsulation as well). Of course, I'm assuming that you won't nack this for a method name either, and if you do I assume your nack can be ignored.\r\nNo, this is not will be a final API, this is a tiny first step that will need more steps after it. That doesn't mean any of the current method names are bad choices for the first version of the API.\r\n",
      "created_at" : "2015-11-01T19:38:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152855953",
      "id" : 152855953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T19:38:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152855953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "I disagree with the goal of making Policy a (stable) API. It's a way to separate configurable behaviour from non-configurable. What is configurable will depend on what the code calling it is doing.",
      "created_at" : "2015-11-01T19:48:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152856922",
      "id" : 152856922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T19:48:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152856922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Rather than a stable API, I just don't want the same policy to compile for both 0.15 and 0.16 without any changes and end up with wildly different behaviour because the meaning of the API changed without the method names reflecting it properly.",
      "created_at" : "2015-11-01T19:59:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152858522",
      "id" : 152858522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T19:59:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152858522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr We can fix that by changing the names when appropriate (for example with V2, etc if no new name comes to mind).\r\n\r\n@sipa I agree the goal it's not a stable API (and if it was we're far away from it anyway and that goal cannot be the scope of this PR). But do you anticipate any mempool PR to change any of the code currently in policy/policy any time soon?\r\nI really believe this little change does not worryingly conflict with any work being done in the mempool (even if this changes AcceptToMemoryPool in a trivial way).",
      "created_at" : "2015-11-01T20:23:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-152860627",
      "id" : 152860627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-01T20:23:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/152860627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Since it doesn't seem like this will make it into 0.12, I'm closing it for now instead of rebasing it. Sigh.",
      "created_at" : "2015-11-03T13:57:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-153361943",
      "id" : 153361943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-03T13:57:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/153361943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "re-ACK (was rebased since last ACK)",
      "created_at" : "2015-11-04T02:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-153550641",
      "id" : 153550641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-11-04T02:21:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/153550641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "closed forever",
      "created_at" : "2015-12-01T02:37:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-160829711",
      "id" : 160829711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-12-01T02:37:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160829711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "For https://github.com/bitcoin/bitcoin/pull/6423 and more things on top of that.\r\nAnyway, Bitcoin Core has been consistently rejecting this change (look at the previous PRs) for longer than  a year, so I'll stop insisting. If you are interested more of this will be maintained in my own software fork, which will have 0.12 as its first release.",
      "created_at" : "2015-12-01T12:24:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-160952898",
      "id" : 160952898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-12-01T17:23:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160952898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "wooo. lets talk about that...",
      "created_at" : "2015-12-01T14:10:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-160979629",
      "id" : 160979629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-12-01T14:10:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160979629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/148059?v=3",
         "events_url" : "https://api.github.com/users/jaromil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaromil/followers",
         "following_url" : "https://api.github.com/users/jaromil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaromil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaromil",
         "id" : 148059,
         "login" : "jaromil",
         "organizations_url" : "https://api.github.com/users/jaromil/orgs",
         "received_events_url" : "https://api.github.com/users/jaromil/received_events",
         "repos_url" : "https://api.github.com/users/jaromil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaromil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaromil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaromil"
      }
   },
   {
      "body" : "@laanwj are we interested in this?  IMHO it makes the idea of node 'policy' clear and shows that `IsStandard` is simply just a default policy.\r\nThis definitely seems like something we should encourage.",
      "created_at" : "2015-12-02T01:53:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-161154435",
      "id" : 161154435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-12-02T01:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161154435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   }
]

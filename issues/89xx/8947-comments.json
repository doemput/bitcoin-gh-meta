[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8947#discussion_r83736359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8947"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83736359"
         }
      },
      "body" : "Please use the one from master.\r\n\r\nConcept ACK, otherwise.",
      "commit_id" : "c9ffe9044da08773039060983632cc3fbd4f0eb8",
      "created_at" : "2016-10-17T21:19:07Z",
      "diff_hunk" : "@@ -0,0 +1,863 @@\n+Bitcoin Core version 0.13.0 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.13.0/>\n+\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+Compatibility\n+==============\n+\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n+an OS initially released in 2001. This means that not even critical security\n+updates will be released anymore. Without security updates, using a bitcoin\n+wallet on a XP machine is irresponsible at least.\n+\n+In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n+randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n+what the source of these crashes is, but it is likely that upstream\n+libraries such as Qt are no longer being tested on XP.\n+\n+We do not have time nor resources to provide support for an OS that is\n+end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n+suggested to upgrade to a newer verion of Windows, or install an alternative OS\n+that is supported.\n+\n+No attempt is made to prevent installing or running the software on Windows XP,\n+you can still do so at your own risk, but do not expect it to work: do not\n+report issues about Windows XP to the issue tracker.\n+\n+Notable changes\n+===============\n+\n+Database cache memory increased\n+--------------------------------\n+\n+As a result of growth of the UTXO set, performance with the prior default\n+database cache of 100 MiB has suffered.\n+For this reason the default was changed to 300 MiB in this release.\n+\n+For nodes on low-memory systems, the database cache can be changed back to\n+100 MiB (or to another value) by either:\n+\n+- Adding `dbcache=100` in bitcoin.conf\n+- Changing it in the GUI under `Options Ã¢ÂÂ Size of database cache`\n+\n+Note that the database cache setting has the most performance impact\n+during initial sync of a node, and when catching up after downtime.\n+\n+\n+bitcoin-cli: arguments privacy\n+------------------------------\n+\n+The RPC command line client gained a new argument, `-stdin`\n+to read extra arguments from standard input, one per line until EOF/Ctrl-D.\n+For example:\n+\n+    $ src/bitcoin-cli -stdin walletpassphrase\n+    mysecretcode\n+    120\n+    ..... press Ctrl-D here to end input\n+    $\n+\n+It is recommended to use this for sensitive information such as wallet\n+passphrases, as command-line arguments can usually be read from the process\n+table by any user on the system.\n+\n+\n+C++11 and Python 3\n+------------------\n+\n+Various code modernizations have been done. The Bitcoin Core code base has\n+started using C++11. This means that a C++11-capable compiler is now needed for\n+building. Effectively this means GCC 4.7 or higher, or Clang 3.3 or higher.\n+\n+When cross-compiling for a target that doesn't have C++11 libraries, configure with\n+`./configure --enable-glibc-back-compat ... LDFLAGS=-static-libstdc++`.\n+\n+For running the functional tests in `qa/rpc-tests`, Python3.4 or higher is now\n+required.\n+\n+\n+Linux ARM builds\n+----------------\n+\n+Due to popular request, Linux ARM builds have been added to the uploaded\n+executables.\n+\n+The following extra files can be found in the download directory or torrent:\n+\n+- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries for the most\n+  common 32-bit ARM architecture.\n+- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries for the most\n+  common 64-bit ARM architecture.\n+\n+ARM builds are still experimental. If you have problems on a certain device or\n+Linux distribution combination please report them on the bug tracker, it may be\n+possible to resolve them.\n+\n+Note that Android is not considered ARM Linux in this context. The executables\n+are not expected to work out of the box on Android.\n+\n+\n+Compact Block support (BIP 152)\n+-------------------------------\n+\n+Support for block relay using the Compact Blocks protocol has been implemented\n+in PR 8068.\n+\n+The primary goal is reducing the bandwidth spikes at relay time, though in many\n+cases it also reduces propagation delay. It is automatically enabled between\n+compatible peers.\n+[BIP 152](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki)\n+\n+As a side-effect, ordinary non-mining nodes will download and upload blocks\n+faster if those blocks were produced by miners using similar transaction\n+filtering policies. This means that a miner who produces a block with many\n+transactions discouraged by your node will be relayed slower than one with\n+only transactions already in your memory pool. The overall effect of such\n+relay differences on the network may result in blocks which include widely-\n+discouraged transactions losing a stale block race, and therefore miners may\n+wish to configure their node to take common relay policies into consideration.\n+\n+\n+Hierarchical Deterministic Key Generation\n+-----------------------------------------\n+Newly created wallets will use hierarchical deterministic key generation\n+according to BIP32 (keypath m/0'/0'/k').\n+Existing wallets will still use traditional key generation.\n+\n+Backups of HD wallets, regardless of when they have been created, can\n+therefore be used to re-generate all possible private keys, even the\n+ones which haven't already been generated during the time of the backup.\n+**Attention:** Encrypting the wallet will create a new seed which requires\n+a new backup!\n+\n+Wallet dumps (created using the `dumpwallet` RPC) will contain the deterministic\n+seed. This is expected to allow future versions to import the seed and all\n+associated funds, but this is not yet implemented.\n+\n+HD key generation for new wallets can be disabled by `-usehd=0`. Keep in\n+mind that this flag only has affect on newly created wallets.\n+You can't disable HD key generation once you have created a HD wallet.\n+\n+There is no distinction between internal (change) and external keys.\n+\n+HD wallets are incompatible with older versions of Bitcoin Core.\n+\n+[Pull request](https://github.com/bitcoin/bitcoin/pull/8035/files), [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n+\n+\n+Segregated Witness\n+------------------\n+\n+The code preparations for Segregated Witness (\"segwit\"), as described in [BIP\n+141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki), [BIP\n+143](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki), [BIP\n+144](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki), and [BIP\n+145](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki) are\n+finished and included in this release.  However, BIP 141 does not yet specify\n+activation parameters on mainnet, and so this release does not support segwit\n+use on mainnet.  Testnet use is supported, and after BIP 141 is updated with\n+proposed parameters, a future release of Bitcoin Core is expected that\n+implements those parameters for mainnet.\n+\n+Furthermore, because segwit activation is not yet specified for mainnet,\n+version 0.13.0 will behave similarly as other pre-segwit releases even after a\n+future activation of BIP 141 on the network.  Upgrading from 0.13.0 will be\n+required in order to utilize segwit-related features on mainnet (such as signal\n+BIP 141 activation, mine segwit blocks, fully validate segwit blocks, relay\n+segwit blocks to other segwit nodes, and use segwit transactions in the\n+wallet, etc).\n+\n+\n+Mining transaction selection (\"Child Pays For Parent\")\n+------------------------------------------------------\n+\n+The mining transaction selection algorithm has been replaced with an algorithm\n+that selects transactions based on their feerate inclusive of unconfirmed\n+ancestor transactions.  This means that a low-fee transaction can become more\n+likely to be selected if a high-fee transaction that spends its outputs is\n+relayed.\n+\n+With this change, the `-blockminsize` command line option has been removed.\n+\n+The command line option `-blockmaxsize` remains an option to specify the\n+maximum number of serialized bytes in a generated block.  In addition, the new\n+command line option `-blockmaxweight` has been added, which specifies the\n+maximum \"block weight\" of a generated block, as defined by [BIP 141 (Segregated\n+Witness)] (https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki).\n+\n+In preparation for Segregated Witness, the mining algorithm has been modified\n+to optimize transaction selection for a given block weight, rather than a given\n+number of serialized bytes in a block.  In this release, transaction selection\n+is unaffected by this distinction (as BIP 141 activation is not supported on\n+mainnet in this release, see above), but in future releases and after BIP 141\n+activation, these calculations would be expected to differ.\n+\n+For optimal runtime performance, miners using this release should specify\n+`-blockmaxweight` on the command line, and not specify `-blockmaxsize`.\n+Additionally (or only) specifying `-blockmaxsize`, or relying on default\n+settings for both, may result in performance degradation, as the logic to\n+support `-blockmaxsize` performs additional computation to ensure that\n+constraint is met.  (Note that for mainnet, in this release, the equivalent\n+parameter for `-blockmaxweight` would be four times the desired\n+`-blockmaxsize`.  See [BIP 141]\n+(https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki) for additional\n+details.)\n+\n+In the future, the `-blockmaxsize` option may be removed, as block creation is\n+no longer optimized for this metric.  Feedback is requested on whether to\n+deprecate or keep this command line option in future releases.\n+\n+\n+Reindexing changes\n+------------------\n+\n+In earlier versions, reindexing did validation while reading through the block\n+files on disk. These two have now been split up, so that all blocks are known\n+before validation starts. This was necessary to make certain optimizations that\n+are available during normal synchronizations also available during reindexing.\n+\n+The two phases are distinct in the Bitcoin-Qt GUI. During the first one,\n+\"Reindexing blocks on disk\" is shown. During the second (slower) one,\n+\"Processing blocks on disk\" is shown.\n+\n+It is possible to only redo validation now, without rebuilding the block index,\n+using the command line option `-reindex-chainstate` (in addition to\n+`-reindex` which does both). This new option is useful when the blocks on disk\n+are assumed to be fine, but the chainstate is still corrupted. It is also\n+useful for benchmarks.\n+\n+\n+Removal of internal miner\n+--------------------------\n+\n+As CPU mining has been useless for a long time, the internal miner has been\n+removed in this release, and replaced with a simpler implementation for the\n+test framework.\n+\n+The overall result of this is that `setgenerate` RPC call has been removed, as\n+well as the `-gen` and `-genproclimit` command-line options.\n+\n+For testing, the `generate` call can still be used to mine a block, and a new\n+RPC call `generatetoaddress` has been added to mine to a specific address. This\n+works with wallet disabled.\n+\n+\n+New bytespersigop implementation\n+--------------------------------\n+\n+The former implementation of the bytespersigop filter accidentally broke bare\n+multisig (which is meant to be controlled by the `permitbaremultisig` option),\n+since the consensus protocol always counts these older transaction forms as 20\n+sigops for backwards compatibility. Simply fixing this bug by counting more\n+accurately would have reintroduced a vulnerability. It has therefore been\n+replaced with a new implementation that rather than filter such transactions,\n+instead treats them (for fee purposes only) as if they were in fact the size\n+of a transaction actually using all 20 sigops.\n+\n+\n+Low-level P2P changes\n+----------------------\n+\n+- The optional new p2p message \"feefilter\" is implemented and the protocol\n+  version is bumped to 70013. Upon receiving a feefilter message from a peer,\n+  a node will not send invs for any transactions which do not meet the filter\n+  feerate. [BIP 133](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki)\n+\n+- The P2P alert system has been removed in PR #7692 and the `alert` P2P message\n+  is no longer supported.\n+\n+- The transaction relay mechanism used to relay one quarter of all transactions\n+  instantly, while queueing up the rest and sending them out in batch. As\n+  this resulted in chains of dependent transactions being reordered, it\n+  systematically hurt transaction relay. The relay code was redesigned in PRs\n+  \\#7840 and #8082, and now always batches transactions announcements while also\n+  sorting them according to dependency order. This significantly reduces orphan\n+  transactions. To compensate for the removal of instant relay, the frequency of\n+  batch sending was doubled for outgoing peers.\n+\n+- Since PR #7840 the BIP35 `mempool` command is also subject to batch processing.\n+  Also the `mempool` message is no longer handled for non-whitelisted peers when\n+  `NODE_BLOOM` is disabled through `-peerbloomfilters=0`.\n+\n+- The maximum size of orphan transactions that are kept in memory until their\n+  ancestors arrive has been raised in PR #8179 from 5000 to 99999 bytes. They\n+  are now also removed from memory when they are included in a block, conflict\n+  with a block, and time out after 20 minutes.\n+\n+- We respond at most once to a getaddr request during the lifetime of a\n+  connection since PR #7856.\n+\n+- Connections to peers who have recently been the first one to give us a valid\n+  new block or transaction are protected from disconnections since PR #8084.\n+\n+\n+Low-level RPC changes\n+----------------------\n+\n+- RPC calls have been added to output detailed statistics for individual mempool\n+  entries, as well as to calculate the in-mempool ancestors or descendants of a\n+  transaction: see `getmempoolentry`, `getmempoolancestors`, `getmempooldescendants`.\n+\n+- `gettxoutsetinfo` UTXO hash (`hash_serialized`) has changed. There was a divergence between\n+  32-bit and 64-bit platforms, and the txids were missing in the hashed data. This has been\n+  fixed, but this means that the output will be different than from previous versions.\n+\n+- Full UTF-8 support in the RPC API. Non-ASCII characters in, for example,\n+  wallet labels have always been malformed because they weren't taken into account\n+  properly in JSON RPC processing. This is no longer the case. This also affects\n+  the GUI debug console.\n+\n+- Asm script outputs replacements for OP_NOP2 and OP_NOP3\n+\n+  - OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP \n+65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n+\n+  - OP_NOP3 has been renamed to OP_CHECKSEQUENCEVERIFY by [BIP \n+112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki)\n+\n+  - The following outputs are affected by this change:\n+\n+    - RPC `getrawtransaction` (in verbose mode)\n+    - RPC `decoderawtransaction`\n+    - RPC `decodescript`\n+    - REST `/rest/tx/` (JSON format)\n+    - REST `/rest/block/` (JSON format when including extended tx details)\n+    - `bitcoin-tx -json`\n+\n+- The sorting of the output of the `getrawmempool` output has changed.\n+\n+- New RPC commands: `generatetoaddress`, `importprunedfunds`, `removeprunedfunds`, `signmessagewithprivkey`,\n+  `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`,\n+  `createwitnessaddress`, `addwitnessaddress`.\n+\n+- Removed RPC commands: `setgenerate`, `getgenerate`.\n+\n+- New options were added to `fundrawtransaction`: `includeWatching`, `changeAddress`, `changePosition` and `feeRate`.\n+\n+\n+Low-level ZMQ changes\n+----------------------\n+\n+- Each ZMQ notification now contains an up-counting sequence number that allows\n+  listeners to detect lost notifications.\n+  The sequence number is always the last element in a multi-part ZMQ notification and\n+  therefore backward compatible. Each message type has its own counter.\n+  PR [#7762](https://github.com/bitcoin/bitcoin/pull/7762).\n+\n+\n+0.13.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### RPC and other APIs\n+\n+- #7156 `9ee02cf` Remove cs_main lock from `createrawtransaction` (laanwj)\n+- #7326 `2cd004b` Fix typo, wrong information in gettxout help text (paveljanik)\n+- #7222 `82429d0` Indicate which transactions are signaling opt-in RBF (sdaftuar)\n+- #7480 `b49a623` Changed getnetworkhps value to double to avoid overflow (instagibbs)\n+- #7550 `8b958ab` Input-from-stdin mode for bitcoin-cli (laanwj)\n+- #7670 `c9a1265` Use cached block hash in blockToJSON() (rat4)\n+- #7726 `9af69fa` Correct importaddress help reference to importpubkey (CypherGrue)\n+- #7766 `16555b6` Register calls where they are defined (laanwj)\n+- #7797 `e662a76` Fix generatetoaddress failing to parse address (mruddy)\n+- #7774 `916b15a` Add versionHex in getblock and getblockheader JSON results (mruddy)\n+- #7863 `72c54e3` Getblockchaininfo: make bip9_softforks an object, not an array (rustyrussell)\n+- #7842 `d97101e` Do not print minping time in getpeerinfo when no ping received yet (paveljanik)\n+- #7518 `be14ca5` Add multiple options to fundrawtransaction (promag)\n+- #7756 `9e47fce` Add cursor to iterate over utxo set, use this in `gettxoutsetinfo` (laanwj)\n+- #7848 `88616d2` Divergence between 32- and 64-bit when hashing >4GB affects `gettxoutsetinfo` (laanwj)\n+- #7827 `4205ad7` Speed up `getchaintips` (mrbandrews)\n+- #7762 `a1eb344` Append a message sequence number to every ZMQ notification (jonasschnelli)\n+- #7688 `46880ed` List solvability in listunspent output and improve help (sipa)\n+- #7926 `5725807` Push back `getaddednodeinfo` dead value (instagibbs)\n+- #7953 `0630353` Create `signmessagewithprivkey` rpc (achow101)\n+- #8049 `c028c7b` Expose information on whether transaction relay is enabled in `getnetworkinfo` (laanwj)\n+- #7967 `8c1e49b` Add feerate option to `fundrawtransaction` (jonasschnelli)\n+- #8118 `9b6a48c` Reduce unnecessary hashing in `signrawtransaction` (jonasnick)\n+- #7957 `79004d4` Add support for transaction sequence number (jonasschnelli)\n+- #8153 `75ec320` `fundrawtransaction` feeRate: Use BTC/kB (MarcoFalke)\n+- #7292 `7ce9ac5` Expose ancestor/descendant information over RPC (sdaftuar)\n+- #8171 `62fcf27` Fix createrawtx sequence number unsigned int parsing (jonasschnelli)\n+- #7892 `9c3d0fa` Add full UTF-8 support to RPC (laanwj)\n+- #8317 `304eff3` Don't use floating point in rpcwallet (MarcoFalke)\n+- #8258 `5a06ebb` Hide softfork in `getblockchaininfo` if timeout is 0 (jl2012)\n+- #8244 `1922e5a` Remove unnecessary LOCK(cs_main) in getrawmempool (dcousens)\n+\n+### Block and transaction handling\n+\n+- #7056 `6a07208` Save last db read (morcos)\n+- #6842 `0192806` Limitfreerelay edge case bugfix (ptschip)\n+- #7084 `11d74f6` Replace maxFeeRate of 10000*minRelayTxFee with maxTxFee in mempool (MarcoFalke)\n+- #7539 `9f33dba` Add tags to mempool's mapTx indices (sdaftuar)\n+- #7592 `26a2a72` Re-remove ERROR logging for mempool rejects (laanwj)\n+- #7187 `14d6324` Keep reorgs fast for SequenceLocks checks (morcos)\n+- #7594 `01f4267` Mempool: Add tracking of ancestor packages (sdaftuar)\n+- #7904 `fc9e334` Txdb: Fix assert crash in new UTXO set cursor (laanwj)\n+- #7927 `f9c2ac7` Minor changes to dbwrapper to simplify support for other databases (laanwj)\n+- #7933 `e26b620` Fix OOM when deserializing UTXO entries with invalid length (sipa)\n+- #8020 `5e374f7` Use SipHash-2-4 for various non-cryptographic hashes (sipa)\n+- #8076 `d720980` VerifyDB: don't check blocks that have been pruned (sdaftuar)\n+- #8080 `862fd24` Do not use mempool for GETDATA for tx accepted after the last mempool req (gmaxwell)\n+- #7997 `a82f033` Replace mapNextTx with slimmer setSpends (kazcw)\n+- #8220 `1f86d64` Stop trimming when mapTx is empty (sipa)\n+- #8273 `396f9d6` Bump `-dbcache` default to 300MiB (laanwj)\n+- #7225 `eb33179` Eliminate unnecessary call to CheckBlock (sdaftuar)\n+- #7907 `006cdf6` Optimize and Cleanup CScript::FindAndDelete (pstratem)\n+- #7917 `239d419` Optimize reindex (sipa)\n+- #7763 `3081fb9` Put hex-encoded version in UpdateTip (sipa)\n+- #8149 `d612837` Testnet-only segregated witness (sipa)\n+- #8305 `3730393` Improve handling of unconnecting headers (sdaftuar)\n+- #8363 `fca1a41` Rename \"block cost\" to \"block weight\" (sdaftuar)\n+- #8381 `f84ee3d` Make witness v0 outputs non-standard (jl2012)\n+- #8364 `3f65ba2` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n+\n+### P2P protocol and network code\n+\n+- #6589 `dc0305d` Log bytes recv/sent per command (jonasschnelli)\n+- #7164 `3b43cad` Do not download transactions during initial blockchain sync (ptschip)\n+- #7458 `898fedf` peers.dat, banlist.dat recreated when missing (kirkalx)\n+- #7637 `3da5d1b` Fix memleak in TorController (laanwj, jonasschnelli)\n+- #7553 `9f14e5a` Remove vfReachable and modify IsReachable to only use vfLimited (pstratem)\n+- #7708 `9426632` De-neuter NODE_BLOOM (pstratem)\n+- #7692 `29b2be6` Remove P2P alert system (btcdrak)\n+- #7542 `c946a15` Implement \"feefilter\" P2P message (morcos)\n+- #7573 `352fd57` Add `-maxtimeadjustment` command line option (mruddy)\n+- #7570 `232592a` Add IPv6 Link-Local Address Support (mruddy)\n+- #7874 `e6a4d48` Improve AlreadyHave (morcos)\n+- #7856 `64e71b3` Only send one GetAddr response per connection (gmaxwell)\n+- #7868 `7daa3ad` Split DNS resolving functionality out of net structures (theuni)\n+- #7919 `7617682` Fix headers announcements edge case (sdaftuar)\n+- #7514 `d9594bf` Fix IsInitialBlockDownload for testnet (jmacwhyte)\n+- #7959 `03cf6e8` fix race that could fail to persist a ban (kazcw)\n+- #7840 `3b9a0bf` Several performance and privacy improvements to inv/mempool handling (sipa)\n+- #8011 `65aecda` Don't run ThreadMessageHandler at lowered priority (kazcw)\n+- #7696 `5c3f8dd` Fix de-serialization bug where AddrMan is left corrupted (EthanHeilman)\n+- #7932 `ed749bd` CAddrMan::Deserialize handle corrupt serializations better (pstratem)\n+- #7906 `83121cc` Prerequisites for p2p encapsulation changes (theuni)\n+- #8033 `18436d8` Fix Socks5() connect failures to be less noisy and less unnecessarily scary (wtogami)\n+- #8082 `01d8359` Defer inserting into maprelay until just before relaying (gmaxwell)\n+- #7960 `6a22373` Only use AddInventoryKnown for transactions (sdaftuar)\n+- #8078 `2156fa2` Disable the mempool P2P command when bloom filters disabled (petertodd)\n+- #8065 `67c91f8` Addrman offline attempts (gmaxwell)\n+- #7703 `761cddb` Tor: Change auth order to only use password auth if -torpassword (laanwj)\n+- #8083 `cd0c513` Add support for dnsseeds with option to filter by servicebits (jonasschnelli)\n+- #8173 `4286f43` Use SipHash for node eviction (sipa)\n+- #8154 `1445835` Drop vAddrToSend after sending big addr message (kazcw)\n+- #7749 `be9711e` Enforce expected outbound services (sipa)\n+- #8208 `0a64777` Do not set extra flags for unfiltered DNS seed results (sipa)\n+- #8084 `e4bb4a8` Add recently accepted blocks and txn to AttemptToEvictConnection (gmaxwell)\n+- #8113 `3f89a53` Rework addnode behaviour (sipa)\n+- #8179 `94ab58b` Evict orphans which are included or precluded by accepted blocks (gmaxwell)\n+- #8068 `e9d76a1` Compact Blocks (TheBlueMatt)\n+- #8204 `0833894` Update petertodd's testnet seed (petertodd)\n+- #8247 `5cd35d3` Mark my dnsseed as supporting filtering (sipa)\n+- #8275 `042c323` Remove bad chain alert partition check (btcdrak)\n+- #8271 `1bc9c80` Do not send witnesses in cmpctblock (sipa)\n+- #8312 `ca40ef6` Fix mempool DoS vulnerability from malleated transactions (sdaftuar)\n+- #7180 `16ccb74` Account for `sendheaders` `verack` messages (laanwj)\n+- #8102 `425278d` Bugfix: use global ::fRelayTxes instead of CNode in version send (sipa)\n+- #8408 `b7e2011` Prevent fingerprinting, disk-DoS with compact blocks (sdaftuar)\n+\n+### Build system\n+\n+- #7302 `41f1a3e` C++11 build/runtime fixes (theuni)\n+- #7322 `fd9356b` c++11: add scoped enum fallbacks to CPPFLAGS rather than defining them locally (theuni)\n+- #7441 `a6771fc` Use Debian 8.3 in gitian build guide (fanquake)\n+- #7349 `152a821` Build against system UniValue when available (luke-jr)\n+- #7520 `621940e` LibreSSL doesn't define OPENSSL_VERSION, use LIBRESSL_VERSION_TEXT instead (paveljanik)\n+- #7528 `9b9bfce` autogen.sh: warn about needing autoconf if autoreconf is not found (knocte)\n+- #7504 `19324cf` Crystal clean make clean (paveljanik)\n+- #7619 `18b3f1b` Add missing sudo entry in gitian VM setup (btcdrak)\n+- #7616 `639ec58`  [depends] Delete unused patches  (MarcoFalke)\n+- #7658 `c15eb28` Add curl to Gitian setup instructions (btcdrak)\n+- #7710 `909b72b` [Depends] Bump miniupnpc and config.guess+sub (fanquake)\n+- #7723 `5131005` build: python 3 compatibility (laanwj)\n+- #7477 `28ad4d9` Fix quoting of copyright holders in configure.ac (domob1812)\n+- #7711 `a67bc5e` [build-aux] Update Boost & check macros to latest serials (fanquake)\n+- #7788 `4dc1b3a` Use relative paths instead of absolute paths in protoc calls (paveljanik)\n+- #7809 `bbd210d` depends: some base fixes/changes (theuni)\n+- #7603 `73fc922` Build System: Use PACKAGE_TARNAME in NSIS script (JeremyRand)\n+- #7905 `187186b` test: move accounting_tests and rpc_wallet_tests to wallet/test (laanwj)\n+- #7911 `351abf9` leveldb: integrate leveldb into our buildsystem (theuni)\n+- #7944 `a407807` Re-instate TARGET_OS=linux in configure.ac. Removed by 351abf9e035 (randy-waterhouse)\n+- #7920 `c3e3cfb` Switch Travis to Trusty (theuni)\n+- #7954 `08b37c5` build: quiet annoying warnings without adding new ones (theuni)\n+- #7165 `06162f1` build: Enable C++11 in build, require C++11 compiler (laanwj)\n+- #7982 `559fbae` build: No need to check for leveldb atomics (theuni)\n+- #8002 `f9b4582` [depends] Add -stdlib=libc++ to darwin CXX flags (fanquake)\n+- #7993 `6a034ed` [depends] Bump Freetype, ccache, ZeroMQ, miniupnpc, expat (fanquake)\n+- #8167 `19ea173` Ship debug tarballs/zips with debug symbols (theuni)\n+- #8175 `f0299d8` Add --disable-bench to config flags for windows (laanwj)\n+- #7283 `fd9881a` [gitian] Default reference_datetime to commit author date (MarcoFalke)\n+- #8181 `9201ce8` Get rid of `CLIENT_DATE` (laanwj)\n+- #8133 `fde0ac4` Finish up out-of-tree changes (theuni)\n+- #8188 `65a9d7d` Add armhf/aarch64 gitian builds (theuni)\n+- #8194 `cca1c8c` [gitian] set correct PATH for wrappers (MarcoFalke)\n+- #8198 `5201614` Sync ax_pthread with upstream draft4 (fanquake)\n+- #8210 `12a541e` [Qt] Bump to Qt5.6.1 (jonasschnelli)\n+- #8285 `da50997` windows: Add testnet link to installer (laanwj)\n+- #8304 `0cca2fe` [travis] Update SDK_URL (MarcoFalke)\n+- #8310 `6ae20df` Require boost for bench (theuni)\n+- #8315 `2e51590` Don't require sudo for Linux (theuni)\n+- #8314 `67caef6` Fix pkg-config issues for 0.13 (theuni)\n+- #8373 `1fe7f40` Fix OSX non-deterministic dmg (theuni)\n+- #8358 `cfd1280` Gbuild: Set memory explicitly (default is too low) (MarcoFalke)\n+\n+### GUI\n+\n+- #7154 `00b4b8d` Add InMempool() info to transaction details (jonasschnelli)\n+- #7068 `5f3c670` [RPC-Tests] add simple way to run rpc test over QT clients (jonasschnelli)\n+- #7218 `a1c185b` Fix misleading translation (MarcoFalke)\n+- #7214 `be9a9a3` qt5: Use the fixed font the system recommends (MarcoFalke)\n+- #7256 `08ab906` Add note to coin control dialog QT5 workaround (fanquake)\n+- #7255 `e289807` Replace some instances of formatWithUnit with formatHtmlWithUnit (fanquake)\n+- #7317 `3b57e9c` Fix RPCTimerInterface ordering issue (jonasschnelli)\n+- #7327 `c079d79` Transaction View: LastMonth calculation fixed (crowning-)\n+- #7334 `e1060c5` coincontrol workaround is still needed in qt5.4 (fixed in qt5.5) (MarcoFalke)\n+- #7383 `ae2db67` Rename \"amount\" to \"requested amount\" in receive coins table (jonasschnelli)\n+- #7396 `cdcbc59` Add option to increase/decrease font size in the console window (jonasschnelli)\n+- #7437 `9645218` Disable tab navigation for peers tables (Kefkius)\n+- #7604 `354b03d` build: Remove spurious dollar sign. Fixes #7189 (dooglus)\n+- #7605 `7f001bd` Remove openssl info from init/log and from Qt debug window (jonasschnelli)\n+- #7628 `87d6562` Add 'copy full transaction details' option (ericshawlinux)\n+- #7613 `3798e5d` Add autocomplete to bitcoin-qt's console window (GamerSg)\n+- #7668 `b24266c` Fix history deletion bug after font size change (achow101)\n+- #7680 `41d2dfa` Remove reflection from `about` icon (laanwj)\n+- #7686 `f034bce` Remove 0-fee from send dialog (MarcoFalke)\n+- #7506 `b88e0b0` Use CCoinControl selection in CWallet::FundTransaction (promag)\n+- #7732 `0b98dd7` Debug window: replace \"Build date\" with \"Datadir\" (jonasschnelli)\n+- #7761 `60db51d` remove trailing output-index from transaction-id (jonasschnelli)\n+- #7772 `6383268` Clear the input line after activating autocomplete (paveljanik)\n+- #7925 `f604bf6` Fix out-of-tree GUI builds (laanwj)\n+- #7939 `574ddc6` Make it possible to show details for multiple transactions (laanwj)\n+- #8012 `b33824b` Delay user confirmation of send (Tyler-Hardin)\n+- #8006 `7c8558d` Add option to disable the system tray icon (Tyler-Hardin)\n+- #8046 `169d379` Fix Cmd-Q / Menu Quit shutdown on OSX (jonasschnelli)\n+- #8042 `6929711` Don't allow to open the debug window during splashscreen & verification state (jonasschnelli)\n+- #8014 `77b49ac` Sort transactions by date (Tyler-Hardin)\n+- #8073 `eb2f6f7` askpassphrasedialog: Clear pass fields on accept (rat4)\n+- #8129 `ee1533e` Fix RPC console auto completer (UdjinM6)\n+- #7636 `fb0ac48` Add bitcoin address label to request payment QR code (makevoid)\n+- #8231 `760a6c7` Fix a bug where the SplashScreen will not be hidden during startup (jonasschnelli)\n+- #8256 `af2421c` BUG: bitcoin-qt crash (fsb4000)\n+- #8257 `ff03c50` Do not ask a UI question from bitcoind (sipa)\n+- #8288 `91abb77` Network-specific example address (laanwj)\n+- #7707 `a914968` UI support for abandoned transactions (jonasschnelli)\n+- #8207 `f7a403b` Add a link to the Bitcoin-Core repository and website to the About Dialog (MarcoFalke)\n+- #8281 `6a87eb0` Remove client name from debug window (laanwj)\n+- #8407 `45eba4b` Add dbcache migration path (jonasschnelli)\n+\n+### Wallet\n+\n+- #7262 `fc08994` Reduce inefficiency of GetAccountAddress() (dooglus)\n+- #7537 `78e81b0` Warn on unexpected EOF while salvaging wallet (laanwj)\n+- #7521 `3368895` Don't resend wallet txs that aren't in our own mempool (morcos)\n+- #7576 `86a1ec5` Move wallet help string creation to CWallet (jonasschnelli)\n+- #7577 `5b3b5a7` Move \"load wallet phase\" to CWallet (jonasschnelli)\n+- #7608 `0735c0c` Move hardcoded file name out of log messages (MarcoFalke)\n+- #7649 `4900641` Prevent multiple calls to CWallet::AvailableCoins (promag)\n+- #7646 `e5c3511` Fix lockunspent help message (promag)\n+- #7558 `b35a591` Add import/removeprunedfunds rpc call (instagibbs)\n+- #6215 `48c5adf` add bip32 pub key serialization (jonasschnelli)\n+- #7913 `bafd075` Fix for incorrect locking in GetPubKey() (keystore.cpp) (yurizhykin)\n+- #8036 `41138f9` init: Move berkeleydb version reporting to wallet (laanwj)\n+- #8028 `373b50d` Fix insanity of CWalletDB::WriteTx and CWalletTx::WriteToDisk (pstratem)\n+- #8061 `f6b7df3` Improve Wallet encapsulation (pstratem)\n+- #7891 `950be19` Always require OS randomness when generating secret keys (sipa)\n+- #7689 `b89ef13` Replace OpenSSL AES with ctaes-based version (sipa)\n+- #7825 `f972b04` Prevent multiple calls to ExtractDestination (pedrobranco)\n+- #8137 `243ac0c` Improve CWallet API with new AccountMove function (pstratem)\n+- #8142 `52c3f34` Improve CWallet API  with new GetAccountPubkey function (pstratem)\n+- #8035 `b67a472` Add simplest BIP32/deterministic key generation implementation (jonasschnelli)\n+- #7687 `a6ddb19` Stop treating importaddress'ed scripts as change (sipa)\n+- #8298 `aef3811` wallet: Revert input selection post-pruning (laanwj)\n+- #8324 `bc94b87` Keep HD seed during salvagewallet (jonasschnelli)\n+- #8323 `238300b` Add HD keypath to CKeyMetadata, report metadata in validateaddress (jonasschnelli)\n+- #8367 `3b38a6a` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n+- #8378 `ebea651` Move SetMinVersion for FEATURE_HD to SetHDMasterKey (pstratem)\n+- #8390 `73adfe3` Correct hdmasterkeyid/masterkeyid name confusion (jonasschnelli)\n+- #8206 `18b8ee1` Add HD xpriv to dumpwallet (jonasschnelli)\n+- #8389 `c3c82c4` Create a new HD seed after encrypting the wallet (jonasschnelli)\n+\n+### Tests and QA\n+\n+- #7320 `d3dfc6d` Test walletpassphrase timeout (MarcoFalke)\n+- #7208 `47c5ed1` Make max tip age an option instead of chainparam (laanwj)\n+- #7372 `21376af` Trivial: [qa] wallet: Print maintenance (MarcoFalke)\n+- #7280 `668906f` [travis] Fail when documentation is outdated (MarcoFalke)\n+- #7177 `93b0576` [qa] Change default block priority size to 0 (MarcoFalke)\n+- #7236 `02676c5` Use createrawtx locktime parm in txn_clone (dgenr8)\n+- #7212 `326ffed` Adds unittests for CAddrMan and CAddrinfo, removes source of non-determinism (EthanHeilman)\n+- #7490 `d007511` tests: Remove May15 test (laanwj)\n+- #7531 `18cb2d5` Add bip68-sequence.py to extended rpc tests (btcdrak)\n+- #7536 `ce5fc02` test: test leading spaces for ParseHex (laanwj)\n+- #7620 `1b68de3` [travis] Only run check-doc.py once (MarcoFalke)\n+- #7455 `7f96671` [travis] Exit early when check-doc.py fails (MarcoFalke)\n+- #7667 `56d2c4e` Move GetTempPath() to testutil (musalbas)\n+- #7517 `f1ca891` test: script_error checking in script_invalid tests (laanwj)\n+- #7684 `3d0dfdb` Extend tests (MarcoFalke)\n+- #7697 `622fe6c` Tests: make prioritise_transaction.py more robust (sdaftuar)\n+- #7709 `efde86b` Tests: fix missing import in mempool_packages (sdaftuar)\n+- #7702 `29e1131` Add tests verifychain, lockunspent, getbalance, listsinceblock (MarcoFalke)\n+- #7720 `3b4324b` rpc-test: Normalize assert() (MarcoFalke)\n+- #7757 `26794d4` wallet: Wait for reindex to catch up (MarcoFalke)\n+- #7764 `a65b36c` Don't run pruning.py twice (MarcoFalke)\n+- #7773 `7c80e72` Fix comments in tests (btcdrak)\n+- #7489 `e9723cb` tests: Make proxy_test work on travis servers without IPv6 (laanwj)\n+- #7801 `70ac71b` Remove misleading \"errorString syntax\" (MarcoFalke)\n+- #7803 `401c65c` maxblocksinflight: Actually enable test (MarcoFalke)\n+- #7802 `3bc71e1` httpbasics: Actually test second connection (MarcoFalke)\n+- #7849 `ab8586e` tests: add varints_bitpatterns test (laanwj)\n+- #7846 `491171f` Clean up lockorder data of destroyed mutexes (sipa)\n+- #7853 `6ef5e00` py2: Unfiddle strings into bytes explicitly (MarcoFalke)\n+- #7878 `53adc83` [test] bctest.py: Revert faa41ee (MarcoFalke)\n+- #7798 `cabba24` [travis] Print the commit which was evaluated (MarcoFalke)\n+- #7833 `b1bf511` tests: Check Content-Type header returned from RPC server (laanwj)\n+- #7851 `fa9d86f` pull-tester: Don't mute zmq ImportError (MarcoFalke)\n+- #7822 `0e6fd5e` Add listunspent() test for spendable/unspendable UTXO (jpdffonseca)\n+- #7912 `59ad568` Tests: Fix deserialization of reject messages (sdaftuar)\n+- #7941 `0ea3941` Fixing comment in script_test.json test case (Christewart)\n+- #7807 `0ad1041` Fixed miner test values, gave constants for less error-prone values (instagibbs)\n+- #7980 `88b77c7` Smartfees: Properly use ordered dict (MarcoFalke)\n+- #7814 `77b637f` Switch to py3 (MarcoFalke)\n+- #8030 `409a8a1` Revert fatal-ness of missing python-zmq (laanwj)\n+- #8018 `3e90fe6` Autofind rpc tests --srcdir (jonasschnelli)\n+- #8016 `5767e80` Fix multithread CScheduler and reenable test (paveljanik)\n+- #7972 `423ca30` pull-tester: Run rpc test in parallel  (MarcoFalke)\n+- #8039 `69b3a6d` Bench: Add crypto hash benchmarks (laanwj)\n+- #8041 `5b736dd` Fix bip9-softforks blockstore issue (MarcoFalke)\n+- #7994 `1f01443` Add op csv tests to script_tests.json (Christewart)\n+- #8038 `e2bf830` Various minor fixes (MarcoFalke)\n+- #8072 `1b87e5b` Travis: 'make check' in parallel and verbose (MarcoFalke)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8947#discussion_r83736359",
      "id" : 83736359,
      "original_commit_id" : "59373d1a692c466b379a0e692a9f0b46c31d32cd",
      "original_position" : 646,
      "path" : "doc/release-notes/release-notes-0.13.0.md",
      "position" : null,
      "pull_request_review_id" : 4560712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8947",
      "updated_at" : "2016-10-17T21:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/83736359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "ACK 431306f4d7e91c058499b4ee673f9f651643ea62",
      "created_at" : "2016-10-17T21:28:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8947#issuecomment-254339674",
      "id" : 254339674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8947",
      "updated_at" : "2016-10-17T21:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254339674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2016-10-17T22:39:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8947#issuecomment-254355653",
      "id" : 254355653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8947",
      "updated_at" : "2016-10-17T22:39:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254355653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "ACK c9ffe90",
      "created_at" : "2016-10-18T03:24:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8947#issuecomment-254396702",
      "id" : 254396702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8947",
      "updated_at" : "2016-10-18T03:24:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254396702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]

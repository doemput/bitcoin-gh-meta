{
   "assignee" : null,
   "assignees" : [],
   "body" : "The bitcoin client should have special code in it where it is only accepted to run as a client at certain rule.\r\n\r\nUntil a certain amount of clients are at the right level to force older clients to not be accepted.\r\n\r\nThe code should have a verification of secret interpret with the main server node or two other nodes that validates the version number, best option is to use blockchain.info as main interpreter for the version verification, otherwise the clients should then automatic deny running because of version problems, until the user updates the client. \r\n\r\nThis rule can be put into a lib with cryptographic code.\r\n\r\nTo avoid splitting Bitcoin into different coins, there is mostly advised that main nodes and new version nodes are not compatible with lower versions. Therefore making new versions as specific to only allow co-operation of certain client versions. While older versions then will be specific of to only be accepted of transactions with special cumulative confirmations that have their own certain tag from the old clients.\r\n\r\nAs of this there should also be certainty of disallowing transactions to old clients and transaction to wrong recipient, while the tx code wouldn't be created by master node?. At that point these transactions should only be forced to send the coins to the own specific address from which it is sent from, as a return to original address. Forcing old clients to only send back to their own address as replacement of transaction. As of forcing old clients transactions to only send back to the address it is sent from, only then creating problems with only fees for the owner of coins.\r\n\r\nTo avoid splitting Bitcoin into different coins, it is also advised that Bitcoin at some point turns off for 1 day, to initiate the system new version if very uncompatible, with adhere disruption of old clients. \r\nAll wallets will remain with same amount if transferred from old client, but this again will certainly create scam system, then most exchanges should be aware of this uncompatible solution. \r\n\r\nThere should be a certain rule to disallow blocks of old version specifics.\r\nTo disallow blocks of old clients, there should be a rule from the main node to not confirm the creation of new blocks to the certain blocks discovered from certain client versions. Therefore encouraging miners to shift to newest versions. As all blocks will be declined and not forged into new client system as of version specific intolerance.\r\n\r\nSorry that I don't understand everything about bitcoin, but there might of course be some different interpret on something that can be done to avoid problems with new clients and new instated rules in the coin main system, as of what can happen.\r\n\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10852/comments",
   "created_at" : "2017-07-17T15:39:47Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10852/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/10852",
   "id" : 243437815,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10852/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 10852,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "To avoid bitcoin fork problems in the future - coding",
   "updated_at" : "2017-07-17T15:39:47Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10852",
   "user" : {
      "avatar_url" : "https://avatars5.githubusercontent.com/u/30130770?v=4",
      "events_url" : "https://api.github.com/users/Dealazer/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Dealazer/followers",
      "following_url" : "https://api.github.com/users/Dealazer/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Dealazer/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Dealazer",
      "id" : 30130770,
      "login" : "Dealazer",
      "organizations_url" : "https://api.github.com/users/Dealazer/orgs",
      "received_events_url" : "https://api.github.com/users/Dealazer/received_events",
      "repos_url" : "https://api.github.com/users/Dealazer/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Dealazer/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Dealazer/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Dealazer"
   }
}

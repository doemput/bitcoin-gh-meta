{
   "assignee" : null,
   "assignees" : [],
   "body" : "Running current master, 7b6e8bc4424006119dc537699c8b3b3121e0b3c3\r\n\r\nI am seeing a segfault on shutdown when I press 'q' in bitcoin-qt to interrupt the utxo database upgrade to being per-txout.\r\n\r\nIt looks like it happens in FlushStateToDisk, because pcoinsTip is NULL.\r\n```\r\n(lldb) bt\r\n* thread #11, name = 'bitcoin-shutoff', stop reason = EXC_BAD_ACCESS (code=1, address=0x38)\r\n    frame #0: 0x00000001003efc06 bitcoin-qt`CCoinsViewCache::DynamicMemoryUsage() const [inlined] std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<COutPoint, CCoinsCacheEntry>, void*>*>*> >::size() const at __hash_table:807 [opt]\r\n    frame #1: 0x00000001003efc06 bitcoin-qt`CCoinsViewCache::DynamicMemoryUsage() const [inlined] std::__1::__hash_table<std::__1::__hash_value_type<COutPoint, CCoinsCacheEntry>, std::__1::__unordered_map_hasher<COutPoint, std::__1::__hash_value_type<COutPoint, CCoinsCacheEntry>, SaltedOutpointHasher, false>, std::__1::__unordered_map_equal<COutPoint, std::__1::__hash_value_type<COutPoint, CCoinsCacheEntry>, std::__1::equal_to<COutPoint>, true>, std::__1::allocator<std::__1::__hash_value_type<COutPoint, CCoinsCacheEntry> > >::bucket_count() const at __hash_table:1122 [opt]\r\n    frame #2: 0x00000001003efc06 bitcoin-qt`CCoinsViewCache::DynamicMemoryUsage() const [inlined] std::__1::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher, std::__1::equal_to<COutPoint>, std::__1::allocator<std::__1::pair<COutPoint const, CCoinsCacheEntry> > >::bucket_count() const at unordered_map:1140 [opt]\r\n    frame #3: 0x00000001003efc06 bitcoin-qt`CCoinsViewCache::DynamicMemoryUsage() const [inlined] unsigned long memusage::DynamicUsage<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher>(std::__1::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher, std::__1::equal_to<COutPoint>, std::__1::allocator<std::__1::pair<COutPoint const, CCoinsCacheEntry> > > const&) at memusage.h:164 [opt]\r\n    frame #4: 0x00000001003efc06 bitcoin-qt`CCoinsViewCache::DynamicMemoryUsage(this=0x0000000000000000) const at coins.cpp:40 [opt]\r\n    frame #5: 0x00000001002b81b2 bitcoin-qt`FlushStateToDisk(chainparams=<unavailable>, state=0x000070000287a580, mode=<unavailable>, nManualPruneHeight=<unavailable>) at validation.cpp:1899 [opt]\r\n    frame #6: 0x00000001002b7960 bitcoin-qt`FlushStateToDisk() at validation.cpp:1969 [opt]\r\n    frame #7: 0x000000010014a015 bitcoin-qt`Shutdown() at init.cpp:219 [opt]\r\n  * frame #8: 0x00000001000086b1 bitcoin-qt`BitcoinCore::shutdown(this=0x000000010faf9080) at bitcoin.cpp:319 [opt]\r\n    frame #9: 0x0000000101f628e1 QtCore`QObject::event(QEvent*) + 801\r\n    frame #10: 0x00000001010e588d QtWidgets`QApplicationPrivate::notify_helper(QObject*, QEvent*) + 301\r\n    frame #11: 0x00000001010e6c31 QtWidgets`QApplication::notify(QObject*, QEvent*) + 369\r\n    frame #12: 0x0000000101f38e54 QtCore`QCoreApplication::notifyInternal2(QObject*, QEvent*) + 164\r\n    frame #13: 0x0000000101f39e7b QtCore`QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) + 891\r\n    frame #14: 0x0000000101f8bbb9 QtCore`QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 73\r\n    frame #15: 0x0000000101f35171 QtCore`QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 417\r\n    frame #16: 0x0000000101d774e3 QtCore`QThread::exec() + 115\r\n    frame #17: 0x0000000101d7aeea QtCore`QThreadPrivate::start(void*) + 362\r\n    frame #18: 0x00007fffc3210aab libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #19: 0x00007fffc32109f7 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #20: 0x00007fffc32101fd libsystem_pthread.dylib`thread_start + 13\r\n(lldb) \r\n```\r\n\r\n```\r\n(lldb) f 5\r\nframe #5: 0x00000001002b81b2 bitcoin-qt`FlushStateToDisk(chainparams=<unavailable>, state=0x000070000287a580, mode=<unavailable>, nManualPruneHeight=<unavailable>) at validation.cpp:1899 [opt]\r\n   1896\t        nLastSetChain = nNow;\r\n   1897\t    }\r\n   1898\t    int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\r\n-> 1899\t    int64_t cacheSize = pcoinsTip->DynamicMemoryUsage();\r\n   1900\t    int64_t nTotalSpace = nCoinCacheUsage + std::max<int64_t>(nMempoolSizeMax - nMempoolUsage, 0);\r\n   1901\t    // The cache is large and we're within 10% and 10 MiB of the limit, but we have time now (not in the middle of a block processing).\r\n   1902\t    bool fCacheLarge = mode == FLUSH_STATE_PERIODIC && cacheSize > std::max((9 * nTotalSpace) / 10, nTotalSpace - MAX_BLOCK_COINSDB_USAGE * 1024 * 1024);\r\n(lldb) print pcoinsTip\r\n(CCoinsViewCache *) $1 = 0x0000000000000000\r\n```",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10861/comments",
   "created_at" : "2017-07-18T12:01:56Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10861/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/10861",
   "id" : 243692332,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10861/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 10861,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Segfault on shutdown after pressing 'q' to postpone utxo db upgrade",
   "updated_at" : "2017-07-18T12:05:58Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10861",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
      "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sdaftuar/followers",
      "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sdaftuar",
      "id" : 7463573,
      "login" : "sdaftuar",
      "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
      "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
      "repos_url" : "https://api.github.com/users/sdaftuar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sdaftuar"
   }
}

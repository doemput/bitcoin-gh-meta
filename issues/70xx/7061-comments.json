[
   {
      "body" : "I'd rather have it that the API is such that an explicit rescan is never needed. Wasn't there some work on a multi-import w/ timestamps?",
      "created_at" : "2015-11-19T15:14:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158085542",
      "id" : 158085542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-19T15:14:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158085542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Yes. There is a PR (see PR description). I agree that it would be better to avoid rescans at all, although it might be complicated to catch all edge-cases and a manual trigger can help in situations where someone needs to deal with multiple/complex imports (you only want to do one rescan).\r\n\r\nAnd I think some people will cancel a rescan because they want to do other stuff and/or had not considered that a rescan can take a long time. Afterward calling `-rescan` (from genesis) is a time consuming option.",
      "created_at" : "2015-11-19T15:19:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158087136",
      "id" : 158087136,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-19T15:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158087136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "But manually specifying a block # to rescan from is extremely fragile... it's very easy to get this wrong.\r\n\r\nAlso, rescanning doesn't interact with pruning which will be more and more common in the future.\r\n",
      "created_at" : "2015-11-19T15:35:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158091775",
      "id" : 158091775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-19T15:35:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158091775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@lannwj I thought thats part of what  the height parameter here was for-- addressing pruning comparability? ",
      "created_at" : "2015-11-19T20:29:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158188617",
      "id" : 158188617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-19T20:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158188617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "How about we call this rescanfromheight instead, to make it possible to add a rescanfromtime later if users demand? Equally, some kind of RPC call that finds the first block with a nTime after a specific time might be useful here.\r\n\r\nDo we have a way of querying what block # is the oldest non-pruned block?",
      "created_at" : "2015-11-20T22:03:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158538274",
      "id" : 158538274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-20T22:03:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158538274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "It also occurs to me that for this usecase we might instead want to have pruning not happen automatically, but rather be an  on-demand thing where the user specifies the oldest time they're interested in.",
      "created_at" : "2015-11-20T22:04:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158538629",
      "id" : 158538629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-20T22:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158538629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "So the biggest negative I personally see here is that it furthers this misunderstanding that rescan is some thing users generally need to be doing.  Until we added these non-rescan imports a user initiated rescan is something that never should have been needed (and indicated a serious bug we'd like to know about if it was).  As a result of the -rescan argument there is now this whole cargo cult of people that rescan every time they're scarred by a shadow. I hate to further that.\r\n\r\nBut I can't deny how really useful this will be.\r\n\r\n",
      "created_at" : "2015-11-20T22:44:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158546941",
      "id" : 158546941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-20T22:44:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158546941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell A possible way around that would be to make the rescan check if you have any addresses that haven't yet been scanned in that range and error out if not. (basically make it say \"no rescan needed\")",
      "created_at" : "2015-11-21T00:07:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158563727",
      "id" : 158563727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-21T00:07:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158563727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Hm. this could also take a stop argument, allowing you to scan single blocks or avoid rescan overlap.  Also, I think all the wallet re-scanning should traverse its interval backwards-- for more instant gratification;  though this would dork with the wallet transaction ordering... actually import at all breaks that, I should go talk to luke-jr about that.",
      "created_at" : "2015-11-22T22:13:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158808001",
      "id" : 158808001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-22T22:13:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158808001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r45569311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45569311"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove?\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2015-11-23T02:07:37Z",
      "diff_hunk" : "@@ -510,3 +510,48 @@ UniValue dumpwallet(const UniValue& params, bool fHelp)\n     file.close();\n     return NullUniValue;\n }\n+\n+UniValue rescanblockchain(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+                            \"rescanblockchain \\\"height\\\"\\n\"\n+                            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. \\\"height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000\\\"\")\n+                            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000\\\"\")\n+                            );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBlockIndex *pIndexRescan = NULL;\n+    if (params.size() > 0 && params[0].isNum())\n+        pIndexRescan = chainActive[params[0].get_int()];\n+\n+    if (!pIndexRescan)\n+         pIndexRescan = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)\n+    {\n+        if (fPruneMode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r45569311",
      "id" : 45569311,
      "original_commit_id" : "8017237b5b34ff8a7293dedd1fa7ec611d80fa1e",
      "original_position" : 33,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45569311",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r45726881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45726881"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops. A rebase issue. Thanks for point out. Fixed.\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2015-11-24T12:07:33Z",
      "diff_hunk" : "@@ -510,3 +510,48 @@ UniValue dumpwallet(const UniValue& params, bool fHelp)\n     file.close();\n     return NullUniValue;\n }\n+\n+UniValue rescanblockchain(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+                            \"rescanblockchain \\\"height\\\"\\n\"\n+                            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. \\\"height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000\\\"\")\n+                            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000\\\"\")\n+                            );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBlockIndex *pIndexRescan = NULL;\n+    if (params.size() > 0 && params[0].isNum())\n+        pIndexRescan = chainActive[params[0].get_int()];\n+\n+    if (!pIndexRescan)\n+         pIndexRescan = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)\n+    {\n+        if (fPruneMode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r45726881",
      "id" : 45726881,
      "original_commit_id" : "8017237b5b34ff8a7293dedd1fa7ec611d80fa1e",
      "original_position" : 33,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45726881",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "agree with gmaxwell that this should scan a range of blocks",
      "created_at" : "2015-11-24T12:17:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-159250450",
      "id" : 159250450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-24T12:17:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159250450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Agree with the stop parameter. Working on a implementation....",
      "created_at" : "2015-11-24T12:22:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-159251479",
      "id" : 159251479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-24T12:22:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159251479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "I would still prefer an approach that imports with birthdate instead of explicit rescanning.",
      "created_at" : "2015-11-24T12:29:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-159253995",
      "id" : 159253995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-24T12:31:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159253995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Added a commit that allows providing a optional parameter with a height where the rescan should stop.\r\n\r\n@sipa: I agree that rescan height over a key/address birthday would be nice to have (see #6570). But a explicit rescan RPC call can be useful IMO. It's trivial to maintain and it can save lots of rescan-time on the user side. But agree, it has to be considered as \"experts\" feature.\r\n\r\nWhat about implementing a threshold for autodetecting wether the parameter is a blockheight or timestamp (similar to `LOCKTIME_THRESHOLD`)?",
      "created_at" : "2015-11-24T15:42:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-159308400",
      "id" : 159308400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-24T15:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159308400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli see https://github.com/bitcoin/bitcoin/pull/6570#issuecomment-132261388 regarding your last comment.",
      "created_at" : "2015-11-24T15:57:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-159312575",
      "id" : 159312575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-11-24T16:20:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159312575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2015-12-07T06:49:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-162427791",
      "id" : 162427791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2015-12-07T06:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162427791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16140350?v=3",
         "events_url" : "https://api.github.com/users/GIJensen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/GIJensen/followers",
         "following_url" : "https://api.github.com/users/GIJensen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/GIJensen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/GIJensen",
         "id" : 16140350,
         "login" : "GIJensen",
         "organizations_url" : "https://api.github.com/users/GIJensen/orgs",
         "received_events_url" : "https://api.github.com/users/GIJensen/received_events",
         "repos_url" : "https://api.github.com/users/GIJensen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/GIJensen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/GIJensen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/GIJensen"
      }
   },
   {
      "body" : "If this is still moving forward - I tested it a bit (including pruned mode) and it looks fine to me.  One suggestion is to make the start-height a required parameter so that the user specifies \"rescanblockchain 1\" to scan from genesis.  If the start-height is < 1 or higher than current height, throw an error. \r\nOtherwise, ACK. \r\n",
      "created_at" : "2016-03-14T17:59:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-196442879",
      "id" : 196442879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-03-14T17:59:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196442879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7504522?v=3",
         "events_url" : "https://api.github.com/users/mrbandrews/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrbandrews/followers",
         "following_url" : "https://api.github.com/users/mrbandrews/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrbandrews/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrbandrews",
         "id" : 7504522,
         "login" : "mrbandrews",
         "organizations_url" : "https://api.github.com/users/mrbandrews/orgs",
         "received_events_url" : "https://api.github.com/users/mrbandrews/received_events",
         "repos_url" : "https://api.github.com/users/mrbandrews/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrbandrews/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrbandrews"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r61736620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/61736620"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Move to while condition?\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2016-05-02T13:17:54Z",
      "diff_hunk" : "@@ -1084,6 +1087,8 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n                 if (AddToWalletIfInvolvingMe(tx, &block, fUpdate))\n                     ret++;\n             }\n+            if (pindex == pindexStop)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r61736620",
      "id" : 61736620,
      "original_commit_id" : "5279c98202d8584bd8cbe440f35444c229b87bef",
      "original_position" : 21,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/61736620",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r61736772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/61736772"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Because it's inclusive?\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2016-05-02T13:19:21Z",
      "diff_hunk" : "@@ -1084,6 +1087,8 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n                 if (AddToWalletIfInvolvingMe(tx, &block, fUpdate))\n                     ret++;\n             }\n+            if (pindex == pindexStop)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r61736772",
      "id" : 61736772,
      "original_commit_id" : "5279c98202d8584bd8cbe440f35444c229b87bef",
      "original_position" : 21,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/61736772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Can one of the admins verify this patch?",
      "created_at" : "2016-05-25T08:45:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-221510825",
      "id" : 221510825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-05-25T08:45:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221510825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/541066?v=3",
         "events_url" : "https://api.github.com/users/arowser/events{/privacy}",
         "followers_url" : "https://api.github.com/users/arowser/followers",
         "following_url" : "https://api.github.com/users/arowser/following{/other_user}",
         "gists_url" : "https://api.github.com/users/arowser/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/arowser",
         "id" : 541066,
         "login" : "arowser",
         "organizations_url" : "https://api.github.com/users/arowser/orgs",
         "received_events_url" : "https://api.github.com/users/arowser/received_events",
         "repos_url" : "https://api.github.com/users/arowser/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/arowser/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/arowser/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/arowser"
      }
   },
   {
      "body" : "Rebased. \r\nI think there are still reasons to consider that PR. At the moment, it would really be useful. Even once we have https://github.com/bitcoin/bitcoin/pull/7551 (`importmulti`) it could see use cases for `rescanblockchain`.",
      "created_at" : "2016-07-20T12:58:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-233941291",
      "id" : 233941291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-07-20T12:58:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/233941291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "This seems better #7984, but I still prefer not furthering the usage of various rescans. We need APIs that don't require users to keep track of the concept of rescanning IMHO.",
      "created_at" : "2016-08-25T12:53:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-242374874",
      "id" : 242374874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-08-25T12:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242374874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I agree. Ideally, there will be no need to rescan. But in practice, rescans are sometimes required (I guess everyone who gave some users support has encountered that). IMO a rpc rescan commend with an optional hight is much more flexible then `-rescan` as a startup argument.",
      "created_at" : "2016-08-25T12:58:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-242376180",
      "id" : 242376180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-08-25T12:58:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242376180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "I think we should work on `importmulti` instead (or at least an importprivkey that takes a key birthdate as parameter), not on more ways to rescan.",
      "created_at" : "2016-08-25T12:59:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-242376669",
      "id" : 242376669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-08-25T12:59:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242376669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> I think we should work on importmulti instead (or at least an importprivkey that takes a key birthdate as parameter), not on more ways to rescan.\r\n\r\nYes. I can agree with that.",
      "created_at" : "2016-08-25T13:00:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-242376919",
      "id" : 242376919,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-08-25T13:00:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242376919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Another thing where this could be useful is restoring hd wallets",
      "created_at" : "2016-09-14T09:29:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-246957074",
      "id" : 246957074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-09-14T09:29:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246957074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Since importmulti  #7551  is merged, some use cases are covered by that.",
      "created_at" : "2016-10-29T23:53:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-257122914",
      "id" : 257122914,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-10-29T23:53:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "> I think we should work on importmulti instead (or at least an importprivkey that takes a key birthdate as parameter), not on more ways to rescan.\r\n\r\nTend to agree. Closing this for now.",
      "created_at" : "2016-11-02T14:14:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-257876663",
      "id" : 257876663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-11-02T14:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257876663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "IMO something like that would be very handy if you rescan a HD wallet (old backup).\r\n-rescan does not allow direct user feedback\r\nIMO rescanning an old HD backup should by default start at the height where we introduces HD (optional down to genesis).",
      "created_at" : "2016-12-22T20:11:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-268880725",
      "id" : 268880725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2016-12-22T20:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/268880725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reopened and overhauled.\r\n~~This now does replace the `-rescan` startup argument with a new RPC call `rescanblockchain`. The reasons for that are:~~\r\n* You can define the start and end-height\r\n* It can be called during runtime\r\n* It can work in multiwallet environment\r\n\r\nUsing `-rescan` will cancel the startup with an error referring to the new RPC call.",
      "created_at" : "2017-05-24T12:40:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-303711520",
      "id" : 303711520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-05T03:25:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303711520",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118263426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118263426"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe still worth mentioning that pruning can get in the way of successfully importing wallet keys & rescanning.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:12:36Z",
      "diff_hunk" : "@@ -367,7 +367,7 @@ std::string HelpMessage(HelpMessageMode mode)\n #ifndef WIN32\n     strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file (default: %s)\"), BITCOIN_PID_FILENAME));\n #endif\n-    strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. \"\n+    strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118263426",
      "id" : 118263426,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118263426",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118265136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118265136"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe this should take either times or heights like the pruneblockchain RPC: https://github.com/bitcoin/bitcoin/blob/46771514fa86b9a5a0e0af34c1abfa1da22212f7/src/rpc/blockchain.cpp#L838",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:19:00Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118265136",
      "id" : 118265136,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 52,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118265136",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118266399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118266399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be helpful if error message could mention getblockchaininfo RPC for getting pruned height.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:23:07Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+\n+    if (!pIndexStart)\n+         pIndexStart = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)\n+    {\n+        CBlockIndex *block = chainActive.Tip();\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n+            block = block->pprev;\n+\n+        if (pIndexStart->nHeight < block->nHeight)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118266399",
      "id" : 118266399,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 80,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118266399",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118267108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118267108"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Style might need to be updated for this code (moving opening brace to same line here, adding missing braces other lines)",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:25:38Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+\n+    if (!pIndexStart)\n+         pIndexStart = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118267108",
      "id" : 118267108,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 73,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118267108",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118267466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118267466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think these files are automatically generated from -help output and could be reverted in the PR.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:26:54Z",
      "diff_hunk" : "@@ -90,7 +90,7 @@ Reduce storage requirements by enabling pruning (deleting) of old\n blocks. This allows the pruneblockchain RPC to be called to\n delete specific blocks, and enables automatic pruning of old\n blocks if a target size in MiB is provided. This mode is\n-incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting this\n+incompatible with \\fB\\-txindex\\fR. Warning: Reverting this",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118267466",
      "id" : 118267466,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 5,
      "path" : "doc/man/bitcoind.1",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118267466",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118268885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118268885"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there any advantage to getting rid of the -rescan option if we still have keep all the rescan logic below? Is there a future cleanup or new feature that will be easier to implement with the option gone?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:31:53Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118268885",
      "id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118268885",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118271553"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118271553"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand what the use-case is for the stop argument. Can you describe a scenario where you would want to provide it? I can see how it might have been desirable before there was an abortrescan RPC to break a big scan up into little scans, but I don't see why you'd want it now.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T14:41:21Z",
      "diff_hunk" : "@@ -1508,6 +1512,9 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n             } else {\n                 ret = nullptr;\n             }\n+            if (pindex == pindexStop) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118271553",
      "id" : 118271553,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 21,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40037634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118271553",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118277276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118277276"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See the discussion about the stop argument: https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-158808001",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T15:00:52Z",
      "diff_hunk" : "@@ -1508,6 +1512,9 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n             } else {\n                 ret = nullptr;\n             }\n+            if (pindex == pindexStop) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118277276",
      "id" : 118277276,
      "in_reply_to_id" : 118271553,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 21,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40053192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118277276",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118277881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118277881"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `-rescan` option is global while this PR changes it (partially) to per-wallet. Still, -zapwallettx, etc. need to also be moved to per-wallet basis (I don't know how right now).\r\n\r\nBut removing the global -rescan option has to be done sooner or later if we want proper multiwallet.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T15:02:58Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118277881",
      "id" : 118277881,
      "in_reply_to_id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40053842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118277881",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118282309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118282309"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> But removing the global -rescan option has to be done sooner or later if we want proper multiwallet.\r\n\r\nDo -zapwallettx, etc also need to be removed to support proper multiwallet?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T15:18:06Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118282309",
      "id" : 118282309,
      "in_reply_to_id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40058845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118282309",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118288711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118288711"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO Yes. It's pure db utility. Either we move it to RPC or to a new wallet/db tool.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T15:40:34Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118288711",
      "id" : 118288711,
      "in_reply_to_id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40065979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118288711",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118303362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118303362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: update function comment to say that the rescan is up to pindexStop if it is non-null",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T16:39:17Z",
      "diff_hunk" : "@@ -1468,11 +1468,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  * before CWallet::nTimeFirstKey). Returns null if there is no such range, or",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118303362",
      "id" : 118303362,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 1,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118303362",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118303554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118303554"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Need to remove more of this comment, so that it just reads:\r\n\r\n`// show rescan progress in GUI as dialog`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T16:40:05Z",
      "diff_hunk" : "@@ -1485,7 +1489,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n         while (pindex && nTimeFirstKey && (pindex->GetBlockTime() < (nTimeFirstKey - TIMESTAMP_WINDOW)))\n             pindex = chainActive.Next(pindex);\n \n-        ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+        ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118303554",
      "id" : 118303554,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 22,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118303554",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118304972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118304972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is confusing: the if statement requires `!needsRescan`. Shouldn't that be the other way around? If `needsRescan` is true, we should rescan. I think the if statement should be:\r\n\r\n```\r\nif (needsRescan || GetBoolArg(\"-salvagewallet\", true) || GetBoolArg(\"-zapwallettxes\", true))\r\n```\r\n\r\nre: zapwallet and salvagewallet. I agree that they should be changed to RPCs for multiwallet.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T16:46:10Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118304972",
      "id" : 118304972,
      "in_reply_to_id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118304972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118305625"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118305625"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggest you change the argument names to `startheight` and `stopheight`. No other rpcs use `-` as word delimiter.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T16:48:53Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118305625",
      "id" : 118305625,
      "in_reply_to_id" : 118265136,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 52,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118305625",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118306126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118306126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should throw an error if the argument isn't a number, rather than continue. It should allow the argument to be Null. I think the if test you need is:\r\n\r\n```\r\nif (request.params.size() > 0 && !request.params[0].isNull()) {\r\n```",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T16:51:00Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118306126",
      "id" : 118306126,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 63,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118306126",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118321612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118321612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This RPC should return a message to the user if it is successful, eg \"Blockchain rescanned from block `<hash>` height `<height>` to block `<hash>` height `<height>`. `<numtx>` transactions added to wallet\". Otherwise it's impossible for the user to know whether the call was successful or not.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T17:52:44Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+\n+    if (!pIndexStart)\n+         pIndexStart = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)\n+    {\n+        CBlockIndex *block = chainActive.Tip();\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n+            block = block->pprev;\n+\n+        if (pIndexStart->nHeight < block->nHeight)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data.\");\n+    }\n+\n+    if (pwallet)\n+        pwallet->ScanForWalletTransactions(pIndexStart, pIndexStop, true);\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118321612",
      "id" : 118321612,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 86,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118321612",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118321814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118321814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should this return an error if heightstop is lower than heightstart? If heightstop is higher than the tip height?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T17:53:21Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118321814",
      "id" : 118321814,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 66,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118321814",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118338421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118338421"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can't see where `rescanblockchain()` is being called. Am I missing something?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-24T19:02:09Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118338421",
      "id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40082483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118338421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118428024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118428024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It happens outside of this call (somewhere in wallet.cpp). But the comment doesn't say \"It\" calls `rescanblockchain`, it either says \"you\" can call `rescanblockchain()`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T06:44:44Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118428024",
      "id" : 118428024,
      "in_reply_to_id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40217898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118428024",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118429609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118429609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No. I don't think so.\r\nIf that if statement is true, we load the wallet best block which prevents a complete rescan (so it's the opposite).\r\nSo we only load the wallet best block (== no rescan) if `needsRescan` is false and `-salvagewallet` and `-`-zapwallettxes` have not been set.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T06:59:07Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118429609",
      "id" : 118429609,
      "in_reply_to_id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40219647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118429609",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118429802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118429802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "But can't it also happens during startup when the GUI will show the progress only in the splash-screen and not in a dialog?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T07:00:44Z",
      "diff_hunk" : "@@ -1485,7 +1489,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n         while (pindex && nTimeFirstKey && (pindex->GetBlockTime() < (nTimeFirstKey - TIMESTAMP_WINDOW)))\n             pindex = chainActive.Next(pindex);\n \n-        ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+        ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118429802",
      "id" : 118429802,
      "in_reply_to_id" : 118303554,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 22,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40219858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118429802",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed. Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T07:12:30Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431166",
      "id" : 118431166,
      "in_reply_to_id" : 118265136,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 52,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40221308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431166",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T07:12:36Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+\n+    if (!pIndexStart)\n+         pIndexStart = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431175",
      "id" : 118431175,
      "in_reply_to_id" : 118267108,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 73,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40221320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431175",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T07:12:40Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+\n+    if (!pIndexStart)\n+         pIndexStart = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)\n+    {\n+        CBlockIndex *block = chainActive.Tip();\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n+            block = block->pprev;\n+\n+        if (pIndexStart->nHeight < block->nHeight)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431186",
      "id" : 118431186,
      "in_reply_to_id" : 118266399,
      "original_commit_id" : "24ee9c835192ad854f79f30937e3e1c14c095e55",
      "original_position" : 80,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 40221329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431186",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T07:12:44Z",
      "diff_hunk" : "@@ -90,7 +90,7 @@ Reduce storage requirements by enabling pruning (deleting) of old\n blocks. This allows the pruneblockchain RPC to be called to\n delete specific blocks, and enables automatic pruning of old\n blocks if a target size in MiB is provided. This mode is\n-incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting this\n+incompatible with \\fB\\-txindex\\fR. Warning: Reverting this",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431193",
      "id" : 118431193,
      "in_reply_to_id" : 118267466,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 5,
      "path" : "doc/man/bitcoind.1",
      "position" : null,
      "pull_request_review_id" : 40221337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431193",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T07:13:16Z",
      "diff_hunk" : "@@ -1468,11 +1468,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  * before CWallet::nTimeFirstKey). Returns null if there is no such range, or",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118431249",
      "id" : 118431249,
      "in_reply_to_id" : 118303362,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 1,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40221399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118431249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118555508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118555508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you're right.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T18:42:27Z",
      "diff_hunk" : "@@ -3865,7 +3871,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     RegisterValidationInterface(walletInstance);\n \n     CBlockIndex *pindexRescan = chainActive.Genesis();\n-    if (!GetBoolArg(\"-rescan\", false))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118555508",
      "id" : 118555508,
      "in_reply_to_id" : 118268885,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 40359387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118555508",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118558012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118558012"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand. The comment is:\r\n\r\n```\r\n    // Recovery procedure:\r\n    // move wallet file to wallet.timestamp.bak\r\n    // Call Salvage with fAggressive=true to\r\n    // get as much data as possible.\r\n    // Rewrite salvaged data to fresh wallet file\r\n    // call rescanblockchain (RPC) so any missing\r\n    // transactions will be found.\r\n```\r\n\r\nThis function does:\r\n- move wallet file to wallet.timestamp.bak\r\n- Call Salvage with fAggressive=true to get as much data as possible.\r\n- Rewrite salvaged data to fresh wallet file\r\n\r\nbut it doesn't call rescanblockchain, and I can't see rescanblockchain being called by the callers.\r\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T18:53:01Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118558012",
      "id" : 118558012,
      "in_reply_to_id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40362092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118558012",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118564429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118564429"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. You right. The rescan is not part of the call. But the part that calls CDB::Recover does always call a rescan. But now I got your point. We should refer to `ScanForWalletTransactions()` instead to `rescanblockchain (RPC)`. Right?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T19:24:56Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118564429",
      "id" : 118564429,
      "in_reply_to_id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40369279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118564429",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118566164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118566164"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sorry, I'm still not seeing it. You say \"the part that calls CDB::Recover does always call a rescan\". Where?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T19:33:17Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118566164",
      "id" : 118566164,
      "in_reply_to_id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40371152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118566164",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118566785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118566785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's confusing. But CDB::Recover only gets calls by setting `-salvagewallet` which does set `-rescan`. Maybe I should remove that comment part... I don't know what's best because `-rescan` is currently mentioned there.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T19:36:24Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118566785",
      "id" : 118566785,
      "in_reply_to_id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40371807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118566785",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118579994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118579994"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah, makes sense now. Thank you. I wasn't looking in init.cpp, but now I think I see how this fits together. CWallet::Verify() is called first, which calls CWalletDB::Recover() if `-salvagewallet` is set. Later in AppInitMain(), we call CWallet::AppInitMain(), which is where the rescan happens if `-salvagewallet` is set.\r\n\r\nPerhaps change the comment to something like:\r\n\r\n```\r\n    // Try to recover the wallet:\r\n    // - move wallet file to wallet.timestamp.bak\r\n    // - call Salvage with fAggressive=true to get as much data as possible.\r\n    // - rewrite salvaged data to fresh wallet file\r\n    //\r\n    // CWallet::AppInitMain() will later run a full blockchain rescan to find\r\n    // any missing transactions.\r\n```",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-05-25T20:42:00Z",
      "diff_hunk" : "@@ -167,8 +167,8 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n-    // Set -rescan so any missing transactions will be\n-    // found.\n+    // call rescanblockchain (RPC) so any missing",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r118579994",
      "id" : 118579994,
      "in_reply_to_id" : 118338421,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 40386873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118579994",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "This needs rebase (probably just wait till after 15 at this point). I think outstanding objections to the idea have all largely been removed, Concept ACK from me, at least.",
      "created_at" : "2017-07-11T17:41:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-314519092",
      "id" : 314519092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-07-11T17:41:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314519092",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2017-07-21T07:54:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-316931853",
      "id" : 316931853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-07-21T07:54:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316931853",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129338768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129338768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Size checks can be dropped here and below. params[0] will return a null value if the param is missing.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-07-25T15:24:31Z",
      "diff_hunk" : "@@ -1160,3 +1160,58 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startHeight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopHeight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129338768",
      "id" : 129338768,
      "original_commit_id" : "76e98222cd1d6587fdcb8000a8bff5d1e431ff5a",
      "original_position" : 29,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 52101375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129338768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129340626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129340626"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This should check against pIndexStop too, so error won't trigger unnecessarily in cases where missing blocks are noncontinuous (which can happen with manual pruning). ",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-07-25T15:31:09Z",
      "diff_hunk" : "@@ -1160,3 +1160,58 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startHeight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopHeight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum()) {\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+    }\n+\n+    if (request.params.size() > 1 && request.params[1].isNum()) {\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (!pIndexStart) {\n+         pIndexStart = chainActive.Genesis();\n+    }\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = chainActive.Tip();\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129340626",
      "id" : 129340626,
      "original_commit_id" : "76e98222cd1d6587fdcb8000a8bff5d1e431ff5a",
      "original_position" : 44,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 52101375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129340626",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129342672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129342672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should at least throw an error this isn't successful (the ScanForWalletTransactions call will return null on success, otherwise a pointer to the last failing block, so this should be pretty easy).",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-07-25T15:38:05Z",
      "diff_hunk" : "@@ -1149,3 +1149,51 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start-height\\\") (\\\"stop-height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start-height\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stop-height\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pIndexStart = NULL;\n+    CBlockIndex *pIndexStop = NULL;\n+    if (request.params.size() > 0 && request.params[0].isNum())\n+        pIndexStart = chainActive[request.params[0].get_int()];\n+\n+    if (request.params.size() > 1 && request.params[1].isNum())\n+        pIndexStop = chainActive[request.params[1].get_int()];\n+\n+    if (!pIndexStart)\n+         pIndexStart = chainActive.Genesis();\n+\n+    //We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode)\n+    {\n+        CBlockIndex *block = chainActive.Tip();\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n+            block = block->pprev;\n+\n+        if (pIndexStart->nHeight < block->nHeight)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data.\");\n+    }\n+\n+    if (pwallet)\n+        pwallet->ScanForWalletTransactions(pIndexStart, pIndexStop, true);\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129342672",
      "id" : 129342672,
      "in_reply_to_id" : 118321612,
      "original_commit_id" : "6217140cfe35a209359e1d70d38397c5f0a7ba73",
      "original_position" : 86,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 52101375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129342672",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129343268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129343268"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Capitalization of height doesn't match actual param name.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-07-25T15:40:07Z",
      "diff_hunk" : "@@ -1160,3 +1160,58 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startHeight\\\"    (number, optional) blockheight where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129343268",
      "id" : 129343268,
      "original_commit_id" : "76e98222cd1d6587fdcb8000a8bff5d1e431ff5a",
      "original_position" : 17,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 52101375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129343268",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129344411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129344411"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could do what `pruneblockchain` does and allow height to be specified either as a physical height or a time: https://github.com/bitcoin/bitcoin/blob/1caafa6cde3b88d926611771f9b4c06fcc6e0007/src/rpc/blockchain.cpp#L855",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-07-25T15:44:10Z",
      "diff_hunk" : "@@ -1160,3 +1160,58 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startHeight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopHeight\\\"     (number, optional) blockheight where the rescan should stop\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r129344411",
      "id" : 129344411,
      "original_commit_id" : "76e98222cd1d6587fdcb8000a8bff5d1e431ff5a",
      "original_position" : 18,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 52101375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129344411",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "If #10941 goes first then the test can be extended to do a `rescanblockchain` and assert the notified blocks.",
      "created_at" : "2017-07-27T21:37:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-318493700",
      "id" : 318493700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-07-27T21:37:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318493700",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Rebased and addressed @ryanofsky 's comments on my `rpc_rescan` branch.",
      "created_at" : "2017-08-11T18:52:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-321891792",
      "id" : 321891792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-08-11T18:52:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321891792",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Cherry picked @luke-jr rebased / overhauled version.\r\nStill needs an RPC test.",
      "created_at" : "2017-08-11T19:14:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-321896323",
      "id" : 321896323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-08-11T19:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321896323",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807511"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove inner `) (`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:07:30Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807511",
      "id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807511",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807587"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just `start`?\r\n\r\nAlso, if positive then height, if negative then depth relative to tip. Same for `stop`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:11:49Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807587",
      "id" : 132807587,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 17,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807587",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807622"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO `if (!request.params[0].isNull())` so that `get_int` throws if invalid value is supplied.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:14:32Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807622",
      "id" : 132807622,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 29,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807622",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807623"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same as above.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:14:39Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807623",
      "id" : 132807623,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 36,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807623",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807639"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Use `std::swap`?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:15:30Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807639",
      "id" : 132807639,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807639",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should be an error instead?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:16:08Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807647",
      "id" : 132807647,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 41,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807647",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807700"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should not happen, assert instead?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:19:21Z",
      "diff_hunk" : "@@ -1545,12 +1545,19 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n+ *\n+ * If pindexStop is not a nullptr, the scan will stop at the block-index\n+ * defined by pindexStop\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807700",
      "id" : 132807700,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 23,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807700",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807816"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Correct me if I'm wrong, but if start has `BLOCK_HAVE_DATA` then the remaining blocks also have, therefore no need to loop?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:25:36Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807816",
      "id" : 132807816,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 50,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807816",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807841"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`pindex_start`?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:27:01Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807841",
      "id" : 132807841,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 27,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807841",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe we should `} else { pindex_stop = chainActive.Tip(); }`?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:28:25Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807866",
      "id" : 132807866,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 38,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807866",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note that it's inclusive?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T02:30:41Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807938",
      "id" : 132807938,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 18,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55933557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132807938",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No... they're both independently optional.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T10:52:31Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815641",
      "id" : 132815641,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55941516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815641",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815669"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T10:55:21Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815669",
      "id" : 132815669,
      "in_reply_to_id" : 132807647,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 41,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55941550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815669",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "But without named args that's not possible.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T10:55:32Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815673",
      "id" : 132815673,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55941555,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815673",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this may be currently true, but perhaps not safe to assume for the future. Unsure.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T10:55:59Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815681",
      "id" : 132815681,
      "in_reply_to_id" : 132807816,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 50,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55941562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815681",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why would start be greater than stop? Seems to be a bad call?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T10:58:06Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815713",
      "id" : 132815713,
      "in_reply_to_id" : 132807647,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 41,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55941595,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815713",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815753"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe factor out to a CChain function so in the future it's more contained and for now remove the loop?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T11:00:54Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132815753",
      "id" : 132815753,
      "in_reply_to_id" : 132807816,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 50,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55941633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132815753",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132816455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132816455"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes it is...",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T11:46:29Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132816455",
      "id" : 132816455,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55942245,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132816455",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132816479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132816479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It doesn't make much less sense to scan backward than to scan forward. We only actually support scanning forward, but the outcome is the same either way.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T11:47:39Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132816479",
      "id" : 132816479,
      "in_reply_to_id" : 132807647,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 41,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55942271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132816479",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818438"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T13:52:37Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818438",
      "id" : 132818438,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55944181,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818438",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818442"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see your point :+1:.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T13:52:49Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818442",
      "id" : 132818442,
      "in_reply_to_id" : 132807647,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 41,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55944187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818442",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "JSON `null` is equivalent to omitting a parameter.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T14:03:44Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818674",
      "id" : 132818674,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55944436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818674",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What I mean is that with `bitcoin-cli rescanblockchain 10` `10` will always be `startheight` and to specify only `stopheight` you have to call `bitcoin-cli rescanblockchain null 10`, hence `stopheight` depends on `startheight`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T14:09:40Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818773",
      "id" : 132818773,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55944538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818773",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818905"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could return the scanned range? Then the client can keep the returned `stopheight` to be the next `startheight`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T14:18:09Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {\n+            CBlockIndex * const block = chainActive[nHeight];\n+            if (!block) {\n+                break;\n+            }\n+            if (!(block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+        }\n+    }\n+\n+    if (pwallet) {\n+        pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    }\n+\n+    return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132818905",
      "id" : 132818905,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 65,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55944662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132818905",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132820300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132820300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure what you're getting at. Null is omitted.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T15:27:04Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132820300",
      "id" : 132820300,
      "in_reply_to_id" : 132807511,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 14,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55946062,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132820300",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132828124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828124"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`block->pprev` can be nullptr:\r\n```\r\nbitcoind -regtest -prune=1\r\nbitcoin-cli -regtest rescanblockchain   <- segfault\r\n```",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-08-12T22:23:54Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {\n+            CBlockIndex * const block = chainActive[nHeight];\n+            if (!block) {\n+                break;\n+            }\n+            if (!(block->pprev->nStatus & BLOCK_HAVE_DATA)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132828124",
      "id" : 132828124,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 55,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 55953021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828124",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r137143484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137143484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We loop backwards here which the check is necessary. Or am I wrong?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-05T23:58:11Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r137143484",
      "id" : 137143484,
      "in_reply_to_id" : 132807816,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 50,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 60772793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137143484",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r137143572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137143572"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The stop height can just be a `nullptr` (== scan up to the tip).",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-05T23:59:01Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r137143572",
      "id" : 137143572,
      "in_reply_to_id" : 132807866,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 38,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 60772892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137143572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and overhauled.\r\nThis no longer evicts the startup `-rescan` option.\r\nAlso added a RPC test.",
      "created_at" : "2017-09-06T00:39:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-327341485",
      "id" : 327341485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-09-06T00:39:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327341485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r137149404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137149404"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Something is wrong now because nothing changes the the loop exit conditions.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-06T00:48:38Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = NULL;\n+    CBlockIndex *pindexStop = NULL;\n+    if (request.params[0].isNum()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (request.params[1].isNum()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+    }\n+\n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {\n+        // Flip the parameters to the expected order\n+        CBlockIndex * const tmp = pindexStart;\n+        pindexStart = pindexStop;\n+        pindexStop = tmp;\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        int nHeight = pindexStart->nHeight;\n+        while ((!pindexStop) || nHeight <= pindexStop->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r137149404",
      "id" : 137149404,
      "in_reply_to_id" : 132807816,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 50,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 60779112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137149404",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> if positive then height, if negative then depth relative to tip\r\n\r\nIn general we don't like overloading arguments with multiple meanings in this way  (I know - I've tried to do it myself before and got NACKed.\r\n\r\nThe argument names should be changed to `start_height` and `stop_height` to follow style guidelines. I know that this PR was opened before the style changes so I won't suggest that you change variable names, but this is a public interface so it should adhere to the new guidelines.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:12:04Z",
      "diff_hunk" : "@@ -1160,3 +1160,66 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467300",
      "id" : 138467300,
      "in_reply_to_id" : 132807587,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 17,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467300",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not just assign `chainActive.Genesis()` to `pindexStart` when declaring the variable (and then overwrite if `!request.params[0].isNull()`)",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:13:16Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467588",
      "id" : 138467588,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 35,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467588",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: slight preference to declare this variable immediately above the `if (!request.params[1].isNull())` code block",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:13:55Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467741",
      "id" : 138467741,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 28,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467741",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should be `RPC_INVALID_PARAMETER`, not `RPC_WALLET_ERROR`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:14:45Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467952",
      "id" : 138467952,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 32,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467952",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467989"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As above, this should be `RPC_INVALID_PARAMETER`, not `RPC_WALLET_ERROR`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:14:55Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138467989",
      "id" : 138467989,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138467989",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138468240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138468240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should be `RPC_MISC_ERROR`. Trying to scan a pruned block is not an error in the wallet.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:16:01Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138468240",
      "id" : 138468240,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 54,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138468240",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138469171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138469171"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why is this required? The call to `EnsureWalletIsAvailable()` above should ensure that the wallet is available.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:20:01Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    if (pwallet) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138469171",
      "id" : 138469171,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 61,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138469171",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138469407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138469407"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These return fields should be documented in the help text.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:21:04Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    if (pwallet) {\n+        stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+        if (!stopBlock) {\n+            // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+            stopBlock = pindexStop ? pindexStop : chainActive.Tip();\n+        }\n+    }\n+\n+    UniValue response(UniValue::VOBJ);\n+    response.pushKV(\"startheight\", pindexStart->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138469407",
      "id" : 138469407,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 70,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138469407",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138470085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138470085"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It looks like you've updated all the calls to `ScanForWalletTransactions()` to explicitly set `pindexStop` (except in `wallet_tests.cpp`). Why not update `wallet_tests.cpp` and remove the default argument. I think in general it's best to avoid default arguments if possible.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:23:51Z",
      "diff_hunk" : "@@ -919,7 +919,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) override;\n     bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n     int64_t RescanFromTime(int64_t startTime, bool update);\n-    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n+    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop = nullptr, bool fUpdate = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138470085",
      "id" : 138470085,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 5,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138470085",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138473317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138473317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Really, this should use `os.path.join` to construct the path, but I see this pattern is used in other tests, so I don't think you need to change it here.\r\n\r\nEven better would be to move these functions to be methods in the `TestNode` class - `remove_block_files()`, `remove_chainstate_files()`, `backup_wallet_file()`, `restore_wallet_file()`, etc.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:38:11Z",
      "diff_hunk" : "@@ -91,6 +91,21 @@ def run_test (self):\n         self.start_node(1, extra_args=self.extra_args[1] + ['-rescan'])\n         assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n \n+        # Try a RPC based rescan\n+        self.stop_node(1)\n+        shutil.rmtree(tmpdir + \"/node1/regtest/blocks\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138473317",
      "id" : 138473317,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 6,
      "path" : "test/functional/wallet-hd.py",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138473317",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138473732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138473732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: add a space: `(0, 1)`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:40:10Z",
      "diff_hunk" : "@@ -91,6 +91,21 @@ def run_test (self):\n         self.start_node(1, extra_args=self.extra_args[1] + ['-rescan'])\n         assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n \n+        # Try a RPC based rescan\n+        self.stop_node(1)\n+        shutil.rmtree(tmpdir + \"/node1/regtest/blocks\")\n+        shutil.rmtree(tmpdir + \"/node1/regtest/chainstate\")\n+        shutil.copyfile(tmpdir + \"/hd.bak\", tmpdir + \"/node1/regtest/wallet.dat\")\n+        self.start_node(1, extra_args=self.extra_args[1])\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        self.sync_all()\n+        out = self.nodes[1].rescanblockchain(0,1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138473732",
      "id" : 138473732,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 12,
      "path" : "test/functional/wallet-hd.py",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138473732",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138474251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138474251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps assert that the rescan scanned up to the tip:\r\n\r\n`assert_equal(out['stopheight'], self.nodes[1].getblockcount())`\r\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-12T21:42:47Z",
      "diff_hunk" : "@@ -91,6 +91,21 @@ def run_test (self):\n         self.start_node(1, extra_args=self.extra_args[1] + ['-rescan'])\n         assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n \n+        # Try a RPC based rescan\n+        self.stop_node(1)\n+        shutil.rmtree(tmpdir + \"/node1/regtest/blocks\")\n+        shutil.rmtree(tmpdir + \"/node1/regtest/chainstate\")\n+        shutil.copyfile(tmpdir + \"/hd.bak\", tmpdir + \"/node1/regtest/wallet.dat\")\n+        self.start_node(1, extra_args=self.extra_args[1])\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        self.sync_all()\n+        out = self.nodes[1].rescanblockchain(0,1)\n+        assert_equal(out['startheight'], 0)\n+        assert_equal(out['stopheight'], 1)\n+        out = self.nodes[1].rescanblockchain()\n+        assert_equal(out['startheight'], 0)\n+        assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138474251",
      "id" : 138474251,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 17,
      "path" : "test/functional/wallet-hd.py",
      "position" : null,
      "pull_request_review_id" : 62267814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138474251",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138651398"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138651398"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If the heights are inverted, they should be flipped. 100..90 is no less rational than 90..100. This was in 79a11731f3, but seems to have disappeared silently in a rebase?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-13T15:17:14Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138651398",
      "id" : 138651398,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62475051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138651398",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138651715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138651715"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this was more appropriately positioned after \"removeprunedfunds\" as before. Probably after \"move\" makes the most sense, since it seems to be alphabetised.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-13T15:18:24Z",
      "diff_hunk" : "@@ -3235,6 +3236,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"removeprunedfunds\",        &removeprunedfunds,        {\"txid\"} },\n \n     { \"generating\",         \"generate\",                 &generate,                 {\"nblocks\",\"maxtries\"} },\n+    { \"wallet\",             \"rescanblockchain\",         &rescanblockchain,         {\"startheight\", \"stopheight\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138651715",
      "id" : 138651715,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 12,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 62475051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138651715",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also not sure `rpcdump.cpp` makes sense for this one.",
      "created_at" : "2017-09-13T15:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-329201946",
      "id" : 329201946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-09-13T15:19:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329201946",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138657112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138657112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@luke-jr - do you have a particular use-case for inverting the block heights? If not, I think this is fine as is. We should err towards being more strict in the interface to keep the code simpler.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-13T15:35:57Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138657112",
      "id" : 138657112,
      "in_reply_to_id" : 138651398,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62481771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138657112",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138676288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138676288"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Already discussed [here](https://github.com/bitcoin/bitcoin/pull/7061#discussion_r132807647).\r\n\r\nThere's no reason to have an arbitrary restriction that doesn't make sense and is undocumented, especially when we can trivially just do the right thing.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-13T16:48:16Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138676288",
      "id" : 138676288,
      "in_reply_to_id" : 138651398,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62503742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138676288",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138678201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138678201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "'The right thing' is a value judgement. In my opinion, the right thing is to keep APIs as tightly defined as possible in order to keep code simple and remove corner cases.\r\n\r\nOf course, if there's a legitimate use case, we should allow both, but I don't see it.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-13T16:55:43Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138678201",
      "id" : 138678201,
      "in_reply_to_id" : 138651398,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 62505956,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138678201",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139277432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139277432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO they should be declared / initialised together (for better code readability).",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-16T03:57:16Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139277432",
      "id" : 139277432,
      "in_reply_to_id" : 138467741,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 28,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 63194044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139277432",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139277483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139277483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. Will update.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-16T04:00:36Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139277483",
      "id" : 139277483,
      "in_reply_to_id" : 138467588,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 35,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 63194102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139277483",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139277489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139277489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right... Will remove it. I think this is a rebase issue since the PR is originally from 2015.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-16T04:01:02Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    if (pwallet) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139277489",
      "id" : 139277489,
      "in_reply_to_id" : 138469171,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 61,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 63194109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139277489",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addresses @jnewbery's points.\r\nAgree with @luke-jr that it should be in `rpcwallet` and not in `rpcdump` (moved it there).",
      "created_at" : "2017-09-16T04:51:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-329945733",
      "id" : 329945733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-09-16T04:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329945733",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139278641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139278641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The legitimate use case is to rescan the blockchain... There's no reason why one direction is to be preferred over the other for these arguments.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-16T05:03:05Z",
      "diff_hunk" : "@@ -1161,3 +1161,73 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"startheight\\\"    (number, optional) blockheight where the rescan should start\\n\"\n+            \"2. \\\"stopheight\\\"     (number, optional) blockheight where the rescan should stop\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = nullptr;\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid startheight\");\n+        }\n+    }\n+    if (!pindexStart) {\n+        pindexStart = chainActive.Genesis();\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r139278641",
      "id" : 139278641,
      "in_reply_to_id" : 138651398,
      "original_commit_id" : "bf6f25373a016c78d48f52577fcd0c2c56641c8d",
      "original_position" : 42,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 63195339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139278641",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141537719"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141537719"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ÃÂ¼Nit: `start_height` since you're calling it that in the help.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-28T06:48:49Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141537719",
      "id" : 141537719,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 36,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65764912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141537719",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141537822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141537822"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ÃÂ¼Nit: `stop_height`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-28T06:49:24Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141537822",
      "id" : 141537822,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 43,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65764912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141537822",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141537920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141537920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be abbreviated to `CBlockIndex *block = pindexStop ?: chainActive.Tip();`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-28T06:49:56Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141537920",
      "id" : 141537920,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 49,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 52,
      "pull_request_review_id" : 65764912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141537920",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141538153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141538153"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not just `while (block && block->nHeight > pindexStart->nHeight) {`?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-28T06:51:02Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141538153",
      "id" : 141538153,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65764912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141538153",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141538455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141538455"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same as above here; `stopBlock = pindexStop ?: chainActive.Tip();`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-28T06:53:09Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ? pindexStop : chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141538455",
      "id" : 141538455,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65764912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141538455",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141538772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141538772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CBlockIndex* pindexStop = nullptr` will let existing code default to current behavior (mostly in the test cases in `wallet/test/wallet_tests.cpp`).",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-09-28T06:55:12Z",
      "diff_hunk" : "@@ -919,7 +919,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) override;\n     bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n     int64_t RescanFromTime(int64_t startTime, bool update);\n-    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n+    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r141538772",
      "id" : 141538772,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 5,
      "path" : "src/wallet/wallet.h",
      "position" : 5,
      "pull_request_review_id" : 65764912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141538772",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020395"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Heh. I had it before but then @jnewbery convinced me to remove it: https://github.com/bitcoin/bitcoin/pull/7061#discussion_r138470085",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T04:27:17Z",
      "diff_hunk" : "@@ -919,7 +919,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) override;\n     bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n     int64_t RescanFromTime(int64_t startTime, bool update);\n-    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n+    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020395",
      "id" : 142020395,
      "in_reply_to_id" : 141538772,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 5,
      "path" : "src/wallet/wallet.h",
      "position" : 5,
      "pull_request_review_id" : 66327593,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020395",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T04:33:47Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020472",
      "id" : 142020472,
      "in_reply_to_id" : 141538153,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66327665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020472",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T04:33:49Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block) {\n+            if (block->nHeight <= pindexStart->nHeight) {\n+                break;\n+            }\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ? pindexStop : chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020475",
      "id" : 142020475,
      "in_reply_to_id" : 141538455,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66327667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020475",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020477"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T04:33:53Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid startheight\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stopheight\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020477",
      "id" : 142020477,
      "in_reply_to_id" : 141537920,
      "original_commit_id" : "12133020f65683a2074461883fccce60e0822747",
      "original_position" : 49,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 52,
      "pull_request_review_id" : 66327669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020477",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Adressed @kallewoof's points.",
      "created_at" : "2017-10-01T04:34:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-333352794",
      "id" : 333352794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-01T04:34:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333352794",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020614"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I missed this last time: start_height and stop_height here to match the rest.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T04:48:58Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020614",
      "id" : 142020614,
      "original_commit_id" : "9b34215467d716e0510ab30c9c7ba2d1c9265b1b",
      "original_position" : 13,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66327802,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020614",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T04:51:57Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"startheight\\\") (\\\"stopheight\\\")\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142020651",
      "id" : 142020651,
      "in_reply_to_id" : 142020614,
      "original_commit_id" : "9b34215467d716e0510ab30c9c7ba2d1c9265b1b",
      "original_position" : 13,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66327836,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142020651",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142041726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142041726"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, remove space before `:`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-01T21:56:43Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142041726",
      "id" : 142041726,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 20,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66348194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142041726",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142199778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142199778"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: add \"If omitted, rescan starts from the genesis block.\"",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-02T17:16:08Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142199778",
      "id" : 142199778,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 16,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66526757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142199778",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142199837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142199837"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: add \"If omitted, rescan stops at the chain tip.\"",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-02T17:16:21Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142199837",
      "id" : 142199837,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66526757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142199837",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142201886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142201886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "minor bug: sadly, the comment about the return value for `ScanForWalletTransactions()` added in #10208 is incomplete. If `abortrescan` is called during a rescan, then `ScanForWalletTransactions()` will return `nullptr` even if the though scan didn't complete successfully to the tip (or requested `pindexStop` after this PR)\r\n\r\nI think the only way to correctly return the status of the rescan would be to have more information passed back by `ScanForWalletTransactions()`.\r\n\r\n(Test this by running `rescanblockchain` in one window and calling `abortrescan` in a different window. `rescanblockchain` returns the requested stop_height even though the rescan didn't extend that far).\r\n\r\n@ryanofsky since he changed the semantics of `ScanForWalletTransactions()` in #10208.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-02T17:25:21Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142201886",
      "id" : 142201886,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 61,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66526757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142201886",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142574886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142574886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice catch... added a protection that detects aborted rescans via a check of  `CWallet::IsAbortingRescan()` after `ScanForWalletTransactions()`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T03:34:08Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142574886",
      "id" : 142574886,
      "in_reply_to_id" : 142201886,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 61,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66954055,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142574886",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed @jnewbery and @promag's nits.",
      "created_at" : "2017-10-04T03:34:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334041199",
      "id" : 334041199,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T03:34:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334041199",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142680035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142680035"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like a good pragmatic change. There's a (pathological) race condition where another thread starts a rescan and resets `fAbortRescan` before this RPC returns, but that's extremely unlikely.\r\n\r\nI still think it would be nice to have `ScanForWalletTransactions()` give a more meaningful return value that indicates whether the rescan was aborted. The same bug exists in `importmulti` where `RescanFromTime()` will return the wrong time value if the rescan is aborted. However, that fix can be for another PR.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:07:14Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\" :   (number) The block height where the rescan has started\\n\"\n+            \"  \\\"stop_height\\\" :    (number) The height of the last rescanned block\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142680035",
      "id" : 142680035,
      "in_reply_to_id" : 142201886,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 61,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67075523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142680035",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142680569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142680569"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: please sort imports :)\r\n\r\nand ideally place them in PEP8 ordering (ie standard library before project imports)",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:09:01Z",
      "diff_hunk" : "@@ -10,6 +10,7 @@\n     connect_nodes_bi,\n )\n import shutil\n+import os",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142680569",
      "id" : 142680569,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 4,
      "path" : "test/functional/wallet-hd.py",
      "position" : 4,
      "pull_request_review_id" : 67076176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142680569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks good. One style nit, but ACK bdae58ebcd274629bc57f790ef3e1c9e13e1c91f with or without.",
      "created_at" : "2017-10-04T14:15:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334169514",
      "id" : 334169514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T14:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334169514",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142687923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142687923"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Join this with next line.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:32:31Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142687923",
      "id" : 142687923,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67084949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142687923",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142688149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142688149"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Avoid this GNU extension (empty operand)?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:33:21Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ?: chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142688149",
      "id" : 142688149,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67084949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142688149",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142689885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142689885"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is wrong, from `ScanForWalletTransactions` doc:\r\n> Returns null if scan was successful. Otherwise, if a complete rescan was not possible (due to pruning or corruption), returns pointer to the most recent block that could not be scanned.\r\n\r\nSo it can return a non `nullptr` but catch transactions further in the chain. It only stops rescanning when `abortrescan` RPC is called.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:38:55Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142689885",
      "id" : 142689885,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 64,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 67084949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142689885",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142690953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142690953"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe we should add *the most recent block that could not be scanned* to the response.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:42:22Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142690953",
      "id" : 142690953,
      "in_reply_to_id" : 142689885,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 64,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 67084949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142690953",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142691453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142691453"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "BTW, first time in this source code.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T14:43:58Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ?: chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142691453",
      "id" : 142691453,
      "in_reply_to_id" : 142688149,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67089315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142691453",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142698474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142698474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I did not know a ?: b was a GNU extension. Sorry for bad nit earlier. :(",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:06:01Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ?: chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142698474",
      "id" : 142698474,
      "in_reply_to_id" : 142688149,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67097835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142698474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142701411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142701411"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think with this (and with the above pindexStart check), I'd like to see these errors differentiate between:\r\n\r\n1. Invalid Start Height: no negative heights\r\n2. Invalid Start Height: Beyond what's been synced\r\n3. Invalid Stop Height: No negative heights\r\n4. Invalid Stop Height: Beyond what's been synced\r\n5. Invalid Range: stop must be greater than start.\r\n\r\nAt the very least, 5. should be represented because it could be the start_height which is invalid.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:15:42Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142701411",
      "id" : 142701411,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 42,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142701411",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142704964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142704964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There is a race condition for using getblockchaininfo RPC call  if a new block comes in, unless you can pause pruning.\r\n\r\nMaybe worth just documenting to retry until there is a pruning pause feature.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:27:05Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142704964",
      "id" : 142704964,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 52,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142704964",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142705921"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142705921"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "tense error s/start/started",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:30:13Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142705921",
      "id" : 142705921,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 20,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142705921",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142706080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142706080"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "tense error s/stops/stopped\r\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:30:47Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142706080",
      "id" : 142706080,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 21,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142706080",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142707070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142707070"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If no blocks are re scanned, I don't think this is correct/is confusing.\r\n\r\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:34:21Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ?: chainActive.Tip();\n+    }\n+\n+    UniValue response(UniValue::VOBJ);\n+    response.pushKV(\"start_height\", pindexStart->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142707070",
      "id" : 142707070,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 69,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142707070",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142707790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142707790"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "According to the ScanForWalletTransactions docs...\r\n\r\n    * Returns null if scan was successful. Otherwise, if a complete rescan was not\r\n    * possible (due to pruning or corruption), returns pointer to the most recent\r\n    * block that could not be scanned.\r\n\r\nSo with the current returned value it should be nHeight-1.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:36:49Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ?: chainActive.Tip();\n+    }\n+\n+    UniValue response(UniValue::VOBJ);\n+    response.pushKV(\"start_height\", pindexStart->nHeight);\n+    response.pushKV(\"stop_height\", stopBlock->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142707790",
      "id" : 142707790,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 70,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 75,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142707790",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142709145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142709145"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is not accurate AFAICT. The block at stop_height is not scanned?",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:41:27Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142709145",
      "id" : 142709145,
      "in_reply_to_id" : 142706080,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 21,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142709145",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142710066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142710066"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Please specify if the scan stops before or after this block.\r\n\r\nI think semantically it makes more sense to provide an inclusive range (if I say \"scan blocks 10-20\", not scanning 20 seems confusing). \r\n\r\nIf you really want an exclusive range, providing the number of blocks to scan (e.g., \"scan 10 blocks starting at 10\") has better ux, but still worse than inclusive.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T15:44:24Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142710066",
      "id" : 142710066,
      "in_reply_to_id" : 142199837,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67101431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142710066",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142732253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142732253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not correct, right. I think we leave that fix for another PR (not directly related to this PR).",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T17:07:41Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142732253",
      "id" : 142732253,
      "in_reply_to_id" : 142689885,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 64,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 67137219,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142732253",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142734062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142734062"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can happen from the perspective of the function. But maybe not with the current consumption of the function.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T17:15:08Z",
      "diff_hunk" : "@@ -1545,12 +1545,19 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n+ *\n+ * If pindexStop is not a nullptr, the scan will stop at the block-index\n+ * defined by pindexStop\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    if (pindexStop && pindexStop->nHeight < pindexStart->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142734062",
      "id" : 142734062,
      "in_reply_to_id" : 132807700,
      "original_commit_id" : "79a11731f398127543ef85ee7f8a1470da5046d1",
      "original_position" : 23,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67139292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142734062",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin the current implementation does scan the block defined with the `stop_height` parameter. I'll update the parameter documentation to make this more clear.",
      "created_at" : "2017-10-04T17:31:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334230644",
      "id" : 334230644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T17:31:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334230644",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142738581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142738581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "AFAIK the block defined with `stop_height` will be scanned.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T17:33:30Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142738581",
      "id" : 142738581,
      "in_reply_to_id" : 142706080,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 21,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67144647,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142738581",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142743339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142743339"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added case 5.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T17:52:09Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142743339",
      "id" : 142743339,
      "in_reply_to_id" : 142701411,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 42,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67150307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142743339",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142743393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142743393"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T17:52:21Z",
      "diff_hunk" : "@@ -3169,6 +3169,76 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) block height where the rescan should stop\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan starts from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stops at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop || pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ?: chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = nullptr;\n+    stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ?: chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142743393",
      "id" : 142743393,
      "in_reply_to_id" : 142688149,
      "original_commit_id" : "bdae58ebcd274629bc57f790ef3e1c9e13e1c91f",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67150375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142743393",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the range handling is correct but change the RPC help to ` \\\"stop_height\\\"     (number, optional) the last block height that should be scanned`.\r\n\r\nReverted the conditional ?: op abbreviation due to the fact that this requires a GNU extension. \r\n\r\nThe fix for the misleading return value of ScanForWalletTransaction and comment (#11450) should be handled outside of this PR.",
      "created_at" : "2017-10-04T17:55:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334238263",
      "id" : 334238263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T17:55:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334238263",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142775855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142775855"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this is clearest to say:\r\n\r\n    If pindexStop is not a nullptr, we attempt to scan up to and including pIndexStop.\r\n\r\n",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-04T19:55:31Z",
      "diff_hunk" : "@@ -1555,12 +1555,19 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n+ *\n+ * If pindexStop is not a nullptr, the scan will stop one block after the block-index",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142775855",
      "id" : 142775855,
      "original_commit_id" : "53e5d8a7f7b2648c1b2aa017b219215b1e1d169f",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67187306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142775855",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Also, more generally, it seems we could fail to scan many blocks in the range and still return that we scanned the range.",
      "created_at" : "2017-10-04T20:07:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334274047",
      "id" : 334274047,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T20:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334274047",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin: Why do you think `rescanblockchain { start_height: 10, stop_height: 20 }` would not scan block at height 20? I just re-checked, re-tested and it looks like it does scan block 20.",
      "created_at" : "2017-10-04T20:15:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334275917",
      "id" : 334275917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T20:15:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334275917",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I understand @JeremyRubin concern now. It's about corrupted blocks (when `ReadBlockFromDisk` fails). The current startup `-rescans` do sort of tolerate this.\r\n\r\nAdded a fix that now leads to an error thrown when detecting a corrupted block (https://github.com/bitcoin/bitcoin/pull/7061/files#diff-df7d84ff2f53fcb2a0dc15a3a51e55ceR3237)",
      "created_at" : "2017-10-04T20:59:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334287626",
      "id" : 334287626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-04T20:59:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334287626",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nThis seem like moving in the right direction, even if in the long term we want to avoid the need for rescans completely.\r\n\r\n> This now does replace the -rescan startup argument with a new RPC call rescanblockchain.\r\n\r\nI don't see this in the code. Shouldn't we at least deprecate the startup argument at the same time? (I would not oppose to directly remove it as an exception to the general policy instead of waiting for 0.17).\r\nPerhaps note in the release notes that this is also supposed to be temporary.\r\n",
      "created_at" : "2017-10-05T02:22:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334340947",
      "id" : 334340947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-05T02:22:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334340947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">> This now does replace the -rescan startup argument with a new RPC call rescanblockchain.\r\n\r\n> I don't see this in the code. Shouldn't we at least deprecate the startup argument at the same time? (I would not oppose to directly remove it as an exception to the general policy instead of waiting for 0.17).\r\nPerhaps note in the release notes that this is also supposed to be temporary.\r\n\r\nThis was removed from the PRs description (but not from a later comment, now added a strike-through attr.)",
      "created_at" : "2017-10-05T03:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334348632",
      "id" : 334348632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-05T03:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334348632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO this is ready to merge even though there are some concerns that need to be addressed in follow ups:\r\n - Rescan continues even if a corrupted block is detected but the RPC *fails* to the caller;\r\n - `rescanblockchain` can be refactored a little to avoid the cs_main and cs_wallet locks;\r\n\r\nI also would like to discuss the option to make this RPC asynchronous so the caller doesn't wait for the rescan to complete, it only asks for a rescan. There is a big chance the caller interrupts the call, but I believe in server side the rescan continues.\r\n\r\nutACK 559542a.",
      "created_at" : "2017-10-05T09:17:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334408563",
      "id" : 334408563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-05T09:18:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334408563",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142890670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142890670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo `corruputed` -> corrupted",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-05T09:33:54Z",
      "diff_hunk" : "@@ -3169,6 +3169,81 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) the last block height that should be scanned\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan started from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stopped at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"\\\"100000 120000\\\"\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+        else if (pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {\n+            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+            }\n+            block = block->pprev;\n+        }\n+    }\n+\n+    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n+    if (!stopBlock) {\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+        }\n+        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n+        stopBlock = pindexStop ? pindexStop : chainActive.Tip();\n+    }\n+    else {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corruputed data files.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142890670",
      "id" : 142890670,
      "original_commit_id" : "559542a57bfd4bd37c2f9d8397ec62aef32b67e5",
      "original_position" : 70,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67318017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142890670",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142890853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142890853"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Or just `default=0`",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-05T09:34:58Z",
      "diff_hunk" : "@@ -3169,6 +3169,73 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142890853",
      "id" : 142890853,
      "in_reply_to_id" : 142199778,
      "original_commit_id" : "e2d376b376c4861d90ee1a9c52933abb3cbbd03b",
      "original_position" : 16,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67318261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142890853",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142891980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142891980"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These quotes look wrong, should both start and stop height be surrounded in the same string? As numbers should they even have quotes around them?\r\nHelpExampleRpc should also have commas between the arguments I believe\r\nSmall nit, `number` -> `numeric` in the lines above to be consistent with other calls",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-05T09:40:24Z",
      "diff_hunk" : "@@ -3169,6 +3169,81 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (number, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (number, optional) the last block height that should be scanned\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (number) The block height where the rescan has started. If omitted, rescan started from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (number) The height of the last rescanned block. If omitted, rescan stopped at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"\\\"100000 120000\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r142891980",
      "id" : 142891980,
      "original_commit_id" : "559542a57bfd4bd37c2f9d8397ec62aef32b67e5",
      "original_position" : 24,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 67319592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-09T19:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142891980",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK https://github.com/bitcoin/bitcoin/pull/7061/commits/559542a57bfd4bd37c2f9d8397ec62aef32b67e5 modulo comments above",
      "created_at" : "2017-10-05T09:44:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-334414959",
      "id" : 334414959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-05T09:44:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334414959",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed @MeshCollider nits.",
      "created_at" : "2017-10-09T19:51:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-335267872",
      "id" : 335267872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-09T19:51:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335267872",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I still think it's worth it to handle \r\n\r\n1.    Invalid Start Height: no negative heights\r\n1.    Invalid Stop Height: No negative heights\r\n\r\nand \r\n\r\n1.    Invalid Start Height: Beyond what's been synced\r\n1.    Invalid Stop Height: Beyond what's been synced\r\n\r\ndifferently. Specifically, the latter calls could still be handled and processed.\r\n",
      "created_at" : "2017-10-09T22:07:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-335303671",
      "id" : 335303671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-09T22:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335303671",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 35e7fd1147c64a286f778c7740fa735a16d448c5\r\n\r\n> I still think it's worth it to handle ... differently.\r\n\r\nThese already fail with `Invalid start_height` and `Invalid stop_height`. Yes, we can always provide more detailed error messages or logging, but lets not hold this PR up on that. It's already been very heavily reviewed.\r\n\r\nI'll happily review follow-up PRs if you want to change error logging.",
      "created_at" : "2017-10-10T14:19:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-335488283",
      "id" : 335488283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-10T14:19:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335488283",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r143809855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143809855"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the HelpExampleRpc should have a comma between the arguments, i.e. a comma after `100000`\r\nYeah would be good to get this merged, sorry for yet another nit :)",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-10T18:13:03Z",
      "diff_hunk" : "@@ -3169,6 +3169,81 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (numeric, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (numeric, optional) the last block height that should be scanned\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (numeric) The block height where the rescan has started. If omitted, rescan started from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (numeric) The height of the last rescanned block. If omitted, rescan stopped at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"100000 120000\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"100000 120000\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r143809855",
      "id" : 143809855,
      "original_commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "original_position" : 25,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 25,
      "pull_request_review_id" : 68377010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-10T18:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143809855",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r143893655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143893655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Very tiny nit, but every other place *skips* the space between words in argument list. I.e. `{\"start_height\",\"stop_height\"}`.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-11T01:31:28Z",
      "diff_hunk" : "@@ -3233,6 +3309,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"walletpassphrasechange\",   &walletpassphrasechange,   {\"oldpassphrase\",\"newpassphrase\"} },\n     { \"wallet\",             \"walletpassphrase\",         &walletpassphrase,         {\"passphrase\",\"timeout\"} },\n     { \"wallet\",             \"removeprunedfunds\",        &removeprunedfunds,        {\"txid\"} },\n+    { \"wallet\",             \"rescanblockchain\",         &rescanblockchain,         {\"start_height\", \"stop_height\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r143893655",
      "id" : 143893655,
      "original_commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "original_position" : 94,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 94,
      "pull_request_review_id" : 68472117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-11T01:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143893655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery to be clear\r\n\r\n1. I don't think it's fair to say it was heavily reviewed and I'm needlessly holding it up, I found a major bug in the implementation which required a (imo) pretty significant change to the semantics of the return value. \r\n1. I'm not suggesting a change in error reporting, I am suggesting a functional change to the ranges which are handled by this call. Specifically, I would like for the cases where\r\n\r\n    1. Invalid Start Height: Beyond what's been synced\r\n    1. Invalid Stop Height: Beyond what's been synced\r\n\r\nto not throw an error and return a successful scan range (if possible).",
      "created_at" : "2017-10-12T07:32:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-336045477",
      "id" : 336045477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-12T07:32:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336045477",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin - sorry if that came off as a personal criticism. That's not what I meant. This PR was re-opened in December last year and has been reviewed by 9 people so far. It's very useful functionality and it'd be great to see it merged. And yes - you did catch a subtle bug in your review which the rest of us missed. Thank you!\r\n\r\nre: your suggested change to the interface - if `start_height` is beyond what's been sync'ed, then there's nothing to rescan and we should return an error to make it clear to the user that the call was a no-op. If `stop_height` is beyond the sync height, then it's safer to return an error and let the user call the method again with a valid `stop_height`. If the call succeeded then a user who's not paying close attention to the return value may incorrectly assume that the wallet is rescanned up to the requested `stop_height`.",
      "created_at" : "2017-10-12T12:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-336116117",
      "id" : 336116117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-12T12:27:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336116117",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r144329495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144329495"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should this be >=? Otherwise it won't check the start block. Maybe add comment if there's a special reason for skipping the start block.",
      "commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "created_at" : "2017-10-12T15:43:08Z",
      "diff_hunk" : "@@ -3169,6 +3169,81 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+UniValue rescanblockchain(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"rescanblockchain (\\\"start_height\\\") (\\\"stop_height\\\")\\n\"\n+            \"\\nRescan the local blockchain for wallet related transactions.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"start_height\\\"    (numeric, optional) block height where the rescan should start\\n\"\n+            \"2. \\\"stop_height\\\"     (numeric, optional) the last block height that should be scanned\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"start_height\\\"     (numeric) The block height where the rescan has started. If omitted, rescan started from the genesis block.\\n\"\n+            \"  \\\"stop_height\\\"      (numeric) The height of the last rescanned block. If omitted, rescan stopped at the chain tip.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"rescanblockchain\", \"100000 120000\")\n+            + HelpExampleRpc(\"rescanblockchain\", \"100000 120000\")\n+            );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStop = nullptr;\n+    if (!request.params[0].isNull()) {\n+        pindexStart = chainActive[request.params[0].get_int()];\n+        if (!pindexStart) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+        }\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        pindexStop = chainActive[request.params[1].get_int()];\n+        if (!pindexStop) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        }\n+        else if (pindexStop->nHeight < pindexStart->nHeight) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+        }\n+    }\n+\n+    // We can't rescan beyond non-pruned blocks, stop and throw an error\n+    if (fPruneMode) {\n+        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        while (block && block->nHeight > pindexStart->nHeight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#discussion_r144329495",
      "id" : 144329495,
      "original_commit_id" : "35e7fd1147c64a286f778c7740fa735a16d448c5",
      "original_position" : 53,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 53,
      "pull_request_review_id" : 68971866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7061",
      "updated_at" : "2017-10-12T15:56:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144329495",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed @ryanofsky points with the >= check.\r\nLets merge this now,... I think the ranges cleanup (if we want to do this) could be PRed by @JeremyRubin after this PR.",
      "created_at" : "2017-10-12T19:00:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-336234108",
      "id" : 336234108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-12T19:00:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336234108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 7a91ceb5e0c9d29dddf7b6ae4cbba802b790924c. Only change since last review was >= fix",
      "created_at" : "2017-10-12T19:59:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-336248945",
      "id" : 336248945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-12T19:59:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336248945",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK https://github.com/bitcoin/bitcoin/commit/7a91ceb5e0c9d29dddf7b6ae4cbba802b790924c",
      "created_at" : "2017-10-12T20:24:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-336255380",
      "id" : 336255380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-12T20:24:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336255380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ã°ÂÂÂ",
      "created_at" : "2017-10-13T23:01:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7061#issuecomment-336586780",
      "id" : 336586780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7061",
      "updated_at" : "2017-10-13T23:01:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336586780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]

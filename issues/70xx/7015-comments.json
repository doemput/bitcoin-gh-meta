[
   {
      "body" : "Thanks. This is known, and there is a preexisting plan to improve it; though there is also a standard and widely deployed architecture miners use to work around this today (run multiple daemons).\r\n\r\nThe locks simply can't be disposed of there because createnewblock and block handling must necessarily lock the state of the blockchain. :) But just because they must doesn't mean there must be considerable delays.",
      "created_at" : "2015-11-14T01:44:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156605612",
      "id" : 156605612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T01:44:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156605612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I checked with #ckpool on this before bringing it here, and they (Con Kolivas and Kano) said that ckpool does not implement the workaround for this issue. It's possible they confused the issue with another one and do actually have this worked around, and it's also possible that the workaround can be implemented outside of ckpool.\r\n\r\nThe locks can be replaced with finer-grained locks. CreateNewBlock needs to lock against modifying or deleting transactions and against reorgs. It also needs to make sure it's working off of the same blockchain tip the entire time, so it needs to grab a pointer to the tip at the beginning. It also needs to grab a view of the mempool that will not change. It does not need to prevent new transactions from being added to the mempool or new blocks from being added to the blockchain.",
      "created_at" : "2015-11-14T01:55:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156607099",
      "id" : 156607099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T02:02:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156607099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "This is more complex than you think--, due to iterator invalidation, mempool eviction, cache management, utxo state, etc.  Fortunately, it's also not necessary to get very low latency.",
      "created_at" : "2015-11-14T01:56:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156607420",
      "id" : 156607420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T02:00:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156607420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Do you mean because of CLTV transactions and nLockTime stuff?",
      "created_at" : "2015-11-14T01:59:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156607775",
      "id" : 156607775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T01:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156607775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@jtoomim The lock is not going to be removed, it would make the code substantially more complex.\r\n\r\nAny pool that doesn't support submitting blocks through a separate bitcoind is broken and needs to be fixed.",
      "created_at" : "2015-11-14T02:19:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156610456",
      "id" : 156610456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T02:19:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156610456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "@pstratem I think one of the reasons why ckpool doesn't implement that feature is that it ckpool was written with btcd in mind. I suspect that btcd's behavior is not as bad as Core and XT's behavior in this situation.\r\n\r\nIf you guys want this issue marked as closed;wontfix, that's fine with me. I think it would be best to leave it up for a couple days first to give others a chance to comment if they feel the need.",
      "created_at" : "2015-11-14T02:46:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156613564",
      "id" : 156613564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T02:46:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156613564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@jtoomim It is inherent in the basic architecture that any getblocktemplate implementation will require locks which any submitblock implementation would also need.\r\n\r\nThe only way to get around this requirement would be to implement an MVCC database which is both extremely difficult and inherently slow.",
      "created_at" : "2015-11-14T02:48:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156613723",
      "id" : 156613723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T02:48:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156613723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "@jtoomim Btcd submit also competes with work creation, AFAIK.  I think you are making a common error of jumping prematurely to a particular solution.  The issue you've reported (That calling GBT ends up blocking submitting blocks for an unreasonable amount of time) will get fixed, but will not likely get fixed by making things run lock free (or at least not mostly!).\r\n\r\nBut all I was saying is that it sounded like were underestimating the complexity of safely eliminating locking around blockchain/mempool access, and overestimating the necessity of doing so. But the report at face value, is a fine one, and thanks for making it.",
      "created_at" : "2015-11-14T02:56:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156614743",
      "id" : 156614743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:00:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156614743",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I very much doubt anyone is suggesting using no locks.\r\nHowever, broad coarse locks are a sign of lack of design or understanding of the appropriate nature and use of locks.",
      "created_at" : "2015-11-14T03:07:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156616120",
      "id" : 156616120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156616120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "That is not a helpful comment. Both submitblock and createnewblock must have mutable access to the same data (the current chainstate)-- as both perform exactly the same operation (verifying a block against the current state), we are not talking about \"broad coarse locks\" here. There are ways around that, but they are not \"just use more specific locks\". :)",
      "created_at" : "2015-11-14T03:10:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156616477",
      "id" : 156616477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:11:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156616477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "You've just stated it is a broad coarse lock across all the same data used by both of them.\r\nSo I'm not sure of how helpful your comment is as you don't seem to have a clear grasp of the concept of locking - it's not \"lock\" or \"don't lock\" as you clearly implied - it's determining the appropriate granularity of the locks and the type of locks used.",
      "created_at" : "2015-11-14T03:14:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156617534",
      "id" : 156617534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:14:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156617534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "@kanoi Please go read the code before commenting further. Your comments are entirely useless and you seem to be an arrogant prick.",
      "created_at" : "2015-11-14T03:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156617634",
      "id" : 156617634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:15:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156617634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156617634\r\n\"@kanoi Please go read the code before commenting further. Your comments are entirely useless and you seem to be an arrogant prick.\"\r\n\r\nGotta record that for posterity in case someone deletes it :D",
      "created_at" : "2015-11-14T03:18:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156618011",
      "id" : 156618011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156618011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "@pstratem getblocktemplate does not make any writes to anything except the block template and its own CCoinsViewCache. Nothing that getblocktemplate creates is consumed by anything else except for the RPC caller. Any data that getblocktemplate needs from the rest of the system can be copied or (e.g. for mempool) locked in a fine-grained manner.\r\n\r\nFurthermore, there is no need for submitblock to lock everything for the entire duration of its activities. It can change the order of operations to check the new block's validity, commit it to memory as an object (but not necessarily as part of the chain), and notify peers all before locking cs_main and executing UpdateTip. \r\n\r\n@gmaxwell, if verifying a block actually requires mutable access to the chain state in order to verify a block (which sounds surprising to me, but I'll admit that I haven't checked and you probably know better than me), it still could be implemented with a lock just around the TestBlockValidity() calls. With production code, a medium-small fraction of the total time is taken in TestBlockValidity(). With morcos's work, that fraction dominates, it's true. It's also likely that calling TestBlockValidity both before and after sending a template to a miner is redundant.\r\n\r\nAnyway, I agree that this issue is not something that should be addressed right now, given how much faster GBT will be soon. I'd call it more of a target of opportunity. When writing code in the future, I think we should make an effort to think about what we actually need to have locked, and only lock those things. You are welcome to ignore my opinion.\r\n",
      "created_at" : "2015-11-14T03:25:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156618548",
      "id" : 156618548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:25:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156618548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@jtoomim indeed, getblocktemplate can lose cs_main for a bit of its runtime by copying state into its CCoinsViewCache (it already nearly does this), but, sadly, it doesnt actually save a ton of cs_main time by doing so. In any case, the rewrites morcos has been working on are far superior to any of this anyway (and could be designed to fail to refresh the templates by just giving up if cs_main is under contension during run).\r\nSadly, submitblock really does need to hold cs_main for the duration because Bitcoin Core must refuse to relay blocks which are invalid (and the point of submitblock is to accept potentially-invalid blocks and validate them).",
      "created_at" : "2015-11-14T03:30:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156618999",
      "id" : 156618999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:30:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156618999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "This is why XT is going to completely destroy core and leave these fools jobless and unemployable: Even when people who know a lot more about software engineering show up and tell them exactly what they need to do, they will not do it. This is because they want to force you to switch to proprietary \"sidechains\". Bitcoin should be maintained by professionals, not these clowns, and it will be soon.",
      "created_at" : "2015-11-14T03:34:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156619591",
      "id" : 156619591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156619591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15842314?v=3",
         "events_url" : "https://api.github.com/users/raisethelimit/events{/privacy}",
         "followers_url" : "https://api.github.com/users/raisethelimit/followers",
         "following_url" : "https://api.github.com/users/raisethelimit/following{/other_user}",
         "gists_url" : "https://api.github.com/users/raisethelimit/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/raisethelimit",
         "id" : 15842314,
         "login" : "raisethelimit",
         "organizations_url" : "https://api.github.com/users/raisethelimit/orgs",
         "received_events_url" : "https://api.github.com/users/raisethelimit/received_events",
         "repos_url" : "https://api.github.com/users/raisethelimit/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/raisethelimit/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/raisethelimit/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/raisethelimit"
      }
   },
   {
      "body" : "@TheBlueMatt Actually there are some nifty proposals that avoid some of those things for submitblock in some useful cases. :)",
      "created_at" : "2015-11-14T03:41:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156620254",
      "id" : 156620254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:41:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156620254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@TheBlueMatt agreed, and you're right about submitblock needing to hold the lock (IFF the lock is needed for testing block validity). My mistake for not thinking that through.",
      "created_at" : "2015-11-14T03:42:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156620369",
      "id" : 156620369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:42:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156620369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@gmaxwell indeed, if you wish to relay unverified blocks (eg to peers who have whitelisted you), you could do that without locking.",
      "created_at" : "2015-11-14T03:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156620716",
      "id" : 156620716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156620716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@raisethelimit let's not antagonize, please. This is a forum for technical discussion, not politics.\r\n\r\nSorry about the trolls and the politicians. I swear I didn't invite them (except kanoi insofar that I asked them about the issue before bringing it here).",
      "created_at" : "2015-11-14T03:44:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156620880",
      "id" : 156620880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156620880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@TheBlueMatt @gmaxwell It's a bit off-topic for this thread, but I also think that block relay should be begun after verifying PoW and before full verification. It might have some ill effects for SPV wallets that were connecting to dishonest pseudo-fullnodes which I haven't fully thought through yet, but it would help propagation times quite a bit and would also make hard forks run more cleanly (in case Core ever decides to increase the block size past 1 MB). ",
      "created_at" : "2015-11-14T03:55:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156622215",
      "id" : 156622215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156622215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@jtoomim That's been brough up a bunch over the years. Generally the thought has always been that we should only relay validated data and ban peers who break the rule, but there is a reasonable argument to be made to relay blocks with a special flag indicating they have not been validated (except for their PoW and basic sanity checks). I'm not a big fan of the idea because we've already people mining on unvalidated (and invalid) blocks and we should generally avoid making it easier to do so. That, plus validation is becoming quicker and quicker (with yet still a bunch of improvements in 0.12).",
      "created_at" : "2015-11-14T03:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156622663",
      "id" : 156622663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T03:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156622663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@jtoomim That was actually implemented previously (by luke-jr) and didn't improve performance back then. It probably would now.\r\n\r\nIt's _really_ critically important to not hand unverified blocks to SPV clients; but that is avoidable, in that you can specifically negotiate forwarding non-verified blocks and tag them as such (which is also how you avoid transitive partitioning due to misbehavior banning); so no one is surprised by them (which is what luke's patch did).   I'm fearful how that will interact with verification free mining :( but the harm there is created by the verification free mining, and not by the pre-forwarding...  Rather than twiddling the basic p2p protocol, however, it would probably just make more sense to handle this in new block relay mechanisms which are explicitly unverified-- since we now know we can do a lot better than the classical p2p protocol.",
      "created_at" : "2015-11-14T04:02:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156622952",
      "id" : 156622952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T04:02:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156622952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Harm with the verification-free mining is caused by the miner never verifying the chain, not by the miner making delayed verifications of the chain. I like to call this the difference between optimistic SPV mining and blind SPV mining. (I know the term SPV mining is inaccurate because no payments are being verified, but it's short and people understand it.) I don't think there's much to worry about about a fork with a 2-block invalid branch, and anything longer is vanishingly improbable if verification times are less than about 20 seconds per block. The problem is when the fork goes on for hours. \r\n\r\nI think the Chinese (and everyone else) learned their lesson on this one: blind SPV mining is expensive. They might not care about the harm it causes other Bitcoin users much, but as long as they care about keeping their mining rewards, I doubt anyone will make the same mistake again.",
      "created_at" : "2015-11-14T04:11:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156623902",
      "id" : 156623902,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T04:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156623902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@jtoomim SPV clients make a _very_ strong security assumption that the blocks they receive have been validated;  if you setup a simulator and model success rates for 2-confirm invalid block attacks with a small hashrate attacker (e.g. 1%), even short duration extension without verification massively amplifies the success.  The result is surprising, but less so when you realize that most blocks are \"fast\".   There are a great many users that accept transactions at 2-confirms (and even wallets that just display 'confirmed' with no count at all), wise or not. So I don't think it's correct to say that it only matters if it goes on for hours.  It's only the SPV nodes that need to be worried about in any case; full nodes will happily ignore the invalid blocks. :)\r\n\r\nYou should also consider more than the verification time; most mining stacks (including the hardware/firmware itself) often has fairly high latency (and/or takes a performance hit if your update their work frequently)-- usually I use a rule of thumb and figure any work you issue will be hashed on for at least 30 seconds. When I observe work issued by pools, the delay from the first pool to half the pools moving to a new block is about 10x what bitcoind verification time is (even before the speedups in 0.12). \r\n\r\nOne of the larger verification skipping miners responded that even with the losses, they believe it has been very profitable for them, and they would continue doing it.  \r\n\r\nBut in any case, even all that said I think it's largely orthogonal with the aggressive forwarding.  Any amount of block extension without verification invalidates the security assumption of SPV; but thats a fault of extending bad chains, not a fault of forwarding things eagerly at least so long as the eager forwarding is marked as such.\r\n",
      "created_at" : "2015-11-14T04:20:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156624844",
      "id" : 156624844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T04:20:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156624844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "SPV wallets need to be insulated from \"SPV\" miners. Fully verifying nodes need to be in between them. We can blame \"SPV\" miners for it, we can blame SPV wallets for doing it, or we can recognize that economics that are stronger than us have dictated their use and try to design a system that allows them to coexist with risks that each party deems acceptable. Such a system might be possible with an isVerified flag that SPV miners could use to talk to each other and fully verifying nodes could use to talk to each other more quickly and which SPV wallets could run away from. It might be necessary to think of a way to punish dishonest use of that bit.\r\n\r\n[redacted paragraph]\r\n\r\nOne protection against forwarding bad chains that would be cheap to implement is only optimistically forwarding an unvalidated block if it is based on a block that has been fully validated. This would limit forwarding of invalid chains to 1 block in length while still allowing for the vast majority of the performance benefit.",
      "created_at" : "2015-11-14T04:52:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156628333",
      "id" : 156628333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T04:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156628333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11898859?v=3",
         "events_url" : "https://api.github.com/users/jtoomim/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtoomim/followers",
         "following_url" : "https://api.github.com/users/jtoomim/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtoomim/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtoomim",
         "id" : 11898859,
         "login" : "jtoomim",
         "organizations_url" : "https://api.github.com/users/jtoomim/orgs",
         "received_events_url" : "https://api.github.com/users/jtoomim/received_events",
         "repos_url" : "https://api.github.com/users/jtoomim/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtoomim/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtoomim"
      }
   },
   {
      "body" : "@jtoomim \r\n\r\n> I think the Chinese (and everyone else) learned their lesson on this one: blind SPV mining is expensive. \r\n\r\nNot as expensive as you might imagine. If miners are improving their income by even a percent or two, any losses caused by validation-free mining during the BIP66 activation would have been recovered within days. It's lucrative to operate like this and there's no reason to stop. ",
      "created_at" : "2015-11-14T05:46:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-156638514",
      "id" : 156638514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-14T05:46:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156638514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15009664?v=3",
         "events_url" : "https://api.github.com/users/tulip0/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tulip0/followers",
         "following_url" : "https://api.github.com/users/tulip0/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tulip0/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tulip0",
         "id" : 15009664,
         "login" : "tulip0",
         "organizations_url" : "https://api.github.com/users/tulip0/orgs",
         "received_events_url" : "https://api.github.com/users/tulip0/received_events",
         "repos_url" : "https://api.github.com/users/tulip0/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tulip0/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tulip0/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tulip0"
      }
   },
   {
      "body" : "The simplest solution to the original issue is to allow getblocktemplate to be notified of the lock request, release the lock, then start again and get a new template.\r\nActually using the template provided, is the wrong action in this case.\r\nSimple use of locks to do this :)\r\n\r\nThe suggestion to use multiple bitcoinds when they won't even propagate blocks among themselves quickly seems like a bad solution.\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/7049",
      "created_at" : "2015-11-18T23:00:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157892555",
      "id" : 157892555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-18T23:07:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157892555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "@kanoi I agree that seems like reasonable behaviour. I'm not sure it's as simple as you expect, though. Can you elaborate on how you would propose implementing it? (Perhaps even submit a pull request?) Thanks",
      "created_at" : "2015-11-19T01:30:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157918537",
      "id" : 157918537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T01:30:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157918537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "With locking?\r\n\r\n* template would (always) wait ... and get the lock\r\n* newblock would always \"trylock\" and process on success, or on failure \"notify\" it's intent, then wait on the lock\r\n* template call holding the lock, seeing the \"notification\" would:\r\n\r\n> release the lock, then start again and get a new template",
      "created_at" : "2015-11-19T02:16:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157926345",
      "id" : 157926345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T02:17:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157926345",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "Ok, so the template-producing code needs to check for the notification every iteration - that will make performance even worse, though. Might be better to just optimise it so it doesn't matter...",
      "created_at" : "2015-11-19T02:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157932044",
      "id" : 157932044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T02:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157932044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "False.\r\nThe CPU requirement is so insignificant I wonder if you understand programming and locks at all.",
      "created_at" : "2015-11-19T02:49:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157932669",
      "id" : 157932669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T02:49:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157932669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "Here, a little lesson in locks and coding.\r\n\r\nWe'll call the lock being shared by newblock and template (and anything else) MASTER\r\n\r\nThe notifier actually only needs to be a boolean global variable \"notify\" used for this \"priority\" handling of access to MASTER\r\n\r\nAnything else than needs MASTER and doesn't cause delays can completely ignore dealing with \"notify\"\r\nAnything else that wants priority of MASTER (in the same way newblock does) can also work exactly the same as the newblock changes\r\nAnything else that you want to be able to take the lock away from, works the same as the template changes\r\n\r\n1) the template code only need check \"notify\" being true/false when inside the MASTER lock, no other locking required AT ALL for access to \"notify\" since it is boolean - the **a** or **b** choice in 2) below will not change this\r\n\r\n2) the newblock code would depend on the threading access **a** or **b** to newblock (and it's cronies) but not affect the code in 1) above\r\n\r\n**a**) if there is ***only one thread*** accessing newblock (and anything else wanting \"priority\" access to MASTER), then they need only set \"notify\" to true, without any \"notify\" locking, when waiting on MASTER due to a trylock failure, and set it to false, without any \"notify\" locking, immediately after gaining the MASTER lock\r\n\r\n**b**) if there is multi thread access, there needs to be a separate lock VAR for access to a variable that counts the number of threads wanting priority, so the \"notify\" code would first take out/wait on the VAR lock, increment the var counter and also inside the VAR lock, set the \"notify\" boolean true. Once we have the MASTER lock we take out the VAR lock, then decrement the counter and if it is zero, we clear the boolean \"notify\" then release the VAR lock.\r\n\r\nWhere's the CPU usage issue in that design? There is none.\r\n\r\nNow, I'm not at all sure why I need to explain locking techniques to developers, but I am quite surprised that I need to.",
      "created_at" : "2015-11-19T03:38:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157942182",
      "id" : 157942182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T03:38:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157942182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "@kanoi Can you try to ease your tone a bit-- it can help aid communication, which is often a challenge online.",
      "created_at" : "2015-11-19T04:25:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157947210",
      "id" : 157947210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T04:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157947210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Of course it will effect performance to add more CPU cycles.\r\nAdding a single line of code called once, a=1; can also effect performance.\r\n\r\n> that will make performance even worse\r\n\r\nIt's affect on performance is negligible, if that.\r\nHowever it solves a rather poorly coded problem.\r\n\"worse\" is a pointless statement to make since it implies something false, but he can get out of that by pretending he didn't imply that the solution is problematic.\r\n\r\nI'd also add that no matter what performance boost you do to template, this change reduces divergence, so there's no reason to disparage it.\r\nIt's a specific solution to a specific problem and there's no black magic involved.",
      "created_at" : "2015-11-19T04:51:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7015#issuecomment-157950590",
      "id" : 157950590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7015",
      "updated_at" : "2015-11-19T04:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157950590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   }
]

[
   {
      "body" : "eh, use WriteLE64()?",
      "created_at" : "2015-11-23T02:54:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-158838927",
      "id" : 158838927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-23T02:55:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158838927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "~~LGTM, utACK~~\r\n\r\n**edit:** See @laanwj's comment\r\n\r\n**edit2:** Conflicted, utACK on the code",
      "created_at" : "2015-11-24T00:52:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159116495",
      "id" : 159116495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-27T03:31:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159116495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "This is on purpose! The \"hash\" is meant to be as fast as possible by using endian-dependent operations. E.g. within one program run it is stable and that is all that matters - it is not supposed to be used with anything that leaves the program.\r\nThis is mentioned, literally, in the comment:\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/uint256.h#L118\r\n\r\nEdit: as for the test failure, have you looked into why this causes a test failure? In principle a different hash function should not break the tests (or at least the correctness of the code), so this error may lie deeper.",
      "created_at" : "2015-11-24T07:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159188879",
      "id" : 159188879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-24T08:05:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159188879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The failed test case is addrman_new_collisions and addrman_tried_collisions: https://github.com/bitcoin/bitcoin/blob/master/src/test/addrman_tests.cpp#L141\r\n\r\nThe testcase make a hash collision, The value of \"hash1 % ADDRMAN_BUCKET_SIZE\" https://github.com/bitcoin/bitcoin/blob/master/src/addrman.cpp#L29 is always 28 when addr1 is 250.1.1.1 or addr1 is 250.1.1.4 when little endian, but its different in big endian, its the reason that test  failed.\r\n\r\n```\r\naddrman.Add(CAddress(addr1), source)\r\n    {\r\n    ...\r\n    int nUBucketPos = infoOld.GetBucketPosition(nKey, true, nUBucket);\r\n        --> {\r\n            uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << (fNew ? 'N' : 'K') << nBucket << GetKey()).GetHash().GetCheapHash();\r\n            return hash1 % ADDRMAN_BUCKET_SIZE; //this is same when little endian when addr1 is 250.1.1.1 or 250.1.1.4\r\n            }\r\n        ...\r\n    ClearNew(int nUBucket, int nUBucketPos)\r\n         -->{\r\n            if (vvNew[nUBucket][nUBucketPos] != -1)\r\n            ...\r\n            vvNew[nUBucket][nUBucketPos] = -1;\r\n            }\r\n    }\r\n\r\n```\r\n\r\nThe test  result in big endian should be consistent with the little endian.\r\n",
      "created_at" : "2015-11-25T07:32:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159525120",
      "id" : 159525120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-25T07:32:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159525120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/541066?v=3",
         "events_url" : "https://api.github.com/users/arowser/events{/privacy}",
         "followers_url" : "https://api.github.com/users/arowser/followers",
         "following_url" : "https://api.github.com/users/arowser/following{/other_user}",
         "gists_url" : "https://api.github.com/users/arowser/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/arowser",
         "id" : 541066,
         "login" : "arowser",
         "organizations_url" : "https://api.github.com/users/arowser/orgs",
         "received_events_url" : "https://api.github.com/users/arowser/received_events",
         "repos_url" : "https://api.github.com/users/arowser/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/arowser/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/arowser/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/arowser"
      }
   },
   {
      "body" : "Bleh, so the test relies very strongly on the exact outcome of the hash function (as the algorithm is \"randomized\" by that), even though both results are correct inthemselves?\r\n",
      "created_at" : "2015-11-25T07:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159525772",
      "id" : 159525772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-25T07:38:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159525772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "These addrman \"tests\" look pretty crappy in general... lots of checking internal implementation details rather than expected external behaviour. :/",
      "created_at" : "2015-11-25T07:41:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159526141",
      "id" : 159526141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-25T07:41:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159526141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "The addrman_new_collisions first call addrman.MakeDeterministic(), it set addrman.nKey is NULL, then the addrman addr placement in new table will be deterministic, it seems try to simulate hash collisions when addrman.add() .\r\n",
      "created_at" : "2015-11-25T08:02:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159528959",
      "id" : 159528959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-25T08:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159528959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/541066?v=3",
         "events_url" : "https://api.github.com/users/arowser/events{/privacy}",
         "followers_url" : "https://api.github.com/users/arowser/followers",
         "following_url" : "https://api.github.com/users/arowser/following{/other_user}",
         "gists_url" : "https://api.github.com/users/arowser/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/arowser",
         "id" : 541066,
         "login" : "arowser",
         "organizations_url" : "https://api.github.com/users/arowser/orgs",
         "received_events_url" : "https://api.github.com/users/arowser/received_events",
         "repos_url" : "https://api.github.com/users/arowser/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/arowser/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/arowser/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/arowser"
      }
   },
   {
      "body" : "The primary reason I'm protesting here is because GetCheapHash is used in `CSignatureCacheHasher`, which is a performance critical path, and also the only use beside `addrman`.\r\n\r\nIt is possible that adding a (conditional) byte swap has hardly impact on performance, but that would have to be benchmarked.\r\n",
      "created_at" : "2015-11-25T08:05:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159529381",
      "id" : 159529381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-25T08:07:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159529381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7078#discussion_r45837873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7078"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45837873"
         }
      },
      "body" : "Nit: what you want here is ReadLE64, not WriteLE64:\r\n```\r\nreturn ReadLE64(data);\r\n```\r\n",
      "commit_id" : "c434940e833cef5c31ce2df287bc51dc34ada790",
      "created_at" : "2015-11-25T08:06:30Z",
      "diff_hunk" : "@@ -119,12 +120,11 @@ class uint256 : public base_blob<256> {\n      * used when the contents are considered uniformly random. It is not appropriate\n      * when the value can easily be influenced from outside as e.g. a network adversary could\n      * provide values to trigger worst-case behavior.\n-     * @note The result of this function is not stable between little and big endian.\n      */\n     uint64_t GetCheapHash() const\n     {\n         uint64_t result;\n-        memcpy((void*)&result, (void*)data, 8);\n+        WriteLE64((unsigned char*)&result, *(uint64_t *)data);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#discussion_r45837873",
      "id" : 45837873,
      "original_commit_id" : "dc4815d79af9fc74e6a5cf2dae74cc033b4329aa",
      "original_position" : 18,
      "path" : "src/uint256.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7078",
      "updated_at" : "2015-11-25T08:20:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45837873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I doubt the performance penalty of ReadLE64 is going to matter really on any system.\r\n\r\nI liked the idea of having an unportable fast function, though, but being able to rely on behaviour does make testing easier too.\r\n\r\nUnsure.",
      "created_at" : "2015-11-26T20:53:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-159993015",
      "id" : 159993015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-26T20:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159993015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> I liked the idea of having an unportable fast function, though, but being able to rely on behaviour does make testing easier too.\r\n\r\nRight - in the case of addrman, the overhead is nothing compared to the double-SHA256, in all its uses:\r\n```\r\nsrc/addrman.cpp:    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << GetKey()).GetHash().GetCheapHash();\r\nsrc/addrman.cpp:    uint64_t hash2 = (CHashWriter(SER_GETHASH, 0) << nKey << GetGroup() << (hash1 % ADDRMAN_TRIED_BUCKETS_PER_GROUP)).GetHash().GetCheapHash();\r\nsrc/addrman.cpp:    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << GetGroup() << vchSourceGroupKey).GetHash().GetCheapHash();\r\nsrc/addrman.cpp:    uint64_t hash2 = (CHashWriter(SER_GETHASH, 0) << nKey << vchSourceGroupKey << (hash1 % ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP)).GetHash().GetCheapHash();\r\nsrc/addrman.cpp:    uint64_t hash1 = (CHashWriter(SER_GETHASH, 0) << nKey << (fNew ? 'N' : 'K') << nBucket << GetKey()).GetHash().GetCheapHash();\r\n```\r\n\r\nSo the two usecases of GetCheapHash are wildly different. In the case of sigcache every cycle counts, in the case of addrman we may just as well be using something else.\r\n\r\nE.g. could also remove the function from uint256 class and have tailored implementations at the call sites\r\n",
      "created_at" : "2015-11-27T09:48:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-160098262",
      "id" : 160098262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-27T09:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160098262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Even the signature cache now uses a SHA256 (though that should at some point be replaced with a fast non-cryptographic but highly collision-resistant hash function). A single byteswap (and only on BE platforms...) is not going to be measurable.",
      "created_at" : "2015-11-27T14:17:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-160148680",
      "id" : 160148680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-27T14:17:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160148680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "OK, just going ahead and merging this then",
      "created_at" : "2015-11-27T14:24:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7078#issuecomment-160149899",
      "id" : 160149899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7078",
      "updated_at" : "2015-11-27T14:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160149899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

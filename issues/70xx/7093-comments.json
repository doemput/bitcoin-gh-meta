[
   {
      "body" : "For some time there has been some party connecting to every node on the network (sometimes multiple times) and fetching the mempool over and over again at high speed.  This wastes a ton of node's bandwidth. These fetches are also an information leak, as the frequent polling bypasses the trickle logic (and I believe that is their actual motivation, based on other behavior by the same IP).\r\n\r\nJgarzik suggested removing the mempool command entirely, but it's used by some lite clients to display unconfirmed transactions that arrived before they connected. This change is more polite, preserving the usecase for lite wallets without making the call an attractive nuisance for third parties to waste a nodes' bandwidth with various information gathering attacks.\r\n\r\nWe should also look to see if we've created other trickle bypassing bugs (e.g. responding to a getdata on a tx we've never INVed), and consider limiting the maximum size of the mempool response. Now that we get the result back in feerate order, it would be pretty reasonable to return only the next couple blocks worth. Anyone know a reason we shouldn't?\r\n",
      "created_at" : "2015-11-24T22:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159419652",
      "id" : 159419652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-28T21:40:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159419652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45814457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45814457"
         }
      },
      "body" : "We've been using std::numeric_limits<int64_t>::max() elsewhere (also INT64_MAX seems to fail on arm?)",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T00:14:31Z",
      "diff_hunk" : "@@ -218,7 +218,7 @@ UniValue mempoolToJSON(bool fVerbose = false)\n     else\n     {\n         vector<uint256> vtxid;\n-        mempool.queryHashes(vtxid);\n+        mempool.queryHashes(vtxid, 0, INT64_MAX);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45814457",
      "id" : 45814457,
      "original_commit_id" : "f91fe537cb9bede93d4ec7cfc4263bee724bdddb",
      "original_position" : 5,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45814457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45815956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45815956"
         }
      },
      "body" : "I can see this confusing someone in the future (I had to stop and think about it).\r\n\r\nNeeds a comment like \"equivalent to int64_t rounded_time = (GetTime() - 16); rounded_time = rounded_time - (rounded_time  % 16) but faster\"",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T00:33:53Z",
      "diff_hunk" : "@@ -4617,26 +4617,31 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n     else if (strCommand == \"mempool\")\n     {\n-        LOCK2(cs_main, pfrom->cs_filter);\n \n-        std::vector<uint256> vtxid;\n-        mempool.queryHashes(vtxid);\n-        vector<CInv> vInv;\n-        BOOST_FOREACH(uint256& hash, vtxid) {\n-            CInv inv(MSG_TX, hash);\n-            CTransaction tx;\n-            bool fInMemPool = mempool.lookup(hash, tx);\n-            if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n-            if ((pfrom->pfilter && pfrom->pfilter->IsRelevantAndUpdate(tx)) ||\n-               (!pfrom->pfilter))\n-                vInv.push_back(inv);\n-            if (vInv.size() == MAX_INV_SZ) {\n-                pfrom->PushMessage(\"inv\", vInv);\n-                vInv.clear();\n+        //Put the mempool on a 16 to 32 second quantized time delay to suppress the arrival time information leak.\n+        int64_t rounded_time = (GetTime() - 16) & 0x7ffffffffffffff0LL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45815956",
      "id" : 45815956,
      "original_commit_id" : "f91fe537cb9bede93d4ec7cfc4263bee724bdddb",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45815956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Pulltester fails because of known inadvisable stuff it does with the mempool command. I'm not sure what to do about that.\r\n\r\nI updated the patch so that the filter commands would reset the starting time to zero, allowing re-filtering of already filtered stuff.  I did this after observing breadwallet making multiple mempool requests (after keys were added). The downside of this is that no leaves open a DOS vector when bloom filtering is enabled, but there are so many of those that I don't know if its worth worrying about.",
      "created_at" : "2015-11-25T05:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159494355",
      "id" : 159494355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T05:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159494355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> Pulltester fails because of known inadvisable stuff it does with the mempool command. I'm not sure what to do about that.\r\n\r\nWell, the proper fix would be that tests that want to probe the mempool should use the privileged RPC commands instead of the P2P message. Not sure how much work that would be in practice.\r\n",
      "created_at" : "2015-11-25T09:19:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159545133",
      "id" : 159545133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T09:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159545133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45844725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45844725"
         }
      },
      "body" : "I'm not sure I understand the rationale behind not using the index because it would leak information. We're still querying on mi->GetTime() so 'leaking' the same information?\r\n\r\nIf the order of the result is the problem, we could just sort the result by hash before returning.\r\n",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T09:28:10Z",
      "diff_hunk" : "@@ -677,14 +677,18 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n+void CTxMemPool::queryHashes(vector<uint256>& vtxid, int64_t mintime, int64_t maxtime)\n {\n     vtxid.clear();\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back(mi->GetTx().GetHash());\n+    //Doesn't use the time sorted index to avoid an information leak about when a transaction entered the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45844725",
      "id" : 45844725,
      "original_commit_id" : "4d9f311ab6dae7d458cb69adb0d414877f62d87e",
      "original_position" : 13,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45844725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45855189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45855189"
         }
      },
      "body" : "Right the order is the problem. It's true that it could sort, but thats another expensive operation, and the result being in fee sorted order is quite useful... e.g. if the peer wanted to grab just the top of the mempool.",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T11:16:57Z",
      "diff_hunk" : "@@ -677,14 +677,18 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n+void CTxMemPool::queryHashes(vector<uint256>& vtxid, int64_t mintime, int64_t maxtime)\n {\n     vtxid.clear();\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back(mi->GetTx().GetHash());\n+    //Doesn't use the time sorted index to avoid an information leak about when a transaction entered the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45855189",
      "id" : 45855189,
      "original_commit_id" : "4d9f311ab6dae7d458cb69adb0d414877f62d87e",
      "original_position" : 13,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45855189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45856118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45856118"
         }
      },
      "body" : "I'm not sure how a post-sort of the result would stack up against bypassing a linear scan when an index exists anyway. It depends on the input and output sizes.\r\nIn the least this compromise is more subtle than the comment makes it look.",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T11:29:35Z",
      "diff_hunk" : "@@ -677,14 +677,18 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n+void CTxMemPool::queryHashes(vector<uint256>& vtxid, int64_t mintime, int64_t maxtime)\n {\n     vtxid.clear();\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back(mi->GetTx().GetHash());\n+    //Doesn't use the time sorted index to avoid an information leak about when a transaction entered the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45856118",
      "id" : 45856118,
      "original_commit_id" : "4d9f311ab6dae7d458cb69adb0d414877f62d87e",
      "original_position" : 13,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45856118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45856324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45856324"
         }
      },
      "body" : "We can also use any of the other indexes we have, like the feerate one?",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T11:32:26Z",
      "diff_hunk" : "@@ -677,14 +677,18 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n+void CTxMemPool::queryHashes(vector<uint256>& vtxid, int64_t mintime, int64_t maxtime)\n {\n     vtxid.clear();\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back(mi->GetTx().GetHash());\n+    //Doesn't use the time sorted index to avoid an information leak about when a transaction entered the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45856324",
      "id" : 45856324,
      "original_commit_id" : "4d9f311ab6dae7d458cb69adb0d414877f62d87e",
      "original_position" : 13,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45856324",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45856378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45856378"
         }
      },
      "body" : "But the query is by time range - so wouldn't the time be the only index that helps speed this up?",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-11-25T11:33:15Z",
      "diff_hunk" : "@@ -677,14 +677,18 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n+void CTxMemPool::queryHashes(vector<uint256>& vtxid, int64_t mintime, int64_t maxtime)\n {\n     vtxid.clear();\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back(mi->GetTx().GetHash());\n+    //Doesn't use the time sorted index to avoid an information leak about when a transaction entered the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45856378",
      "id" : 45856378,
      "original_commit_id" : "4d9f311ab6dae7d458cb69adb0d414877f62d87e",
      "original_position" : 13,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-26T05:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45856378",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK",
      "created_at" : "2015-11-25T11:33:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159579078",
      "id" : 159579078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T11:33:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159579078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "So I think I have two mutually exclusive approaches to suggest: one is the current PR code that has a start and quantized end time.   The purpose of the start is to limit how much subsequent requests return.\r\n\r\nThe alternative is the quantized end time and a max depth, where it returns the top X of the feerate sorted mempool (but only txn which are before the end time).  This one might even worth will pull tester (if the delays are set suitably).\r\n\r\nI think the latter may be more resource friendly. The reason the two cannot be efficiently combined is that a tx might be not sent because it's too deep,  but then a block happens and everything moves up.. and then it won't be transmitted because it's too early.  No great harm, the duplicate removal is mostly to using lots of bandwidth and limiting would accomplish the same.\r\n\r\nPrimary downside of the latter is that if you're interested in some transaction deep in the mempool you won't learn about it until it's close to getting mined. Advantage is that it's simpler behavior that is easier to understand and explain, and also more resource friendly.",
      "created_at" : "2015-11-25T11:36:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159579496",
      "id" : 159579496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T11:36:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159579496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "A third option, would be to maintain a limited size set of responses sent already, and do the only top N of the mempool trick. That would combine both benefits (cpu benefit from considering only the top of the mempool, bandwidth benefit from not being willing to just send the same data multiple times). ",
      "created_at" : "2015-11-25T21:26:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159734884",
      "id" : 159734884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T21:26:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159734884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Switched to that third option, using setInventoryKnown and only considering the top 8192 entries in the mempool.",
      "created_at" : "2015-11-25T22:01:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159741376",
      "id" : 159741376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T22:01:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159741376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "TIL the default size of setInventoryKnown is only 1000.  It was 10000 before the default send buffer size was reduced.",
      "created_at" : "2015-11-26T01:29:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159774336",
      "id" : 159774336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-26T01:29:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159774336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "@dgenr8 ouch. I don't think it makes sense to link it to max_sendbuffer at all. I've unlinked it and set it to 50,000; so that we can at least take a whole inv on it. \r\n\r\n(I created another PR that changes it to a rolling bloomfilter; if that goes forward I'll rebase this on that.)",
      "created_at" : "2015-11-26T02:36:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159785877",
      "id" : 159785877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-26T06:58:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159785877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> @dgenr8 ouch. I don't think it makes sense to link it to max_sendbuffer at all. I've unlinked it and set it to 50,000; so that we can at least take a whole inv on it.\r\n\r\nFrom 1000 to 50,000 is quite an increase. How does that (approximately) affect worst-case memory usage per connected node?",
      "created_at" : "2015-11-26T09:50:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159861521",
      "id" : 159861521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-26T09:50:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159861521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj  See #7100 for my preferred solution (which I think adds about 400k per peer, though I've not measured yet)-- I just didn't want the 1000 messing up any testing here. ",
      "created_at" : "2015-11-26T10:11:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159867138",
      "id" : 159867138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-26T10:11:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159867138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Wouldn't this pull (designed to make access to mempool information more difficult) damage future fee markets?\r\n\r\nI thought one of the points of RBF was to make it so we could keep small blocks and just pay higher necessary fees to have a transaction included in a block. \r\n\r\nIf there are tens of thousands of transactions clamoring to get included in blocks, then those wallets could alter their transaction and rebroadcast it with a higher fee. \r\n\r\nIt's like a few water fountains in the desert that can only support 7 drinkers per second, but tens-of-thousands of people increasing their bids for access to the water before they die (I believe the current transaction time-out is 72 hours?). If they don't have enough to bid extra, then they didn't deserve access anyway. \r\n\r\nFor a proper fee market, shouldn't you be able to hear what other people are bidding for access at that moment?\r\n\r\nIf this pull goes through, wouldn't it make it difficult for services to determine the most up-to-date pricing information on what is a fee that is likely to get included in a block?\r\n\r\nYou can get information from the confirmed blocks, but sometimes the 10 minute average between blocks results in spans of over an hour between blocks. Without the real-time information, it won't be possible to adjust fees to try to be on top of the pile of transactions that'll confirm in the next block. ",
      "created_at" : "2015-11-30T20:25:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-160751523",
      "id" : 160751523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-30T20:25:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160751523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3002275?v=3",
         "events_url" : "https://api.github.com/users/DeftNerd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DeftNerd/followers",
         "following_url" : "https://api.github.com/users/DeftNerd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DeftNerd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DeftNerd",
         "id" : 3002275,
         "login" : "DeftNerd",
         "organizations_url" : "https://api.github.com/users/DeftNerd/orgs",
         "received_events_url" : "https://api.github.com/users/DeftNerd/received_events",
         "repos_url" : "https://api.github.com/users/DeftNerd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DeftNerd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DeftNerd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DeftNerd"
      }
   },
   {
      "body" : "Needs rebase, and to pass travis\r\n",
      "created_at" : "2015-12-04T08:46:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-161910094",
      "id" : 161910094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-12-04T08:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161910094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@DeftNerd  mempool message are not suitable for that and you'll hear them via you'll hear the transactions through the normal transfer mechanism. If anything this pull makes it more suitable since its not sending you megabytes of IDs a dozen blocks deep in the history that you've already received from it.  The delay from it is only a few seconds, which isn't that large compared to the operation of the network.\r\n\r\n@laanwj K. pull tester will be fun; the blocktester misuses the mempool command for operation checking",
      "created_at" : "2015-12-04T09:08:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-161914201",
      "id" : 161914201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-12-04T09:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161914201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Oh the blocktester... bleh I can't help you with that.\r\n@theuni Do you still remember how to change that beast?",
      "created_at" : "2015-12-04T09:17:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-161916714",
      "id" : 161916714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-12-04T09:18:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161916714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "We could also deprecate the blocktester if we feel that its task has been sufficiently surpassed by the new test framework. But I'm not sure of this (in most part because I've never had a good grasp on what it actually does, being external software and in Java for that matter).\r\n",
      "created_at" : "2015-12-04T09:32:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-161919475",
      "id" : 161919475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-12-04T09:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161919475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@BugTheBlueMatt Would it be possible to reduce the blocktester to only do consensus checks, and not mempool checks?",
      "created_at" : "2015-12-05T07:45:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-162159026",
      "id" : 162159026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-12-05T07:45:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162159026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r47375484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47375484"
         }
      },
      "body" : "If your intention is to add the top sorted txs by fee rate then you need to iterate over index 3.\r\n\r\nWe should keep in mind other uses (like this) that that index takes on (utxo cache priming, fee estimation) because the intention had been to change that index to be a sort of ancestor fee rate packages, which isn't necessarily what's wanted for the other use cases.\r\n",
      "commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "created_at" : "2015-12-11T16:41:03Z",
      "diff_hunk" : "@@ -677,14 +677,20 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n+void CTxMemPool::queryHashes(vector<uint256>& vtxid, size_t maxresults, int64_t maxtime)\n {\n     vtxid.clear();\n \n     LOCK(cs);\n     vtxid.reserve(mapTx.size());\n-    for (indexed_transaction_set::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n-        vtxid.push_back(mi->GetTx().GetHash());\n+    size_t count = 0;\n+    //Doesn't use the time sorted index to avoid an information leak about when a transaction entered the mempool.\n+    for (indexed_transaction_set::iterator mi = mapTx.begin(); count < maxresults && mi != mapTx.end(); ++mi) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r47375484",
      "id" : 47375484,
      "original_commit_id" : "8441e5a92d9327f1f23cd9a95115af3ae2339293",
      "original_position" : 15,
      "path" : "src/txmempool.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-12-11T16:41:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47375484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]

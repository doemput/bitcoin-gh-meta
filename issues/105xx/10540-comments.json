[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10540#discussion_r120388617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10540"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120388617"
         }
      },
      "body" : "Note for reviewers: This branch was impossible to hit since Salvage() was never called with fAggressive set to false",
      "commit_id" : "7a4e314d93ffb932d0a920a2368a02e0f6ed0930",
      "created_at" : "2017-06-06T15:09:12Z",
      "diff_hunk" : "@@ -289,27 +288,20 @@ static const char *HEADER_END = \"HEADER=END\";\n /* End of key/value data */\n static const char *DATA_END = \"DATA=END\";\n \n-bool CDBEnv::Salvage(const std::string& strFile, bool fAggressive, std::vector<CDBEnv::KeyValPair>& vResult)\n+bool CDBEnv::Salvage(const std::string& strFile, std::vector<CDBEnv::KeyValPair>& vResult)\n {\n     LOCK(cs_db);\n     assert(mapFileUseCount.count(strFile) == 0);\n \n     u_int32_t flags = DB_SALVAGE;\n-    if (fAggressive)\n-        flags |= DB_AGGRESSIVE;\n \n     std::stringstream strDump;\n \n     Db db(dbenv, 0);\n     int result = db.verify(strFile.c_str(), NULL, &strDump, flags);\n     if (result == DB_VERIFY_BAD) {\n         LogPrintf(\"CDBEnv::Salvage: Database salvage found errors, all data may not be recoverable.\\n\");\n-        if (!fAggressive) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#discussion_r120388617",
      "id" : 120388617,
      "original_commit_id" : "7a4e314d93ffb932d0a920a2368a02e0f6ed0930",
      "original_position" : 47,
      "path" : "src/wallet/db.cpp",
      "position" : 47,
      "pull_request_review_id" : 42346658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10540",
      "updated_at" : "2017-06-06T15:09:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120388617",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "`-salvagewallet` is meant to \"salvage\" - do everything it can - to get something usable from corrupted wallets.\r\nI think a better approach would be to try with non-aggressive first, and *only if that fails* try aggressively.\r\nBut disabling aggressive mode completely is throwing away the baby with the bathwater and neutering this mode completely.\r\n\r\n>  #8745 (bitcoin-wallet-tool) is the right place for this.\r\n\r\nFair enough, but in that case I'd argue removing `-salvagewallet` mode from bitcoind completely. After this pull it loses much of its utility.",
      "created_at" : "2017-06-06T15:18:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#issuecomment-306519754",
      "id" : 306519754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10540",
      "updated_at" : "2017-06-06T15:21:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306519754",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> neutering this mode completely.\r\n\r\nThat doesn't seem to be true from my testing. Running verify without DB_AGGRESSIVE does remove corruption from the wallet.dat file and make the balance available. Perhaps that's only because -salvagewallet is also causing a rescan to happen.\r\n\r\nDo you have experience of -salvagewallet recovering a wallet where running a non-aggressive verify would not have recovered it? I have evidence of -salvagewallet making the situation worse, but we don't have any directed tests for salvagewallet, so I haven't seen any examples of it making the situation better. The documentation \"the output will almost certainly require editing before being loaded into a database.\" makes me think that -salvagewallet is very unlikely to actually work.",
      "created_at" : "2017-06-06T15:43:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#issuecomment-306527901",
      "id" : 306527901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10540",
      "updated_at" : "2017-06-06T15:43:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306527901",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "I was going to make pretty much exactly the same post that Wladimir made:   Salvage is supposed to be used on a corrupted file-- thats the whole point, perhaps we should do both, if you think that we shouldn't be working on corrupted files there perhaps we should remove it. (I'd be pretty game to remove it: I think it's mistakenly used by users FAR too often even though it's something of a nuclear option.)\r\n\r\n> Do you have experience of -salvagewallet recovering a wallet where running a non-aggressive verify would not have recovered it?\r\n\r\nYes, I have had wallets that were corrupted that needed agressive mode to extract the keys.   I've also seen aggressive mode fail to read keys in totally non-corrupted wallets...\r\n\r\nKeys in the wallet are stored with this terrible der private key encoding that is obvious from orbit... if we had an extra tool it could also scan just looking for that encoding as https://bitcointalk.org/index.php?topic=25091.0 does-- which would allow recovering files that BDB won't do anything with too.\r\n\r\nBut in all cases the recovery should probably try all reading methods available and union them.\r\n",
      "created_at" : "2017-06-06T16:59:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#issuecomment-306550642",
      "id" : 306550642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10540",
      "updated_at" : "2017-06-06T16:59:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306550642",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> But in all cases the recovery should probably try all reading methods available and union them.\r\n\r\nExcellent comment. Completely agree with this. Would make sense for `-salvagewallet` to try various techniques, then combine the result.\r\n\r\n> Keys in the wallet are stored with this terrible der private key encoding that is obvious from orbit... \r\n\r\nYes, that would be a good additional strategy for non-encrypted keys.\r\n",
      "created_at" : "2017-06-07T11:19:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#issuecomment-306765396",
      "id" : 306765396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10540",
      "updated_at" : "2017-06-07T11:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306765396",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thanks for the great feedback @laanwj and @gmaxwell . Sounds like there are plenty of improvements we can make here. There are at least three recovery techniques we can use:\r\n- attempt to salvage non-aggressively\r\n- attempt to salvage aggressively\r\n- do a memory scan for DER encoded private keys in the .dat file.\r\n\r\nThose operations should be done by a separate tool and not loaded immediately into bitcoind, since the output could be worse than simply reading the .dat file, and can lead to loss of keys. I'll put this on hold until we have #8745 merged.",
      "created_at" : "2017-06-07T13:31:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#issuecomment-306795349",
      "id" : 306795349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10540",
      "updated_at" : "2017-06-07T13:31:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306795349",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery Sounds good to me",
      "created_at" : "2017-06-07T15:45:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10540#issuecomment-306836654",
      "id" : 306836654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10540",
      "updated_at" : "2017-06-07T15:45:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306836654",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

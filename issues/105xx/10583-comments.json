[
   {
      "body" : "Concept ACK. Makes a lot of sense to move the wallet-specific information to a separate RPC.",
      "created_at" : "2017-06-14T14:16:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-308444975",
      "id" : 308444975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-14T14:16:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308444975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Currently this duplicates a singificant amount of code. Would it be possible to abstract out the 'info' part of `getaddressinfo`, and then call that from `validateaddress` as well (temporarily, until removed)?",
      "created_at" : "2017-06-16T22:20:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-309147528",
      "id" : 309147528,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-16T22:20:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309147528",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Apparently, no, this is not possible. My attempt at doing so has resulted in a linker failure. Apparently there is some makefile problems with that. https://github.com/achow101/bitcoin/tree/getaddressinfo-broken is the branch with the duplication removed, but there is a linker error with `IsMine` calls. The full build error is here: https://gist.github.com/achow101/0f0e2d9e75d9d77132ab83a7605f2377",
      "created_at" : "2017-06-19T23:33:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-309602071",
      "id" : 309602071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-19T23:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309602071",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "On second thought, I think I fixed the problem.",
      "created_at" : "2017-06-20T00:04:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-309606565",
      "id" : 309606565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-20T00:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309606565",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "I believe you can do:\r\n\r\n```diff\r\n bitcoind_LDADD = \\\r\n   $(LIBBITCOIN_SERVER) \\\r\n+  $(LIBBITCOIN_WALLET) \\\r\n   $(LIBBITCOIN_COMMON) \\\r\n   $(LIBUNIVALUE) \\\r\n   $(LIBBITCOIN_UTIL) \\\r\n-  $(LIBBITCOIN_WALLET) \\\r\n   $(LIBBITCOIN_ZMQ) \\\r\n```\r\nin `Makefile.am`.\r\n\r\nThen the _ismine code can move from wallet to common (which I think belongs there, as signing code is already in common too).",
      "created_at" : "2017-06-20T20:16:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-309878387",
      "id" : 309878387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-20T20:16:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309878387",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I did that in my latest commit, but it seems that travis doesn't like it.",
      "created_at" : "2017-06-21T00:01:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-309924928",
      "id" : 309924928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-21T00:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309924928",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "body" : "> Then the _ismine code can move from wallet to common (which I think belongs there, as signing code is already in common too).\r\n\r\nFrom what I remember it was already moved in the other direction at some point for the same reason.\r\nThe circular dependency between `_wallet` and `_server` remains a problem.\r\nWe'll need to solve #7965 to get rid of it.\r\nUnfortunately, this is part of that...\r\n",
      "created_at" : "2017-06-24T14:21:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-310841433",
      "id" : 310841433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-06-24T14:21:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310841433",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "needs rebase",
      "created_at" : "2017-08-15T14:35:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-322486237",
      "id" : 322486237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-08-15T14:35:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322486237",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "rebased",
      "created_at" : "2017-08-15T21:27:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-322594812",
      "id" : 322594812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-08-15T21:27:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322594812",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. This PR is currently difficult to review because there are broken intermediate commits, commits which reverse previous commits, random style changes in unconnected commits, etc. Are you able to tidy this up to make it easier to review? If not, I'm happy to take this PR and tidy it up.\r\n\r\nMy high-level feedback is that we should hide the deprecated fields in `validateaddress` behind a command-line argument (similar to #11031). The `ismine` move to libbitcoin_common seems fine to me.",
      "created_at" : "2017-09-01T16:07:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-326620374",
      "id" : 326620374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-01T16:07:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326620374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and tidied up",
      "created_at" : "2017-09-05T17:39:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-327250389",
      "id" : 327250389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-05T17:39:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327250389",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis is failing on invalid scripted diff check.",
      "created_at" : "2017-09-05T20:29:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-327293814",
      "id" : 327293814,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-05T20:29:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327293814",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137109820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137109820"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand this. Why do we swallow the `RPC_METHOD_NOT_FOUND` error?\r\n\r\nCan you add a comment explaining this?",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T20:48:32Z",
      "diff_hunk" : "@@ -214,38 +166,24 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        CTxDestination dest = address.Get();\n-        std::string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-\n-        CScript scriptPubKey = GetScriptForDestination(dest);\n-        ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n-\n #ifdef ENABLE_WALLET\n-        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n-        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n-        ret.pushKVs(detail);\n-        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n-            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n-        }\n-        CKeyID keyID;\n-        if (pwallet) {\n-            const auto& meta = pwallet->mapKeyMetadata;\n-            auto it = address.GetKeyID(keyID) ? meta.find(keyID) : meta.end();\n-            if (it == meta.end()) {\n-                it = meta.find(CScriptID(scriptPubKey));\n-            }\n-            if (it != meta.end()) {\n-                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n-                if (!it->second.hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n-                }\n+        try {\n+            ret.pushKVs(getaddressinfo(request));\n+        } catch (UniValue e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137109820",
      "id" : 137109820,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 142,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 60735376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137109820",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137123440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137123440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: braces for if block",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T21:46:43Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID &keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID &scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses)\n+                a.push_back(CBitcoinAddress(addr).ToString());\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137123440",
      "id" : 137123440,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 60735376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137123440",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137123684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137123684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Help text seems to be missing result fields, including at least `script`, `hex`, `addresses`, `sigsrequired`.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T21:48:05Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID &keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID &scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses)\n+                a.push_back(CBitcoinAddress(addr).ToString());\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"     (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137123684",
      "id" : 137123684,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 67,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 60735376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137123684",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137138946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137138946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, `*` and `&` next to type. In this case also const: `const CWallet* wallet`.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T23:20:48Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137138946",
      "id" : 137138946,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 60767583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137138946",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137138971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137138971"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That is swallowed in the event that `-disablewallet` is used; `getaddressinfo` will return `RPC_METHOD_NOT_FOUND` but `validateaddress` should still work and validate addresses.\r\n\r\nI will add a comment.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T23:21:01Z",
      "diff_hunk" : "@@ -214,38 +166,24 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        CTxDestination dest = address.Get();\n-        std::string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-\n-        CScript scriptPubKey = GetScriptForDestination(dest);\n-        ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n-\n #ifdef ENABLE_WALLET\n-        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n-        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n-        ret.pushKVs(detail);\n-        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n-            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n-        }\n-        CKeyID keyID;\n-        if (pwallet) {\n-            const auto& meta = pwallet->mapKeyMetadata;\n-            auto it = address.GetKeyID(keyID) ? meta.find(keyID) : meta.end();\n-            if (it == meta.end()) {\n-                it = meta.find(CScriptID(scriptPubKey));\n-            }\n-            if (it != meta.end()) {\n-                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n-                if (!it->second.hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n-                }\n+        try {\n+            ret.pushKVs(getaddressinfo(request));\n+        } catch (UniValue e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137138971",
      "id" : 137138971,
      "in_reply_to_id" : 137109820,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 142,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 60767610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137138971",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137139050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137139050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, expand to multiline?",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T23:21:39Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137139050",
      "id" : 137139050,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 60767583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137139050",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137141965"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137141965"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In that case, I think it's preferable to test for wallet existence before calling `getaddressinfo`. The following should do it:\r\n\r\n```\r\n        if (!::vpwallets.empty()) {\r\n            ret.pushKVs(getaddressinfo(request));\r\n        }\r\n```",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-05T23:45:18Z",
      "diff_hunk" : "@@ -214,38 +166,24 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        CTxDestination dest = address.Get();\n-        std::string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-\n-        CScript scriptPubKey = GetScriptForDestination(dest);\n-        ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n-\n #ifdef ENABLE_WALLET\n-        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n-        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n-        ret.pushKVs(detail);\n-        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n-            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n-        }\n-        CKeyID keyID;\n-        if (pwallet) {\n-            const auto& meta = pwallet->mapKeyMetadata;\n-            auto it = address.GetKeyID(keyID) ? meta.find(keyID) : meta.end();\n-            if (it == meta.end()) {\n-                it = meta.find(CScriptID(scriptPubKey));\n-            }\n-            if (it != meta.end()) {\n-                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n-                if (!it->second.hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n-                }\n+        try {\n+            ret.pushKVs(getaddressinfo(request));\n+        } catch (UniValue e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137141965",
      "id" : 137141965,
      "in_reply_to_id" : 137109820,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 142,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 60771050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137141965",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137145931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137145931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-06T00:16:32Z",
      "diff_hunk" : "@@ -214,38 +166,24 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        CTxDestination dest = address.Get();\n-        std::string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-\n-        CScript scriptPubKey = GetScriptForDestination(dest);\n-        ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n-\n #ifdef ENABLE_WALLET\n-        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n-        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n-        ret.pushKVs(detail);\n-        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n-            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n-        }\n-        CKeyID keyID;\n-        if (pwallet) {\n-            const auto& meta = pwallet->mapKeyMetadata;\n-            auto it = address.GetKeyID(keyID) ? meta.find(keyID) : meta.end();\n-            if (it == meta.end()) {\n-                it = meta.find(CScriptID(scriptPubKey));\n-            }\n-            if (it != meta.end()) {\n-                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n-                if (!it->second.hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n-                }\n+        try {\n+            ret.pushKVs(getaddressinfo(request));\n+        } catch (UniValue e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r137145931",
      "id" : 137145931,
      "in_reply_to_id" : 137109820,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 142,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 60775360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137145931",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139582688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139582688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Forgot to say that this was addressed.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T02:04:06Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID &keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID &scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses)\n+                a.push_back(CBitcoinAddress(addr).ToString());\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"     (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139582688",
      "id" : 139582688,
      "in_reply_to_id" : 137123684,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 67,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63534575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139582688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139582851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139582851"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T02:06:06Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139582851",
      "id" : 139582851,
      "in_reply_to_id" : 137138946,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63534767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139582851",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139582861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139582861"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that is necessary",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T02:06:12Z",
      "diff_hunk" : "@@ -3169,6 +3170,114 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139582861",
      "id" : 139582861,
      "in_reply_to_id" : 137139050,
      "original_commit_id" : "7c3e7ac6cdc58b95f0d9f3a3b8b64e829fa7a5e7",
      "original_position" : 19,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63534780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139582861",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2017-09-19T14:58:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-330567261",
      "id" : 330567261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-19T14:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330567261",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139721314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139721314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: indentation for this if block",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:06:06Z",
      "diff_hunk" : "@@ -127,37 +78,21 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n+\n+#ifdef ENABLE_WALLET\n+        if (!::vpwallets.empty()) {\n+            ret.pushKVs(getaddressinfo(request));\n+        }\n+#endif\n+        if (ret[\"address\"].isNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139721314",
      "id" : 139721314,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 118,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139721314",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139721667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139721667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: braces",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:07:13Z",
      "diff_hunk" : "@@ -3180,6 +3181,123 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139721667",
      "id" : 139721667,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139721667",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139722759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139722759"
         }
      },
      "author_association" : "MEMBER",
      "body" : "micronit: not in same ordering as help text (either for `getaddressinfo` or `validateaddress`. Suggest you move this line below `ret.push_back(Pair(\"iswatchonly\", ...`",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:10:45Z",
      "diff_hunk" : "@@ -3180,6 +3181,123 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"     (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,        (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    std::string currentAddress = EncodeDestination(dest);\n+    ret.push_back(Pair(\"address\", currentAddress));\n+\n+    CScript scriptPubKey = GetScriptForDestination(dest);\n+    ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));;\n+    \n+    ret.push_back(Pair(\"isscript\", scriptPubKey.IsPayToScriptHash()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139722759",
      "id" : 139722759,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 105,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139722759",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: help text alignment",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:18:16Z",
      "diff_hunk" : "@@ -3180,6 +3181,123 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"     (string, required) The bitcoin address to get the information of.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725053",
      "id" : 139725053,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 67,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725053",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: help text alignment",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:18:19Z",
      "diff_hunk" : "@@ -3180,6 +3181,123 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"     (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725072",
      "id" : 139725072,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 70,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725072",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: help text alignment",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:18:29Z",
      "diff_hunk" : "@@ -3180,6 +3181,123 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"     (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,        (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725126",
      "id" : 139725126,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 85,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725126",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: help text alignment",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:18:36Z",
      "diff_hunk" : "@@ -31,94 +31,45 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"Parts of this command have been deprecated and moved to getaddressinfo\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725166",
      "id" : 139725166,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 57,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725166",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725188"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: help text alignment",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:18:42Z",
      "diff_hunk" : "@@ -31,94 +31,45 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"Parts of this command have been deprecated and moved to getaddressinfo\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n             \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725188",
      "id" : 139725188,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 61,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725188",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725220"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: help text alignment",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-19T15:18:48Z",
      "diff_hunk" : "@@ -31,94 +31,45 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"Parts of this command have been deprecated and moved to getaddressinfo\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n             \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) DEPRECATED. If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) DEPRECATED. If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) DEPRECATED. If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) DEPRECATED. The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) DEPRECATED. The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) DEPRECATED. Array of addresses associated with the known redeemscript\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) DEPRECATED. Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) DEPRECATED. The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) DEPRECATED. If the address is compressed\\n\"\n             \"  \\\"account\\\" : \\\"account\\\"         (string) DEPRECATED. The account associated with the address, \\\"\\\" is the default account\\n\"\n-            \"  \\\"timestamp\\\" : timestamp,        (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,        (number, optional) DEPRECATED. The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r139725220",
      "id" : 139725220,
      "original_commit_id" : "098cebb7098faf4017694d5b82dd5745a0df5e2b",
      "original_position" : 89,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 63693713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139725220",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "extended test suite passes. Travis is failing the scripted diff check.",
      "created_at" : "2017-09-19T17:34:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-330614398",
      "id" : 330614398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-19T17:34:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330614398",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed most of @jnewbery's comments except for the deprecation thing",
      "created_at" : "2017-09-19T18:25:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-330628642",
      "id" : 330628642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-19T18:25:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330628642",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for addressing the nits.\r\n\r\nMy preference is that this doesn't get merged without some kind of phased deprecation. I'm happy to provide a commit to cherry pick if that would help.",
      "created_at" : "2017-09-19T18:40:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-330632633",
      "id" : 330632633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-19T18:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330632633",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My preference is that this doesn't get merged without some kind of phased deprecation. I'm happy to provide a commit to cherry pick if that would help.\r\n\r\nI'm planning on making a generic deprecation interface type thing that I will then rebase this and some other stuff on top of.",
      "created_at" : "2017-09-19T18:45:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-330634127",
      "id" : 330634127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-19T18:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330634127",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased onto #11031 and moved the deprecated parts behind `IsDeprecatedRPCEnabled`. I wasn't sure what to do with the help text so I just left it as is (except for info about using `-deprecatedrpc`).",
      "created_at" : "2017-09-26T19:00:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332301401",
      "id" : 332301401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-26T19:00:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332301401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141159789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141159789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggestion only: Perhaps start this with `DEPRECATION WARNING:` to draw attention. It might be easy to miss this warning.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T19:30:34Z",
      "diff_hunk" : "@@ -31,94 +31,46 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"Parts of this command have been deprecated and moved to getaddressinfo. To have those deprecated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141159789",
      "id" : 141159789,
      "original_commit_id" : "c288c958e96d9c2c856abcde901518f0de9fd3ce",
      "original_position" : 55,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 65333969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141159789",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141178431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141178431"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T20:43:14Z",
      "diff_hunk" : "@@ -31,94 +31,46 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"Parts of this command have been deprecated and moved to getaddressinfo. To have those deprecated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141178431",
      "id" : 141178431,
      "in_reply_to_id" : 141159789,
      "original_commit_id" : "c288c958e96d9c2c856abcde901518f0de9fd3ce",
      "original_position" : 55,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 65355128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141178431",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery I added a super basic test to check that `-deprecatedrpc=validateaddress` changes what is returned.",
      "created_at" : "2017-09-26T20:44:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332329818",
      "id" : 332329818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-26T20:44:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332329818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141183707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141183707"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comply with #11386 here and below? ",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:02:47Z",
      "diff_hunk" : "@@ -127,37 +79,21 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        std::string currentAddress = EncodeDestination(dest);\n-        ret.push_back(Pair(\"address\", currentAddress));\n-\n-        CScript scriptPubKey = GetScriptForDestination(dest);\n-        ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n \n #ifdef ENABLE_WALLET\n-        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n-        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n-        ret.pushKVs(detail);\n-        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n-            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n-        }\n-        if (pwallet) {\n-            const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n-            if (it == meta.end()) {\n-                it = meta.find(CScriptID(scriptPubKey));\n-            }\n-            if (it != meta.end()) {\n-                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n-                if (!it->second.hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n-                }\n-            }\n+        if (!::vpwallets.empty() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n+            ret.pushKVs(getaddressinfo(request));\n         }\n #endif\n+        if (ret[\"address\"].isNull()) {\n+            std::string currentAddress = EncodeDestination(dest);\n+            ret.push_back(Pair(\"address\", currentAddress));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141183707",
      "id" : 141183707,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 150,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 65360494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141183707",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141190024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141190024"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why?",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:27:58Z",
      "diff_hunk" : "@@ -10,6 +10,7 @@\n class CRPCTable;\n class CWallet;\n class JSONRPCRequest;\n+class UniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141190024",
      "id" : 141190024,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 4,
      "path" : "src/wallet/rpcwallet.h",
      "position" : 4,
      "pull_request_review_id" : 65360494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141190024",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191046"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`bool(mine & ISMINE_SPENDABLE)`? Same below.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:32:54Z",
      "diff_hunk" : "@@ -3180,6 +3181,125 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    std::string currentAddress = EncodeDestination(dest);\n+    ret.push_back(Pair(\"address\", currentAddress));\n+\n+    CScript scriptPubKey = GetScriptForDestination(dest);\n+    ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));;\n+\n+    isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n+    ret.push_back(Pair(\"ismine\", (mine & ISMINE_SPENDABLE) ? true : false));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191046",
      "id" : 141191046,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 107,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65360494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191046",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "assert is a statement, not a function:\r\n\r\n```python\r\nassert \"ismine\" not in dep_validate_address\r\n```\r\n\r\nsame for assert below.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:34:17Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of RPC calls.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_jsonrpc\n+\n+class DeprecatedRpcTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        self.extra_args = [[], [\"-deprecatedrpc=estimatefee\", \"-deprecatedrpc=validateaddress\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"estimatefee: Shows deprecated message\")\n+        assert_raises_jsonrpc(-32, 'estimatefee is deprecated', self.nodes[0].estimatefee, 1)\n+\n+        self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n+        self.nodes[1].estimatefee(1)\n+\n+        # test validateaddress deprecation\n+        dep_validate_address = self.nodes[0].validateaddress(\"mnvGjUy3NMj67yJ6gkK5o9e5RS33Z2Vqcu\")\n+        assert(\"ismine\" not in dep_validate_address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191346",
      "id" : 141191346,
      "original_commit_id" : "df53fd1c4db7f6491621f300cc926a15f9be4807",
      "original_position" : 24,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65369698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191346",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestion: change this to a `self.log.info()`",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:34:40Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of RPC calls.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_jsonrpc\n+\n+class DeprecatedRpcTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        self.extra_args = [[], [\"-deprecatedrpc=estimatefee\", \"-deprecatedrpc=validateaddress\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"estimatefee: Shows deprecated message\")\n+        assert_raises_jsonrpc(-32, 'estimatefee is deprecated', self.nodes[0].estimatefee, 1)\n+\n+        self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n+        self.nodes[1].estimatefee(1)\n+\n+        # test validateaddress deprecation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191420",
      "id" : 141191420,
      "original_commit_id" : "df53fd1c4db7f6491621f300cc926a15f9be4807",
      "original_position" : 22,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65369698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191420",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps declare this address as a variable above (with comment) to avoid having magic strings in the RPC method call.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:36:04Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of RPC calls.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_jsonrpc\n+\n+class DeprecatedRpcTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        self.extra_args = [[], [\"-deprecatedrpc=estimatefee\", \"-deprecatedrpc=validateaddress\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"estimatefee: Shows deprecated message\")\n+        assert_raises_jsonrpc(-32, 'estimatefee is deprecated', self.nodes[0].estimatefee, 1)\n+\n+        self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n+        self.nodes[1].estimatefee(1)\n+\n+        # test validateaddress deprecation\n+        dep_validate_address = self.nodes[0].validateaddress(\"mnvGjUy3NMj67yJ6gkK5o9e5RS33Z2Vqcu\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191733",
      "id" : 141191733,
      "original_commit_id" : "df53fd1c4db7f6491621f300cc926a15f9be4807",
      "original_position" : 23,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65369698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191733",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191736"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it enough to check `ismine` key? Maybe merge `nodes[0].validateaddress` with `nodes[0].getaddressinfo` and that should contain `nodes[1].validateaddress`?",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T21:36:06Z",
      "diff_hunk" : "@@ -19,5 +19,11 @@ def run_test(self):\n         self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n         self.nodes[1].estimatefee(1)\n \n+        # test validateaddress deprecation\n+        dep_validate_address = self.nodes[0].validateaddress(\"mnvGjUy3NMj67yJ6gkK5o9e5RS33Z2Vqcu\")\n+        assert(\"ismine\" not in dep_validate_address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141191736",
      "id" : 141191736,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 15,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65360494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141191736",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198491"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's enough to determine that they are returning different things as one should have `ismine` and the other not.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T22:09:31Z",
      "diff_hunk" : "@@ -19,5 +19,11 @@ def run_test(self):\n         self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n         self.nodes[1].estimatefee(1)\n \n+        # test validateaddress deprecation\n+        dep_validate_address = self.nodes[0].validateaddress(\"mnvGjUy3NMj67yJ6gkK5o9e5RS33Z2Vqcu\")\n+        assert(\"ismine\" not in dep_validate_address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198491",
      "id" : 141198491,
      "in_reply_to_id" : 141191736,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 15,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65377732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198691"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`UniValue` is needed below for `UniValue getaddressinfo...`",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T22:10:34Z",
      "diff_hunk" : "@@ -10,6 +10,7 @@\n class CRPCTable;\n class CWallet;\n class JSONRPCRequest;\n+class UniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198691",
      "id" : 141198691,
      "in_reply_to_id" : 141190024,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 4,
      "path" : "src/wallet/rpcwallet.h",
      "position" : 4,
      "pull_request_review_id" : 65377960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198691",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198897"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T22:11:42Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of RPC calls.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_jsonrpc\n+\n+class DeprecatedRpcTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        self.extra_args = [[], [\"-deprecatedrpc=estimatefee\", \"-deprecatedrpc=validateaddress\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"estimatefee: Shows deprecated message\")\n+        assert_raises_jsonrpc(-32, 'estimatefee is deprecated', self.nodes[0].estimatefee, 1)\n+\n+        self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n+        self.nodes[1].estimatefee(1)\n+\n+        # test validateaddress deprecation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198897",
      "id" : 141198897,
      "in_reply_to_id" : 141191420,
      "original_commit_id" : "df53fd1c4db7f6491621f300cc926a15f9be4807",
      "original_position" : 22,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65378191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198897",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T22:11:48Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of RPC calls.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_jsonrpc\n+\n+class DeprecatedRpcTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        self.extra_args = [[], [\"-deprecatedrpc=estimatefee\", \"-deprecatedrpc=validateaddress\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"estimatefee: Shows deprecated message\")\n+        assert_raises_jsonrpc(-32, 'estimatefee is deprecated', self.nodes[0].estimatefee, 1)\n+\n+        self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n+        self.nodes[1].estimatefee(1)\n+\n+        # test validateaddress deprecation\n+        dep_validate_address = self.nodes[0].validateaddress(\"mnvGjUy3NMj67yJ6gkK5o9e5RS33Z2Vqcu\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198914",
      "id" : 141198914,
      "in_reply_to_id" : 141191733,
      "original_commit_id" : "df53fd1c4db7f6491621f300cc926a15f9be4807",
      "original_position" : 23,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65378211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198914",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198923"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T22:11:52Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of RPC calls.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_jsonrpc\n+\n+class DeprecatedRpcTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        self.extra_args = [[], [\"-deprecatedrpc=estimatefee\", \"-deprecatedrpc=validateaddress\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"estimatefee: Shows deprecated message\")\n+        assert_raises_jsonrpc(-32, 'estimatefee is deprecated', self.nodes[0].estimatefee, 1)\n+\n+        self.log.info(\"Using -deprecatedrpc=estimatefee bypasses the error\")\n+        self.nodes[1].estimatefee(1)\n+\n+        # test validateaddress deprecation\n+        dep_validate_address = self.nodes[0].validateaddress(\"mnvGjUy3NMj67yJ6gkK5o9e5RS33Z2Vqcu\")\n+        assert(\"ismine\" not in dep_validate_address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198923",
      "id" : 141198923,
      "in_reply_to_id" : 141191346,
      "original_commit_id" : "df53fd1c4db7f6491621f300cc926a15f9be4807",
      "original_position" : 24,
      "path" : "test/functional/deprecated_rpc.py",
      "position" : null,
      "pull_request_review_id" : 65378223,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198923",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-26T22:11:56Z",
      "diff_hunk" : "@@ -127,37 +79,21 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        std::string currentAddress = EncodeDestination(dest);\n-        ret.push_back(Pair(\"address\", currentAddress));\n-\n-        CScript scriptPubKey = GetScriptForDestination(dest);\n-        ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n \n #ifdef ENABLE_WALLET\n-        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n-        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n-        ret.pushKVs(detail);\n-        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n-            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n-        }\n-        if (pwallet) {\n-            const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n-            if (it == meta.end()) {\n-                it = meta.find(CScriptID(scriptPubKey));\n-            }\n-            if (it != meta.end()) {\n-                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n-                if (!it->second.hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n-                }\n-            }\n+        if (!::vpwallets.empty() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n+            ret.pushKVs(getaddressinfo(request));\n         }\n #endif\n+        if (ret[\"address\"].isNull()) {\n+            std::string currentAddress = EncodeDestination(dest);\n+            ret.push_back(Pair(\"address\", currentAddress));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141198934",
      "id" : 141198934,
      "in_reply_to_id" : 141183707,
      "original_commit_id" : "8d5d4cf4c3077e8f3269fab3b98da7413e100081",
      "original_position" : 150,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 65378231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141198934",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The changed commit broke the scripted-diff checker.\r\n\r\nI noticed. I believe that should be fixed now as I changed the script to exclude `deprecatedrpc.py`.",
      "created_at" : "2017-09-26T22:12:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332351374",
      "id" : 332351374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-26T22:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332351374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased onto master",
      "created_at" : "2017-09-27T15:26:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332559385",
      "id" : 332559385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-27T15:26:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332559385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141459915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141459915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this warning should also say something like \"Clients must transition to using getaddressinfo to access this information before upgrading to v0.17\"",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-27T20:33:16Z",
      "diff_hunk" : "@@ -31,94 +31,46 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141459915",
      "id" : 141459915,
      "original_commit_id" : "fa4eea7385aa575a779d033dbeb97af01beddc44",
      "original_position" : 56,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 65677636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141459915",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\n> throw a RPC_INVALID_ADDRESS_OR_KEY error\r\n\r\nI like this option.",
      "created_at" : "2017-09-27T23:48:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332687166",
      "id" : 332687166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-27T23:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332687166",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> throw a RPC_INVALID_ADDRESS_OR_KEY error\r\n\r\nDid that. I didn't realize that I hadn't added that error there.",
      "created_at" : "2017-09-28T00:04:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332689397",
      "id" : 332689397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-28T00:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332689397",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141497692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141497692"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-28T00:04:09Z",
      "diff_hunk" : "@@ -31,94 +31,46 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141497692",
      "id" : 141497692,
      "in_reply_to_id" : 141459915,
      "original_commit_id" : "fa4eea7385aa575a779d033dbeb97af01beddc44",
      "original_position" : 56,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 65721370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141497692",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "created_at" : "2017-09-28T20:38:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-332957004",
      "id" : 332957004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-28T20:38:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332957004",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141732840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141732840"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing test.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-28T20:51:25Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+\n+    // Make sure the destination is valid\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141732840",
      "id" : 141732840,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 103,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 149,
      "pull_request_review_id" : 65995711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141732840",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141733003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141733003"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`pwallet` is valid because of `EnsureWalletIsAvailable` above.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-28T20:52:14Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+\n+    // Make sure the destination is valid\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n+    }\n+\n+    std::string currentAddress = EncodeDestination(dest);\n+    ret.pushKV(\"address\", currentAddress);\n+\n+    CScript scriptPubKey = GetScriptForDestination(dest);\n+    ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n+\n+    isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141733003",
      "id" : 141733003,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 112,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65995711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141733003",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141733153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141733153"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, fix indentation.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-28T20:52:50Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141733153",
      "id" : 141733153,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 59,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65995711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141733153",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141733225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141733225"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, add `{` or single line.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-28T20:53:10Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141733225",
      "id" : 141733225,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 48,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 50,
      "pull_request_review_id" : 65995711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141733225",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141768902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141768902"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Grammar here: \"To have those deprecated information shown\" -> \"To have those deprecated fields shown\"",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T00:48:42Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141768902",
      "id" : 141768902,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 57,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 66035965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141768902",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141769888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141769888"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While you're at it, can you clarify the docs on this? Its the redeemScript type, afaict, not the address type...Maybe even move the redeemScript-specific stuff to a separate object? like redeemScript: { script:, hex: addresses: []}...",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T00:59:41Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141769888",
      "id" : 141769888,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 76,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66035965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141769888",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141770679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141770679"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I do not believe you need cs_main here anymore.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T01:08:20Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) DEPRECATED. If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) DEPRECATED. If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) DEPRECATED. If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) DEPRECATED. The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) DEPRECATED. The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) DEPRECATED. Array of addresses associated with the known redeemscript\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) DEPRECATED. Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) DEPRECATED. The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) DEPRECATED. If the address is compressed\\n\"\n             \"  \\\"account\\\" : \\\"account\\\"         (string) DEPRECATED. The account associated with the address, \\\"\\\" is the default account\\n\"\n-            \"  \\\"timestamp\\\" : timestamp,        (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) DEPRECATED. The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) DEPRECATED. The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) DEPRECATED. The Hash160 of the HD master pubkey\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n             + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n         );\n \n-#ifdef ENABLE_WALLET\n-    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n-\n-    LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : nullptr);\n-#else\n     LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141770679",
      "id" : 141770679,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 107,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 66035965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141770679",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141770695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141770695"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe you only need cs_wallet here.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T01:08:33Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141770695",
      "id" : 141770695,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 96,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66035965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141770695",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141771632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141771632"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why change the ordering here? UniValue returns things ordered in insertion-order (and hence bitcoin-cli and some JSON libraries will print it in that order) so might as well just leave it...having deprecation warnings interspersed is fine, they'll all go away soon enough :)",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T01:19:19Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) DEPRECATED. If the address is yours or not\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141771632",
      "id" : 141771632,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 73,
      "path" : "src/rpc/misc.cpp",
      "position" : 116,
      "pull_request_review_id" : 66035965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141771632",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141772004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141772004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You removed this from the output, but not the docs. For now I think we should leave the account display here, primarily just because we will want to keep it identical but just rename it label when we do accounts->label conversion.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T01:23:36Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) DEPRECATED. If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) DEPRECATED. If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) DEPRECATED. If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) DEPRECATED. The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) DEPRECATED. The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) DEPRECATED. Array of addresses associated with the known redeemscript\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) DEPRECATED. Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) DEPRECATED. The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) DEPRECATED. If the address is compressed\\n\"\n             \"  \\\"account\\\" : \\\"account\\\"         (string) DEPRECATED. The account associated with the address, \\\"\\\" is the default account\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141772004",
      "id" : 141772004,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 89,
      "path" : "src/rpc/misc.cpp",
      "position" : 135,
      "pull_request_review_id" : 66035965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141772004",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141777940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141777940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The idea was to group the deprecated things together. The ordering is still correct though.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:10:07Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) DEPRECATED. If the address is yours or not\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141777940",
      "id" : 141777940,
      "in_reply_to_id" : 141771632,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 73,
      "path" : "src/rpc/misc.cpp",
      "position" : 116,
      "pull_request_review_id" : 66045887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141777940",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141779984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141779984"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:35:02Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141779984",
      "id" : 141779984,
      "in_reply_to_id" : 141733225,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 48,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 50,
      "pull_request_review_id" : 66048160,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141779984",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141779993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141779993"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:35:05Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141779993",
      "id" : 141779993,
      "in_reply_to_id" : 141733153,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 59,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66048170,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141779993",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a brief test for `getaddressinfo` in `wallet.py`",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:35:22Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+\n+    // Make sure the destination is valid\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780010",
      "id" : 141780010,
      "in_reply_to_id" : 141732840,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 103,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 149,
      "pull_request_review_id" : 66048195,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780010",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780023"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed the `pwallet` check.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:35:34Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+\n+    // Make sure the destination is valid\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n+    }\n+\n+    std::string currentAddress = EncodeDestination(dest);\n+    ret.pushKV(\"address\", currentAddress);\n+\n+    CScript scriptPubKey = GetScriptForDestination(dest);\n+    ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n+\n+    isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780023",
      "id" : 141780023,
      "in_reply_to_id" : 141733003,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 112,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66048213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780023",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:35:38Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780033",
      "id" : 141780033,
      "in_reply_to_id" : 141768902,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 57,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 66048222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780033",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780047"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added the accounts field back to the output.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:35:49Z",
      "diff_hunk" : "@@ -31,94 +31,47 @@\n \n #include <univalue.h>\n \n-#ifdef ENABLE_WALLET\n-class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n-{\n-public:\n-    CWallet * const pwallet;\n-\n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n-\n-    UniValue operator()(const CKeyID &keyID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey vchPubKey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const CScriptID &scriptID) const {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            std::vector<CTxDestination> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractDestinations(subscript, whichType, addresses, nRequired);\n-            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            obj.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        }\n-        return obj;\n-    }\n-};\n-#endif\n-\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+            \"transition to using getaddressinfo to access this information before upgrading to v0.17. To have those deprecated\\n\"\n+            \"information shown, start bitcoind with -deprecatedrpc=validateaddress\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) DEPRECATED. If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) DEPRECATED. If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) DEPRECATED. If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) DEPRECATED. The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) DEPRECATED. The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) DEPRECATED. Array of addresses associated with the known redeemscript\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) DEPRECATED. Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) DEPRECATED. The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) DEPRECATED. If the address is compressed\\n\"\n             \"  \\\"account\\\" : \\\"account\\\"         (string) DEPRECATED. The account associated with the address, \\\"\\\" is the default account\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780047",
      "id" : 141780047,
      "in_reply_to_id" : 141772004,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 89,
      "path" : "src/rpc/misc.cpp",
      "position" : 135,
      "pull_request_review_id" : 66048243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780047",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I changed that field to `redeemscript`. I didn't make it a separate object.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:36:21Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780087",
      "id" : 141780087,
      "in_reply_to_id" : 141769888,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 76,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66048295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780094"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T02:36:26Z",
      "diff_hunk" : "@@ -3180,6 +3181,131 @@ UniValue generate(const JSONRPCRequest& request)\n     return generateBlocks(coinbase_script, num_generate, max_tries, true);\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n+{\n+public:\n+    CWallet* const pwallet;\n+\n+    DescribeAddressVisitor(CWallet* const _pwallet) : pwallet(_pwallet) {}\n+\n+    UniValue operator()(const CNoDestination& dest) const { return UniValue(UniValue::VOBJ); }\n+\n+    UniValue operator()(const CKeyID& keyID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CPubKey vchPubKey;\n+        obj.push_back(Pair(\"isscript\", false));\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+            obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        }\n+        return obj;\n+    }\n+\n+    UniValue operator()(const CScriptID& scriptID) const {\n+        UniValue obj(UniValue::VOBJ);\n+        CScript subscript;\n+        obj.push_back(Pair(\"isscript\", true));\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            std::vector<CTxDestination> addresses;\n+            txnouttype whichType;\n+            int nRequired;\n+            ExtractDestinations(subscript, whichType, addresses, nRequired);\n+            obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            obj.push_back(Pair(\"addresses\", a));\n+            if (whichType == TX_MULTISIG)\n+                obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        }\n+        return obj;\n+    }\n+};\n+\n+UniValue getaddressinfo(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+            return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"getaddressinfo \\\"address\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n+            \"to be in the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"                    (string, required) The bitcoin address to get the information of.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"    [\\n\"\n+            \"      \\\"address\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,  (boolean) If the address is compressed\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+    }\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141780094",
      "id" : 141780094,
      "in_reply_to_id" : 141770695,
      "original_commit_id" : "ea088845fb8dd903f681c4c08b6bfe412cecc536",
      "original_position" : 96,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66048301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141780094",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @TheBlueMatt's and @promag's comments. I also changed two of the `pushKV`s back to `push_back(Pair(...))` because they were not properly showing booleans (they were displayed as 0 and 1).",
      "created_at" : "2017-09-29T02:38:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-333015844",
      "id" : 333015844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-29T02:38:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333015844",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "created_at" : "2017-09-29T14:36:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-333143936",
      "id" : 333143936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-29T14:36:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333143936",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141884741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141884741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No trailing whitespace, please.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T14:37:57Z",
      "diff_hunk" : "@@ -426,6 +426,15 @@ def run_test(self):\n \n         # Verify nothing new in wallet\n         assert_equal(total_txs, len(self.nodes[0].listtransactions(\"*\",99999)))\n+        ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141884741",
      "id" : 141884741,
      "original_commit_id" : "205fdcdfc15cde6172a6ae8e0d797e7ee178a58d",
      "original_position" : 13,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 66172076,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141884741",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141894025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141894025"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed.",
      "commit_id" : "dcb0a35c0701a3c6a1585f99eb11e3639b5db886",
      "created_at" : "2017-09-29T15:15:15Z",
      "diff_hunk" : "@@ -426,6 +426,15 @@ def run_test(self):\n \n         # Verify nothing new in wallet\n         assert_equal(total_txs, len(self.nodes[0].listtransactions(\"*\",99999)))\n+        ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#discussion_r141894025",
      "id" : 141894025,
      "in_reply_to_id" : 141884741,
      "original_commit_id" : "205fdcdfc15cde6172a6ae8e0d797e7ee178a58d",
      "original_position" : 13,
      "path" : "test/functional/wallet.py",
      "position" : null,
      "pull_request_review_id" : 66183604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10583",
      "updated_at" : "2017-09-29T15:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141894025",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased onto master.",
      "created_at" : "2017-09-29T15:15:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-333154710",
      "id" : 333154710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-09-29T15:15:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333154710",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "n'th rebase",
      "created_at" : "2017-10-19T03:33:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10583#issuecomment-337790168",
      "id" : 337790168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10583",
      "updated_at" : "2017-10-19T03:33:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337790168",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]

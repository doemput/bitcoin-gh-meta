[
   {
      "body" : "Thanks for the update. This will require a fairly extensive P2P protocol rework for us for full support (as we're limited to 128 bit 'addresses' at the p2p level.); but we could still support the new style HSes without rumoring.\r\n\r\nWhile we're discussing this, is there any good way that we could determine which HS a given localhost connection was coming from? We could use that for certain kinds of anti-DOS mechanisms. ",
      "created_at" : "2016-11-24T22:52:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-262853329",
      "id" : 262853329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2016-11-24T22:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262853329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I believe we should in the short term switch to issuing `ADD_ONION:RSA1024`, and prioritize proposing an upgrade to the P2P protocol to murmur larger network addresses.",
      "created_at" : "2016-11-26T02:02:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-263038733",
      "id" : 263038733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2016-11-26T02:03:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263038733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@gmaxwell np. I also think the P2P protocol should have full support for 'addresses' > 128 bit, since maybe we will need support for other network types and as we can see sometimes whole keys are used as 'addresses'. @sipa if we will do things in this order, we need to change:\r\n\r\ntorcontrol.cpp#L473 from `private_key = \"NEW:BEST\";` to `private_key = \"NEW:RSA1024\";`\r\n\r\nThis should be a backport, because it applies to all releases using ADD_ONION Tor controller feature. I think this is not ideal and it's better fixing the p2p limitation, because sooner rather than later RSA1024 onion services will be no longer be supported in the Tor network, and we will need to again switch to `private_key = \"NEW:BEST\";`. or AT LEAST `private_key = \"NEW:ED25519\";` \r\n\r\nBEST = the latest HS version, currently v2 with RSA1024/SHA1. In the next major stable release it will be v3 with ed25519 keys . So BEST is kind of dynamic from this point of view. Each particular HS version can be mentioned with `NEW:RSA1024` or `NEW:ED25519` (when v4 will come along - no plans for this, probably very far in the future). The problem is that older deprecated versions are not to be supported forever in the network or even as a controller command, which is why I strongly think it's better to fix our p2p 'addresses' limitation and remove Bitcoin Core's worry from what Tor considers and uses as BEST for HS with the additional benefit of supporting any other network with big address format if needed.\r\n\r\nAs for your question @gmaxwell at this moment Tor doesn't have a feature to tag circuits based on .onion addresses. So, for a local node being reachable on .onion the peers connecting will always appear to be  \"addr\": \"127.0.0.1:<port>\" connected to \"addrlocal\": \"hostname.onion:8333\" . So, the only different element for multiple connected peers is their port, but this is no reliable element to make a DoS assumption because of obvious reasons (a different honest peer might later have the same port or a malicious peer rebuilds the rendezvous circuit and gets a different port). For these reasons we also can't map remote peers to unique addresses in the 127.0.0 class. There is no concept of remote peer HS address from Tor's perspective. The remote peer can be a client-only, it may not even run a HS at all and still connect to other HSes just fine by establishing rendezvous circuits.\r\n\r\nIf you think about it other way around, a server running more HSes simultaneously should use a different virtualport for each one, so that at least it can bucket clients (or remote peers in our context) groups to a given onion hostname (but still with no way to distinguish deeper clients from each other within the buckets). This is not too great as well, the best bet here is to run one HS per Tor instance.",
      "created_at" : "2016-11-27T13:58:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-263123773",
      "id" : 263123773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2016-11-27T13:59:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263123773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6549887?v=3",
         "events_url" : "https://api.github.com/users/gits7r/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gits7r/followers",
         "following_url" : "https://api.github.com/users/gits7r/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gits7r/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gits7r",
         "id" : 6549887,
         "login" : "gits7r",
         "organizations_url" : "https://api.github.com/users/gits7r/orgs",
         "received_events_url" : "https://api.github.com/users/gits7r/received_events",
         "repos_url" : "https://api.github.com/users/gits7r/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gits7r/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gits7r/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gits7r"
      }
   },
   {
      "body" : "Thanks for the heads-up. Switched to RSA1024 keys explicitly in #9234.",
      "created_at" : "2016-11-28T16:17:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-263315291",
      "id" : 263315291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2016-11-28T16:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263315291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Cross-linking to https://github.com/zcash/zcash/issues/1111 as the P2P changes for Tor's HS2.0 are also necessary for I2P support.",
      "created_at" : "2017-03-24T07:11:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-288949718",
      "id" : 288949718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2017-03-24T07:11:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/288949718",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/4993799?v=3",
         "events_url" : "https://api.github.com/users/str4d/events{/privacy}",
         "followers_url" : "https://api.github.com/users/str4d/followers",
         "following_url" : "https://api.github.com/users/str4d/following{/other_user}",
         "gists_url" : "https://api.github.com/users/str4d/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/str4d",
         "id" : 4993799,
         "login" : "str4d",
         "organizations_url" : "https://api.github.com/users/str4d/orgs",
         "received_events_url" : "https://api.github.com/users/str4d/received_events",
         "repos_url" : "https://api.github.com/users/str4d/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/str4d/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/str4d/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/str4d"
      }
   },
   {
      "body" : "> While we're discussing this, is there any good way that we could determine which HS a given localhost connection was coming from? We could use that for certain kinds of anti-DOS mechanisms.\r\n\r\nFWIW this is trivially accessible in I2P, so it would be worth considering in the end design even if it is hard or impossible to implement for Tor.",
      "created_at" : "2017-04-01T13:03:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-290918825",
      "id" : 290918825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2017-04-01T13:03:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/290918825",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/4993799?v=3",
         "events_url" : "https://api.github.com/users/str4d/events{/privacy}",
         "followers_url" : "https://api.github.com/users/str4d/followers",
         "following_url" : "https://api.github.com/users/str4d/following{/other_user}",
         "gists_url" : "https://api.github.com/users/str4d/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/str4d",
         "id" : 4993799,
         "login" : "str4d",
         "organizations_url" : "https://api.github.com/users/str4d/orgs",
         "received_events_url" : "https://api.github.com/users/str4d/received_events",
         "repos_url" : "https://api.github.com/users/str4d/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/str4d/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/str4d/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/str4d"
      }
   },
   {
      "body" : "> While we're discussing this, is there any good way that we could determine which HS a given localhost connection was coming from? We could use that for certain kinds of anti-DOS mechanisms.\r\n\r\nNo, because in Tor, connections never *come from* hidden services. Hidden services are only used to find an endpoint, they are not a general identifier for endpoints. A connection coming in to a hidden service carries no metadata that can be used to persistently identify the other side (this is a privacy feature, not a bug).\r\n\r\nIt is possible to work around this by using a more extensive negotiation process. For example Ricochet and Torchat do this. A naive way (used by Torchat IIRC) is to connect to each other's hidden service and pass tokens back and forth to prove to each other to 'own' the respective hidden service.  Another way (slightly more efficient, used by Ricochet) is to make the connecting side sign a token with their hidden service private key.\r\n\r\nThis in itself is not useful for anti-DoS protection as generating hidden service keys is cheap. It'd have to be combined with some PoW mechanism on first connect from a new service.",
      "created_at" : "2017-04-02T09:30:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9214#issuecomment-290975224",
      "id" : 290975224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9214",
      "updated_at" : "2017-04-02T09:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/290975224",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

[
   {
      "body" : "Can you explain a bit of motivation for this?",
      "created_at" : "2016-12-07T13:42:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#issuecomment-265449802",
      "id" : 265449802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9298",
      "updated_at" : "2016-12-07T13:42:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265449802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "> Can you explain a bit of motivation for this?\r\n\r\nSure. Sorry for leaving that out in the main description.\r\n\r\n1.) Reduce amount of stored data in wallet.dat\r\n2.) Don't expose each child private key in wallet.dat\r\n3.) Lays groundwork for public key derivation in conjunction with a signing device.",
      "created_at" : "2016-12-07T14:09:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#issuecomment-265455890",
      "id" : 265455890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9298",
      "updated_at" : "2016-12-07T14:09:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265455890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r91512529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91512529"
         }
      },
      "body" : "The comment here should be different compared to the `FEATURE_HD`.",
      "commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "created_at" : "2016-12-08T13:27:43Z",
      "diff_hunk" : "@@ -83,6 +83,7 @@ enum WalletFeature\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n \n     FEATURE_HD = 130000, // Hierarchical key derivation after BIP32 (HD Wallet)\n+    FEATURE_WITH_HD_PUBKEY = 139900, // Hierarchical key derivation after BIP32 (HD Wallet)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r91512529",
      "id" : 91512529,
      "original_commit_id" : "2b61ef8d2aeb6143c6bc04311a3a4089d38bd19e",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 12020854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298",
      "updated_at" : "2017-02-16T11:39:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91512529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r91512721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91512721"
         }
      },
      "body" : "SPC added to the already translated string? Yes/No here?",
      "commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "created_at" : "2016-12-08T13:28:58Z",
      "diff_hunk" : "@@ -2475,7 +2583,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n \n                     if (!signSuccess)\n                     {\n-                        strFailReason = _(\"Signing transaction failed\");\n+                        strFailReason = _(\"Signing transaction failed \")+(sign ? std::string(\"yes\"): std::string(\"no\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r91512721",
      "id" : 91512721,
      "original_commit_id" : "2b61ef8d2aeb6143c6bc04311a3a4089d38bd19e",
      "original_position" : 172,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 12021059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298",
      "updated_at" : "2017-02-16T11:39:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91512721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "> 2.) Don't expose each child private key in wallet.dat\n\n\nI think this means salvagewallet no longer works for hd wallets as it\npreviously did. This could potentially lead to loss of coins for\ninexperienced users, because it is currently not easily possible to\nrecover the HD wallet after salvagewallet, nor is is possible to\nrecover the child keys, if they are not saved...\n",
      "created_at" : "2016-12-08T14:17:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#issuecomment-265749903",
      "id" : 265749903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9298",
      "updated_at" : "2016-12-08T14:17:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265749903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "> I think this means salvagewallet no longer works for hd wallets as it\r\npreviously did. \r\n\r\nRight. This is a good point.\r\nHowever, I think we should do the following also for \"normal\" wallets.\r\n\r\n1. We already recover the hdchain (child key counter, private key id thats used for the HD master key).\r\n2. Don't abort if a privat-key is corrupted, instead...\r\n3. Recreate all keys up to the child-key-counter (CHDChain object)\r\n\r\nBefore implementing this, I think some Concept ACKs/NACKs would be required.\r\n@sipa, @gmaxwell: thoughts?",
      "created_at" : "2016-12-08T16:27:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#issuecomment-265784179",
      "id" : 265784179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9298",
      "updated_at" : "2016-12-08T16:27:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265784179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143737699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143737699"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This could stay in `GenerateNewKey`?",
      "commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "created_at" : "2017-10-10T14:05:41Z",
      "diff_hunk" : "@@ -154,11 +157,116 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n         // increment childkey index\n         hdChain.nExternalChainCounter++;\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+\n     secret = childKey.key;\n \n+    CPubKey pubkey = secret.GetPubKey();\n+    assert(secret.VerifyPubKey(pubkey));\n+\n+    // store metadata\n+    mapKeyMetadata[pubkey.GetID()] = metadata;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143737699",
      "id" : 143737699,
      "original_commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "original_position" : 52,
      "path" : "src/wallet/wallet.cpp",
      "position" : 52,
      "pull_request_review_id" : 68292394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298",
      "updated_at" : "2017-10-10T14:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143737699",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143737850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143737850"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "After rebase use `UpdateTimeFirstKey()`. Also could stay in `GenerateNewKey`?",
      "commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "created_at" : "2017-10-10T14:06:11Z",
      "diff_hunk" : "@@ -154,11 +157,116 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n         // increment childkey index\n         hdChain.nExternalChainCounter++;\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+\n     secret = childKey.key;\n \n+    CPubKey pubkey = secret.GetPubKey();\n+    assert(secret.VerifyPubKey(pubkey));\n+\n+    // store metadata\n+    mapKeyMetadata[pubkey.GetID()] = metadata;\n+    if (!nTimeFirstKey || metadata.nCreateTime < nTimeFirstKey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143737850",
      "id" : 143737850,
      "original_commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "original_position" : 53,
      "path" : "src/wallet/wallet.cpp",
      "position" : 53,
      "pull_request_review_id" : 68292394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298",
      "updated_at" : "2017-10-10T14:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143737850",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143740223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143740223"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wrong comment.",
      "commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "created_at" : "2017-10-10T14:14:09Z",
      "diff_hunk" : "@@ -154,11 +157,116 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n         // increment childkey index\n         hdChain.nExternalChainCounter++;\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+\n     secret = childKey.key;\n \n+    CPubKey pubkey = secret.GetPubKey();\n+    assert(secret.VerifyPubKey(pubkey));\n+\n+    // store metadata\n+    mapKeyMetadata[pubkey.GetID()] = metadata;\n+    if (!nTimeFirstKey || metadata.nCreateTime < nTimeFirstKey)\n+        nTimeFirstKey = metadata.nCreateTime;\n+\n     // update the chain model in the database\n     if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n         throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+\n+    if (CanSupportFeature(FEATURE_WITH_HD_PUBKEY))\n+    {\n+        if (!AddHDPubKey(childKey.Neuter()))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else\n+    {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+}\n+\n+bool CWallet::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n+{\n+    LOCK(cs_wallet);\n+    std::map<CKeyID, CHDPubKey>::const_iterator mi = mapHdPubKeys.find(address);\n+    if (mi != mapHdPubKeys.end())\n+    {\n+        const CHDPubKey &hdPubKey = (*mi).second;\n+        vchPubKeyOut = hdPubKey.extPubKey.pubkey;\n+        return true;\n+    }\n+    else\n+        return CCryptoKeyStore::GetPubKey(address, vchPubKeyOut);\n+}\n+\n+bool CWallet::GetKey(const CKeyID &address, CKey& keyOut) const\n+{\n+    LOCK(cs_wallet);\n+    std::map<CKeyID, CHDPubKey>::const_iterator mi = mapHdPubKeys.find(address);\n+    if (mi != mapHdPubKeys.end())\n+    {\n+        // if the key has been found in mapHdPubKeys, derive it on the fly\n+        const CHDPubKey &hdPubKey = (*mi).second;\n+\n+        // TODO: refactor with DeriveNewChildKey\n+        CKey key;                      //master key seed (256bit)\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        // try to get the master key\n+        if (!GetKey(hdPubKey.masterKeyID, key))\n+            return false;\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+        externalChainChildKey.Derive(childKey, hdPubKey.extPubKey.nChild);\n+        keyOut = childKey.key;\n+        return true;\n+    }\n+    else\n+        return CCryptoKeyStore::GetKey(address, keyOut);\n+}\n+\n+bool CWallet::HaveKey(const CKeyID &address) const\n+{\n+    LOCK(cs_wallet);\n+    if (mapHdPubKeys.count(address) > 0)\n+        return true;\n+    return CCryptoKeyStore::HaveKey(address);\n+}\n+\n+bool CWallet::LoadHDPubKey(const CHDPubKey &hdPubKey)\n+{\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143740223",
      "id" : 143740223,
      "original_commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 127,
      "pull_request_review_id" : 68292394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298",
      "updated_at" : "2017-10-10T14:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143740223",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143740258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143740258"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wrong comment.",
      "commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "created_at" : "2017-10-10T14:14:18Z",
      "diff_hunk" : "@@ -154,11 +157,116 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n         // increment childkey index\n         hdChain.nExternalChainCounter++;\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n+\n     secret = childKey.key;\n \n+    CPubKey pubkey = secret.GetPubKey();\n+    assert(secret.VerifyPubKey(pubkey));\n+\n+    // store metadata\n+    mapKeyMetadata[pubkey.GetID()] = metadata;\n+    if (!nTimeFirstKey || metadata.nCreateTime < nTimeFirstKey)\n+        nTimeFirstKey = metadata.nCreateTime;\n+\n     // update the chain model in the database\n     if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n         throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+\n+    if (CanSupportFeature(FEATURE_WITH_HD_PUBKEY))\n+    {\n+        if (!AddHDPubKey(childKey.Neuter()))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+    else\n+    {\n+        if (!AddKeyPubKey(secret, pubkey))\n+            throw std::runtime_error(std::string(__func__) + \": AddKey failed\");\n+    }\n+}\n+\n+bool CWallet::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n+{\n+    LOCK(cs_wallet);\n+    std::map<CKeyID, CHDPubKey>::const_iterator mi = mapHdPubKeys.find(address);\n+    if (mi != mapHdPubKeys.end())\n+    {\n+        const CHDPubKey &hdPubKey = (*mi).second;\n+        vchPubKeyOut = hdPubKey.extPubKey.pubkey;\n+        return true;\n+    }\n+    else\n+        return CCryptoKeyStore::GetPubKey(address, vchPubKeyOut);\n+}\n+\n+bool CWallet::GetKey(const CKeyID &address, CKey& keyOut) const\n+{\n+    LOCK(cs_wallet);\n+    std::map<CKeyID, CHDPubKey>::const_iterator mi = mapHdPubKeys.find(address);\n+    if (mi != mapHdPubKeys.end())\n+    {\n+        // if the key has been found in mapHdPubKeys, derive it on the fly\n+        const CHDPubKey &hdPubKey = (*mi).second;\n+\n+        // TODO: refactor with DeriveNewChildKey\n+        CKey key;                      //master key seed (256bit)\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        // try to get the master key\n+        if (!GetKey(hdPubKey.masterKeyID, key))\n+            return false;\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+        externalChainChildKey.Derive(childKey, hdPubKey.extPubKey.nChild);\n+        keyOut = childKey.key;\n+        return true;\n+    }\n+    else\n+        return CCryptoKeyStore::GetKey(address, keyOut);\n+}\n+\n+bool CWallet::HaveKey(const CKeyID &address) const\n+{\n+    LOCK(cs_wallet);\n+    if (mapHdPubKeys.count(address) > 0)\n+        return true;\n+    return CCryptoKeyStore::HaveKey(address);\n+}\n+\n+bool CWallet::LoadHDPubKey(const CHDPubKey &hdPubKey)\n+{\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n+\n+    mapHdPubKeys[hdPubKey.extPubKey.pubkey.GetID()] = hdPubKey;\n+    return true;\n+}\n+\n+bool CWallet::AddHDPubKey(const CExtPubKey &extPubKey)\n+{\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9298#discussion_r143740258",
      "id" : 143740258,
      "original_commit_id" : "3fd850ae5e5f0e167e63782501886d7e114482e0",
      "original_position" : 135,
      "path" : "src/wallet/wallet.cpp",
      "position" : 135,
      "pull_request_review_id" : 68292394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9298",
      "updated_at" : "2017-10-10T14:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143740258",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]

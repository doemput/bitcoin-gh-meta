{
   "assignee" : null,
   "body" : "For several reasons the current test framework does not allow to easily incorporate new unit tests that append specially crafted blocks to the blockchain using ProcessBlock(). \r\nThis was pointed out by Mike Hearn on the development list in the thread with subject \"[Bitcoin-development] Question on creating test cases for block.CheckBlock()\" (http://article.gmane.org/gmane.comp.bitcoin.devel/5939).\r\n\r\nAfter debugging the Bitcoin core, we found that this is because of three reasons:\r\n\r\n1. The miner_tests.cpp leaves the transaction pool in an invalid state and assumes the blockchain is empty on start. So other independent unit tests cannot be run before nor after (without proper cleaning) if they intend to use CreateNewBlock(), which collects transactions from the pool.\r\n\r\n2. Creating test blocks requires proof-of-work. Even if the starting difficulty is low (1) the required proof-of-work is still too high to allow for the dynamic creation of test blocks. Instead, unit test have to be \"pre-mined\". This makes the code more opaque and increases the effort of changing the code.\r\n\r\n3. Only the first unit test can start with an empty blockchain, all subsequent tests have to start with the blockchain in the state where the previous test left it. This has the following problematic consequences:\r\na. Each unit test makes the blockchain longer. This breaks the test sequence when a checkpoint is reached because a checkpoint requires a pre-determined hash digest. Moreover, there are exception cases for certain block heights (e.g. regarding allowing two transactions with the same hash) which could be violated.\r\nb. Certain combinations of unit tests are inherently impossible to implement in a single block-chain if not run in an specific order.\r\nOther combinations may cause unexpected consequences. For example, since version 1 blocks do not have the height field included in the coinbase field of the generation transaction, a unit test may create a coinbase tx with a future height in the height field and prevent a coinbase tx with the same hash to be used afterward when only blocks v2 are accepted (this happened to us while testing). \r\nc. The standard unit testing policy that unit tests should be not depend on each other's output is violated.\r\nThis makes debugging more difficult.\r\nd. \"Pre-mining\" unit tests is impossible unless all previous unit tests are known and never change. (However, we are proposing to eliminate the proof-of-work check regardless.) \r\n\r\nWe believe that testing the block acceptance rules is crucial for the safety of the application and so we wrote this patch.\r\nBy restarting the blockchain before every unit test that requires testing block acceptance we have the guarantee that all tests are independent, executed in a predefined reproducable environment, and don't unintentionally hit checkpoints or other exceptions. Nevertheless, each unit test decides whether to re-use or reset the block-chain. We haven't perceived any significant delay while performing the destruction and creation of the block-chain during the execution of the test application. This is because file space allocation functions are fast on modern filesystems. Nevertheless, UNDOFILE_CHUNK_SIZE/BLOCKFILE_CHUNK_SIZE can be reduced during test case execution if the block-chain is reset many times.\r\n\r\nIn detail, this patch solves 1.,2.,3. from above by:\r\n\r\n- Providing a method to reset the blockchain to the starting state (testingSetupManager.SetupGenesisBlockChain())\r\n- Allowing to dynamically skip the proof-of-work testing (supressCheckBlockWork = true)\r\n- Fixing the bug in miner_tests.cpp which leaves in the memory pool invalid transactions (mempool.clear() missing).\r\n\r\nWe've also found the exact procedure that can be used to programmatically destroy and re-create the blockchain correctly, which was not implemented and nor documented. Some cleanup methods existed but some other were added because they were missing.\r\n\r\nThis could be of great help to re-create completely the blockchain in case a severe damage has been detected, without restarting the application.\r\n\r\nAs a bonus, 7 unit tests have been added:\r\n- ToCheckBlockUpgradeMajority (untested before)\r\n- EnforceBlockUpgradeMajority (untested before)\r\n- RejectBlockOutdatedMajority (untested before)\r\n- \"bad-cb-height\"\r\n- \"bad-version\"\r\n- \"time-too-old\"\r\n- \"bad-txns-nonfinal\"\r\n\r\nLast, we added a way to leave the blockchain unaltered after the test suite is over to debug the unit tests themselves (testingSetupManager.keepTestEvidence = true)\r\n\r\nNote: The BerkeleyDB environment field was converted into a heap allocated object because BerkeleyDB handles are not meant to be re-used after close, and the block-chain environment can be closed and re-opened in the unit tests. This is explained in http://docs.oracle.com/cd/E17275_01/html/api_reference/CXX/envclose.html as\r\n\"After DbEnv::close() has been called, regardless of its return, the Berkeley DB environment handle may not be accessed again.\"\r\n\r\nSergio Demian Lerner & Timo Hanke\r\n\r\n",
   "closed_at" : "2015-03-18T12:59:53Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 25,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4688/comments",
   "created_at" : "2014-08-12T19:56:57Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4688/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/4688",
   "id" : 40092700,
   "labels" : [
      {
         "color" : "d4c5f9",
         "name" : "Tests",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4688/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 4688,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/4688.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4688",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/4688.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4688"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Improvement to the Test Framework in the processing of test blocks",
   "updated_at" : "2015-03-18T12:59:53Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4688",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1752347?v=3",
      "events_url" : "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "followers_url" : "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url" : "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url" : "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/SergioDemianLerner",
      "id" : 1752347,
      "login" : "SergioDemianLerner",
      "organizations_url" : "https://api.github.com/users/SergioDemianLerner/orgs",
      "received_events_url" : "https://api.github.com/users/SergioDemianLerner/received_events",
      "repos_url" : "https://api.github.com/users/SergioDemianLerner/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/SergioDemianLerner"
   }
}

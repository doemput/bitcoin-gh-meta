[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r41918635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41918635"
         }
      },
      "body" : "Beauty, but nack this thing.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-13T20:18:41Z",
      "diff_hunk" : "@@ -0,0 +1,394 @@\n+// Copyright (c) 2009-2015 Eric Lombrozo, The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+/*\n+                     _             _     _ _                         \n+ __   _____ _ __ ___(_) ___  _ __ | |__ (_) |_ ___   ___ _ __  _ __  ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r41918635",
      "id" : 41918635,
      "original_commit_id" : "220bd24fcf334d98c92230e0b998127bb09ea6ca",
      "original_position" : 6,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41918635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r41918957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41918957"
         }
      },
      "body" : "Agree with @jtimon. Also it may be better to split the copyright (c) line into two. One for the initial author and initial year and a second one for the bitcoin core devs.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-13T20:20:54Z",
      "diff_hunk" : "@@ -0,0 +1,394 @@\n+// Copyright (c) 2009-2015 Eric Lombrozo, The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+/*\n+                     _             _     _ _                         \n+ __   _____ _ __ ___(_) ___  _ __ | |__ (_) |_ ___   ___ _ __  _ __  ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r41918957",
      "id" : 41918957,
      "original_commit_id" : "220bd24fcf334d98c92230e0b998127bb09ea6ca",
      "original_position" : 6,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41918957",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "The deployment times of concrete softforks depend on the chain (ie they are expected to be different in main and testnet3). Here's one solution:\r\n\r\n1) The Softfork class moves to consensus/params.h (and becomes a method-less struct, since that file is expected to be exposed to a complete libconsensus). \r\n\r\n2) Consensus::Params gets a new field softforks, which is an array of these new Softfork structs, and whose static size is determined by MAX_SOFTFORKS, the last element of an enumeration of all currently supported softforks.\r\n\r\n3) Every time a new softfork is supported, it must be included in that enum and the static size of the array will increase.\r\n\r\nThis way we maintain the ability to independently deploy different softforks in different testchains while respecting Consensus::Params as the only interface to communicate differences between chains to the consensus code (a problem we had already solved, in a way that is compatible with a C API).\r\n\r\n ",
      "created_at" : "2015-10-14T13:05:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148043500",
      "id" : 148043500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-14T13:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148043500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Agree with @jtimon's comments.",
      "created_at" : "2015-10-14T13:06:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148043687",
      "id" : 148043687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-14T13:06:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148043687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42121639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42121639"
         }
      },
      "body" : "Doxygen supports [documentation on a file](https://www.stack.nl/~dimitri/doxygen/manual/commands.html#cmdfile) level, which seems more useful than ascii arts.\r\n\r\n> One for the initial author and initial year and a second one for the bitcoin core devs.\r\n\r\nIs this really necessary? There is already the much more precise git history, and to my understanding, all contributors qualify as \"Bitcoin Core developers\".",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-15T13:10:14Z",
      "diff_hunk" : "@@ -0,0 +1,394 @@\n+// Copyright (c) 2009-2015 Eric Lombrozo, The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+/*\n+                     _             _     _ _                         \n+ __   _____ _ __ ___(_) ___  _ __ | |__ (_) |_ ___   ___ _ __  _ __  ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42121639",
      "id" : 42121639,
      "original_commit_id" : "220bd24fcf334d98c92230e0b998127bb09ea6ca",
      "original_position" : 6,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42121639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5836089?v=3",
         "events_url" : "https://api.github.com/users/dexX7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dexX7/followers",
         "following_url" : "https://api.github.com/users/dexX7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dexX7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dexX7",
         "id" : 5836089,
         "login" : "dexX7",
         "organizations_url" : "https://api.github.com/users/dexX7/orgs",
         "received_events_url" : "https://api.github.com/users/dexX7/received_events",
         "repos_url" : "https://api.github.com/users/dexX7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dexX7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dexX7"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42124115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42124115"
         }
      },
      "body" : "I like the extra information, but you may look into [BOOST_TEST_MESSAGE()](http://www.boost.org/doc/libs/1_55_0/libs/test/doc/html/utf/user-guide/test-output/BOOST_TEST_MESSAGE.html).",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-15T13:34:59Z",
      "diff_hunk" : "@@ -0,0 +1,454 @@\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#define VERSIONBITS_UNIT_TEST\n+\n+#include \"chain.h\"\n+#include \"consensus/versionbits.h\"\n+#include \"primitives/block.h\"\n+#include \"test/test_bitcoin.h\"\n+\n+#include <bitset>\n+#include <boost/test/unit_test.hpp>\n+#include <iomanip>\n+#include <iostream>\n+#include <sstream>\n+#include <stdlib.h>\n+#include <string>\n+#include <time.h>\n+\n+using namespace Consensus::VersionBits;\n+using namespace std;\n+\n+const int NBITS = MAX_BIT + 1 - MIN_BIT;\n+\n+class BitCounter\n+{\n+public:\n+    BitCounter(const Deployments& deployments) :\n+        m_deployments(deployments)\n+    {\n+        Clear();\n+    }\n+\n+    void Clear()\n+    {\n+        for (int i = 0; i < NBITS; i++)\n+            m_bitCounts[i] = 0;\n+    }\n+\n+    void CountBits(int nVersion, uint32_t nTime = 0)\n+    {\n+        for (int i = MIN_BIT; i <= MAX_BIT; i++)\n+        {\n+            if (((nVersion >> i) & 0x1) && (m_deployments.GetAssignedRule(i, nTime) != NO_RULE))\n+                m_bitCounts[i - MIN_BIT]++;\n+        }\n+    }\n+\n+    int GetCountForBit(int bit) const\n+    {\n+        return m_bitCounts[bit - MIN_BIT];\n+    }\n+\n+    string ToString()\n+    {\n+        stringstream ss;\n+        for (int i = 0; i < NBITS; i++)\n+        {\n+            if (m_bitCounts[i + MIN_BIT])\n+               ss << setw(4) << right << i + MIN_BIT << \": \" << setw(5) << right << m_bitCounts[i + MIN_BIT] << endl;\n+        }\n+\n+        return ss.str();\n+    }\n+\n+private:\n+    int m_bitCounts[NBITS];\n+    const Deployments& m_deployments;\n+};\n+\n+class VersionGenerator\n+{\n+public:\n+    VersionGenerator() { ClearBitProbabilities(); }\n+\n+    void ClearBitProbabilities()\n+    {\n+        for (int i = 0; i < NBITS; i++)\n+            m_bitProbabilities[i] = 0;\n+    }\n+\n+    void SetBitProbability(int bit, int probability)\n+    {\n+        m_bitProbabilities[bit - MIN_BIT] = probability;\n+    }\n+\n+    int Generate() const\n+    {\n+        int nVersion = VERSION_HIGH_BITS;\n+        for (int i = 0; i < NBITS; i++)\n+        {\n+            if ((rand() % ACTIVATION_INTERVAL) <= (m_bitProbabilities[i] - 1))\n+                nVersion |= 0x1 << (MIN_BIT + i);\n+        }\n+\n+        return nVersion;\n+    }\n+    \n+private:\n+    int m_bitProbabilities[NBITS]; // in units of 1/ACTIVATION_INTERVAL\n+};\n+\n+\n+std::string RuleStateToString(State state)\n+{\n+    switch (state)\n+    {\n+    case UNDEFINED:\n+        return \"UNDEFINED\";\n+\n+    case DEFINED:\n+        return \"DEFINED\";\n+\n+    case LOCKED_IN:\n+        return \"LOCKED_IN\";\n+\n+    case ACTIVE:\n+        return \"ACTIVE\";\n+\n+    case FAILED:\n+        return \"FAILED\";\n+\n+    default:\n+        return \"N/A\";\n+    }\n+}\n+void StateChanged(const CBlockIndex* pblockIndex, const SoftFork* psoftFork, State prevState, State newState, int bitCount)\n+{\n+    int bit = psoftFork->GetBit();\n+    bool isBitSet = (pblockIndex->pprev->nVersion >> bit) & 0x1;\n+\n+    cout << \"STATE CHANGED - height: \" << pblockIndex->nHeight << \" median time: \" << pblockIndex->GetMedianTimePast()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42124115",
      "id" : 42124115,
      "original_commit_id" : "8459a6f3ff821c5095b918e0ab68023d10bbd7a6",
      "original_position" : 133,
      "path" : "src/test/versionbits_tests.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42124115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5836089?v=3",
         "events_url" : "https://api.github.com/users/dexX7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dexX7/followers",
         "following_url" : "https://api.github.com/users/dexX7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dexX7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dexX7",
         "id" : 5836089,
         "login" : "dexX7",
         "organizations_url" : "https://api.github.com/users/dexX7/orgs",
         "received_events_url" : "https://api.github.com/users/dexX7/received_events",
         "repos_url" : "https://api.github.com/users/dexX7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dexX7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dexX7"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42125241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42125241"
         }
      },
      "body" : "Should stick to the standard header used across the codebase. Copyright always belongs to the author by default, there is no need to explicitly add it otherwise it gets really messy really quickly.",
      "commit_id" : "8459a6f3ff821c5095b918e0ab68023d10bbd7a6",
      "created_at" : "2015-10-15T13:44:34Z",
      "diff_hunk" : "@@ -0,0 +1,398 @@\n+// Copyright (c) 2009-2015 Eric Lombrozo, The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42125241",
      "id" : 42125241,
      "original_commit_id" : "8459a6f3ff821c5095b918e0ab68023d10bbd7a6",
      "original_position" : 1,
      "path" : "src/consensus/versionbits.cpp",
      "position" : 1,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-15T13:44:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42125241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42125267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42125267"
         }
      },
      "body" : "Sorry to be a spoilsport, but the ASCII art has to go.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-15T13:44:45Z",
      "diff_hunk" : "@@ -0,0 +1,394 @@\n+// Copyright (c) 2009-2015 Eric Lombrozo, The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+/*\n+                     _             _     _ _                         \n+ __   _____ _ __ ___(_) ___  _ __ | |__ (_) |_ ___   ___ _ __  _ __  ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42125267",
      "id" : 42125267,
      "original_commit_id" : "220bd24fcf334d98c92230e0b998127bb09ea6ca",
      "original_position" : 6,
      "path" : "src/consensus/versionbits.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42125267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "body" : "@jtimon @sipa After thinking a little bit more about how to make the soft fork deployments chain-specific, I think CChainParams is the place to initialize that, not Consensus::Params. So I added a SoftForkDeployments member to CChainParams and created a dummy BIP9999 on regtest to demonstrate the deployment mechanism in action.",
      "created_at" : "2015-10-16T07:28:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148636848",
      "id" : 148636848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-16T07:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148636848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "body" : "Consensus::Params it's the place to put consensus critical chain params, not CChainParams. If libconsensus was complete you would have just broke its build or moved consensus functionality out of libconsensus by putting it in the NON CONSENSUS COMPATIBLE CChainParams. Can you please follow the C API compatible suggestion?\r\nHow do you plan to expose CChainParams in libconsensus' API if not by passing Consensus::Params to the exposed functions that need it?",
      "created_at" : "2015-10-16T07:39:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148638887",
      "id" : 148638887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-16T07:44:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148638887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@CodeShark The idea is that there are three layers of chain-specific parameters...:\r\n* basechainparams, which contain things shared by both nodes and RPC clients\r\n* consensus/params, which contains all consensus-critical parametersl\r\n* chainparams, which contains node operation parameters, including an encapsulated consensus/params\r\n\r\nThe reason is to avoid having the consensus code depend on knowing where DNS seeds are, or to avoid having the RPC code depend on CBlock because of the genesis definition.\r\n",
      "created_at" : "2015-10-16T12:16:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148701500",
      "id" : 148701500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-16T12:17:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148701500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa OK, I guess what I meant to say is that CChainParams (or its subclasses, rather) is where the Consensus::Params structure gets initialized. So I went ahead and moved the SoftForkDeployments instance to Consensus::Params and am initializing immediately after the other Consensus::Params fields are initialized.",
      "created_at" : "2015-10-16T12:35:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148705259",
      "id" : 148705259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-16T12:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148705259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "body" : "Oh, sure, that's perfect!\n",
      "created_at" : "2015-10-16T12:39:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148705881",
      "id" : 148705881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-16T12:39:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148705881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42351118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42351118"
         }
      },
      "body" : "This field ( by being a C++ class with methods) impedes this file from being exposed in the libconsensus C API. What's wrong with moving the rules enum to this file and having a static size array as suggested?\r\nMaybe you have an alternative to passing a Consensus::Params struct as a parameter of the exposed C libconsensus runctions that need it the communicate chain-dependent data?\r\nCan you draft a C API for contextualcheckblockheader after this (don't worry about CBlockIndex which is that part to be solved, worry about the part that was solved but you are breaking here). Maybe taking a look at #5995 (where a C API compatible VerifyHeader is compiled within libconsensus) helps you understand what exactly you are breaking with this.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T09:25:15Z",
      "diff_hunk" : "@@ -19,6 +20,8 @@ struct Params {\n     int nMajorityEnforceBlockUpgrade;\n     int nMajorityRejectBlockOutdated;\n     int nMajorityWindow;\n+    /** Used for versionbits */\n+    VersionBits::SoftForkDeployments softForkDeployments;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42351118",
      "id" : 42351118,
      "original_commit_id" : "77c3fada7c6a280f1fce30ad605733303d74fa0d",
      "original_position" : 13,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42351118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42356010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42356010"
         }
      },
      "body" : "Again, there's not need to include future rule changes (their own PRs can do it if they get merged after this, maybe with the exception of BIP65 for which most of the code has been already merged). You don't want people to start asking you to add other \"future rule changes\" like BIP100, BIP101 and BIP102, right?\r\nAlso, (and also again) why use Softfork instead of something more generic that also serves for Hardfork deployments?\r\nMaybe \"Deployments\" or \"RuleChanges\" would be better.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T10:26:40Z",
      "diff_hunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SOFTFORKS_H\n+#define BITCOIN_SOFTFORKS_H\n+\n+class CBlockIndex;\n+namespace Consensus {\n+\n+struct Params;\n+namespace SoftForks {\n+\n+enum Rule\n+{\n+    BIP16,\n+    BIP30,\n+    BIP34,\n+    BIP42,\n+    BIP62,\n+    BIP65,\n+    BIP66,\n+    BIP68,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42356010",
      "id" : 42356010,
      "original_commit_id" : "77c3fada7c6a280f1fce30ad605733303d74fa0d",
      "original_position" : 24,
      "path" : "src/consensus/softforks.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42356010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42385487"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42385487"
         }
      },
      "body" : "Please s/Params()/chainparams/",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T15:29:44Z",
      "diff_hunk" : "@@ -148,6 +144,13 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n+\n+        // -regtest only: allow overriding block.nVersion with\n+        // -blockversion=N to test forking scenarios\n+        if (Params().MineBlocksOnDemand())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42385487",
      "id" : 42385487,
      "original_commit_id" : "08083e384869857323b5f0cad1029f353f1d2843",
      "original_position" : 27,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42385487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42386035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42386035"
         }
      },
      "body" : "Why the getter for the new global? If you are introducing a new global that consensus code will rely on, why not use the global as explicitly a possible?\r\nJust declare g_blockRuleIndex as extern in the .h file, s/Consensus::VersionBits::GetBlockRuleIndex()/g_blockRuleIndex and simply get rid of Consensus::VersionBits::GetBlockRuleIndex().\r\n",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T15:33:48Z",
      "diff_hunk" : "@@ -0,0 +1,300 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockruleindex.h\"\n+#include \"chain.h\"\n+\n+using namespace Consensus::VersionBits;\n+\n+\n+bool BlockRuleIndex::IsIntervalStart(const CBlockIndex* pblockIndex) const\n+{\n+    return m_activationInterval && pblockIndex && (pblockIndex->nHeight % m_activationInterval == 0);\n+}\n+\n+const CBlockIndex* BlockRuleIndex::GetIntervalStart(const CBlockIndex* pblockIndex) const\n+{\n+    if (!m_activationInterval || !pblockIndex)\n+        return NULL;\n+\n+    int nHeight = pblockIndex->nHeight - (pblockIndex->nHeight % m_activationInterval);\n+\n+    return pblockIndex->GetAncestor(nHeight);\n+}\n+\n+void BlockRuleIndex::SetSoftForkDeployments(int activationInterval, const SoftForkDeployments* deployments)\n+{\n+    m_activationInterval = activationInterval;\n+    m_deployments = deployments;\n+    m_ruleStateMap.clear();\n+}\n+\n+int BlockRuleIndex::CreateBlockVersion(uint32_t nTime, CBlockIndex* pprev, const std::set<int>& disabledRules) const\n+{\n+    int nVersion = VERSION_HIGH_BITS;\n+\n+    if (!m_deployments)\n+        return nVersion;\n+\n+    std::set<int> setRules;\n+    std::set<int> finalizedRules;\n+\n+    CBlockIndex blockIndex;\n+    blockIndex.nTime = nTime;\n+    blockIndex.pprev = pprev;\n+    uint32_t medianTime = blockIndex.GetMedianTimePast();\n+\n+    {\n+        // Set bits for all defined soft forks that haven't activated, failed, or have been requested disabled\n+        RuleStates ruleStates = GetRuleStates(pprev);\n+        RuleStates::const_iterator it = ruleStates.begin();\n+        for (; it != ruleStates.end(); ++it)\n+        {\n+            switch (it->second)\n+            {\n+            case DEFINED:\n+                // Set assigned bits we're not disabling\n+                if (!disabledRules.count(it->first) &&\n+                    m_deployments->IsRuleAssigned(it->first, medianTime))\n+                        setRules.insert(it->first);\n+                break;\n+\n+            case LOCKED_IN:\n+                // Always set bits for locked in rules\n+                setRules.insert(it->first);\n+                break;\n+\n+            case ACTIVE:\n+                // Do not set bits for active and failed rules\n+\n+            case FAILED:\n+                finalizedRules.insert(it->first);\n+\n+            default:\n+                break;\n+            }\n+        }\n+    }\n+\n+    {\n+        // Also set bits for any new deployments that have not been requested disabled\n+        std::set<int> assignedRules = m_deployments->GetAssignedRules(nTime);\n+        std::set<int>::const_iterator it = assignedRules.begin();\n+        for (; it != assignedRules.end(); ++it)\n+        {\n+            if (!(finalizedRules.count(*it) || disabledRules.count(*it)))\n+                setRules.insert(*it);\n+        }\n+    }\n+\n+    {\n+        std::set<int>::const_iterator it = setRules.begin();\n+        for (; it != setRules.end(); ++it)\n+        {\n+            const SoftFork* psoftFork = m_deployments->GetSoftFork(*it);\n+            if (psoftFork)\n+                nVersion |= (0x1 << psoftFork->GetBit());\n+        }\n+    }\n+\n+    return nVersion;\n+}\n+\n+RuleState BlockRuleIndex::GetRuleState(int rule, const CBlockIndex* pblockIndex) const\n+{\n+    if (!m_activationInterval || !m_deployments)\n+        return UNDEFINED;\n+\n+    pblockIndex = GetIntervalStart(pblockIndex);\n+    if (!pblockIndex)\n+        return UNDEFINED;\n+\n+    RuleStateMap::const_iterator rit = m_ruleStateMap.find(pblockIndex);\n+    if (rit == m_ruleStateMap.end())\n+        return UNDEFINED;\n+\n+    const RuleStates& ruleStates = rit->second;\n+    RuleStates::const_iterator it = ruleStates.find(rule);\n+    if (it == ruleStates.end())\n+        return UNDEFINED;\n+\n+    return it->second;\n+}\n+\n+RuleStates BlockRuleIndex::GetRuleStates(const CBlockIndex* pblockIndex) const\n+{\n+    RuleStates ruleStates;\n+    if (!m_activationInterval || !m_deployments)\n+        return ruleStates;\n+\n+    pblockIndex = GetIntervalStart(pblockIndex);\n+    if (!pblockIndex)\n+        return ruleStates;\n+\n+    RuleStateMap::const_iterator rit = m_ruleStateMap.find(pblockIndex);\n+    if (rit == m_ruleStateMap.end())\n+        return ruleStates;\n+\n+    return rit->second;\n+}\n+\n+bool BlockRuleIndex::AreVersionBitsRecognized(const CBlockIndex* pblockIndex, const CBlockIndex* pprev) const\n+{\n+    if (!m_activationInterval || !pblockIndex || !UsesVersionBits(pblockIndex->nVersion))\n+        return false;\n+\n+    if (!pprev)\n+        pprev = pblockIndex->pprev;\n+\n+    // Get the start of the interval\n+    const CBlockIndex* pstart = GetIntervalStart(pprev);\n+    if (!pstart)\n+        return false;\n+\n+    uint32_t currentMedianTime = pblockIndex->GetMedianTimePast();\n+    RuleStates startStates = GetRuleStates(pstart);\n+\n+    for (int b = MIN_BIT; b <= MAX_BIT; b++)\n+    {\n+        if ((pblockIndex->nVersion >> b) & 0x1)\n+        {\n+            int rule = m_deployments->GetAssignedRule(b, currentMedianTime);\n+\n+            // Bit should not be set if it is not assigned\n+            if (rule == NO_RULE)\n+                return false;\n+\n+            RuleStates::const_iterator it = startStates.find(rule);\n+            if (it != startStates.end())\n+            {\n+                // Bits for active and failed rules should not be set\n+                RuleState state = it->second;\n+                if ((state == ACTIVE) || (state == FAILED))\n+                    return false;\n+            }\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+bool BlockRuleIndex::InsertBlockIndex(const CBlockIndex* pblockIndex, const CBlockIndex* pprev)\n+{\n+    if (!m_activationInterval || !IsIntervalStart(pblockIndex))\n+        return false;\n+\n+    if (m_ruleStateMap.count(pblockIndex))\n+        return true;\n+\n+    RuleStates newRuleStates;\n+    if (!m_deployments)\n+    {\n+        m_ruleStateMap[pblockIndex] = newRuleStates;\n+        return true;\n+    }\n+\n+    if (!pprev)\n+        pprev = pblockIndex->pprev;\n+\n+    uint32_t currentMedianTime = pblockIndex->GetMedianTimePast();\n+\n+    // Get the start of the interval just completed.\n+    const CBlockIndex* pstart = (pblockIndex->nHeight > 0) ? pblockIndex->GetAncestor(pblockIndex->nHeight - m_activationInterval) : NULL;\n+\n+    RuleStates prevRuleStates;\n+    if (pstart && m_ruleStateMap.count(pstart))\n+        prevRuleStates = m_ruleStateMap[pstart];\n+\n+    // Assign the rule states for the new block\n+    //   1) Set all assigned rules for new block to DEFINED (we'll check whether they are active next)\n+    std::set<int> assignedRules = m_deployments->GetAssignedRules(currentMedianTime);\n+    for (std::set<int>::iterator it = assignedRules.begin(); it != assignedRules.end(); ++it)\n+    {\n+        newRuleStates[*it] = DEFINED;\n+    }\n+\n+    //   2) Add all failed and active rules\n+    std::set<int> failedRules;\n+    std::set<int> activeRules;\n+    for (RuleStates::iterator it = prevRuleStates.begin(); it != prevRuleStates.end(); ++it)\n+    {\n+        switch (it->second)\n+        {\n+        case FAILED:\n+            newRuleStates[it->first] = FAILED;\n+            failedRules.insert(it->first);\n+            break;\n+\n+        case LOCKED_IN:\n+            // Locked in rules become active at this block\n+\n+        case ACTIVE:\n+            newRuleStates[it->first] = ACTIVE;\n+            activeRules.insert(it->first);\n+            break;\n+\n+        default:\n+            break;\n+        }\n+    }\n+\n+    //   3) Count set bits for interval\n+    typedef std::map<int /*rule*/, int /*count*/> RuleCountMap;\n+    RuleCountMap ruleCountMap;\n+    while (pprev)\n+    {\n+        if (UsesVersionBits(pprev->nVersion))\n+        {\n+            for (int b = MIN_BIT; b <= MAX_BIT; b++)\n+            {\n+                if ((pprev->nVersion >> b) & 0x1)\n+                {\n+                    int rule = m_deployments->GetAssignedRule(b, pprev->GetMedianTimePast());\n+\n+                    // Only count bits for soft forks that are assigned and are not failed and not already active\n+                    if ((rule == NO_RULE) || failedRules.count(rule) || activeRules.count(rule))\n+                        continue;\n+\n+                    if (ruleCountMap.count(rule))\n+                        ruleCountMap[rule]++;\n+                    else\n+                        ruleCountMap[rule] = 1;\n+                }\n+            }\n+        }\n+\n+        if (pprev == pstart)\n+            break;\n+\n+        pprev = pprev->pprev;\n+    }\n+\n+    //   4) Set newly locked in and failed states\n+    RuleCountMap::iterator it = ruleCountMap.begin();\n+    for (; it != ruleCountMap.end(); ++it)\n+    {\n+        int rule = it->first;\n+        int count = it->second;\n+        const SoftFork* softFork = m_deployments->GetSoftFork(rule);\n+\n+        if (softFork && (count >= softFork->GetThreshold()))\n+            newRuleStates[rule] = LOCKED_IN;\n+        else\n+            if (!m_deployments->IsRuleAssigned(rule, currentMedianTime))\n+                newRuleStates[rule] = FAILED;\n+    }\n+\n+    m_ruleStateMap[pblockIndex] = newRuleStates;\n+\n+    return true;\n+}\n+\n+void BlockRuleIndex::Clear()\n+{\n+    m_ruleStateMap.clear();\n+}\n+\n+\n+static BlockRuleIndex g_blockRuleIndex;\n+BlockRuleIndex& Consensus::VersionBits::GetBlockRuleIndex() { return g_blockRuleIndex; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42386035",
      "id" : 42386035,
      "original_commit_id" : "08083e384869857323b5f0cad1029f353f1d2843",
      "original_position" : 300,
      "path" : "src/consensus/blockruleindex.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42386035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42393298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42393298"
         }
      },
      "body" : "Is it really worth it to have so many namespaces (specially when you are avoiding to use them explicitly in so many cases with ```using namespace```)? Isn't the Consensus namespace enough?\r\n",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T16:29:16Z",
      "diff_hunk" : "@@ -0,0 +1,77 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKRULEINDEX_H\n+#define BITCOIN_BLOCKRULEINDEX_H\n+\n+#include \"versionbits.h\"\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+class CBlockIndex;\n+\n+namespace Consensus\n+{\n+\n+namespace VersionBits",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42393298",
      "id" : 42393298,
      "original_commit_id" : "08083e384869857323b5f0cad1029f353f1d2843",
      "original_position" : 20,
      "path" : "src/consensus/blockruleindex.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42393298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Here's a modified version of the branch the doesn't use library-unfriendly (and bad in general) global g_blockRuleIndex within the new consensus code. The global is maintained in main.cpp (where most globals currently are) but at least it is out of the consensus directory.\r\n\r\nhttps://github.com/jtimon/bitcoin/commits/versionbits\r\n",
      "created_at" : "2015-10-19T16:47:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-149277373",
      "id" : 149277373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-19T16:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149277373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Agree with maintaining the global itself in main. That also makes it clearer that it's protected by the same locks as the other consensus-related state variables there.",
      "created_at" : "2015-10-19T16:50:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-149277917",
      "id" : 149277917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-19T16:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149277917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42407886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42407886"
         }
      },
      "body" : "s/Params()/chainparams for free (diff-wise), please.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T18:28:22Z",
      "diff_hunk" : "@@ -148,6 +145,13 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n+        pblock->nVersion = blockRuleIndex.CreateBlockVersion(pblock->nTime, chainActive.Tip()->pprev);\n+\n+        // -regtest only: allow overriding block.nVersion with\n+        // -blockversion=N to test forking scenarios\n+        if (Params().MineBlocksOnDemand())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42407886",
      "id" : 42407886,
      "original_commit_id" : "d15dcbe49fa4fdeb642d726d55e7eeddb1411508",
      "original_position" : 36,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42407886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42408133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42408133"
         }
      },
      "body" : "Why not on top of the function (like CChainParams& chainparams, like it was in my code) ready to become a parameter for the function?\r\nWhy did you spend any time in moving it down?",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-19T18:30:21Z",
      "diff_hunk" : "@@ -3109,6 +3115,10 @@ bool static LoadBlockIndexDB()\n             pindex->BuildSkip();\n         if (pindex->IsValid(BLOCK_VALID_TREE) && (pindexBestHeader == NULL || CBlockIndexWorkComparator()(pindexBestHeader, pindex)))\n             pindexBestHeader = pindex;\n+\n+        // Insert into versionbits block rule index and recompute soft fork deployment states for chain\n+        Consensus::VersionBits::BlockRuleIndex& blockRuleIndex = g_blockRuleIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42408133",
      "id" : 42408133,
      "original_commit_id" : "d15dcbe49fa4fdeb642d726d55e7eeddb1411508",
      "original_position" : 33,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42408133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42503778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42503778"
         }
      },
      "body" : "This should be moved to Consensus::Params. As always, \"this could be done later\", but if we do it now (before it affects anyone building on top of master or stable releases) it will be less painful for everyone. ",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-20T14:38:44Z",
      "diff_hunk" : "@@ -0,0 +1,75 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKRULEINDEX_H\n+#define BITCOIN_BLOCKRULEINDEX_H\n+\n+#include \"versionbits.h\"\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+class CBlockIndex;\n+\n+namespace Consensus\n+{\n+\n+namespace VersionBits\n+{\n+\n+typedef std::map<int /*rule*/, RuleState> RuleStates;\n+typedef std::map<const CBlockIndex*, RuleStates> RuleStateMap;\n+\n+class BlockRuleIndex\n+{\n+public:\n+    BlockRuleIndex(int activationInterval = 0, const SoftForkDeployments* deployments = NULL) :\n+        m_activationInterval(activationInterval), m_deployments(deployments) { }\n+\n+    int GetActivationInterval() const { return m_activationInterval; }\n+\n+    bool IsIntervalStart(const CBlockIndex* pblockIndex) const;\n+\n+    const CBlockIndex* GetIntervalStart(const CBlockIndex* pblockIndex) const;\n+\n+    // Clears the index, so should only be called upon initialization\n+    void SetSoftForkDeployments(int activationInterval, const SoftForkDeployments* deployments);\n+\n+    // Constructs a new nVersion field with bits set for all deployments that have not yet activated or failed\n+    // The disabledRules parameter allows us to request that the bit for a rule be unset if it has not yet locked in\n+    int CreateBlockVersion(uint32_t nTime, CBlockIndex* pprev, const std::set<int>& disabledRules = std::set<int>()) const;\n+\n+    RuleState GetRuleState(int rule, const CBlockIndex* pblockIndex) const;\n+\n+    RuleStates GetRuleStates(const CBlockIndex* pblockIndex) const;\n+\n+    // Returns false if the block does not connect or the version has set bits that shouldn't be set\n+    bool AreVersionBitsRecognized(const CBlockIndex* pblockIndex, const CBlockIndex* pprev = NULL) const;\n+\n+    bool InsertBlockIndex(const CBlockIndex* pblockIndex, const CBlockIndex* pprev = NULL);\n+\n+    void Clear();\n+\n+#ifdef VERSIONBITS_UNIT_TEST\n+    // For testing only\n+\n+    // Inserts arbitrary rule states \n+    void InsertBlockIndexWithRuleStates(const CBlockIndex* pblockIndex, const RuleStates& ruleStates)\n+    {\n+        m_ruleStateMap[pblockIndex] = ruleStates;\n+    }\n+#endif\n+\n+private:\n+    int m_activationInterval;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42503778",
      "id" : 42503778,
      "original_commit_id" : "dea99a4d8f3e3a0cf8c1c4c59e127c3ee58067dc",
      "original_position" : 67,
      "path" : "src/consensus/blockruleindex.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42503778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Updated https://github.com/jtimon/bitcoin/commits/versionbits with one more commit that solves my last nit.\r\nEDIT: @CodeShark If you want me to do the squashing, I'm happy to do it.",
      "created_at" : "2015-10-20T14:40:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-149588196",
      "id" : 149588196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-20T14:44:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149588196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon  Please let's hold off on any more code movement nits until after 0.12. Let's focus the rest of this conversation on this PR's behavior.",
      "created_at" : "2015-10-21T23:53:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-150056704",
      "id" : 150056704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-22T00:16:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150056704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "body" : "@CodeShark I think you meant @jtimon ",
      "created_at" : "2015-10-22T00:14:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-150059411",
      "id" : 150059411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-22T00:14:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150059411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@dcousens lol, yeah. thx.",
      "created_at" : "2015-10-22T00:16:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-150060322",
      "id" : 150060322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-22T00:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150060322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "body" : "These aren't code movements, these are (I think very legitimate) nits to NEW code. This is the best time to make modifications to the new code, once it is merged, we won't have the chance to change it without affecting many many people again.\r\nIf you are not going to incorporate more suggestions that's fine too: I will create an alternative PR then. Little by little I want to get to what I suggested in https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148043500 . I won't change functionality (at least on purpose) and it will also help me review the implemented functionality.\r\nAll I want to avoid is unwalking what we've already walked, because that's never necessary to deploy new functionality.\r\nThis is NOT bike-shedding even if you may perceive it as such. I'm sorry but there will be more nits (although you are free not to solve them, and reviewers can chose the PR they prefer).",
      "created_at" : "2015-10-22T08:31:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-150146953",
      "id" : 150146953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-22T08:31:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150146953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42797646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42797646"
         }
      },
      "body" : "Why have BIP62 only to return false? Can't we add it later if needed?\r\nBIP42 seems completely unnecessary.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-22T19:55:37Z",
      "diff_hunk" : "@@ -0,0 +1,144 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/softforks.h\"\n+\n+#include \"chain.h\"\n+#include \"consensus/blockruleindex.h\"\n+#include \"consensus/params.h\"\n+\n+using namespace Consensus::SoftForks;\n+\n+/**\n+ * Returns true if there are nRequired or more blocks of minVersion or above\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n+ */\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n+{\n+    unsigned int nFound = 0;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+    return (nFound >= nRequired);\n+}\n+\n+VersionStatus Consensus::SoftForks::CheckVersion(const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)\n+{\n+    using namespace Consensus::VersionBits;\n+\n+    if (!pindexPrev)\n+        pindexPrev = blockIndex.pprev;\n+\n+    // Handle versionbits cases first\n+    if (UsesVersionBits(blockIndex.nVersion))\n+        return blockRuleIndex.AreVersionBitsRecognized(&blockIndex, pindexPrev) ? VALID : UNRECOGNIZED;\n+\n+    // Reject blockIndex.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (blockIndex.nVersion < 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return INVALID;\n+\n+    // Reject blockIndex.nVersion=2 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (blockIndex.nVersion < 3 && IsSuperMajority(3, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return INVALID;\n+\n+    // Reject blockIndex.nVersion=3 blocks when 95% (75% on testnet) of the network has upgraded:\n+    // DEPLOY BIP65 - Uncomment the following line to deploy\n+    //if (blockIndex.nVersion < 4 && IsSuperMajority(4, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+    //    return false;\n+\n+    return VALID;\n+}\n+\n+bool Consensus::SoftForks::UseRule(int rule, const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)\n+{\n+    if (!pindexPrev)\n+        pindexPrev = blockIndex.pprev;\n+\n+    switch (rule)\n+    {\n+    case BIP16:\n+        // BIP16 didn't become active until Apr 1 2012\n+        return blockIndex.GetBlockTime() >= 1333238400;\n+\n+    case BIP30:\n+        // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n+        // unless those are already completely spent.\n+        // If such overwrites are allowed, coinbases and transactions depending upon those\n+        // can be duplicated to remove the ability to spend the first instance -- even after\n+        // being sent to another address.\n+        // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n+        // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n+        // already refuses previously-known transaction ids entirely.\n+        // This rule was originally applied to all blocks with a timestamp after March 15, 2012, 0:00 UTC.\n+        // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n+        // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n+        // initial block download.\n+        return (!blockIndex.phashBlock) ||\n+            !((blockIndex.nHeight == 91842 && blockIndex.GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n+             (blockIndex.nHeight == 91880 && blockIndex.GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n+\n+    case BIP34:\n+        // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n+        // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n+        return blockIndex.nVersion >= 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams);\n+        \n+    case BIP42:\n+        return false;\n+\n+    case BIP62:\n+        return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42797646",
      "id" : 42797646,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 94,
      "path" : "src/consensus/softforks.cpp",
      "position" : 97,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42797646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42797901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42797901"
         }
      },
      "body" : "Why the old deployments must be checked in the same function as the new deployments which require the versionbits blockRuleIndex? We can have 2 methods UseRule and UseRuleOld.",
      "commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "created_at" : "2015-10-22T19:57:45Z",
      "diff_hunk" : "@@ -0,0 +1,144 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/softforks.h\"\n+\n+#include \"chain.h\"\n+#include \"consensus/blockruleindex.h\"\n+#include \"consensus/params.h\"\n+\n+using namespace Consensus::SoftForks;\n+\n+/**\n+ * Returns true if there are nRequired or more blocks of minVersion or above\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n+ */\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n+{\n+    unsigned int nFound = 0;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+    return (nFound >= nRequired);\n+}\n+\n+VersionStatus Consensus::SoftForks::CheckVersion(const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)\n+{\n+    using namespace Consensus::VersionBits;\n+\n+    if (!pindexPrev)\n+        pindexPrev = blockIndex.pprev;\n+\n+    // Handle versionbits cases first\n+    if (UsesVersionBits(blockIndex.nVersion))\n+        return blockRuleIndex.AreVersionBitsRecognized(&blockIndex, pindexPrev) ? VALID : UNRECOGNIZED;\n+\n+    // Reject blockIndex.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (blockIndex.nVersion < 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return INVALID;\n+\n+    // Reject blockIndex.nVersion=2 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (blockIndex.nVersion < 3 && IsSuperMajority(3, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return INVALID;\n+\n+    // Reject blockIndex.nVersion=3 blocks when 95% (75% on testnet) of the network has upgraded:\n+    // DEPLOY BIP65 - Uncomment the following line to deploy\n+    //if (blockIndex.nVersion < 4 && IsSuperMajority(4, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+    //    return false;\n+\n+    return VALID;\n+}\n+\n+bool Consensus::SoftForks::UseRule(int rule, const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)\n+{\n+    if (!pindexPrev)\n+        pindexPrev = blockIndex.pprev;\n+\n+    switch (rule)\n+    {\n+    case BIP16:\n+        // BIP16 didn't become active until Apr 1 2012\n+        return blockIndex.GetBlockTime() >= 1333238400;\n+\n+    case BIP30:\n+        // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n+        // unless those are already completely spent.\n+        // If such overwrites are allowed, coinbases and transactions depending upon those\n+        // can be duplicated to remove the ability to spend the first instance -- even after\n+        // being sent to another address.\n+        // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n+        // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n+        // already refuses previously-known transaction ids entirely.\n+        // This rule was originally applied to all blocks with a timestamp after March 15, 2012, 0:00 UTC.\n+        // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n+        // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n+        // initial block download.\n+        return (!blockIndex.phashBlock) ||\n+            !((blockIndex.nHeight == 91842 && blockIndex.GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n+             (blockIndex.nHeight == 91880 && blockIndex.GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n+\n+    case BIP34:\n+        // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n+        // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n+        return blockIndex.nVersion >= 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams);\n+        \n+    case BIP42:\n+        return false;\n+\n+    case BIP62:\n+        return false;\n+    \n+    case BIP65:\n+        // Start enforcing CHECKLOCKTIMEVERIFY, (BIP65) for blockIndex.nVersion=4, when 75% of the network has upgraded:\n+        // DEPLOY BIP65 - Remove the following line to deploy\n+        return false;\n+        return blockIndex.nVersion >= 4 && IsSuperMajority(4, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams);\n+\n+    case BIP66:\n+        // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks, when 75% of the network has upgraded:\n+        return blockIndex.nVersion >= 3 && IsSuperMajority(3, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams);\n+\n+    default:\n+        // Handle versionbits cases\n+        return (blockRuleIndex.GetRuleState(rule, &blockIndex) == Consensus::VersionBits::ACTIVE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42797901",
      "id" : 42797901,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 108,
      "path" : "src/consensus/softforks.cpp",
      "position" : 108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-22T20:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42797901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42798729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42798729"
         }
      },
      "body" : "Why ```int rule``` instead of Consensus::SoftForks::Rule ? This happens in many functions/methods, in class attributes and with other enums like RuleState.",
      "commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "created_at" : "2015-10-22T20:04:46Z",
      "diff_hunk" : "@@ -0,0 +1,144 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/softforks.h\"\n+\n+#include \"chain.h\"\n+#include \"consensus/blockruleindex.h\"\n+#include \"consensus/params.h\"\n+\n+using namespace Consensus::SoftForks;\n+\n+/**\n+ * Returns true if there are nRequired or more blocks of minVersion or above\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n+ */\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n+{\n+    unsigned int nFound = 0;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+    return (nFound >= nRequired);\n+}\n+\n+VersionStatus Consensus::SoftForks::CheckVersion(const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)\n+{\n+    using namespace Consensus::VersionBits;\n+\n+    if (!pindexPrev)\n+        pindexPrev = blockIndex.pprev;\n+\n+    // Handle versionbits cases first\n+    if (UsesVersionBits(blockIndex.nVersion))\n+        return blockRuleIndex.AreVersionBitsRecognized(&blockIndex, pindexPrev) ? VALID : UNRECOGNIZED;\n+\n+    // Reject blockIndex.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (blockIndex.nVersion < 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return INVALID;\n+\n+    // Reject blockIndex.nVersion=2 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (blockIndex.nVersion < 3 && IsSuperMajority(3, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return INVALID;\n+\n+    // Reject blockIndex.nVersion=3 blocks when 95% (75% on testnet) of the network has upgraded:\n+    // DEPLOY BIP65 - Uncomment the following line to deploy\n+    //if (blockIndex.nVersion < 4 && IsSuperMajority(4, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+    //    return false;\n+\n+    return VALID;\n+}\n+\n+bool Consensus::SoftForks::UseRule(int rule, const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42798729",
      "id" : 42798729,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 57,
      "path" : "src/consensus/softforks.cpp",
      "position" : 57,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-22T20:04:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42798729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42801091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42801091"
         }
      },
      "body" : "According to BIP9, the threshold is not per-deployment, it's per-chain, it says \"Threshold If bit B is set in 1916 (1512 on testnet) or more of the 2016 blocks within a retarget period\". This should move to Consensus::Params as a single field (just like BlockRuleIndex::m_activationInterval).",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-22T20:24:23Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42801091",
      "id" : 42801091,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42801091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42801269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42801269"
         }
      },
      "body" : "BIP9 is just advisory, and individual softforks can deviate from it\narbitrarily. So I think it should be both per chain and per fork :)\n",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-22T20:25:49Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42801269",
      "id" : 42801269,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42801269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42815226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42815226"
         }
      },
      "body" : "Well, if it is per fork it's also per chain as each fork can be deployed differently per chain.\r\nI think this is an unnecessary complication (I think all of them are going to be 95% for the main chain).\r\nBut if we go for it, we should update BIP9.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-22T22:35:50Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42815226",
      "id" : 42815226,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42815226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Updated https://github.com/bitcoin/bitcoin/compare/master...jtimon:versionbits with the changes described in https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-148043500 .\r\n",
      "created_at" : "2015-10-23T18:42:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-150659690",
      "id" : 150659690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-23T18:42:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150659690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42940913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42940913"
         }
      },
      "body" : "Yeah, if someone wants to modify their special BIP to deviate from this, that's their job to introduce a new per-chain parameter.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-25T04:37:07Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42940913",
      "id" : 42940913,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42940913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=3",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42941549"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42941549"
         }
      },
      "body" : "@rustyrussell We can just use the same threshold for each soft fork in a given chain. In the future if we ever decide to change the threshold, it will be straightforward to do so without requiring any changes to the implementation while allowing us to keep the old thresholds for the earlier forks. The BIP document mentions the possibility of modifying the threshold at some point in the future. So I don't see any downside in supplying this parameter for each fork.\r\n\r\nAdding the parameter to Consensus::Params means that if we ever decide to support a different threshold we'll have to hack around it, which seems completely unnecessary when the current implementation can already cleanly support it.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-25T06:09:42Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42941549",
      "id" : 42941549,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42941549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/894059?v=3",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42942565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42942565"
         }
      },
      "body" : "Maybe it would be useful to plan for 10 bits 95%, 10 bits 85%, 5 bits 75%, and 5 bits 65%? Does anyone expect to have more than 10 ongoing softforks at a time anyway?",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-25T08:33:45Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42942565",
      "id" : 42942565,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42942565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42942950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42942950"
         }
      },
      "body" : "To be clear, whether the threshold is per softfork or per chain, it is in Consensus::Params (just once or repeated per softfork). If we only use one per chain (the same for all softforks), we are wasting space, although it is true that not much (even after hundreds of deployments).\r\n",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-25T09:31:45Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42942950",
      "id" : 42942950,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42942950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42986822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42986822"
         }
      },
      "body" : "This field is unnecessarily redundant. If you don't want to create a new field in ```Consensus::Params```, can you at least use ```consensusParams.DifficultyAdjustmentInterval()``` directly?\r\n",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-26T12:31:16Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKRULEINDEX_H\n+#define BITCOIN_BLOCKRULEINDEX_H\n+\n+#include \"versionbits.h\"\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+class CBlockIndex;\n+\n+namespace Consensus {\n+namespace VersionBits {\n+\n+typedef std::map<int /*rule*/, RuleState> RuleStates;\n+typedef std::map<const CBlockIndex*, RuleStates> RuleStateMap;\n+\n+class BlockRuleIndex\n+{\n+public:\n+    BlockRuleIndex(int activationInterval = 0, const SoftForkDeployments* deployments = NULL) :\n+        m_activationInterval(activationInterval), m_deployments(deployments) { }\n+\n+    int GetActivationInterval() const { return m_activationInterval; }\n+\n+    bool IsIntervalStart(const CBlockIndex* pblockIndex) const;\n+\n+    const CBlockIndex* GetIntervalStart(const CBlockIndex* pblockIndex) const;\n+\n+    // Clears the index, so should only be called upon initialization\n+    void SetSoftForkDeployments(int activationInterval, const SoftForkDeployments* deployments);\n+\n+    // Constructs a new nVersion field with bits set for all deployments that have not yet activated or failed\n+    // The disabledRules parameter allows us to request that the bit for a rule be unset if it has not yet locked in\n+    int CreateBlockVersion(uint32_t nTime, CBlockIndex* pprev, const std::set<int>& disabledRules = std::set<int>()) const;\n+\n+    RuleState GetRuleState(int rule, const CBlockIndex* pblockIndex) const;\n+\n+    RuleStates GetRuleStates(const CBlockIndex* pblockIndex) const;\n+\n+    // Returns false if the block does not connect or the version has set bits that shouldn't be set\n+    bool AreVersionBitsRecognized(const CBlockIndex* pblockIndex, const CBlockIndex* pprev = NULL) const;\n+\n+    bool InsertBlockIndex(const CBlockIndex* pblockIndex, const CBlockIndex* pprev = NULL);\n+\n+    void Clear();\n+\n+#ifdef VERSIONBITS_UNIT_TEST\n+    // For testing only\n+\n+    // Inserts arbitrary rule states \n+    void InsertBlockIndexWithRuleStates(const CBlockIndex* pblockIndex, const RuleStates& ruleStates)\n+    {\n+        m_ruleStateMap[pblockIndex] = ruleStates;\n+    }\n+#endif\n+\n+private:\n+    RuleStateMap m_ruleStateMap;\n+    int m_activationInterval;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42986822",
      "id" : 42986822,
      "original_commit_id" : "ca60edb60924f46eb8e8111dce472672d1dc3d44",
      "original_position" : 65,
      "path" : "src/consensus/blockruleindex.h",
      "position" : 65,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42986822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42987352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42987352"
         }
      },
      "body" : "~~We're avoiding state-full structures like this on consensus folder. Even if the folder has to depend on state-full structures like CBlockIndex, CCoinsViewCache and now also BlockRuleIndex temporarily (in this case it could be avoided directly), the consensus code will have to be decoupled from them to complete libconsensus, so chain.o, coins.o and blockruleindex.o don't belong in this folder.~~",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-26T12:36:50Z",
      "diff_hunk" : "@@ -99,7 +99,10 @@ BITCOIN_CORE_H = \\\n   compressor.h \\\n   consensus/consensus.h \\\n   consensus/params.h \\\n+  consensus/blockruleindex.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42987352",
      "id" : 42987352,
      "original_commit_id" : "ca60edb60924f46eb8e8111dce472672d1dc3d44",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-11-04T00:03:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42987352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42995738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42995738"
         }
      },
      "body" : "Can you move this enum to consensus/params.h ?\r\nIt will be eventually necessary to expose the versionbits functionality to libconsensus.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-26T14:00:02Z",
      "diff_hunk" : "@@ -0,0 +1,40 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SOFTFORKS_H\n+#define BITCOIN_SOFTFORKS_H\n+\n+#include <cstddef>\n+\n+class CBlockIndex;\n+namespace Consensus {\n+\n+struct Params;\n+namespace VersionBits { class BlockRuleIndex; }\n+\n+namespace SoftForks {\n+\n+enum Rule",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42995738",
      "id" : 42995738,
      "original_commit_id" : "ca60edb60924f46eb8e8111dce472672d1dc3d44",
      "original_position" : 19,
      "path" : "src/consensus/softforks.h",
      "position" : 19,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42995738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42996162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42996162"
         }
      },
      "body" : "Can you move this class (ideally as a struct with public attributes instead of getters) to consensus/params.h ? \r\nIt will be eventually necessary to expose the versionbits functionality in libconsensus.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-26T14:03:26Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42996162",
      "id" : 42996162,
      "original_commit_id" : "ca60edb60924f46eb8e8111dce472672d1dc3d44",
      "original_position" : 32,
      "path" : "src/consensus/versionbits.h",
      "position" : 32,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42996162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42996786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42996786"
         }
      },
      "body" : "Anyway, I will change my modification of this implementation back to a threshold per softfork like in this implementation  so that they don't differ too much. In my case it will be trivial to change later.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-26T14:07:46Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VERSIONBITS_H\n+#define BITCOIN_VERSIONBITS_H\n+\n+#include <map>\n+#include <set>\n+#include <stdexcept>\n+#include <stdint.h>\n+\n+namespace Consensus\n+{\n+\n+const int           NO_RULE      = -1;\n+\n+namespace VersionBits\n+{\n+\n+const int           VERSION_HIGH_BITS   = 0x20000000;\n+const int           VERSION_BITS_MASK   = 0x1fffffff;\n+const char          MIN_BIT             = 0;\n+const char          MAX_BIT             = 28;\n+\n+enum RuleState { UNDEFINED, DEFINED, LOCKED_IN, ACTIVE, FAILED };\n+\n+const char* GetRuleStateText(int ruleState, bool bUseCaps = false);\n+\n+bool UsesVersionBits(int nVersion);\n+\n+class SoftFork\n+{\n+public:\n+    SoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime) :\n+        m_bit(bit),\n+        m_rule(rule),\n+        m_threshold(threshold),\n+        m_deployTime(deployTime),\n+        m_expireTime(expireTime) { }\n+\n+    int         GetBit() const { return m_bit; }\n+    int         GetRule() const { return m_rule; }\n+    int         GetThreshold() const { return m_threshold; }\n+    uint32_t    GetDeployTime() const { return m_deployTime; }\n+    uint32_t    GetExpireTime() const { return m_expireTime; }\n+\n+private:\n+    int m_bit;\n+    int m_rule;\n+    int m_threshold;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42996786",
      "id" : 42996786,
      "original_commit_id" : "1b8acb8f91e47ca16747caf8c8e235e85ba3cc83",
      "original_position" : 51,
      "path" : "src/consensus/versionbits.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42996786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42997256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42997256"
         }
      },
      "body" : "Wouldn't it be better to do this in init::AppInit2() ? ",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-26T14:11:20Z",
      "diff_hunk" : "@@ -114,6 +116,12 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n+        // Initialize block rule index for versionbits support",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r42997256",
      "id" : 42997256,
      "original_commit_id" : "ca60edb60924f46eb8e8111dce472672d1dc3d44",
      "original_position" : 15,
      "path" : "src/bitcoind.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-26T18:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42997256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Here's a version rebased on top of master:\r\n\r\nhttps://github.com/bitcoin/bitcoin/compare/bitcoin:master...jtimon:CodeShark_versionbits_rebased\r\n\r\nHere are a couple of nits (don't BIP42 and BIP62, and don't BlockRuleIndex::m_activationInterval) implemented in code: https://github.com/jtimon/bitcoin/compare/CodeShark_versionbits_rebased...jtimon:versionbits-nits\r\n",
      "created_at" : "2015-10-26T15:05:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-151167219",
      "id" : 151167219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-10-26T15:05:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151167219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r43255010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43255010"
         }
      },
      "body" : "In which cases does pindexPrev need be passed as something different from NULL?\r\nSame question for ```Consensus::SoftForks::UseRule()```.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-28T13:34:36Z",
      "diff_hunk" : "@@ -0,0 +1,147 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/softforks.h\"\n+\n+#include \"chain.h\"\n+#include \"consensus/blockruleindex.h\"\n+#include \"consensus/params.h\"\n+\n+using namespace Consensus::SoftForks;\n+\n+/**\n+ * Returns true if there are nRequired or more blocks of minVersion or above\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n+ */\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n+{\n+    unsigned int nFound = 0;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+    return (nFound >= nRequired);\n+}\n+\n+VersionStatus Consensus::SoftForks::CheckVersion(const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)\n+{\n+    using namespace Consensus::VersionBits;\n+\n+    if (!pindexPrev)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r43255010",
      "id" : 43255010,
      "original_commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "original_position" : 34,
      "path" : "src/consensus/softforks.cpp",
      "position" : 34,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-28T13:34:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43255010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r43256093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43256093"
         }
      },
      "body" : "Can't this return a boolean and use ```CValidationState& state``` like ```main::ContextualCheckBlockHeader()``` (the functions where some of ```Consensus::SoftForks::CheckVersion()``` comes from) is currently doing?",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-10-28T13:43:55Z",
      "diff_hunk" : "@@ -0,0 +1,147 @@\n+// Copyright (c) 2015 Eric Lombrozo\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/softforks.h\"\n+\n+#include \"chain.h\"\n+#include \"consensus/blockruleindex.h\"\n+#include \"consensus/params.h\"\n+\n+using namespace Consensus::SoftForks;\n+\n+/**\n+ * Returns true if there are nRequired or more blocks of minVersion or above\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n+ */\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n+{\n+    unsigned int nFound = 0;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+    return (nFound >= nRequired);\n+}\n+\n+VersionStatus Consensus::SoftForks::CheckVersion(const CBlockIndex& blockIndex, const Consensus::VersionBits::BlockRuleIndex& blockRuleIndex, const Consensus::Params& consensusParams, CBlockIndex* pindexPrev)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r43256093",
      "id" : 43256093,
      "original_commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "original_position" : 30,
      "path" : "src/consensus/softforks.cpp",
      "position" : 30,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-10-28T13:43:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43256093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r43825925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43825925"
         }
      },
      "body" : "Is this just an in-memory cache that stores nothing in disk? Then this doesn't apply.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-11-04T00:03:18Z",
      "diff_hunk" : "@@ -99,7 +99,10 @@ BITCOIN_CORE_H = \\\n   compressor.h \\\n   consensus/consensus.h \\\n   consensus/params.h \\\n+  consensus/blockruleindex.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r43825925",
      "id" : 43825925,
      "original_commit_id" : "ca60edb60924f46eb8e8111dce472672d1dc3d44",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-11-04T00:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/43825925",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r47256760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47256760"
         }
      },
      "body" : "This seems to me that we can't reuse a bit for a new soft fork until the expire time, regardless of whether the previous soft fork at that bit has already activated.  I thought the intention was to allow reuse immediately after activation.",
      "commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "created_at" : "2015-12-10T17:30:22Z",
      "diff_hunk" : "@@ -0,0 +1,179 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"versionbits.h\"\n+\n+using namespace Consensus::VersionBits;\n+\n+typedef std::multimap<int /*bit*/, int /*rule*/> RuleMap;\n+typedef std::map<int /*rule*/, const SoftFork*> SoftForkMap;\n+\n+const char* Consensus::VersionBits::GetRuleStateText(int ruleState, bool bUseCaps)\n+{\n+    switch (ruleState)\n+    {\n+    case UNDEFINED:\n+        return bUseCaps ? \"UNDEFINED\" : \"undefined\";\n+\n+    case DEFINED:\n+        return bUseCaps ? \"DEFINED\" : \"defined\";\n+\n+    case LOCKED_IN:\n+        return bUseCaps ? \"LOCKED IN\" : \"locked in\";\n+\n+    case ACTIVE:\n+        return bUseCaps ? \"ACTIVE\" : \"active\";\n+\n+    case FAILED:\n+        return bUseCaps ? \"FAILED\" : \"failed\";\n+\n+    default:\n+        return bUseCaps ? \"N/A\" : \"n/a\";\n+    }\n+}\n+\n+bool Consensus::VersionBits::UsesVersionBits(int nVersion)\n+{\n+    return (nVersion & ~VERSION_BITS_MASK) == VERSION_HIGH_BITS;\n+}\n+\n+\n+SoftForkDeployments::~SoftForkDeployments()\n+{\n+    Clear();\n+}\n+\n+void SoftForkDeployments::AddSoftFork(int bit, int rule, int threshold, uint32_t deployTime, uint32_t expireTime)\n+{\n+    if (bit < MIN_BIT || bit > MAX_BIT)\n+        throw std::runtime_error(\"VersionBits::SoftForkDeployments::AddSoftFork() - invalid bit.\");\n+\n+    if (threshold < 0)\n+        throw std::runtime_error(\"VersionBits::SoftForkDeployments::AddSoftFork() - invalid threshold.\");\n+\n+    if (deployTime >= expireTime)\n+        throw std::runtime_error(\"VersionBits::SoftForkDeployments::AddSoftFork() - invalid time range.\");\n+\n+    if (m_softForks.count(rule))\n+        throw std::runtime_error(\"VersionBits::SoftForkDeployments::AddSoftFork() - rule already assigned.\");\n+\n+    if (!IsBitAvailable(bit, deployTime, expireTime))\n+        throw std::runtime_error(\"VersionBits::SoftForkDeployments::AddSoftFork() - bit conflicts with existing softFork.\");\n+\n+    SoftFork* softFork = new SoftFork(bit, rule, threshold, deployTime, expireTime);\n+    m_softForks.insert(std::pair<int, SoftFork*>(rule, softFork));\n+    m_rules.insert(std::pair<int, int>(bit, rule));\n+}\n+\n+bool SoftForkDeployments::IsBitAvailable(int bit, uint32_t deployTime, uint32_t expireTime) const\n+{\n+    std::pair<RuleMap::const_iterator, RuleMap::const_iterator> range;\n+    range = m_rules.equal_range(bit);\n+    for (RuleMap::const_iterator rit = range.first; rit != range.second; ++rit)\n+    {\n+        SoftForkMap::const_iterator it = m_softForks.find(rit->second);\n+        if (it == m_softForks.end())\n+            throw std::runtime_error(\"VersionBits::SoftForkDeployments::IsBitAvailable() - inconsistent internal state.\");\n+\n+        // Do softFork times overlap?\n+        const SoftFork* softFork = it->second;\n+        if (((deployTime >= softFork->GetDeployTime()) && (deployTime <  softFork->GetExpireTime())) ||\n+            ((expireTime >  softFork->GetDeployTime()) && (expireTime <= softFork->GetExpireTime())) ||\n+            ((deployTime <= softFork->GetDeployTime()) && (expireTime >= softFork->GetExpireTime())))\n+                return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#discussion_r47256760",
      "id" : 47256760,
      "original_commit_id" : "06992eb9eb4c4f0ccbd5b1e47e8517ff1a9ef597",
      "original_position" : 84,
      "path" : "src/consensus/versionbits.cpp",
      "position" : 84,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6816",
      "updated_at" : "2015-12-10T17:30:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/47256760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "concept ACK, needs rebase",
      "created_at" : "2015-12-11T01:19:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-163802372",
      "id" : 163802372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2015-12-11T01:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163802372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "close in favor of #7575 ?",
      "created_at" : "2016-03-16T18:09:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-197462411",
      "id" : 197462411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2016-03-16T18:09:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197462411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon Yes.",
      "created_at" : "2016-03-16T18:11:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6816#issuecomment-197463478",
      "id" : 197463478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6816",
      "updated_at" : "2016-03-16T18:11:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197463478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7275704?v=3",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   }
]

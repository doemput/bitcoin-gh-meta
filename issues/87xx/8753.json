{
   "assignee" : null,
   "assignees" : [],
   "body" : "Add a pool for locked memory chunks, replacing `LockedPageManager`.\n\nThis is something I've been wanting to do for a long time. The current approach of preventing swapping of sensitive information by locking objects where they happen to be on the stack or heap in-place causes a lot of mlock/munlock system call churn, slowing down any handling of keys.\n\nNot only that, but locked memory is a limited resource and using a lot of it bogs down the system by increasing overall swappiness, so the previous approach of locking every page that may contain any key information (but also other information) is wasteful.\n\nThus replace it with a consolidated pool of locked memory, so that chunks of \"secure\" memory can be allocated and freed without any system calls, and there is little memory overhead as possible (for example, administrative structures are not themselves in locked memory). The pool consists of one of more arenas, which divide a contiguous memory range into chunks. Arenas are allocated per 256 kB (configurable). If all current arenas are full, allocate a new one. Arenas are directly allocated from the OS with the appropriate memory page allocation API. No arenas are ever freed unless the program exits.\n- I've kept the arena implementation itself basic, for easy review. If this turns out to be ever a bottleneck we can consider adding free-lists per chunk size, per-arena locking and other typical C heap optimizations, but I don't want to overdesign this for no good reason. Let's agree it's a lot better than what we have now. Unit tests have been added.\n- To keep a handle on how much locked memory we're using I've added a RPC call `getmemoryinfo` that returns statistics from LockedPoolManager. This  can also be used to check whether locking actually succeeded (to prevent sudden crashes with low ulimits it is not fatal if locking fails, but it is useful to be able to see if all key data is still in unswappable memory).\n- This is a more portable and future-proof API. Some OSes may not be able to pin e.g. stack or heap pages in place but have an API to (de)allocate pinned or locked memory pages.\n### Review notes\n- Please review the wallet commits carefully. Especially where arrays have been switched to vectors, that no `sizeof(vectortype)` remains in the memcpys and memcmps usage (ick!), and `.data()` or `&vec[x]` is used as appropriate instead of `&vec` which would overwrite the vector structure.\n### Measurements\n\nImmediately after startup, loading a fairly large wallet.\n\nAmount of memory locked `cat /proc/$PID/status | grep VmLck`, current master:\n\n```\n    VmLck:      1376 kB\n```\n\nWith this patch:\n\n```\n    VmLck:       512 kB\n```\n\nSyscall count `strace -cf` over whole run (start+shutdown immediately)  current master:\n\n```\n    0.00    0.000328           0     10541           mlock\n    0.00    0.000114           0     10541           munlock\n```\n\nWith this patch:\n\n```\n    0.00    0.000000           0         2           mlock\n    0.00    0.000000           0         2           munlock\n```\n",
   "closed_at" : "2016-11-02T10:16:49Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 25,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8753/comments",
   "created_at" : "2016-09-18T09:17:10Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8753/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/8753",
   "id" : 177641018,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "id" : 241832923,
         "name" : "Utils and libraries",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils%20and%20libraries"
      },
      {
         "color" : "02d7e1",
         "default" : false,
         "id" : 149424,
         "name" : "Wallet",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8753/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 8753,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/8753.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8753",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/8753.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8753"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Locked memory manager",
   "updated_at" : "2016-11-02T13:08:54Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8753",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   }
}

[
   {
      "body" : "The bottleneck is not your internet bandwidth.\r\n\r\nThe slowdown happens because of block verifications causing thousands of operations every second including database (utxo-set) lookups on your disk or in the db memory cache.\r\n\r\nTry to use a SSD and/or set your -dbcache to a value around 4000 (depending on how much ram you have available).",
      "created_at" : "2016-09-15T11:35:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247304392",
      "id" : 247304392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T11:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247304392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Well, there must be some subtility I am not aware of (and I am trying to see what happens for a normal user, not someone able to use options)\r\n\r\nDo you mean that ``sum(check downloaded block(s) + time to download block(s)) !~ (check blockchain while opening bitcoin core)+ (total time to download all the blocks)`` ?\r\n\r\ncheck blockchain while opening bittorrent ~ 30/40mn for me\r\n\r\nWorst case: blockchain is 100 GB, 10 Mbps --> 22 hours to download with bittorrent (worst case again if we consider this is slower)\r\n\r\nTotal: < 1 day, this is very far from 10 days\r\n\r\nAs far as I understand bitcoin core only connects to 8 peers, so the download bandwidth is limited to only the [sum of the upload bandwidth of the 8 peers], knowing that unlike bittorrent your goal is not to use the totality of the upload bandwidth of those peers I suppose\r\n\r\nIn that conditions I really don't see how you can compete with bittorrent and how the method can be faster\r\n\r\n",
      "created_at" : "2016-09-15T17:16:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247392183",
      "id" : 247392183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T17:16:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247392183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : "Again: the speed is dominated by how fast you can verify the blocks, not how fast you can download them.\n\nIf you'd download them via BitTorrent, you'd still need 10 days to verify\nthem in your setup, in addition to the 1 day to download it. Bitcoin Core verifies simultaneously with downloading, avoiding the need for double storage and needing to wait for the download to complete before starting to validate. That verification can be sped up a lot if you can assign more memory to the database cache as @jonasschelli mentioned.\n\n10 days does sound extremely long though. Can you share some information about your hardware (disk, cpu, memory)?\n",
      "created_at" : "2016-09-15T17:22:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247393488",
      "id" : 247393488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T17:27:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247393488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "As far as I remember it took me about 20 hours to download whole blockchain (80GB) on my 4core Skylake CPU. Comparing to Raspberry Pi3, which took like 3 weeks to do that on the same internet line illustrates the dependency on computing power.\r\n\r\nBut I wonder, if there is anything that Core can do/plan to reduce the full-download time?",
      "created_at" : "2016-09-15T20:23:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247443479",
      "id" : 247443479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T20:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247443479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11314444?v=3",
         "events_url" : "https://api.github.com/users/martin-lizner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martin-lizner/followers",
         "following_url" : "https://api.github.com/users/martin-lizner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martin-lizner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martin-lizner",
         "id" : 11314444,
         "login" : "martin-lizner",
         "organizations_url" : "https://api.github.com/users/martin-lizner/orgs",
         "received_events_url" : "https://api.github.com/users/martin-lizner/received_events",
         "repos_url" : "https://api.github.com/users/martin-lizner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martin-lizner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martin-lizner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martin-lizner"
      }
   },
   {
      "body" : "We're continuously working on it.\r\n\r\nI suggest you try syncing with 0.11 (before secp256k1 validation), or 0.9 (before headers-first sync), or 0.7 (before utxo database).",
      "created_at" : "2016-09-15T20:25:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247444291",
      "id" : 247444291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T20:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247444291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Yeah, thats right secp256k1 did speed up the thing a lot! Is there still potential for improvement, could you share any ideas?",
      "created_at" : "2016-09-15T20:28:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247444950",
      "id" : 247444950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T20:28:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247444950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11314444?v=3",
         "events_url" : "https://api.github.com/users/martin-lizner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martin-lizner/followers",
         "following_url" : "https://api.github.com/users/martin-lizner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martin-lizner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martin-lizner",
         "id" : 11314444,
         "login" : "martin-lizner",
         "organizations_url" : "https://api.github.com/users/martin-lizner/orgs",
         "received_events_url" : "https://api.github.com/users/martin-lizner/received_events",
         "repos_url" : "https://api.github.com/users/martin-lizner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martin-lizner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martin-lizner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martin-lizner"
      }
   },
   {
      "body" : "@sipa PS  : your previous reply was talking about 3 days... Anyway, that's not important, my hw is a normal windaube PC, 5 years old CPU, 3Go\r\n\r\nFor some [research/project](https://github.com/Ayms/node-Tor#convergence) purposes  I must behave like a normal user, ie I have plenty of means to retrieve the blocklist more efficiently if I like, but here I am trying to act just like a normal user, and again the intent here is not to criticize things but to understand why they are like this and if possible to improve them, 10 days for (only) 80 GB + all checks, that's not possible, something is wrong\r\n\r\n>Again: the speed is dominated by how fast you can verify the blocks, not how fast you can download them. \r\n\r\nYou cannot speculate on the user processing capabilities/bandwidth, ie if I have a 100 Mbps bandwidth with high CPU/RAM then in this model the 8 peers scenario remains a very very serious limitation, it's impossible to pretend being faster than bittorrent with this\r\n\r\nAnd if I can download faster than checking the blocks then there are no reasons to block this\r\n\r\n>Bitcoin Core verifies simultaneously with downloading, avoiding the need for double storage and needing to wait for the download to complete before starting to validate\r\n\r\nYou can torrent the blockchain and check the blocks simultaneously too, for bitcoin you would need some luck to get contiguous pieces but modern bittorrent clients implement streaming which means that pieces are retrieved somewhere sequentially (not exactly but if some next pieces are required urgently the algorithm will retrieve them first)\r\n\r\nFor now I don't know why 30mn when you open bitcoin core to reverify the blockchain becomes 3 or 10 days when you download it (??)\r\n\r\nProbably it has already been thought in the past but it does not seem unlikely to envision a bittorrent client with bitcoin client where the blockchain is distributed in several trusted/verifiable infohashes (and seeded by both bt/btc) and does not need to be rechecked, and where the DHT can help storing information to unload the blockchain",
      "created_at" : "2016-09-15T21:12:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247457037",
      "id" : 247457037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-15T21:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247457037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : "> 10 days for (only) 80 GB + all checks, that's not possible, something is wrong\r\n\r\nYes, I agree. We should investigate that. I would very much like to know what hardware you're running on (CPU, memory, disk, software version), and perhaps debug.log files. Perhaps a particular attack exists on the network that managed to interfere with your download process. Perhaps there is a bug in the download logic. But I can't judge that without seeing more information. What I can tell you is that downloading is generally not the issue - validation is, and a torrent won't help.\r\n\r\n> You cannot speculate on the user processing capabilities/bandwidth, ie if I have a 100 Mbps bandwidth with high CPU/RAM then in this model the 8 peers scenario remains a very very serious limitation, it's impossible to pretend being faster than bittorrent with this\r\n\r\nThe fastest numbers I know are possible with good connection, lots of memory, fast disk, many fast CPU cores, is around 4 hours for validating the entire chain. That's approximately 47 Mbit/s of block validation. More common on regular hardware is around 10 Mbit/s. Your 100 Mbit/s is not every going to matter - all you need is to be able to satisfy the demand of that 10 Mbit/s. With slow hardware and little memory, it can certainly drop much lower.\r\n\r\n> For now I don't know why 30mn when you open bitcoin core to reverify the blockchain becomes 3 or 10 days when you download it (??)\r\n\r\nWhat does 30mn mean?\r\n\r\n> Probably it has already been thought in the past but it does not seem unlikely to envision a bittorrent client with bitcoin client where the blockchain is distributed in several trusted/verifiable infohashes (and seeded by both bt/btc) and does not need to be rechecked, and where the DHT can help storing information to unload the blockchain\r\n\r\nWe used to maintain a blockchain torrent until 0.9, but it was discontinued in 0.10 for the reasons mentioned. With a torrent you'd have to wait until the majority of the chain arrived, as we can only validate linearly.",
      "created_at" : "2016-09-16T00:55:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247494172",
      "id" : 247494172,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-16T00:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247494172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : ">Yes, I agree. We should investigate that. I would very much like to know what hardware you're running on (CPU, memory, disk, software version), and perhaps debug.log files.\r\n\r\nWill try to get this but first will relaunch the whole download to be sure (results are not precise here, 10 days might be 8 days since I had to shut down the computer sometimes, how to activate debug.log?)\r\n\r\n>The fastest numbers I know are possible with good connection, lots of memory, fast disk, many fast CPU cores, is around 4 hours for validating the entire chain. That's approximately 47 Mbit/s of block validation. More common on regular hardware is around 10 Mbit/s. Your 100 Mbit/s is not every going to matter - all you need is to be able to satisfy the demand of that 10 Mbit/s. With slow hardware and little memory, it can certainly drop much lower.\r\n\r\nI see two problems with this approach and the 8 connections limitation: you limit the download for those that have the 47 Mbps capacity and it's not very likely that you reach 10 Mbps for normal users if we estimate that the 8 peers upload bandwidth is < 1 Mbps (and usually closer to 500 kbps) knowing again that's it's not the target of btc to staturate the upload bandwidth of the peers, so you are more likely to get something like 2 Mbps (so 4/5 days already... any way to measure this in bitcoin core?)\r\n\r\n>What does 30mn mean?\r\n\r\n30 minutes to check the blockchain when I open bitcoin core, I read your docs but did not find the difference between this check and the checks performed while downloading the blocks (btw can we force bitcoin core to recheck the whole blockchain the way it does when downloading blocks?)\r\n\r\n>We used to maintain a blockchain torrent until 0.9, but it was discontinued in 0.10 for the reasons mentioned. With a torrent you'd have to wait until the majority of the chain arrived, as we can only validate linearly.\r\n\r\nI know, but you maybe missed a part of what I wrote above, you could partially validate blocks not arriving in order, but maybe it would introduce more complexity than benefit, but again bittorrent clients retrieve pieces sequentially, so you don't have to wait for the whole file.\r\n\r\nWe can call it torrent or it can be derived from btc protocol or whatever, does not matter if we reach the expected result, something built-in doing torrent like job or outside (if you look at https://github.com/Ayms/node-Tor#anonymous-serverless-p2p-inside-browsers---peersm-specs and https://github.com/Ayms/node-Tor#differences-with-bittorrent you have an example to achieve this without mimicing at all the bt protocol), bt looks a good candidate because it can be seeded by non btc peers (that have other things to do than serving files) and is widely deployed, but can be a mix of both, most likely the \"bootstrap\" blockchain would be divided in several well known \"torrents\", that can't be faked if we suppose that sha1 is not broken, and/or can be secure by other means than usual bt metadata, then why would it be needed to recheck them? I suppose this has already been studied/discussed\r\n\r\n",
      "created_at" : "2016-09-16T10:52:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247572598",
      "id" : 247572598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-16T12:32:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247572598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : ">> The fastest numbers I know are possible with good connection, lots of\nmemory, fast disk, many fast CPU cores, is around 4 hours for validating\nthe entire chain. That's approximately 47 Mbit/s of block validation. More\ncommon on regular hardware is around 10 Mbit/s. Your 100 Mbit/s is not\nevery going to matter - all you need is to be able to satisfy the demand of\nthat 10 Mbit/s. With slow hardware and little memory, it can certainly drop\nmuch lower.\n>\n> I see two problems with this approach and the 8 connections limitation:\nyou limit the download for those that have the 47 Mbps capacity and it's\nnot very likely that you reach 10 Mbps for normal users if we estimate that\nthe 8 peers upload bandwidth is < 1 Mbps (and usually closer to 500 kbps)\nknowing again that's it's not the target of btc to staturate the upload\nbandwidth of the peers, so you are more likely to get something like 2 Mbps\n(so 4/5 days already... any way to measure this in bitcoin core?)\n\nYour making assumptions. Please. This has been tested over and over again,\nand no, the downloading is not a bottleneck in normal circumstances. If you\nhave evidence for the opposite, I'd very much like to see it, but we can't\nkeep arguing based on hypotheses.\n\nPut the contents of your debug.log file somewhere where people can have a\nlook (it's found in your data directory, and a google search will give you\nmore information).\n\n>> What does 30mn mean?\n>\n> 30 minutes to check the blockchain when I open bitcoin core, I read your\ndocs but did not find the difference between this check and the checks\nperformed while downloading the blocks\n\nAh, no, that is just a consistency check to see whether the database is in\na valid state. It does not validate the blocks again.\n\n>> We used to maintain a blockchain torrent until 0.9, but it was\ndiscontinued in 0.10 for the reasons mentioned. With a torrent you'd have\nto wait until the majority of the chain arrived, as we can only validate\nlinearly.\n>\n> I know, but you maybe missed a part of what I wrote above, you could\npartially validate blocks not arriving in order, but maybe it would\nintroduce more complexity than benefit, but again bittorrent clients\nretrieve pieces sequentially, so you don't have to wait for the whole file.\n\nWe already do all validation possible at the time blocks arrive, and we do\ndownload blocks out of order. However, we do not download blocks more than\n1000 (approximately one week worth) ahead of the latest fully validated\none, to make sure we don't stall full validation for too long. Furthermore,\nwe automatically select the best peers by continuously kicking off the\nslower ones. This mechanism seems to work very well in practice.\n\nThe expensive part of validation can only be done when you have the unspent\noutputs the transactions in that block depend on. Those are kept in a\ndatabase called the chainstate, and it depends on all previous blocks. It's\na reasonable suggestion to say we should do validation as soon as possible,\nbut please research how things work first.\n\nTo summarize:\n* If you want us to help investigate why synchronizing took 10 days, we\nwill need to know exactly what hardware and software you were using.\nGetting the contents of debug.log would be even more useful.\n* If you want to throw out suggestions on how to improve the downloading\nand validation, I really need to ask you to study how things work already.\nWe can't have a productive discussion otherwise.\n",
      "created_at" : "2016-09-16T14:31:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247615526",
      "id" : 247615526,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-16T14:31:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247615526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "\"how things work first\" I know and \"how things work already\" I don't, your docs, while good, do not describe everything, but indeed I will figure it out myself, I really don't see the advantage of reindexing everything when you first get/download the blockchain compared to downloading bootstrap state or intermediary ones and compute the delta (made a mistake and forgot to backup the chainstate before reindexing, have to wait for days now a priori...)\r\n \r\n\"Your making assumptions\" + \"the downloading is not a bottleneck in normal circumstances\" + \"This has been tested over and over again\" + \"Furthermore, we automatically select the best peers by continuously kicking off the slower ones\": we will see, for me the 8 peers theory + kicking off mechanism is not enough (and maybe even dangerous) for now and the future, at least for the bootstrap/sync phase\r\n\r\nLaunched a reindex with debug activated but despite of extensive googling I can't find debug.log, neither in data dir or appdata (installed bitcoin on a separate drive) all I have is a debug.txt that does not seem to say a lot",
      "created_at" : "2016-09-17T10:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247761703",
      "id" : 247761703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-17T10:25:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247761703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : "You can find it in your [data dir](https://en.bitcoin.it/wiki/Data_directory#Default_Location).",
      "created_at" : "2016-09-17T10:58:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247762989",
      "id" : 247762989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-17T10:58:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247762989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@Ayms mentioned earlier: \r\n> \"Anyway, that's not important, my hw is a normal windaube PC, 5 years old CPU, 3Go\" \r\n\r\nI wouldn't expect it to operate as fast as stated given this hardware. It might be better to have specific models from you, but I think I know where that will go (it's too old, & is that 3Gb of RAM?)\r\n\r\nI used to have some luck avoiding the initial checks with `-checkblocks`, but I see the default setting has changed since I used it last (used to do 240, it's now 6). `-checklevel` might also help.\r\n\r\nMaybe mention what version version you're running? If it's not a signed release, what git revision?",
      "created_at" : "2016-09-17T12:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247766594",
      "id" : 247766594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-17T12:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247766594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5617245?v=3",
         "events_url" : "https://api.github.com/users/afk11/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afk11/followers",
         "following_url" : "https://api.github.com/users/afk11/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afk11/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afk11",
         "id" : 5617245,
         "login" : "afk11",
         "organizations_url" : "https://api.github.com/users/afk11/orgs",
         "received_events_url" : "https://api.github.com/users/afk11/received_events",
         "repos_url" : "https://api.github.com/users/afk11/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afk11/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afk11/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afk11"
      }
   },
   {
      "body" : "I sent my conf to @jonasschnelli and @sipa , @afk11 the version is 0.13.0 downloaded from bitcoin.org\r\n\r\n@MarcoFalke thanks I saw this link and tried different things but definitely still no signs of  debug.log, even worse debug.txt looks frozen now\r\n\r\nProbably unlucky or not doing things correctly, I launched a reindex, it destroyed the chainstate, after 3 hours bitcoin core told me it was finished but nothing in the chainstate dir, relaunched bitcoin core and it started to reindex from the begining...",
      "created_at" : "2016-09-19T12:20:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-247978022",
      "id" : 247978022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-19T12:20:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247978022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : "@Ayms Please can you post a link to your debug.log (e.g. a pastbin URL) so that people can look at it if they want to help identify the cause of delay. For it to be useful you'll have needed to have had debug=net in your bitcoin.conf file though.\r\n\r\nI am of the opinion that it would make sense to make block download without validation an option if you trust the source of the data you are downloading it from - e.g. another machine you own and trust.",
      "created_at" : "2016-09-20T07:18:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-248223066",
      "id" : 248223066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-20T07:18:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248223066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Is debug=net enough? (reindexing right now since Sathurday, will test the blocks after) Apparently debug.log is debug.txt for me\r\n\r\nAnother thing: I modified one bit of one block last week and it was not detected when opening bitcoin core, normal?\r\n\r\n>I am of the opinion that it would make sense to make block download without validation an option if you trust the source of the data you are downloading it from - e.g. another machine you own and trust.\r\n\r\nWhat is the big issue with envisioning to torrent the blocks (+ state)?",
      "created_at" : "2016-09-20T10:35:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-248264639",
      "id" : 248264639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-20T10:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248264639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : "@Ayms Did you set the amount of **threads** on BTC-core to your amount of CPU core's?",
      "created_at" : "2016-09-20T12:02:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-248281298",
      "id" : 248281298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-20T12:02:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248281298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20239170?v=3",
         "events_url" : "https://api.github.com/users/Poseidonn77/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Poseidonn77/followers",
         "following_url" : "https://api.github.com/users/Poseidonn77/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Poseidonn77/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Poseidonn77",
         "id" : 20239170,
         "login" : "Poseidonn77",
         "organizations_url" : "https://api.github.com/users/Poseidonn77/orgs",
         "received_events_url" : "https://api.github.com/users/Poseidonn77/received_events",
         "repos_url" : "https://api.github.com/users/Poseidonn77/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Poseidonn77/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Poseidonn77/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Poseidonn77"
      }
   },
   {
      "body" : "> Another thing: I modified one bit of one block last week and it was not detected when opening bitcoin core, normal?\r\n\r\nOf a random block, on disk? Yes, small chance that is detected, unless a) you request the block using `getblock` b) a peer requests it. It's not like bitcoin core reads and checks all gazillion blocks at startup, now that would be slow...\r\n",
      "created_at" : "2016-09-20T12:18:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-248284462",
      "id" : 248284462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-20T12:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248284462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@Ayms I would hope it would get detected during a reindex, but not during a normal startup as to check every block on disk requries a reindex (or rescan?). There have been proposals in the past about making 'torrent-like' block download available, among various proposals. I think a feature to download headers in reverse would be worthwhile adding at some point. Not sure of the best place to suggest to join in the discussion on this - here is a good (if not better) as any, IMHO.",
      "created_at" : "2016-09-25T04:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249401506",
      "id" : 249401506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-25T04:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249401506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Was waiting for the current reindex to finish but running a little bit out of patience, started last saturday, should finish today, so more than 8 days...\r\n\r\nSo indeed there is no point to check now anything related to potential bandwidth issues\r\n\r\nI sent my conf + debug.log, don't feel it's so obsolete, or there is something really really wrong with my test computer but don't see it\r\n\r\n>There have been proposals in the past about making 'torrent-like' block download available, among various proposals\r\n\r\nWhich ones?\r\n\r\n>I think a feature to download headers in reverse would be worthwhile adding at some point\r\n\r\nIndeed, worthwhile looks to be a weak word, it is required, we can't wait for more than a week to retrieve something that can be retrieved in less than a day\r\n\r\nNot sure now what could be the best solution but maybe something like incremental torrents containing the blocks + chainstate (would this be feasible?), built every two weeks (ie one torrent every two weeks) and distributed by the bitcoin peers who would implement a torrent-like protocol then, maybe compatible with bittorrent so other peers can seed them too\r\n\r\nIf the blocks size does not change this still works in 200 years, if the blocks size increases then it's another story\r\n\r\nOr something like you suggest\r\n\r\nMaybe this can be combined with the bittorrent DHT, saw also some discussions about it but some comments I read about insecure and counter performing DHT are for me completely wrong, or just a shortcut trying to eliminate the potential of DHT based systems, of course the bittorrent DHT is everything but secured, but it just depends on how you use it (example: [torrent-live](https://github.com/Ayms/torrent-live)), not uninteresting for example (\"incremental\"/\"mutable\"): https://torrentfreak.com/mutable-torrents-proposal-makes-bittorrent-resilient-160813/\r\n\r\n>Not sure of the best place to suggest to join in the discussion on this - here is a good (if not better) as any,\r\n\r\nIf there is an interest we can probably discuss it somewhere",
      "created_at" : "2016-09-25T10:35:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249414402",
      "id" : 249414402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-25T20:27:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249414402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/759202?v=3",
         "events_url" : "https://api.github.com/users/Ayms/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ayms/followers",
         "following_url" : "https://api.github.com/users/Ayms/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ayms/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ayms",
         "id" : 759202,
         "login" : "Ayms",
         "organizations_url" : "https://api.github.com/users/Ayms/orgs",
         "received_events_url" : "https://api.github.com/users/Ayms/received_events",
         "repos_url" : "https://api.github.com/users/Ayms/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ayms/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ayms/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ayms"
      }
   },
   {
      "body" : "@jonasschnelli Can you please elaborate on what these verifications are you mentioned? Surely it should be enough to verify the the block hashes are correct - which is a fairly quick operation. (If working in reverse, I mean).",
      "created_at" : "2016-09-26T02:41:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249467592",
      "id" : 249467592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T02:46:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249467592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad Full validation needs a lot more than checking hashes. It also includes finding all inputs of a block's transactions in the chainstate database, executing all scripts, and writing an updated chainstate with removed spent UTXOs and added created UTXOs back. But as explained to you several times now by @laamwj, this is not the place for basic question's about a node's operations.",
      "created_at" : "2016-09-26T02:55:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249468966",
      "id" : 249468966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T02:55:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249468966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa yes, I know this, but we are exploring a \"torrent-like\" alternative way to download the blockchain - how is it possible to download a 12GB movie without corruptions of the data, but not 12GB of blockchain in the same amount of time and CPU usage? Surely if someone has the checksum of the data, and trusts this checksum, then this should be all that is required.\r\n\r\nTo put this in perspective, when downloading Bitcoin-QT, you expect downloaders to trust the checksum which has been signed by various developers. In the same way, a checksum should be all that is required to download the blockchain also. No further validation should be needed, based on the same level of trust.\r\n\r\nI am proposing that the hash of the latest block can be that checksum for the entire blockchain, and that if enough trusted sources agree on that hash, then it's overkill to do more. This is afterall, the same degree of security being used for the propagation of the bitcoin-qt binaries.\r\n\r\nAnd please, less of the \"this is not the place\" comments. This is the place (until there's a better place).",
      "created_at" : "2016-09-26T03:24:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249471711",
      "id" : 249471711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T03:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249471711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "The point of a full node is that you do not have any hash to trust. If you\ndo, you can run a lightweight client instead.\n",
      "created_at" : "2016-09-26T03:28:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249472038",
      "id" : 249472038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T03:28:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249472038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I mean no disrepect, but what you suggest seems irrelevant to the points I am making. People want to help by running full-nodes. Allow them the option to trust some other nodes (or the developers of Bitcoin Core, as you already are doing) in order to get up to speed quicker. Your argument is arguing against compiled binaries being used, in effect, and is saying that everyone should go over every line of code before running it.\r\n\r\ni.e. you are being inconsistent, applying one standard to the code, and another to the blockchain.",
      "created_at" : "2016-09-26T03:36:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249472761",
      "id" : 249472761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T03:51:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249472761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad The code is open source, you can verify (through Gitian) that the\ndownloadable binaries match the source code, and you can in fact check line\nof code if you wanted to (or rely on others who do the same).\n\nDownloading the chainstate from someone else however means you are not\nverifying anything anymore, and you're even unable to do so at all, without\nactually going back and rebuilding everything.\n\nThere have been various models proposed where miners commit to the\nresulting chainstate at every block, or every so many blocks, in a way that\npermits bootstrapping faster by trusting these miners up to some point in\nhistory, and then fully validating everything after it. These have however\nnot been implemented, as it may be controversial due to the high extra\ncosts for validation it would bring (every full node would need to check\nthat the commitment matches reality). And even if there were, this is still\na big change in security.\n",
      "created_at" : "2016-09-26T03:46:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249473639",
      "id" : 249473639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T03:46:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249473639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I do not think you are expecting everyone to check every line of code. I think, given the way bitcoin binaries are distributed, that you are expecting people to trust the people who have signed the gitian compiled code. Therefore given trust is already being expected, we're just talking about extending it to another area that is also exploitable (by those trusted). i.e. anything trusted could be used to steal bitcoins, so the security is not weakened in any way, given that the trust is already being given. People can still chose whether or not to trust - trust should be optional. But it's already an option for the code - make it an option for the blockchain too.\r\n\r\nThere are already many places where people can check the latest block height, hash, etc. Perhaps even the outbound connections the average node makes (once addrman is fixed) would be sufficient validation to be sure that the correct checksum/hash is obtained - the user could be invited to make a manual further check - perhaps checking one or more of the numerous websites out there that publishes the latest block height and hash. I think most full-node operators would be comfortable doing this.",
      "created_at" : "2016-09-26T04:03:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249475035",
      "id" : 249475035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T04:03:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249475035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "The point is that you *can* verify lines of code, and have the ability to\ncheck gitian signatures. Certainly not everyone reads through every line of\ncode, but jointly people would discover malicious changes.\n\nIf you set up your node with just a blindly trusted chainstate, you\n*cannot* in any way verify its correctness anymore. And if you're fine with\nrunning a full node on blind trust, I think you're completely missing the\npoint of having a full node in the first place.\n\nIn any case, I'm done arguing this. There are a lot of philosophical\ndiscussions to be had about this, but this issue is not the right place for\nit.\n",
      "created_at" : "2016-09-26T04:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249475543",
      "id" : 249475543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T04:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249475543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Yes, and with my proposed solution, you will still have the option to verify the blockchain (I expressly stated that trust should be optional) - you don't appear to be reading half of what I am writing.",
      "created_at" : "2016-09-26T04:36:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249477760",
      "id" : 249477760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T04:36:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249477760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad I am incredibly annoyed with your responses here.\n\nYou asked @jonasschnelli what verification he was talking about, claiming that it should just be some hashes being verified. I clarified that block validation is much more than just checking hashes, which lead us on a tangent where you start elaborating that people trust the code anyway so it doesn't matter. Of course, if you're not going to validate, then whatever Jonas was talking about does not matter anymore, right? In particular:\n\n> Perhaps even the outbound connections the average node makes (once addrman is fixed) would be sufficient validation to be sure that the correct checksum/hash is obtained\n\nmakes me think you shouldn't touch Bitcoin with a 10-foot pole. Your suggestion would allow anyone who can sybil attack you (your ISP? state level entities? anyone with enough resources to mount an eclipse attack?) to print money at will, doublespend at will, and pretend to have paid you any amount.\n\nElsewhere you stated it should be optional, and operators could check the end result on a website. I expect this would result in a world where in practice nearly everyone would trust the same few websites, creating a huge systemic risk.\n\nMaybe you were talking about the idea of not verifying blocks coming from trusted nodes? I can't follow anymore. In any case, that doesn't actually gain you much, as you'd still need to build the chainstate (which is a large part of the sync time on modern CPUs), even if you don't validate the scripts in it.\n\nPlease, use appropriate places and tone for discussions. A github issue about torrent-like downloading is not the right place to discuss\nfundamentally changing Bitcoin's security model - you only reach a few developers that way. And I think there are much more inviting ways to ask for clarification about this issue than \"Surely it should be enough to verify the the block hashes are correct\".\n",
      "created_at" : "2016-09-26T05:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249481638",
      "id" : 249481638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T09:38:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249481638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I think this issue evolved into a quite thorough description of bitcoins trust model. Please keep in mind that issues are meant for tracking problems with the code base of Bitcoin Core and meta discussion should happen in other places. Please also note that a suggestion was already [posted](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-February/012478.html) to the mailing list several months ago (and discussed multiple times in different bitcoin related forums).\r\n\r\nDue to the length and content of this issue it is no longer possible to use it productively to improve Bitcoin Core and I feel that people's time is wasted by leaving it open. Thus, I will close the issue.",
      "created_at" : "2016-09-26T07:34:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249499157",
      "id" : 249499157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T07:34:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249499157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@MarcoFalke Thanks for the link to the mailing list. Although, I'm not sure from that read-only webpage, how I'm supposed to contribute to that discussion, so for now it will have to be on here until a read-writable alternative is proposed. I do not consider this conversation to have gone out of scope, so am confused why this issue has been closed as I feel headway is being made with regards to finding a solution to this issue.\r\n\r\n@sipa I am unfamiliar with how the chainstate and UTXO would be created following the download of the blockchain - I am guessing that these would need to be reconstructed before the wallet functionality and ability to validate TXs became available, yes? Is there any way these could be shared between nodes in a way that reduced the work needed to construct them? Is there any documentation I can read that explains the structure/format of the chainstate and UTXO please?\r\n",
      "created_at" : "2016-09-26T11:50:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249548961",
      "id" : 249548961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T11:51:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249548961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "> Although, I'm not sure from that read-only webpage, how I'm supposed to contribute to that discussion\r\n\r\nDon't pretend to be stupid, sIgn-up instructions are also readily available: https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\r\n\r\nLocking this issue as people just won't listen.",
      "created_at" : "2016-09-26T12:00:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8738#issuecomment-249550732",
      "id" : 249550732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8738",
      "updated_at" : "2016-09-26T12:00:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249550732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

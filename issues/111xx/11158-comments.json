[
   {
      "body" : "Do you have steps to reproduce?\r\n\r\n> chainActive.Tip() returns nullptr\r\n\r\nRPC will not leave warmup mode before chainActive.Tip() has a non-null value, so this can AFAIK never happen.\r\n",
      "created_at" : "2017-08-26T10:48:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325114150",
      "id" : 325114150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T10:48:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325114150",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I don't, static analysis only.\r\n\r\nIn that case, perhaps an exception should be thrown in the calling code in case `chainActive.Tip()` returns `nullptr`? The condition in the `while` loop checks for `block == nullptr`, hinting that this situation is possible.",
      "created_at" : "2017-08-26T10:55:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325114692",
      "id" : 325114692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T10:55:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325114692",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/84245?v=4",
         "events_url" : "https://api.github.com/users/danra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danra/followers",
         "following_url" : "https://api.github.com/users/danra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danra",
         "id" : 84245,
         "login" : "danra",
         "organizations_url" : "https://api.github.com/users/danra/orgs",
         "received_events_url" : "https://api.github.com/users/danra/received_events",
         "repos_url" : "https://api.github.com/users/danra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danra"
      }
   },
   {
      "body" : "> The condition in the while loop checks for block == nullptr\r\n\r\nBut it isn't needed. This should be enough:\r\n```cpp\r\nassert(block);\r\n\r\nwhile (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\r\n    block = block->pprev;\r\n}\r\n```",
      "created_at" : "2017-08-26T11:28:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325117325",
      "id" : 325117325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T11:28:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325117325",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag I'm just getting familiar with the conventions here; is an `assert` considered a better alternative here? Since it would have no effect in Release builds, theoretically `block` could still be `nullptr` and its dereference lead to Undefined Behavior, i.e., possible security issues. Also, static analyzers would still be upset about the possibility of `block` being `nullptr` when being dereferenced in Release builds.",
      "created_at" : "2017-08-26T11:34:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325117960",
      "id" : 325117960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T11:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325117960",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/84245?v=4",
         "events_url" : "https://api.github.com/users/danra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danra/followers",
         "following_url" : "https://api.github.com/users/danra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danra",
         "id" : 84245,
         "login" : "danra",
         "organizations_url" : "https://api.github.com/users/danra/orgs",
         "received_events_url" : "https://api.github.com/users/danra/received_events",
         "repos_url" : "https://api.github.com/users/danra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danra"
      }
   },
   {
      "body" : "What do you suggest? `if (!block) throw ...;`?",
      "created_at" : "2017-08-26T12:35:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325123134",
      "id" : 325123134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T12:35:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325123134",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag Yes, it makes sense to me. However, it really depends on the project's conventions. `assert` has the advantage of not incurring any performance penalty. Personally I think in a project like bitcoin security is more important, so if it were up to me I would choose an exception (or some form of  assert which takes effect in release builds).",
      "created_at" : "2017-08-26T12:54:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325124673",
      "id" : 325124673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T12:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325124673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/84245?v=4",
         "events_url" : "https://api.github.com/users/danra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danra/followers",
         "following_url" : "https://api.github.com/users/danra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danra",
         "id" : 84245,
         "login" : "danra",
         "organizations_url" : "https://api.github.com/users/danra/orgs",
         "received_events_url" : "https://api.github.com/users/danra/received_events",
         "repos_url" : "https://api.github.com/users/danra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danra"
      }
   },
   {
      "body" : "An assertion would be OK here - we don't allow disabling them, so they're also in release builds.\r\nThrowing an exception is overkill for something that would be a program bug. This cannot happen, after all.\r\n\r\nBTW this seems a duplicate of #10619, please take the discussion there.",
      "created_at" : "2017-08-26T13:02:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11158#issuecomment-325125349",
      "id" : 325125349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11158",
      "updated_at" : "2017-08-26T13:02:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325125349",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11129#discussion_r135228575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11129"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135228575"
         }
      },
      "body" : "Concept ACK, though I don't like doing this polling in `get_auth_cookie` itself - my preference would be to throw a `AuthCookieIncomplete` error or such, catch that in `wait_for_rpc_connection` and keep the polling restricted to there.\r\n\r\nEdit: it could even just raise `ValueError(\"No RPC credentials\")` - that's already checked for in that loop.",
      "commit_id" : "fabfeaee6dfe66f990c0d0ef7457f214ef7ccac0",
      "created_at" : "2017-08-25T10:22:57Z",
      "diff_hunk" : "@@ -235,17 +235,22 @@ def get_datadir_path(dirname, n):\n def get_auth_cookie(datadir, n):\n     user = None\n     password = None\n-    if os.path.isfile(os.path.join(datadir, \"bitcoin.conf\")):\n-        with open(os.path.join(datadir, \"bitcoin.conf\"), 'r', encoding='utf8') as f:\n+    file_conf = os.path.join(datadir, 'bitcoin.conf')\n+    file_cookie = os.path.join(datadir, 'regtest', '.cookie')\n+    if os.path.isfile(file_conf):\n+        with open(file_conf, 'r', encoding='utf8') as f:\n             for line in f:\n                 if line.startswith(\"rpcuser=\"):\n                     assert user is None  # Ensure that there is only one rpcuser line\n                     user = line.split(\"=\")[1].strip(\"\\n\")\n                 if line.startswith(\"rpcpassword=\"):\n                     assert password is None  # Ensure that there is only one rpcpassword line\n                     password = line.split(\"=\")[1].strip(\"\\n\")\n-    if os.path.isfile(os.path.join(datadir, \"regtest\", \".cookie\")):\n-        with open(os.path.join(datadir, \"regtest\", \".cookie\"), 'r') as f:\n+    if os.path.isfile(file_cookie):\n+        while os.path.getsize(file_cookie) != len('__cookie__:') + 64:\n+            # Wait for the file to be flushed\n+            time.sleep(0.05)\n+        with open(file_cookie, 'r') as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11129#discussion_r135228575",
      "id" : 135228575,
      "original_commit_id" : "fabfeaee6dfe66f990c0d0ef7457f214ef7ccac0",
      "original_position" : 23,
      "path" : "test/functional/test_framework/util.py",
      "position" : 23,
      "pull_request_review_id" : 58618659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11129",
      "updated_at" : "2017-08-25T10:24:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135228575",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thinking about this some more, an even better option would be to use POSIX rename atomicity at the `bitcoind` side to create a working cookie atomically:\r\n- Write `.cookie.tmp`, close file\r\n- Rename `.cookie.tmp` to `.cookie`\r\n\r\nSee #11131.",
      "created_at" : "2017-08-25T10:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11129#issuecomment-324881956",
      "id" : 324881956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11129",
      "updated_at" : "2017-08-25T10:59:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324881956",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

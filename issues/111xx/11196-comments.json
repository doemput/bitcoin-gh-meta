[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r135976260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135976260"
         }
      },
      "author_association" : "OWNER",
      "body" : "This comment doesn't seem to apply in the current form of the code.",
      "commit_id" : "1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-08-30T05:54:58Z",
      "diff_hunk" : "@@ -5,9 +5,36 @@\n \n #include \"cleanse.h\"\n \n-#include <openssl/crypto.h>\n+#include <string.h>\n \n+/* Use asm directives to protect OPENSSL_cleanse.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r135976260",
      "id" : 135976260,
      "original_commit_id" : "084674dc9420c5151880ac38c14e0bd342fe931c",
      "original_position" : 7,
      "path" : "src/support/cleanse.cpp",
      "position" : null,
      "pull_request_review_id" : 59451561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196",
      "updated_at" : "2017-09-06T20:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135976260",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r135976563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135976563"
         }
      },
      "author_association" : "OWNER",
      "body" : "I'm not sure OpenSSL's headers expose such a macro, and even if they do, this risks breaking things if OpenSSL gets removed entirely at some point. I believe you just want `_MSC_VER` here to detect MSVC (as the `else` branch should work fine in MinGW).",
      "commit_id" : "1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-08-30T05:57:41Z",
      "diff_hunk" : "@@ -5,9 +5,36 @@\n \n #include \"cleanse.h\"\n \n-#include <openssl/crypto.h>\n+#include <string.h>\n \n+/* Use asm directives to protect OPENSSL_cleanse.\n+ *\n+ * Compilers have a bad habit of removing \"superfluous\" memset calls that\n+ * are trying to zero memory. For example, when memset()ing a buffer and\n+ * then free()ing it, the compiler might decide that the memset is\n+ * unobservable and thus can be removed.\n+ *\n+ * Previously we tried to stop this by a) implementing memset in assembly\n+ * on x86 and b) putting the function in its own file for other platforms.\n+ *\n+ * This change removes those tricks in favour of using asm directives to\n+ * scare the compiler away. As best as our compiler folks can tell, this is\n+ * sufficient and will continue to be so.\n+ *\n+ * Adam Langley <agl@google.com>\n+ * Commit: ad1907fe73334d6c696c8539646c21b11178f20f\n+ * BoringSSL (LICENSE: ISC)\n+ */\n void memory_cleanse(void *ptr, size_t len)\n {\n-    OPENSSL_cleanse(ptr, len);\n+    memset(ptr, 0, len);\n+\n+    /* As best as we can tell, this is sufficient to break any optimisations that\n+       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n+       detect memset_s, it would be better to use that. */\n+#if defined(OPENSSL_WINDOWS)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r135976563",
      "id" : 135976563,
      "original_commit_id" : "084674dc9420c5151880ac38c14e0bd342fe931c",
      "original_position" : 33,
      "path" : "src/support/cleanse.cpp",
      "position" : null,
      "pull_request_review_id" : 59451561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196",
      "updated_at" : "2017-09-06T20:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135976563",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nits addressed (don't push code late at night!)",
      "created_at" : "2017-08-30T07:28:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-325906731",
      "id" : 325906731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-08-30T07:28:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325906731",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK!\r\n\r\nToo bad there is no bulletproof way to detect `memset_s(Ã¢ÂÂ¦)` :-(",
      "created_at" : "2017-08-30T08:20:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-325918807",
      "id" : 325918807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-08-30T08:20:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325918807",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 9c4f8b5188a53f39c0849f860c8227fbb5a77bc6",
      "created_at" : "2017-08-30T08:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-325921631",
      "id" : 325921631,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-08-30T08:31:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325921631",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK - minimizing OpenSSL exposure is good. \r\n\r\nISC seems less strict than even MIT, appears compatible. ",
      "created_at" : "2017-08-30T16:18:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-326042739",
      "id" : 326042739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-08-30T16:18:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326042739",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/14876936?v=4",
         "events_url" : "https://api.github.com/users/Leviathn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Leviathn/followers",
         "following_url" : "https://api.github.com/users/Leviathn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Leviathn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Leviathn",
         "id" : 14876936,
         "login" : "Leviathn",
         "organizations_url" : "https://api.github.com/users/Leviathn/orgs",
         "received_events_url" : "https://api.github.com/users/Leviathn/received_events",
         "repos_url" : "https://api.github.com/users/Leviathn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Leviathn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Leviathn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Leviathn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2017-08-31T19:20:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-326395368",
      "id" : 326395368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-08-31T19:20:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326395368",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK. and utACK 9c4f8b5188a53f39c0849f860c8227fbb5a77bc6. It'll be great to be rid of the openssl dependency at such a low level.\r\n\r\nThe logic seems sane. It'd be nice if we could add a test, but I suppose we can't test reliably without affecting the outcome.",
      "created_at" : "2017-08-31T20:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-326408371",
      "id" : 326408371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-08-31T20:15:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326408371",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@cfields you can review the ASM at least.",
      "created_at" : "2017-09-01T16:02:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-326619166",
      "id" : 326619166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-01T16:02:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326619166",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 9c4f8b5188a53f39c0849f860c8227fbb5a77bc6",
      "created_at" : "2017-09-03T17:22:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-326818451",
      "id" : 326818451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-03T17:22:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326818451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137124417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137124417"
         }
      },
      "author_association" : "OWNER",
      "body" : "What does a bare `__asm` do?",
      "commit_id" : "1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-09-05T21:51:44Z",
      "diff_hunk" : "@@ -5,9 +5,35 @@\n \n #include \"cleanse.h\"\n \n-#include <openssl/crypto.h>\n+#include <string.h>\n \n+/* Compilers have a bad habit of removing \"superfluous\" memset calls that\n+ * are trying to zero memory. For example, when memset()ing a buffer and\n+ * then free()ing it, the compiler might decide that the memset is\n+ * unobservable and thus can be removed.\n+ *\n+ * Previously we used OpenSSL which tried to stop this by a) implementing\n+ * memset in assembly on x86 and b) putting the function in its own file\n+ * for other platforms.\n+ *\n+ * This change removes those tricks in favour of using asm directives to\n+ * scare the compiler away. As best as our compiler folks can tell, this is\n+ * sufficient and will continue to be so.\n+ *\n+ * Adam Langley <agl@google.com>\n+ * Commit: ad1907fe73334d6c696c8539646c21b11178f20f\n+ * BoringSSL (LICENSE: ISC)\n+ */\n void memory_cleanse(void *ptr, size_t len)\n {\n-    OPENSSL_cleanse(ptr, len);\n+    memset(ptr, 0, len);\n+\n+    /* As best as we can tell, this is sufficient to break any optimisations that\n+       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n+       detect memset_s, it would be better to use that. */\n+#if defined(_MSC_VER)\n+    __asm;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137124417",
      "id" : 137124417,
      "original_commit_id" : "9c4f8b5188a53f39c0849f860c8227fbb5a77bc6",
      "original_position" : 33,
      "path" : "src/support/cleanse.cpp",
      "position" : 33,
      "pull_request_review_id" : 60751763,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196",
      "updated_at" : "2017-09-06T20:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137124417",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK, though I don't understand why this works (certainly in the MSCV case), I would prefer a more explanatory comment.",
      "created_at" : "2017-09-05T21:52:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-327314321",
      "id" : 327314321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-05T21:52:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327314321",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137126035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137126035"
         }
      },
      "author_association" : "OWNER",
      "body" : "Presumbly the same as the GCC extended asm block above, and hopefully prevents the code from being optimized out.\r\n\r\nHowever, I'm not sure to what extent we want to support MSVC, especially as `__asm` is only supported on x86, not x86_64.",
      "commit_id" : "1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-09-05T21:59:44Z",
      "diff_hunk" : "@@ -5,9 +5,35 @@\n \n #include \"cleanse.h\"\n \n-#include <openssl/crypto.h>\n+#include <string.h>\n \n+/* Compilers have a bad habit of removing \"superfluous\" memset calls that\n+ * are trying to zero memory. For example, when memset()ing a buffer and\n+ * then free()ing it, the compiler might decide that the memset is\n+ * unobservable and thus can be removed.\n+ *\n+ * Previously we used OpenSSL which tried to stop this by a) implementing\n+ * memset in assembly on x86 and b) putting the function in its own file\n+ * for other platforms.\n+ *\n+ * This change removes those tricks in favour of using asm directives to\n+ * scare the compiler away. As best as our compiler folks can tell, this is\n+ * sufficient and will continue to be so.\n+ *\n+ * Adam Langley <agl@google.com>\n+ * Commit: ad1907fe73334d6c696c8539646c21b11178f20f\n+ * BoringSSL (LICENSE: ISC)\n+ */\n void memory_cleanse(void *ptr, size_t len)\n {\n-    OPENSSL_cleanse(ptr, len);\n+    memset(ptr, 0, len);\n+\n+    /* As best as we can tell, this is sufficient to break any optimisations that\n+       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n+       detect memset_s, it would be better to use that. */\n+#if defined(_MSC_VER)\n+    __asm;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137126035",
      "id" : 137126035,
      "in_reply_to_id" : 137124417,
      "original_commit_id" : "9c4f8b5188a53f39c0849f860c8227fbb5a77bc6",
      "original_position" : 33,
      "path" : "src/support/cleanse.cpp",
      "position" : 33,
      "pull_request_review_id" : 60753531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196",
      "updated_at" : "2017-09-06T20:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137126035",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137164555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137164555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ÃÂ¼Nit: Maybe `<cstring>` instead, since this is C++.",
      "commit_id" : "1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-09-06T03:33:44Z",
      "diff_hunk" : "@@ -5,9 +5,35 @@\n \n #include \"cleanse.h\"\n \n-#include <openssl/crypto.h>\n+#include <string.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137164555",
      "id" : 137164555,
      "original_commit_id" : "9c4f8b5188a53f39c0849f860c8227fbb5a77bc6",
      "original_position" : 5,
      "path" : "src/support/cleanse.cpp",
      "position" : null,
      "pull_request_review_id" : 60795477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196",
      "updated_at" : "2017-09-06T20:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137164555",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Since we - in contrast to BoringSSL - have the luxury of always compiling with assertions enabled, what about also adding an assertion `assert(len == 0 || static_cast<uint8_t*>(ptr)[0] == 0);` as a postcondition? Better safe than sorry :-)",
      "created_at" : "2017-09-06T11:39:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-327457235",
      "id" : 327457235,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-06T20:53:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327457235",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift: I think that affects the resulting code. It basically skips cleans for untouched memory. By touching memory it will forego that optimization. ",
      "created_at" : "2017-09-06T13:58:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-327491753",
      "id" : 327491753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-07T01:23:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327491753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137334978"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137334978"
         }
      },
      "author_association" : "OWNER",
      "body" : "> However, I'm not sure to what extent we want to support MSVC, especially as __asm is only supported on x86, not x86_64.\r\n\r\nWe don't support MSVC (I don't know of any dev who cares to maintain support for it) however It shouldn't be unnecessarily difficult to build with it, so if possible we should try to be compatible with it.",
      "commit_id" : "1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-09-06T17:25:23Z",
      "diff_hunk" : "@@ -5,9 +5,35 @@\n \n #include \"cleanse.h\"\n \n-#include <openssl/crypto.h>\n+#include <string.h>\n \n+/* Compilers have a bad habit of removing \"superfluous\" memset calls that\n+ * are trying to zero memory. For example, when memset()ing a buffer and\n+ * then free()ing it, the compiler might decide that the memset is\n+ * unobservable and thus can be removed.\n+ *\n+ * Previously we used OpenSSL which tried to stop this by a) implementing\n+ * memset in assembly on x86 and b) putting the function in its own file\n+ * for other platforms.\n+ *\n+ * This change removes those tricks in favour of using asm directives to\n+ * scare the compiler away. As best as our compiler folks can tell, this is\n+ * sufficient and will continue to be so.\n+ *\n+ * Adam Langley <agl@google.com>\n+ * Commit: ad1907fe73334d6c696c8539646c21b11178f20f\n+ * BoringSSL (LICENSE: ISC)\n+ */\n void memory_cleanse(void *ptr, size_t len)\n {\n-    OPENSSL_cleanse(ptr, len);\n+    memset(ptr, 0, len);\n+\n+    /* As best as we can tell, this is sufficient to break any optimisations that\n+       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n+       detect memset_s, it would be better to use that. */\n+#if defined(_MSC_VER)\n+    __asm;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#discussion_r137334978",
      "id" : 137334978,
      "in_reply_to_id" : 137124417,
      "original_commit_id" : "9c4f8b5188a53f39c0849f860c8227fbb5a77bc6",
      "original_position" : 33,
      "path" : "src/support/cleanse.cpp",
      "position" : 33,
      "pull_request_review_id" : 60988326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11196",
      "updated_at" : "2017-09-06T20:46:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137334978",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In the original boringssl review at https://boringssl-review.googlesource.com/c/boringssl/+/1339 it was noted that on WIndows its likely better to just use SecureZeroMemory...maybe do that in place of the string __asm for MSVC?",
      "created_at" : "2017-09-07T20:35:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-327920324",
      "id" : 327920324,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-07T20:35:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327920324",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "I vaguely remember there was something wrong/insecure about SecureZeroMemory but I can't remember what and a quick search doesn't turn up anything. I think it was something with being a Win32 API function (syscall) so it makes it easier for malware to hook the function and scoop up all the sensitive data. Anyhow, I don't know if it matters.",
      "created_at" : "2017-09-07T20:44:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-327922421",
      "id" : 327922421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-07T20:44:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327922421",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Should I switch to SecureZeroMemory on windows? I don't know enough about windows to evaluate that risk. Or is this ready to merge as-is?",
      "created_at" : "2017-09-15T23:27:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-329925949",
      "id" : 329925949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-15T23:27:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329925949",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "I think this is fine as-is.\r\n\r\nutACK 1444c2e7d0a243690b960c1fefe5f36bf5ca7e54",
      "created_at" : "2017-09-15T23:35:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-329926841",
      "id" : 329926841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-15T23:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329926841",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Should I switch to SecureZeroMemory on windows? \r\n\r\nI also think it's fine as it is. Note that @TheBlueMatt doesn't say to use that call generally on Windows, but specifically on MSVC. Someone that maintains MSVC support should do the evaluation of the subtleties for what function/method to use there. Just using BoringSSL's code is \"best effort\" to support it as anything.\r\nutACK https://github.com/bitcoin/bitcoin/pull/11196/commits/1444c2e7d0a243690b960c1fefe5f36bf5ca7e54\r\n\r\n(also, if they make another decision re: MSVC we can always take it over)",
      "created_at" : "2017-09-16T05:16:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11196#issuecomment-329946649",
      "id" : 329946649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11196",
      "updated_at" : "2017-09-16T05:37:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329946649",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

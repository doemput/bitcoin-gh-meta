[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8309#discussion_r69974783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8309"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/69974783"
         }
      },
      "body" : "This won't trigger a rescan. It should be `self.node_args[1] + ['-rescan']`.\r\n`self.node_args[1].extend(['-rescan'])` results in `null`?.",
      "commit_id" : "9db91605f8753f419ae1c4860ed6962746b7200c",
      "created_at" : "2016-07-07T19:52:05Z",
      "diff_hunk" : "@@ -0,0 +1,76 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    start_nodes,\n+    start_node,\n+    assert_equal,\n+    connect_nodes_bi,\n+)\n+import os\n+import shutil\n+\n+\n+class WalletHDTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.node_args = [['-usehd=0'], ['-usehd=1', '-keypool=0']]\n+\n+    def setup_network(self):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, self.node_args)\n+        self.is_network_split = False\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+    def run_test (self):\n+        tmpdir = self.options.tmpdir\n+\n+        # Import a non-HD private key in the HD wallet\n+        non_hd_add = self.nodes[0].getnewaddress()\n+        self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(non_hd_add))\n+\n+        # This should be enough to keep the master key and the non-HD key \n+        self.nodes[1].backupwallet(tmpdir + \"hd.bak\")\n+        #self.nodes[1].dumpwallet(tmpdir + \"hd.dump\")\n+\n+        # Derive some HD addresses and remember the last\n+        # Also send funds to each add\n+        self.nodes[0].generate(101)\n+        hd_add = None\n+        num_hd_adds = 300\n+        for _ in range(num_hd_adds):\n+            hd_add = self.nodes[1].getnewaddress()\n+            self.nodes[0].sendtoaddress(hd_add, 1)\n+            self.nodes[0].generate(1)\n+        self.nodes[0].sendtoaddress(non_hd_add, 1)\n+        self.nodes[0].generate(1)\n+\n+        self.sync_all()\n+        assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n+\n+        print(\"Restore backup ...\")\n+        self.stop_node(1)\n+        os.remove(self.options.tmpdir + \"/node1/regtest/wallet.dat\")\n+        shutil.copyfile(tmpdir + \"hd.bak\", tmpdir + \"/node1/regtest/wallet.dat\")\n+        self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1])\n+        #connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Assert that derivation is deterministic\n+        hd_add_2 = None\n+        for _ in range(num_hd_adds):\n+            hd_add_2 = self.nodes[1].getnewaddress()\n+        assert_equal(hd_add, hd_add_2)\n+\n+        # Needs rescan?\n+        self.stop_node(1)\n+        self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1].extend(['-rescan']))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8309#discussion_r69974783",
      "id" : 69974783,
      "original_commit_id" : "7d573c7ec9326832b2697b5e9e354f428c98ce78",
      "original_position" : 71,
      "path" : "qa/rpc-tests/wallet-hd.py",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8309",
      "updated_at" : "2016-07-07T20:01:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/69974783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8309#discussion_r69977021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8309"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/69977021"
         }
      },
      "body" : "Awesome! It is always good to have fresh eyes look on the code.\r\n\r\nWill push a fix and then squash the commits.",
      "commit_id" : "9db91605f8753f419ae1c4860ed6962746b7200c",
      "created_at" : "2016-07-07T20:06:42Z",
      "diff_hunk" : "@@ -0,0 +1,76 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    start_nodes,\n+    start_node,\n+    assert_equal,\n+    connect_nodes_bi,\n+)\n+import os\n+import shutil\n+\n+\n+class WalletHDTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.node_args = [['-usehd=0'], ['-usehd=1', '-keypool=0']]\n+\n+    def setup_network(self):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, self.node_args)\n+        self.is_network_split = False\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+    def run_test (self):\n+        tmpdir = self.options.tmpdir\n+\n+        # Import a non-HD private key in the HD wallet\n+        non_hd_add = self.nodes[0].getnewaddress()\n+        self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(non_hd_add))\n+\n+        # This should be enough to keep the master key and the non-HD key \n+        self.nodes[1].backupwallet(tmpdir + \"hd.bak\")\n+        #self.nodes[1].dumpwallet(tmpdir + \"hd.dump\")\n+\n+        # Derive some HD addresses and remember the last\n+        # Also send funds to each add\n+        self.nodes[0].generate(101)\n+        hd_add = None\n+        num_hd_adds = 300\n+        for _ in range(num_hd_adds):\n+            hd_add = self.nodes[1].getnewaddress()\n+            self.nodes[0].sendtoaddress(hd_add, 1)\n+            self.nodes[0].generate(1)\n+        self.nodes[0].sendtoaddress(non_hd_add, 1)\n+        self.nodes[0].generate(1)\n+\n+        self.sync_all()\n+        assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n+\n+        print(\"Restore backup ...\")\n+        self.stop_node(1)\n+        os.remove(self.options.tmpdir + \"/node1/regtest/wallet.dat\")\n+        shutil.copyfile(tmpdir + \"hd.bak\", tmpdir + \"/node1/regtest/wallet.dat\")\n+        self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1])\n+        #connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Assert that derivation is deterministic\n+        hd_add_2 = None\n+        for _ in range(num_hd_adds):\n+            hd_add_2 = self.nodes[1].getnewaddress()\n+        assert_equal(hd_add, hd_add_2)\n+\n+        # Needs rescan?\n+        self.stop_node(1)\n+        self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1].extend(['-rescan']))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8309#discussion_r69977021",
      "id" : 69977021,
      "original_commit_id" : "7d573c7ec9326832b2697b5e9e354f428c98ce78",
      "original_position" : 71,
      "path" : "qa/rpc-tests/wallet-hd.py",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8309",
      "updated_at" : "2016-07-07T20:06:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/69977021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "Thanks for the test!\r\nTested ACK fade505e8b0fa37e2d99bf94259250271a9604d4",
      "created_at" : "2016-07-08T07:31:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8309#issuecomment-231294313",
      "id" : 231294313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8309",
      "updated_at" : "2016-07-08T07:31:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231294313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Thanks for the test @MarcoFalke and thanks for investigating the issue so quickly during the meeting yesterday @jonasschnelli \r\nACK fade505",
      "created_at" : "2016-07-08T07:57:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8309#issuecomment-231298650",
      "id" : 231298650,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8309",
      "updated_at" : "2016-07-08T07:57:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231298650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

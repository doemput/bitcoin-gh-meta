{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Add additional Clang thread safety analysis annotations as discussed with @sipa (https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316238630) and others.\r\n\r\nThis is a follow-up to #10866 which this PR is rebased upon (awaiting merge of #10866). The first three commits (8a1dc09, e022990 and cbae151) can be reviewed in #10866.\r\n\r\nThe rest of the commits are specific to this PR and are split into three types of changes:\r\n1. Add missing locks (based on the `GUARDED_BY(...)` analysis below). Please review thoroughly.\r\n2. Add `GUARDED_BY(...)` annotations to allow for Clang's thread safety analysis at compile-time. Does not change run-time behaviour.\r\n3. Add `EXCLUSIVE_LOCKS_REQUIRED(...)` annotations to allow for Clang's thread safety analysis at compile-time. Does not change run-time behaviour.\r\n\r\nBackground reading: The [\"C/C++ Thread Safety Analysis\"](https://research.google.com/pubs/archive/42958.pdf) paper (Hutchins, Ballman & Sutherland, 2014) paper describing Clang thread safety analysis and how it is used for the Google C++ codebase:\r\n\r\n> They essentially provide a static type system for threads, and can detect potential race conditions and deadlocks. This paper describes Clang Thread Safety Analysis, a tool which uses annotations to declare and enforce thread safety policies in C and C++ programs.\r\n> [Ã¢ÂÂ¦]\r\n> It has been deployed on a large scale at Google; all C++ code at Google is now compiled with thread safety analysis enabled by default.\r\n> [Ã¢ÂÂ¦]\r\n> The `GUARDED_BY` attribute declares that a thread must lock `mu` before it can read or write to `balance`, thus ensuring that the increment and decrement operations are atomic. Similarly, `REQUIRES` declares that the calling thread must lock mu before calling `withdrawImpl`. Because the caller is assumed to have locked `mu,` it is safe to modify `balance` within the body of the method.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 10,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11226/comments",
   "created_at" : "2017-09-03T16:51:58Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11226/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/11226",
   "id" : 254886186,
   "labels" : [
      {
         "color" : "E6F6D6",
         "default" : false,
         "id" : 135961,
         "name" : "Refactoring",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11226/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 11226,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/11226.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11226",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/11226.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11226"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Add Clang thread safety analysis annotations: GUARDED_BY(lock) / EXCLUSIVE_LOCKS_REQUIRED(lock)",
   "updated_at" : "2017-09-11T09:23:50Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11226",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}

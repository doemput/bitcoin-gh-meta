[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137935657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137935657"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd assume those should probably use `os.path.join` to make it work on other os as well.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-09T21:21:41Z",
      "diff_hunk" : "@@ -63,87 +66,93 @@ def bctester(testDir, input_basename, buildenv):\n     else:\n         sys.exit(0)\n \n-def bctest(testDir, testObj, buildenv):\n+\n+def bctest(test_dir, test_obj, buildenv):\n     \"\"\"Runs a single test, comparing output and RC to expected output and RC.\n \n     Raises an error if input can't be read, executable fails, or output/RC\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n-    execargs = testObj['args']\n+    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + test_obj['exec'] + buildenv[\"EXEEXT\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137935657",
      "id" : 137935657,
      "original_commit_id" : "0823f28da76a4248dba22f1871a4b4c91a833962",
      "original_position" : 55,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 61671357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137935657",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you for putting so much effort in your first contribution. However, according to our developer guidelines we can not accept pull requests that solely change formatting and style.\r\n\r\nNonetheless, you are welcome to address my issue with this file instead. Also note that you can change `testObj` to `test_obj`, as formatting fixes are allowed when none-style but refactoring changes are made to the affected lines. ",
      "created_at" : "2017-09-09T21:25:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-328304423",
      "id" : 328304423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11291",
      "updated_at" : "2017-09-09T21:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328304423",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "ÃÂ @MarcoFalke Thank you for your advice, I just added commit for use `os.path.join` instead string concatenation",
      "created_at" : "2017-09-10T00:51:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-328312462",
      "id" : 328312462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11291",
      "updated_at" : "2017-09-10T00:51:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328312462",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1797794?v=4",
         "events_url" : "https://api.github.com/users/dongsam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongsam/followers",
         "following_url" : "https://api.github.com/users/dongsam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongsam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongsam",
         "id" : 1797794,
         "login" : "dongsam",
         "organizations_url" : "https://api.github.com/users/dongsam/orgs",
         "received_events_url" : "https://api.github.com/users/dongsam/received_events",
         "repos_url" : "https://api.github.com/users/dongsam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongsam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongsam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongsam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137938622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137938622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The last concatenation is string concatenation.\r\n\r\nYou can check if the tests pass locally by `make check`",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-10T01:19:15Z",
      "diff_hunk" : "@@ -63,87 +67,93 @@ def bctester(testDir, input_basename, buildenv):\n     else:\n         sys.exit(0)\n \n-def bctest(testDir, testObj, buildenv):\n+\n+def bctest(test_dir, test_obj, buildenv):\n     \"\"\"Runs a single test, comparing output and RC to expected output and RC.\n \n     Raises an error if input can't be read, executable fails, or output/RC\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n-    execargs = testObj['args']\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", test_obj[\"exec\"], buildenv[\"EXEEXT\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137938622",
      "id" : 137938622,
      "original_commit_id" : "f7e0ecb74ff515d47bec9ea47102b4e3a69d6fe2",
      "original_position" : 72,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 61674247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137938622",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137941006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137941006"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks I just fixed it, Sorry for my careless mistake",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-10T04:47:45Z",
      "diff_hunk" : "@@ -63,87 +67,93 @@ def bctester(testDir, input_basename, buildenv):\n     else:\n         sys.exit(0)\n \n-def bctest(testDir, testObj, buildenv):\n+\n+def bctest(test_dir, test_obj, buildenv):\n     \"\"\"Runs a single test, comparing output and RC to expected output and RC.\n \n     Raises an error if input can't be read, executable fails, or output/RC\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n-    execargs = testObj['args']\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", test_obj[\"exec\"], buildenv[\"EXEEXT\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137941006",
      "id" : 137941006,
      "in_reply_to_id" : 137938622,
      "original_commit_id" : "f7e0ecb74ff515d47bec9ea47102b4e3a69d6fe2",
      "original_position" : 72,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 61676374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137941006",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1797794?v=4",
         "events_url" : "https://api.github.com/users/dongsam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongsam/followers",
         "following_url" : "https://api.github.com/users/dongsam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongsam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongsam",
         "id" : 1797794,
         "login" : "dongsam",
         "organizations_url" : "https://api.github.com/users/dongsam/orgs",
         "received_events_url" : "https://api.github.com/users/dongsam/received_events",
         "repos_url" : "https://api.github.com/users/dongsam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongsam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongsam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongsam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138360242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138360242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "since you're converting to snake_case, how about `build_env`",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T14:15:03Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+\n def main():\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/../config.ini\"))\n+    config.read_file(open(os.path.join(os.path.dirname(__file__), \"../config.ini\")))\n \n     parser = argparse.ArgumentParser(description=__doc__)\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")\n     args = parser.parse_args()\n     verbose = args.verbose\n \n     if verbose:\n         level = logging.DEBUG\n     else:\n         level = logging.ERROR\n-    formatter = '%(asctime)s - %(levelname)s - %(message)s'\n+    formatter = \"%(asctime)s - %(levelname)s - %(message)s\"\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n \n-    bctester(config[\"environment\"][\"SRCDIR\"] + \"/test/util/data\", \"bitcoin-util-test.json\", config[\"environment\"])\n+    bctester(os.path.join(config[\"environment\"][\"SRCDIR\"], \"test/util/data\"), \"bitcoin-util-test.json\",\n+             config[\"environment\"])\n+\n \n-def bctester(testDir, input_basename, buildenv):\n+def bctester(test_dir, input_basename, buildenv):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138360242",
      "id" : 138360242,
      "original_commit_id" : "a334360653b21306a2548638ef05262db9845ab7",
      "original_position" : 31,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62143977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138360242",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138360571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138360571"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`exec_prog`? (and `exec_args` and `exec_run`)",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T14:15:50Z",
      "diff_hunk" : "@@ -63,87 +67,93 @@ def bctester(testDir, input_basename, buildenv):\n     else:\n         sys.exit(0)\n \n-def bctest(testDir, testObj, buildenv):\n+\n+def bctest(test_dir, test_obj, buildenv):\n     \"\"\"Runs a single test, comparing output and RC to expected output and RC.\n \n     Raises an error if input can't be read, executable fails, or output/RC\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n-    execargs = testObj['args']\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", test_obj[\"exec\"]) + buildenv[\"EXEEXT\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138360571",
      "id" : 138360571,
      "original_commit_id" : "a334360653b21306a2548638ef05262db9845ab7",
      "original_position" : 72,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62143977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138360571",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138392475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138392475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't it is worth the overhead to change apostrophe to quotation mark.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T16:00:28Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+\n def main():\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/../config.ini\"))\n+    config.read_file(open(os.path.join(os.path.dirname(__file__), \"../config.ini\")))\n \n     parser = argparse.ArgumentParser(description=__doc__)\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138392475",
      "id" : 138392475,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 12,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62180826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138392475",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138392847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138392847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changing this line solely to split it into two causes difficulties grepping in the future.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T16:01:29Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+\n def main():\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/../config.ini\"))\n+    config.read_file(open(os.path.join(os.path.dirname(__file__), \"../config.ini\")))\n \n     parser = argparse.ArgumentParser(description=__doc__)\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")\n     args = parser.parse_args()\n     verbose = args.verbose\n \n     if verbose:\n         level = logging.DEBUG\n     else:\n         level = logging.ERROR\n-    formatter = '%(asctime)s - %(levelname)s - %(message)s'\n+    formatter = \"%(asctime)s - %(levelname)s - %(message)s\"\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n \n-    bctester(config[\"environment\"][\"SRCDIR\"] + \"/test/util/data\", \"bitcoin-util-test.json\", config[\"environment\"])\n+    bctester(os.path.join(config[\"environment\"][\"SRCDIR\"], \"test/util/data\"), \"bitcoin-util-test.json\",\n+             config[\"environment\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138392847",
      "id" : 138392847,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 27,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62180826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138392847",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138393170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138393170"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you explain why it makes sense to first log to info and then the same to the error level?",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T16:02:33Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+\n def main():\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/../config.ini\"))\n+    config.read_file(open(os.path.join(os.path.dirname(__file__), \"../config.ini\")))\n \n     parser = argparse.ArgumentParser(description=__doc__)\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")\n     args = parser.parse_args()\n     verbose = args.verbose\n \n     if verbose:\n         level = logging.DEBUG\n     else:\n         level = logging.ERROR\n-    formatter = '%(asctime)s - %(levelname)s - %(message)s'\n+    formatter = \"%(asctime)s - %(levelname)s - %(message)s\"\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n \n-    bctester(config[\"environment\"][\"SRCDIR\"] + \"/test/util/data\", \"bitcoin-util-test.json\", config[\"environment\"])\n+    bctester(os.path.join(config[\"environment\"][\"SRCDIR\"], \"test/util/data\"), \"bitcoin-util-test.json\",\n+             config[\"environment\"])\n+\n \n-def bctester(testDir, input_basename, buildenv):\n+def bctester(test_dir, input_basename, build_env):\n     \"\"\" Loads and parses the input file, runs all tests and reports results\"\"\"\n-    input_filename = testDir + \"/\" + input_basename\n+    input_filename = os.path.join(test_dir, input_basename)\n     raw_data = open(input_filename).read()\n     input_data = json.loads(raw_data)\n \n     failed_testcases = []\n \n-    for testObj in input_data:\n+    for test_obj in input_data:\n         try:\n-            bctest(testDir, testObj, buildenv)\n-            logging.info(\"PASSED: \" + testObj[\"description\"])\n-        except:\n-            logging.info(\"FAILED: \" + testObj[\"description\"])\n-            failed_testcases.append(testObj[\"description\"])\n+            bctest(test_dir, test_obj, build_env)\n+            logging.info(\"PASSED: \" + test_obj[\"description\"])\n+        except Exception as e:\n+            logging.info(\"FAILED: \" + test_obj[\"description\"])\n+            logging.error(\"Error %s: %s\" % (test_obj[\"description\"], e))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138393170",
      "id" : 138393170,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 52,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62180826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138393170",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138393893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138393893"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Generally, I'd prefer if refactoring is separate (at least a separate commit) from changing behavior.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T16:05:14Z",
      "diff_hunk" : "@@ -63,87 +67,93 @@ def bctester(testDir, input_basename, buildenv):\n     else:\n         sys.exit(0)\n \n-def bctest(testDir, testObj, buildenv):\n+\n+def bctest(test_dir, test_obj, build_env):\n     \"\"\"Runs a single test, comparing output and RC to expected output and RC.\n \n     Raises an error if input can't be read, executable fails, or output/RC\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n-    execargs = testObj['args']\n-    execrun = [execprog] + execargs\n+    exec_prog = os.path.join(build_env[\"BUILDDIR\"], \"src\", test_obj[\"exec\"]) + build_env[\"EXEEXT\"]\n+    exec_args = test_obj[\"args\"]\n+    exec_run = [exec_prog] + exec_args\n \n     # Read the input data (if there is any)\n-    stdinCfg = None\n-    inputData = None\n-    if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n-        inputData = open(filename).read()\n-        stdinCfg = subprocess.PIPE\n+    stdin_cfg = None\n+    input_data = None\n+    if \"input\" in test_obj:\n+        filename = os.path.join(test_dir, test_obj[\"input\"])\n+        input_data = open(filename).read()\n+        stdin_cfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n-    outputFn = None\n-    outputData = None\n-    if \"output_cmp\" in testObj:\n-        outputFn = testObj['output_cmp']\n-        outputType = os.path.splitext(outputFn)[1][1:]  # output type from file extension (determines how to compare)\n+    output_fn = None\n+    output_data = None\n+    output_type = None\n+    if \"output_cmp\" in test_obj:\n+        output_fn = test_obj[\"output_cmp\"]\n+        output_type = os.path.splitext(output_fn)[1][1:]  # output type from file extension (determines how to compare)\n         try:\n-            outputData = open(testDir + \"/\" + outputFn).read()\n+            output_data = open(os.path.join(test_dir, output_fn)).read()\n         except:\n-            logging.error(\"Output file \" + outputFn + \" can not be opened\")\n+            logging.error(\"Output file \" + output_fn + \" can not be opened\")\n             raise\n-        if not outputData:\n-            logging.error(\"Output data missing for \" + outputFn)\n+        if not output_data:\n+            logging.error(\"Output data missing for \" + output_fn)\n+            raise Exception\n+        if not output_type:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138393893",
      "id" : 138393893,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 115,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62180826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138393893",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138394117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138394117"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it makes sense to replace every variable in the whole file by a lower_case name.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T16:06:02Z",
      "diff_hunk" : "@@ -63,87 +67,93 @@ def bctester(testDir, input_basename, buildenv):\n     else:\n         sys.exit(0)\n \n-def bctest(testDir, testObj, buildenv):\n+\n+def bctest(test_dir, test_obj, build_env):\n     \"\"\"Runs a single test, comparing output and RC to expected output and RC.\n \n     Raises an error if input can't be read, executable fails, or output/RC\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n-    execargs = testObj['args']\n-    execrun = [execprog] + execargs\n+    exec_prog = os.path.join(build_env[\"BUILDDIR\"], \"src\", test_obj[\"exec\"]) + build_env[\"EXEEXT\"]\n+    exec_args = test_obj[\"args\"]\n+    exec_run = [exec_prog] + exec_args\n \n     # Read the input data (if there is any)\n-    stdinCfg = None\n-    inputData = None\n-    if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n-        inputData = open(filename).read()\n-        stdinCfg = subprocess.PIPE\n+    stdin_cfg = None\n+    input_data = None\n+    if \"input\" in test_obj:\n+        filename = os.path.join(test_dir, test_obj[\"input\"])\n+        input_data = open(filename).read()\n+        stdin_cfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n-    outputFn = None\n-    outputData = None\n-    if \"output_cmp\" in testObj:\n-        outputFn = testObj['output_cmp']\n-        outputType = os.path.splitext(outputFn)[1][1:]  # output type from file extension (determines how to compare)\n+    output_fn = None\n+    output_data = None\n+    output_type = None\n+    if \"output_cmp\" in test_obj:\n+        output_fn = test_obj[\"output_cmp\"]\n+        output_type = os.path.splitext(output_fn)[1][1:]  # output type from file extension (determines how to compare)\n         try:\n-            outputData = open(testDir + \"/\" + outputFn).read()\n+            output_data = open(os.path.join(test_dir, output_fn)).read()\n         except:\n-            logging.error(\"Output file \" + outputFn + \" can not be opened\")\n+            logging.error(\"Output file \" + output_fn + \" can not be opened\")\n             raise\n-        if not outputData:\n-            logging.error(\"Output data missing for \" + outputFn)\n+        if not output_data:\n+            logging.error(\"Output data missing for \" + output_fn)\n+            raise Exception\n+        if not output_type:\n+            logging.error(\"Output type missing for \" + output_fn)\n             raise Exception\n \n     # Run the test\n-    proc = subprocess.Popen(execrun, stdin=stdinCfg, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+    proc = subprocess.Popen(exec_run, stdin=stdin_cfg, stdout=subprocess.PIPE, stderr=subprocess.PIPE,\n+                            universal_newlines=True)\n     try:\n-        outs = proc.communicate(input=inputData)\n+        outs = proc.communicate(input=input_data)\n     except OSError:\n-        logging.error(\"OSError, Failed to execute \" + execprog)\n+        logging.error(\"OSError, Failed to execute \" + exec_prog)\n         raise\n \n-    if outputData:\n+    if output_data:\n         data_mismatch, formatting_mismatch = False, False\n         # Parse command output and expected output\n         try:\n-            a_parsed = parse_output(outs[0], outputType)\n+            a_parsed = parse_output(outs[0], output_type)\n         except Exception as e:\n-            logging.error('Error parsing command output as %s: %s' % (outputType, e))\n+            logging.error(\"Error parsing command output as %s: %s\" % (output_type, e))\n             raise\n         try:\n-            b_parsed = parse_output(outputData, outputType)\n+            b_parsed = parse_output(output_data, output_type)\n         except Exception as e:\n-            logging.error('Error parsing expected output %s as %s: %s' % (outputFn, outputType, e))\n+            logging.error(\"Error parsing expected output %s as %s: %s\" % (output_fn, output_type, e))\n             raise\n         # Compare data\n         if a_parsed != b_parsed:\n-            logging.error(\"Output data mismatch for \" + outputFn + \" (format \" + outputType + \")\")\n+            logging.error(\"Output data mismatch for \" + output_fn + \" (format \" + output_type + \")\")\n             data_mismatch = True\n         # Compare formatting\n-        if outs[0] != outputData:\n-            error_message = \"Output formatting mismatch for \" + outputFn + \":\\n\"\n-            error_message += \"\".join(difflib.context_diff(outputData.splitlines(True),\n+        if outs[0] != output_data:\n+            error_message = \"Output formatting mismatch for \" + output_fn + \":\\n\"\n+            error_message += \"\".join(difflib.context_diff(output_data.splitlines(True),\n                                                           outs[0].splitlines(True),\n-                                                          fromfile=outputFn,\n+                                                          fromfile=output_fn,\n                                                           tofile=\"returned\"))\n             logging.error(error_message)\n             formatting_mismatch = True\n \n         assert not data_mismatch and not formatting_mismatch\n \n     # Compare the return code to the expected return code\n-    wantRC = 0\n-    if \"return_code\" in testObj:\n-        wantRC = testObj['return_code']\n-    if proc.returncode != wantRC:\n-        logging.error(\"Return code mismatch for \" + outputFn)\n+    want_rc = 0\n+    if \"return_code\" in test_obj:\n+        want_rc = test_obj[\"return_code\"]\n+    if proc.returncode != want_rc:\n+        logging.error(\"Return code mismatch for \" + output_fn)\n         raise Exception\n \n-    if \"error_txt\" in testObj:\n-        want_error = testObj[\"error_txt\"]\n+    if \"error_txt\" in test_obj:\n+        want_error = test_obj[\"error_txt\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138394117",
      "id" : 138394117,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 186,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62180826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138394117",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138412152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "agree (and for short symbol-like strings as in this line, single quotes seem to be most people's preferred style)",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T17:15:52Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+\n def main():\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/../config.ini\"))\n+    config.read_file(open(os.path.join(os.path.dirname(__file__), \"../config.ini\")))\n \n     parser = argparse.ArgumentParser(description=__doc__)\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412152",
      "id" : 138412152,
      "in_reply_to_id" : 138392475,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 12,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62203769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138412152",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138412439"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For short util modules like this, and even for most of our test scripts, I don't think 2 lines separating each function is necessary. It makes sense for large projects where you want visual separation between top-level classes, but I think it's unnecessary here.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T17:17:03Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412439",
      "id" : 138412439,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 4,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62204087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138412439",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138412648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "... and most of our python files don't adhere to the 79 char max line length (which I think is a good thing!)",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-09-12T17:17:51Z",
      "diff_hunk" : "@@ -20,40 +20,44 @@\n import subprocess\n import sys\n \n+\n def main():\n     config = configparser.ConfigParser()\n-    config.read_file(open(os.path.dirname(__file__) + \"/../config.ini\"))\n+    config.read_file(open(os.path.join(os.path.dirname(__file__), \"../config.ini\")))\n \n     parser = argparse.ArgumentParser(description=__doc__)\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")\n     args = parser.parse_args()\n     verbose = args.verbose\n \n     if verbose:\n         level = logging.DEBUG\n     else:\n         level = logging.ERROR\n-    formatter = '%(asctime)s - %(levelname)s - %(message)s'\n+    formatter = \"%(asctime)s - %(levelname)s - %(message)s\"\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n \n-    bctester(config[\"environment\"][\"SRCDIR\"] + \"/test/util/data\", \"bitcoin-util-test.json\", config[\"environment\"])\n+    bctester(os.path.join(config[\"environment\"][\"SRCDIR\"], \"test/util/data\"), \"bitcoin-util-test.json\",\n+             config[\"environment\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412648",
      "id" : 138412648,
      "in_reply_to_id" : 138392847,
      "original_commit_id" : "5256a595a8f705e9e98a389af683c320d7e47433",
      "original_position" : 27,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 62204311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138412648",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@dongsam we don't have particularly strict style guidelines for our python code. The only style notes are in https://github.com/bitcoin/bitcoin/blob/master/test/functional/README.md.\r\n\r\nSince _A Foolish Consistency is the Hobgoblin of Little Minds_, we don't usually open PRs to adhere to PEP-8 style, unless there's some good reason to do so (eg making bugs less likely). If I'm doing substantial work on a test script, I often start the PR with a tidy-up commit, but even that is sometimes unpopular and puts off reviewers.\r\n\r\nIf you're looking for your first commit, I think @MarcoFalke is right that removing the style changes from this PR and just having the `os.path` changes would make this more palatable for reviewers.",
      "created_at" : "2017-09-12T17:23:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-328923519",
      "id" : 328923519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11291",
      "updated_at" : "2017-09-12T17:23:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328923519",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "created_at" : "2017-10-05T11:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-334433993",
      "id" : 334433993,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11291",
      "updated_at" : "2017-10-05T11:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334433993",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142947306"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142947306"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: why remove this line? Blank lines are used within functions to indicate logical sections.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-05T14:06:59Z",
      "diff_hunk" : "@@ -43,12 +43,11 @@ def main():\n     formatter = '%(asctime)s - %(levelname)s - %(message)s'\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142947306",
      "id" : 142947306,
      "original_commit_id" : "b7fc18ac620bedcd0cef91c5e9e29a42da55c0da",
      "original_position" : 4,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 67385506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142947306",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142948540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142948540"
         }
      },
      "author_association" : "NONE",
      "body" : "sorry, that was mistake while rebasing, I'll add again now",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-05T14:10:52Z",
      "diff_hunk" : "@@ -43,12 +43,11 @@ def main():\n     formatter = '%(asctime)s - %(levelname)s - %(message)s'\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142948540",
      "id" : 142948540,
      "in_reply_to_id" : 142947306,
      "original_commit_id" : "b7fc18ac620bedcd0cef91c5e9e29a42da55c0da",
      "original_position" : 4,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 67386989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142948540",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1797794?v=4",
         "events_url" : "https://api.github.com/users/dongsam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongsam/followers",
         "following_url" : "https://api.github.com/users/dongsam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongsam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongsam",
         "id" : 1797794,
         "login" : "dongsam",
         "organizations_url" : "https://api.github.com/users/dongsam/orgs",
         "received_events_url" : "https://api.github.com/users/dongsam/received_events",
         "repos_url" : "https://api.github.com/users/dongsam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongsam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongsam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongsam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142954040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142954040"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You've now added trailing whitespace :(",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-05T14:28:53Z",
      "diff_hunk" : "@@ -43,12 +43,11 @@ def main():\n     formatter = '%(asctime)s - %(levelname)s - %(message)s'\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142954040",
      "id" : 142954040,
      "in_reply_to_id" : 142947306,
      "original_commit_id" : "b7fc18ac620bedcd0cef91c5e9e29a42da55c0da",
      "original_position" : 4,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : null,
      "pull_request_review_id" : 67393534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142954040",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142954467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142954467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this change (and the one at line 107) intentional?",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-05T14:29:54Z",
      "diff_hunk" : "@@ -77,32 +77,36 @@ def bctest(testDir, testObj, buildenv):\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", testObj[\"exec\"]) + buildenv[\"EXEEXT\"]\n     execargs = testObj['args']\n     execrun = [execprog] + execargs\n \n     # Read the input data (if there is any)\n     stdinCfg = None\n     inputData = None\n     if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n+        filename = os.path.join(testDir, testObj[\"input\"])\n         inputData = open(filename).read()\n         stdinCfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n     outputFn = None\n     outputData = None\n+    outputType = None",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142954467",
      "id" : 142954467,
      "original_commit_id" : "5bd360002eebbd7217ab2b66dbc2541067923731",
      "original_position" : 36,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : 30,
      "pull_request_review_id" : 67393534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142954467",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142959565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142959565"
         }
      },
      "author_association" : "NONE",
      "body" : "Yes, there was potential risk `outputType` can be None so I added initial outputType and exception line when outputType is None, if you think it is not needed, i can remove again",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-05T14:46:21Z",
      "diff_hunk" : "@@ -77,32 +77,36 @@ def bctest(testDir, testObj, buildenv):\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", testObj[\"exec\"]) + buildenv[\"EXEEXT\"]\n     execargs = testObj['args']\n     execrun = [execprog] + execargs\n \n     # Read the input data (if there is any)\n     stdinCfg = None\n     inputData = None\n     if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n+        filename = os.path.join(testDir, testObj[\"input\"])\n         inputData = open(filename).read()\n         stdinCfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n     outputFn = None\n     outputData = None\n+    outputType = None",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142959565",
      "id" : 142959565,
      "in_reply_to_id" : 142954467,
      "original_commit_id" : "5bd360002eebbd7217ab2b66dbc2541067923731",
      "original_position" : 36,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : 30,
      "pull_request_review_id" : 67400020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-05T14:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142959565",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1797794?v=4",
         "events_url" : "https://api.github.com/users/dongsam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongsam/followers",
         "following_url" : "https://api.github.com/users/dongsam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongsam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongsam",
         "id" : 1797794,
         "login" : "dongsam",
         "organizations_url" : "https://api.github.com/users/dongsam/orgs",
         "received_events_url" : "https://api.github.com/users/dongsam/received_events",
         "repos_url" : "https://api.github.com/users/dongsam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongsam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongsam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongsam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r143483785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143483785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestion: change the error text slightly here to clarify what the problem is:\r\n\r\n```python\r\nlogging.error(\"Output file %s does not have a file extension\" % outputFn)\r\n```",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-09T14:31:23Z",
      "diff_hunk" : "@@ -77,32 +77,36 @@ def bctest(testDir, testObj, buildenv):\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", testObj[\"exec\"]) + buildenv[\"EXEEXT\"]\n     execargs = testObj['args']\n     execrun = [execprog] + execargs\n \n     # Read the input data (if there is any)\n     stdinCfg = None\n     inputData = None\n     if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n+        filename = os.path.join(testDir, testObj[\"input\"])\n         inputData = open(filename).read()\n         stdinCfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n     outputFn = None\n     outputData = None\n+    outputType = None\n     if \"output_cmp\" in testObj:\n         outputFn = testObj['output_cmp']\n         outputType = os.path.splitext(outputFn)[1][1:]  # output type from file extension (determines how to compare)\n         try:\n-            outputData = open(testDir + \"/\" + outputFn).read()\n+            outputData = open(os.path.join(testDir, outputFn)).read()\n         except:\n             logging.error(\"Output file \" + outputFn + \" can not be opened\")\n             raise\n         if not outputData:\n             logging.error(\"Output data missing for \" + outputFn)\n             raise Exception\n+        if not outputType:\n+            logging.error(\"Output type missing for \" + outputFn)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r143483785",
      "id" : 143483785,
      "original_commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "original_position" : 44,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : 44,
      "pull_request_review_id" : 68001634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-09T14:31:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143483785",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r143483947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143483947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, this is a good additional check.",
      "commit_id" : "f1c5277df7536c11866bd2fb42db24386f14ffe9",
      "created_at" : "2017-10-09T14:32:02Z",
      "diff_hunk" : "@@ -77,32 +77,36 @@ def bctest(testDir, testObj, buildenv):\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", testObj[\"exec\"]) + buildenv[\"EXEEXT\"]\n     execargs = testObj['args']\n     execrun = [execprog] + execargs\n \n     # Read the input data (if there is any)\n     stdinCfg = None\n     inputData = None\n     if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n+        filename = os.path.join(testDir, testObj[\"input\"])\n         inputData = open(filename).read()\n         stdinCfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n     outputFn = None\n     outputData = None\n+    outputType = None",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11291#discussion_r143483947",
      "id" : 143483947,
      "in_reply_to_id" : 142954467,
      "original_commit_id" : "5bd360002eebbd7217ab2b66dbc2541067923731",
      "original_position" : 36,
      "path" : "test/util/bitcoin-util-test.py",
      "position" : 30,
      "pull_request_review_id" : 68001822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11291",
      "updated_at" : "2017-10-09T14:32:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143483947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]

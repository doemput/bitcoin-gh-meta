{
   "assignee" : null,
   "body" : "I propose the transaction fee should be calculated from a percentage of the input amount divided by the confirmations of the input multiplied by the number of inputs.\r\n\r\nBy using a percentage of the input amount the transaction fee will always make sense no matter what the \"price\" of bitcoins may be in fiat; by dividing the fee by the number of confirmations we discourage hasty spends and reward savings (ie. old inputs); by multiplying the fee by the number of inputs we discourage \"payment fragmenting.\"\r\n\r\nLet me further explain payment fragmenting by way of an example: Let's say I get paid $2,500 in bitcoins per month from my job. If I then take that $2,500 and pay for a coffee (right away, 1 confirmation) I'll be charged a fee of $2.50 because I'm charged according to the *input amount*, not the actual transaction size. Because of this it would behove my employer to pay me the $2,500 as one transaction with, perhaps, 100 output addresses at $25 apiece so that when I pay for my coffee I use one of the $25 unspent outputs. By multiplying the transaction fee be the number of inputs this provides a disincentive for payment fragmenting as multiple inputs will be required to pay for larger purchases.\r\n\r\nFurthermore this provides an incentive for wallet software to use the oldest input(s) which most closely match the transaction amount. For the example above: In real life a user's wallet would have a number of inputs to choose from and wouldn't use the newest \"paycheck\" input for the coffee purchase. Furthermore, even if the $2,500 input was the only input available, by waiting for 100 confirmations (less than a day) the transaction fee would be 2.5 cents.\r\n\r\nTransaction fees would then be calculated by the following formula:\r\n\r\n((INPUT_AMOUNT * BASE_PERCENT) / CONFIRMATIONS) * NUMBER_OF_INPUTS\r\n\r\nThe INPUT_AMOUNT, CONFIRMATIONS and NUMBER_OF_INPUTS would be determined by the creator of the transaction and should be optimized for the transaction amount -- the BASE_PERCENT would be hard-coded in the bitcoind software. The special case of zero CONFIRMATIONS will be treated as 1 confirmation in order to avoid a divide by zero error.\r\n\r\nFor example: if I choose a BASE_PERCENT of 0.1% and one input it will cost:\r\n\r\n- $1 to send $1,000,000 that has 100 confirmations;\r\n- $0.10 (10 cents) to send $1,000,000 that has 1,000 confirmations (approx. 1 week);\r\n- $0.10 (10 cents) to send $100 which has 1 confirmation;\r\n- $0.01 (1 cent) to send $100 which has 10 confirmations;\r\n- $0.001 (1/10 cent) to send $100 which has 100 confirmations (less than a day);\r\n\r\nI've put together a spreadsheet which shows the various fees by amount and confirmations -- the spreadsheet assumes one input for a transaction:\r\n\r\nhttps://docs.google.com/spreadsheets/d/1ovAQfxksQmOq3zYf79qFEDPCrSx58SmyK3Uwpu8iTUs/edit?usp=sharing",
   "closed_at" : "2014-05-12T06:57:21Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 18,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4171/comments",
   "created_at" : "2014-05-11T03:13:11Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4171/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/4171",
   "id" : 33253946,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4171/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 4171,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Transaction Fee Proposal",
   "updated_at" : "2014-05-12T10:22:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4171",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/637308?v=3",
      "events_url" : "https://api.github.com/users/pgrigor/events{/privacy}",
      "followers_url" : "https://api.github.com/users/pgrigor/followers",
      "following_url" : "https://api.github.com/users/pgrigor/following{/other_user}",
      "gists_url" : "https://api.github.com/users/pgrigor/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/pgrigor",
      "id" : 637308,
      "login" : "pgrigor",
      "organizations_url" : "https://api.github.com/users/pgrigor/orgs",
      "received_events_url" : "https://api.github.com/users/pgrigor/received_events",
      "repos_url" : "https://api.github.com/users/pgrigor/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/pgrigor/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/pgrigor/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/pgrigor"
   }
}

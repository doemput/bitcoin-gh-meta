[
   {
      "body" : "One thing such a feature should have is the ability to take a list of transactionsÃ¢ÂÂ since you may need to also provide the parents which you also don't want to broadcast yet.\r\n\r\nAn interesting question is should it be validating against the blockchain or against the memorypool?",
      "created_at" : "2014-05-09T18:01:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-42695311",
      "id" : 42695311,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2014-05-09T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42695311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "+1 on taking a list of transactions\r\n\r\nI feel that it should be validated against the memorypool. In other words, if `verifyrawtransaction` returns true, then it should be also propagatable with `sendrawtransaction`",
      "created_at" : "2014-05-09T19:31:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-42704722",
      "id" : 42704722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2014-05-09T19:31:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42704722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3519115?v=3",
         "events_url" : "https://api.github.com/users/sidazhang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sidazhang/followers",
         "following_url" : "https://api.github.com/users/sidazhang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sidazhang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sidazhang",
         "id" : 3519115,
         "login" : "sidazhang",
         "organizations_url" : "https://api.github.com/users/sidazhang/orgs",
         "received_events_url" : "https://api.github.com/users/sidazhang/received_events",
         "repos_url" : "https://api.github.com/users/sidazhang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sidazhang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sidazhang"
      }
   },
   {
      "body" : "I agree with the general idea, and think this could be pretty useful.\r\n\r\nWhile `\"decoderawtransaction\"` can be used to check the structure of transactions, and in a hacky way `\"signrawtransaction\"` can be used to verify scripts and signatures, it's feels more like an incomplete workaround.\r\n\r\nA few random use cases that come to my mind, more or less related to this topic:\r\n\r\n- User doesn't want to run a node (for whatever reason), and instead uses a third party API provider; Bitcoin Core could be used to double check the results, at least to some degree\r\n\r\n- User wants to know which inputs are signed in a partially signed transaction\r\n\r\n- User signs a raw transaction offline, and wants to verify the signatures on another machine, before moving the signing keys on paper back to a vault\r\n\r\n- User receives a time-locked refund transaction, say for example from greenaddress.it, and wants to ensure the refund transaction is valid\r\n\r\n- Someone fools blockchain.info' pushtx API and \"spoofs\" a transaction, seemingly spending Satoshi's coins; Bitcoin Core could again be used to double check, whether it really may have happened\r\n\r\n- In the broader context: user wants to verify that a transaction is really included in a block (although this may already be covered by `\"verifytxoutproof\"`)\r\n\r\nRelated to the first point is a discussion over at https://github.com/CryptoConsortium/CCSS/issues/15, which indicates that relying on external API providers seems to be pretty common.\r\n\r\nIt should probably be differentiated between stateless and stateful verification (e.g. consider the mempool, or be able to check transactions to a limited degree with an unsynchronized offline client).",
      "created_at" : "2015-08-24T17:23:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-134307209",
      "id" : 134307209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2015-09-29T10:23:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134307209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5836089?v=3",
         "events_url" : "https://api.github.com/users/dexX7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dexX7/followers",
         "following_url" : "https://api.github.com/users/dexX7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dexX7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dexX7",
         "id" : 5836089,
         "login" : "dexX7",
         "organizations_url" : "https://api.github.com/users/dexX7/orgs",
         "received_events_url" : "https://api.github.com/users/dexX7/received_events",
         "repos_url" : "https://api.github.com/users/dexX7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dexX7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dexX7"
      }
   },
   {
      "body" : "We've discussed this on IRC a while ago, and this still seems useful.\r\n\r\n> One thing such a feature should have is the ability to take a list of transactionsÃ¢ÂÂ since you may need to also provide the parents which you also don't want to broadcast yet.\r\n\r\nYes, it should definitely be able to take a list of transactions. \r\n\r\n> An interesting question is should it be validating against the blockchain or against the memorypool?\r\n\r\nProbably either - should be a parameter, like for `gettxout`.\r\n",
      "created_at" : "2016-02-16T16:23:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-184753360",
      "id" : 184753360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2016-02-16T16:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/184753360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "What is intended by:\r\n\r\n> validating against the mempool\r\n\r\nDo we mean simply checking it against policy? (no double spends,  RBF, yada yada)",
      "created_at" : "2016-02-16T22:20:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-184898484",
      "id" : 184898484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2016-02-16T22:20:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/184898484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "For information, such feature would be very useful for LN.\r\nThere is several rule (like dust one) which can make a tx commitment unbroadcastable. This would result into theft.\r\n\r\nIf such function existed, a LN node would just have to check verifyrawtransaction before releasing the revocation hash of the previous commitment.",
      "created_at" : "2016-02-17T06:26:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-185046662",
      "id" : 185046662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2016-02-17T06:26:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/185046662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "> Do we mean simply checking it against policy? (no double spends, RBF, yada yada)\r\n\r\nSee it as the difference between 'take into account 0conf' (blockchain+mempool) and 'don't take into account 0-conf' (blockchain).",
      "created_at" : "2016-02-17T12:16:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-185175179",
      "id" : 185175179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2016-02-17T12:16:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/185175179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "See #7552",
      "created_at" : "2016-02-18T09:58:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-185634485",
      "id" : 185634485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4162",
      "updated_at" : "2016-02-18T09:58:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/185634485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

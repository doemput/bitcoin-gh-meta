[
   {
      "body" : "Please test with 0.11.2\r\nNote that this is not a support forum for altcoins, post your issues with them to their respective issue tracker.",
      "created_at" : "2015-12-03T12:41:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-161622388",
      "id" : 161622388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-03T13:27:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161622388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing due to inactivity.",
      "created_at" : "2015-12-08T14:40:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-162901984",
      "id" : 162901984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-08T14:40:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162901984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Sorry, @laanwj , @dexX7 and I had verified that this was an \"upstream\" bug in 0.10.2 and he had asked me to try with 0.11.2. I just updated to 0.11.2 and the crash is still there.\r\n\r\nCrash log: \r\n[Bitcoin_Qt-0.11.2-crash.txt](https://github.com/bitcoin/bitcoin/files/56536/Bitcoin_Qt-0.11.2-crash.txt)\r\n",
      "created_at" : "2015-12-09T08:49:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-163152797",
      "id" : 163152797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-09T08:54:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163152797",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61612?v=3",
         "events_url" : "https://api.github.com/users/msgilligan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/msgilligan/followers",
         "following_url" : "https://api.github.com/users/msgilligan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/msgilligan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/msgilligan",
         "id" : 61612,
         "login" : "msgilligan",
         "organizations_url" : "https://api.github.com/users/msgilligan/orgs",
         "received_events_url" : "https://api.github.com/users/msgilligan/received_events",
         "repos_url" : "https://api.github.com/users/msgilligan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/msgilligan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/msgilligan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/msgilligan"
      }
   },
   {
      "body" : "What is at the end of debug.log?\r\n",
      "created_at" : "2015-12-09T09:26:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-163160002",
      "id" : 163160002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-09T09:26:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163160002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Steps to reproduce:\r\n\r\n1. Double-click on the \"Bitcoin Core\" icon\r\n2. Wait till you see \"Verifying Blocks: 1%\"\r\n3. Press Command-Q\r\n4. Wait\r\n\r\nThe problem does not happen every time, but about 2 out of 3.\r\n\r\nI am on Mac OS 10.10.5 on a Macbook Pro Mid 2012.\r\n\r\ndebug.log:\r\n\r\n```\r\n2015-12-09 10:10:24 init message: Loading addresses...\r\n2015-12-09 10:10:24 Loaded 58752 addresses from peers.dat  194ms\r\n2015-12-09 10:10:24 dnsseed thread start\r\n2015-12-09 10:10:24 net thread start\r\n2015-12-09 10:10:24 addcon thread start\r\n2015-12-09 10:10:24 opencon thread start\r\n2015-12-09 10:10:24 msghand thread start\r\n2015-12-09 10:10:24 init message: Done loading\r\n2015-12-09 10:10:24 dnsseed thread interrupt\r\n2015-12-09 10:10:24 opencon thread interrupt\r\n2015-12-09 10:10:24 scheduler thread interrupt\r\n2015-12-09 10:10:24 addcon thread interrupt\r\n2015-12-09 10:10:24 msghand thread interrupt\r\n2015-12-09 10:10:24 GUI: PaymentServer::LoadRootCAs: Loaded  198  root certificates\r\n2015-12-09 10:10:24 net thread interrupt\r\n2015-12-09 10:10:24 Shutdown: In progress...\r\n2015-12-09 10:10:24 StopNode()\r\n2015-12-09 10:10:24 Shutdown: done\r\n```",
      "created_at" : "2015-12-09T10:13:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-163175281",
      "id" : 163175281,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-09T10:13:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163175281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61612?v=3",
         "events_url" : "https://api.github.com/users/msgilligan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/msgilligan/followers",
         "following_url" : "https://api.github.com/users/msgilligan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/msgilligan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/msgilligan",
         "id" : 61612,
         "login" : "msgilligan",
         "organizations_url" : "https://api.github.com/users/msgilligan/orgs",
         "received_events_url" : "https://api.github.com/users/msgilligan/received_events",
         "repos_url" : "https://api.github.com/users/msgilligan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/msgilligan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/msgilligan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/msgilligan"
      }
   },
   {
      "body" : "A Cmd-Q during startup can lead to a segfault. Confirmed.\r\n(could only reproduce with the whole mainnet chain, seems not to happen with a fresh, tiny mainnet or testnet chain) \r\n\r\n```\r\n(lldb) bt\r\n* thread #1: tid = 0x4696a, 0x0000000100032c08 bitcoin-qt`std::__1::__tree_node_base<void*>* std::__1::__tree_next<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_min<std::__1::__tree_node_base<void*>*>(__x=0xf000000010420da5) + 4 at __tree:126, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n  * frame #0: 0x0000000100032c08 bitcoin-qt`std::__1::__tree_node_base<void*>* std::__1::__tree_next<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_min<std::__1::__tree_node_base<void*>*>(__x=0xf000000010420da5) + 4 at __tree:126\r\n    frame #1: 0x0000000100032c04 bitcoin-qt`std::__1::__tree_node_base<void*>* std::__1::__tree_next<std::__1::__tree_node_base<void*>*>(__x=0x0000000175a2b9b0) + 180 at __tree:150\r\n    frame #2: 0x00000001008efc6f bitcoin-qt`CWallet::GetWatchOnlyBalance() const [inlined] std::__1::__tree_const_iterator<std::__1::__value_type<uint256, CWalletTx>, std::__1::__tree_node<std::__1::__value_type<uint256, CWalletTx>, void*>*, long>::operator++(this=0x00007fff5fbfc980) + 18 at __tree:739\r\n    frame #3: 0x00000001008efc5d bitcoin-qt`CWallet::GetWatchOnlyBalance() const [inlined] std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<uint256, CWalletTx>, std::__1::__tree_node<std::__1::__value_type<uint256, CWalletTx>, void*>*, long> >::operator++(this=0x00007fff5fbfc980) + 8 at map:750\r\n    frame #4: 0x00000001008efc55 bitcoin-qt`CWallet::GetWatchOnlyBalance(this=0x00000001772d7760) const + 1045 at wallet.cpp:1514\r\n    frame #5: 0x00000001001c2217 bitcoin-qt`WalletModel::getWatchBalance(this=0x00000001770bddd0) const + 39 at walletmodel.cpp:92\r\n    frame #6: 0x000000010014230c bitcoin-qt`OverviewPage::setWalletModel(this=0x00000001770bfd40, model=0x00000001770bddd0) + 444 at overviewpage.cpp:229\r\n    frame #7: 0x000000010021686f bitcoin-qt`WalletView::setWalletModel(this=0x00000001770bf790, walletModel=0x00000001770bddd0) + 79 at walletview.cpp:118\r\n    frame #8: 0x00000001001be9fb bitcoin-qt`WalletFrame::addWallet(this=0x000000010b13a7e0, name=0x0000000101125f98, walletModel=0x00000001770bddd0) + 235 at walletframe.cpp:49\r\n    frame #9: 0x0000000100065074 bitcoin-qt`BitcoinGUI::addWallet(this=0x0000000167206150, name=0x0000000101125f98, walletModel=0x00000001770bddd0) + 100 at bitcoingui.cpp:490\r\n    frame #10: 0x00000001000094e9 bitcoin-qt`BitcoinApplication::initializeResult(this=0x00007fff5fbff778, retval=1) + 713 at bitcoin.cpp:454\r\n    frame #11: 0x0000000100008e3d bitcoin-qt`BitcoinApplication::qt_static_metacall(_o=0x00007fff5fbff778, _c=InvokeMetaMethod, _id=4, _a=0x0000000169ba3d20) + 189 at bitcoin.moc:256\r\n    frame #12: 0x0000000102e9518c QtCore`QObject::event(QEvent*) + 156\r\n    frame #13: 0x0000000102e6dd46 QtCore`QCoreApplication::event(QEvent*) + 102\r\n    frame #14: 0x00000001026d5ece QtGui`QGuiApplication::event(QEvent*) + 270\r\n    frame #15: 0x0000000102015182 QtWidgets`QApplication::event(QEvent*) + 1122\r\n    frame #16: 0x000000010201697b QtWidgets`QApplicationPrivate::notify_helper(QObject*, QEvent*) + 251\r\n    frame #17: 0x00000001020192de QtWidgets`QApplication::notify(QObject*, QEvent*) + 5630\r\n    frame #18: 0x0000000102e6d212 QtCore`QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) + 1058\r\n    frame #19: 0x0000000109132b0e libqcocoa.dylib`QCocoaEventDispatcherPrivate::processPostedEvents() + 190\r\n    frame #20: 0x0000000109133391 libqcocoa.dylib`QCocoaEventDispatcherPrivate::postedEventsSourceCallback(void*) + 33\r\n    frame #21: 0x00007fff93e0e5c1 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n    frame #22: 0x00007fff93e0041c CoreFoundation`__CFRunLoopDoSources0 + 556\r\n    frame #23: 0x00007fff93dff93f CoreFoundation`__CFRunLoopRun + 927\r\n    frame #24: 0x00007fff93dff338 CoreFoundation`CFRunLoopRunSpecific + 296\r\n    frame #25: 0x00007fff9730d935 HIToolbox`RunCurrentEventLoopInMode + 235\r\n    frame #26: 0x00007fff9730d76f HIToolbox`ReceiveNextEventCommon + 432\r\n    frame #27: 0x00007fff9730d5af HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter + 71\r\n    frame #28: 0x00007fff8dc950ee AppKit`_DPSNextEvent + 1067\r\n    frame #29: 0x00007fff8e061943 AppKit`-[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\r\n    frame #30: 0x00007fff8dc8afc8 AppKit`-[NSApplication run] + 682\r\n    frame #31: 0x00000001091322df libqcocoa.dylib`QCocoaEventDispatcher::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) + 2191\r\n    frame #32: 0x0000000102e69c1c QtCore`QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) + 412\r\n    frame #33: 0x0000000102e6ca95 QtCore`QCoreApplication::exec() + 341\r\n    frame #34: 0x000000010000ce62 bitcoin-qt`main(argc=2, argv=0x00007fff5fbff800) + 6866 at bitcoin.cpp:669\r\n    frame #35: 0x00007fff9597f5ad libdyld.dylib`start + 1\r\n```",
      "created_at" : "2015-12-10T08:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-163528602",
      "id" : 163528602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-10T08:04:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/163528602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Yes, I have a full main net chain, too.",
      "created_at" : "2015-12-11T20:40:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-164042418",
      "id" : 164042418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2015-12-11T20:40:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/164042418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61612?v=3",
         "events_url" : "https://api.github.com/users/msgilligan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/msgilligan/followers",
         "following_url" : "https://api.github.com/users/msgilligan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/msgilligan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/msgilligan",
         "id" : 61612,
         "login" : "msgilligan",
         "organizations_url" : "https://api.github.com/users/msgilligan/orgs",
         "received_events_url" : "https://api.github.com/users/msgilligan/received_events",
         "repos_url" : "https://api.github.com/users/msgilligan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/msgilligan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/msgilligan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/msgilligan"
      }
   },
   {
      "body" : "Tried to reproduce this on OS X, using latest master. Same as above, hitting Command-Q during startup.\r\n```\r\nsrc/qt/bitcoin-qt\r\n************************\r\nEXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE       \r\nboost: mutex lock failed in pthread_mutex_lock: Invalid argument       \r\nbitcoin in msghand       \r\n************************\r\nEXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE       \r\nboost: mutex lock failed in pthread_mutex_lock: Invalid argument       \r\nbitcoin in net       \r\n\r\nlibc++abi.dylib: libc++abi.dylib: terminating with uncaught exception of type boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >: boost: mutex lock failed in pthread_mutex_lock: Invalid argumentterminating with uncaught exception of type boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >: boost: mutex lock failed in pthread_mutex_lock: Invalid argument\r\n```\r\n------------\r\n```\r\n************************\r\nEXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE       \r\nboost: mutex lock failed in pthread_mutex_lock: Invalid argument       \r\nbitcoin in net       \r\n\r\n\r\n\r\n************************\r\nEXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE       \r\nboost: mutex lock failed in pthread_mutex_lock: Invalid argument       \r\nbitcoin in msghand       \r\n\r\n\r\n\r\n************************\r\nEXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE       \r\nboost: mutex lock failed in pthread_mutex_lock: Invalid argument       \r\nbitcoin in opencon       \r\n\r\nlibc++abi.dylib: libc++abi.dylib: terminating with uncaught exception of type boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >: boost: mutex lock failed in pthread_mutex_lock: Invalid argumentlibc++abi.dylib: terminating with uncaught exception of type boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >: boost: mutex lock failed in pthread_mutex_lock: Invalid argument\r\n```",
      "created_at" : "2016-10-09T13:06:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-252485436",
      "id" : 252485436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2016-10-10T08:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252485436",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "OS X Crash Report\r\n```\r\nApplication Specific Information:\r\nterminating with uncaught exception of type boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >: boost: mutex lock failed in pthread_mutex_lock: Invalid argument\r\nabort() called\r\n\r\nThread 0:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81d60a __fcntl + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff8c81acf6 fcntl + 240\r\n2   libdb_cxx-4.8.dylib           \t0x0000000106d6d196 __os_fsync + 142\r\n3   libdb_cxx-4.8.dylib           \t0x0000000106d6c127 __memp_sync_file + 324\r\n4   libdb_cxx-4.8.dylib           \t0x0000000106d6ae80 __memp_walk_files + 160\r\n5   libdb_cxx-4.8.dylib           \t0x0000000106d6b9cb __memp_sync_int + 2124\r\n6   libdb_cxx-4.8.dylib           \t0x0000000106d44bba __env_refresh + 545\r\n7   libdb_cxx-4.8.dylib           \t0x0000000106d453c8 __env_close + 84\r\n8   libdb_cxx-4.8.dylib           \t0x0000000106d456ab __env_close_pp + 427\r\n9   libdb_cxx-4.8.dylib           \t0x0000000106c7b206 DbEnv::close(unsigned int) + 44\r\n10  bitcoin-qt                    \t0x0000000104505495 CDBEnv::EnvShutdown() + 85 (db.cpp:42)\r\n11  bitcoin-qt                    \t0x0000000104505a86 CDBEnv::~CDBEnv() + 38 (db.cpp:64)\r\n12  bitcoin-qt                    \t0x0000000104505413 CDBEnv::~CDBEnv() + 35 (db.cpp:63)\r\n13  libsystem_c.dylib             \t0x00007fff94627463 __cxa_finalize_ranges + 345\r\n14  libsystem_c.dylib             \t0x00007fff94627767 exit + 55\r\n15  libdyld.dylib                 \t0x00007fff9b2f85b4 start + 8\r\n\r\nThread 1:: Dispatch queue: com.apple.libdispatch-manager\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81eefa kevent_qos + 10\r\n1   libdispatch.dylib             \t0x00007fff954d6165 _dispatch_mgr_invoke + 216\r\n2   libdispatch.dylib             \t0x00007fff954d5dcd _dispatch_mgr_thread + 52\r\n\r\nThread 2:: com.apple.CFSocket.private\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81e07a __select + 10\r\n1   com.apple.CoreFoundation      \t0x00007fff94a304fa __CFSocketManager + 762\r\n2   libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n3   libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n4   libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 3:: bitcoin-scriptch\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   bitcoin-qt                    \t0x0000000103e7421e boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 158 (condition_variable.hpp:77)\r\n3   bitcoin-qt                    \t0x000000010426f961 CCheckQueue<CScriptCheck>::Loop(bool) + 753 (.checkqueue.h:102)\r\n4   bitcoin-qt                    \t0x0000000104192295 CCheckQueue<CScriptCheck>::Thread() + 37 (.checkqueue.h:136)\r\n5   bitcoin-qt                    \t0x000000010419224e ThreadScriptCheck() + 46 (main.cpp:2239)\r\n6   bitcoin-qt                    \t0x00000001041543c4 boost::detail::thread_data<void (*)()>::run() + 36 (thread.hpp:116)\r\n7   libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n8   libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n10  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 4:: bitcoin-scriptch\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   bitcoin-qt                    \t0x0000000103e7421e boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 158 (condition_variable.hpp:77)\r\n3   bitcoin-qt                    \t0x000000010426f961 CCheckQueue<CScriptCheck>::Loop(bool) + 753 (.checkqueue.h:102)\r\n4   bitcoin-qt                    \t0x0000000104192295 CCheckQueue<CScriptCheck>::Thread() + 37 (.checkqueue.h:136)\r\n5   bitcoin-qt                    \t0x000000010419224e ThreadScriptCheck() + 46 (main.cpp:2239)\r\n6   bitcoin-qt                    \t0x00000001041543c4 boost::detail::thread_data<void (*)()>::run() + 36 (thread.hpp:116)\r\n7   libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n8   libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n10  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 5:: bitcoin-scriptch\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   bitcoin-qt                    \t0x0000000103e7421e boost::condition_variable::wait(boost::unique_lock<boost::mutex>&) + 158 (condition_variable.hpp:77)\r\n3   bitcoin-qt                    \t0x000000010426f961 CCheckQueue<CScriptCheck>::Loop(bool) + 753 (.checkqueue.h:102)\r\n4   bitcoin-qt                    \t0x0000000104192295 CCheckQueue<CScriptCheck>::Thread() + 37 (.checkqueue.h:136)\r\n5   bitcoin-qt                    \t0x000000010419224e ThreadScriptCheck() + 46 (main.cpp:2239)\r\n6   bitcoin-qt                    \t0x00000001041543c4 boost::detail::thread_data<void (*)()>::run() + 36 (thread.hpp:116)\r\n7   libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n8   libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n10  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 6:: bitcoin-scheduler\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   bitcoin-qt                    \t0x00000001046fc1ca boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) + 154 (condition_variable.hpp:109)\r\n3   bitcoin-qt                    \t0x00000001046fbf4f boost::condition_variable::wait_until(boost::unique_lock<boost::mutex>&, boost::chrono::time_point<boost::chrono::system_clock, boost::chrono::duration<long long, boost::ratio<1l, 1000000000l> > >) + 95 (condition_variable_fwd.hpp:251)\r\n4   bitcoin-qt                    \t0x00000001046faf31 boost::cv_status boost::condition_variable::wait_until<boost::chrono::duration<long long, boost::ratio<1l, 1000000000l> > >(boost::unique_lock<boost::mutex>&, boost::chrono::time_point<boost::chrono::system_clock, boost::chrono::duration<long long, boost::ratio<1l, 1000000000l> > > const&) + 145 (condition_variable_fwd.hpp:210)\r\n5   bitcoin-qt                    \t0x00000001046fa948 CScheduler::serviceQueue() + 888 (scheduler.cpp:58)\r\n6   bitcoin-qt                    \t0x0000000104155467 boost::_mfi::mf0<void, CConnman>::operator()(CConnman*) const + 119 (mem_fn_template.hpp:49)\r\n7   bitcoin-qt                    \t0x00000001041553ce void boost::_bi::list1<boost::_bi::value<CConnman*> >::operator()<boost::_mfi::mf0<void, CConnman>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, CConnman>&, boost::_bi::list0&, int) + 94 (bind.hpp:259)\r\n8   bitcoin-qt                    \t0x0000000104155348 boost::_bi::bind_t<void, boost::_mfi::mf0<void, CConnman>, boost::_bi::list1<boost::_bi::value<CConnman*> > >::operator()() + 72 (bind.hpp:1222)\r\n9   bitcoin-qt                    \t0x000000010415506b boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > >, void>::invoke(boost::detail::function::function_buffer&) + 43 (function_template.hpp:159)\r\n10  bitcoin-qt                    \t0x0000000104155a13 boost::function0<void>::operator()() const + 131 (function_template.hpp:770)\r\n11  bitcoin-qt                    \t0x000000010411752f void TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) + 335 (.util.h:208)\r\n12  bitcoin-qt                    \t0x0000000104156560 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) + 144 (bind.hpp:319)\r\n13  bitcoin-qt                    \t0x00000001041564a8 boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() + 72 (bind.hpp:1222)\r\n14  bitcoin-qt                    \t0x0000000104155f3c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() + 44 (thread.hpp:116)\r\n15  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n16  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n17  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n18  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 7:: com.apple.NSEventThread\r\n0   libsystem_kernel.dylib        \t0x00007fff8c817f72 mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff8c8173b3 mach_msg + 55\r\n2   com.apple.CoreFoundation      \t0x00007fff949f31c4 __CFRunLoopServiceMachPort + 212\r\n3   com.apple.CoreFoundation      \t0x00007fff949f268c __CFRunLoopRun + 1356\r\n4   com.apple.CoreFoundation      \t0x00007fff949f1ed8 CFRunLoopRunSpecific + 296\r\n5   com.apple.AppKit              \t0x00007fff9649ed95 _NSEventThread + 149\r\n6   libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n7   libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n8   libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81e5e2 __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94962578 _pthread_wqthread + 1283\r\n2   libsystem_pthread.dylib       \t0x00007fff94960341 start_wqthread + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81e5e2 __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94962578 _pthread_wqthread + 1283\r\n2   libsystem_pthread.dylib       \t0x00007fff94960341 start_wqthread + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81e5e2 __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94962578 _pthread_wqthread + 1283\r\n2   libsystem_pthread.dylib       \t0x00007fff94960341 start_wqthread + 13\r\n\r\nThread 11:: bitcoin-torcontrol\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81eeca kevent + 10\r\n1   libevent-2.0.5.dylib          \t0x0000000107036109 kq_dispatch + 450\r\n2   libevent-2.0.5.dylib          \t0x00000001070255b2 event_base_loop + 946\r\n3   bitcoin-qt                    \t0x000000010446975e TorControlThread() + 302 (torcontrol.cpp:672)\r\n4   bitcoin-qt                    \t0x000000010446946c void TraceThread<void (*)()>(char const*, void (*)()) + 332 (.util.h:208)\r\n5   bitcoin-qt                    \t0x000000010447bf90 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> >::operator()<void (*)(char const*, void (*)()), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, void (*)()), boost::_bi::list0&, int) + 128 (bind.hpp:319)\r\n6   bitcoin-qt                    \t0x000000010447bee8 boost::_bi::bind_t<void, void (*)(char const*, void (*)()), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> > >::operator()() + 72 (bind.hpp:1222)\r\n7   bitcoin-qt                    \t0x000000010447be7c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, void (*)()), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> > > >::run() + 44 (thread.hpp:116)\r\n8   libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n9   libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n10  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n11  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 12:: bitcoin-upnp\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81f2a2 poll + 10\r\n1   libminiupnpc.16.dylib         \t0x0000000107010959 receivedata + 104\r\n2   libminiupnpc.16.dylib         \t0x0000000107011836 ssdpDiscoverDevices + 1116\r\n3   libminiupnpc.16.dylib         \t0x000000010700cd9f upnpDiscoverDevices + 458\r\n4   libminiupnpc.16.dylib         \t0x000000010700ce06 upnpDiscover + 60\r\n5   bitcoin-qt                    \t0x00000001042e182b ThreadMapPort() + 155 (net.cpp:1347)\r\n6   bitcoin-qt                    \t0x000000010446946c void TraceThread<void (*)()>(char const*, void (*)()) + 332 (.util.h:208)\r\n7   bitcoin-qt                    \t0x000000010447bf90 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> >::operator()<void (*)(char const*, void (*)()), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, void (*)()), boost::_bi::list0&, int) + 128 (bind.hpp:319)\r\n8   bitcoin-qt                    \t0x000000010447bee8 boost::_bi::bind_t<void, void (*)(char const*, void (*)()), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> > >::operator()() + 72 (bind.hpp:1222)\r\n9   bitcoin-qt                    \t0x000000010447be7c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, void (*)()), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<void (*)()> > > >::run() + 44 (thread.hpp:116)\r\n10  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n11  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n12  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n13  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 13:: bitcoin-dnsseed\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   libboost_thread-mt.dylib      \t0x000000010565fbe9 boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) + 73\r\n3   libboost_thread-mt.dylib      \t0x00000001056600ff boost::this_thread::hiden::sleep_for(timespec const&) + 191\r\n4   bitcoin-qt                    \t0x0000000104760527 MilliSleep(long long) + 119 (thread_data.hpp:243)\r\n5   bitcoin-qt                    \t0x00000001042e2e74 CConnman::ThreadDNSAddressSeed() + 372 (net.cpp:1466)\r\n6   bitcoin-qt                    \t0x0000000104155467 boost::_mfi::mf0<void, CConnman>::operator()(CConnman*) const + 119 (mem_fn_template.hpp:49)\r\n7   bitcoin-qt                    \t0x00000001041553ce void boost::_bi::list1<boost::_bi::value<CConnman*> >::operator()<boost::_mfi::mf0<void, CConnman>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, CConnman>&, boost::_bi::list0&, int) + 94 (bind.hpp:259)\r\n8   bitcoin-qt                    \t0x0000000104155348 boost::_bi::bind_t<void, boost::_mfi::mf0<void, CConnman>, boost::_bi::list1<boost::_bi::value<CConnman*> > >::operator()() + 72 (bind.hpp:1222)\r\n9   bitcoin-qt                    \t0x0000000104342c1b boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf0<void, CConnman>, boost::_bi::list1<boost::_bi::value<CConnman*> > >, void>::invoke(boost::detail::function::function_buffer&) + 43 (function_template.hpp:159)\r\n10  bitcoin-qt                    \t0x0000000104155a13 boost::function0<void>::operator()() const + 131 (function_template.hpp:770)\r\n11  bitcoin-qt                    \t0x000000010411752f void TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) + 335 (.util.h:208)\r\n12  bitcoin-qt                    \t0x0000000104156560 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) + 144 (bind.hpp:319)\r\n13  bitcoin-qt                    \t0x00000001041564a8 boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() + 72 (bind.hpp:1222)\r\n14  bitcoin-qt                    \t0x0000000104155f3c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() + 44 (thread.hpp:116)\r\n15  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n16  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n17  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n18  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 14 Crashed:: bitcoin-net\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81df06 __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff949654ec pthread_kill + 90\r\n2   libsystem_c.dylib             \t0x00007fff946266df abort + 129\r\n3   libc++abi.dylib               \t0x00007fff97de5c11 abort_message + 257\r\n4   libc++abi.dylib               \t0x00007fff97e0bdff default_terminate_handler() + 243\r\n5   libobjc.A.dylib               \t0x00007fff856794a6 _objc_terminate() + 124\r\n6   libc++abi.dylib               \t0x00007fff97e0900e std::__terminate(void (*)()) + 8\r\n7   libc++abi.dylib               \t0x00007fff97e08c8f __cxa_rethrow + 99\r\n8   bitcoin-qt                    \t0x000000010411760c void TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) + 556 (.util.h:218)\r\n9   bitcoin-qt                    \t0x0000000104156560 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) + 144 (bind.hpp:319)\r\n10  bitcoin-qt                    \t0x00000001041564a8 boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() + 72 (bind.hpp:1222)\r\n11  bitcoin-qt                    \t0x0000000104155f3c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() + 44 (thread.hpp:116)\r\n12  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n13  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n14  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n15  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 15:: bitcoin-addcon\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   libboost_thread-mt.dylib      \t0x000000010565fbe9 boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) + 73\r\n3   libboost_thread-mt.dylib      \t0x00000001056600ff boost::this_thread::hiden::sleep_for(timespec const&) + 191\r\n4   bitcoin-qt                    \t0x0000000104760527 MilliSleep(long long) + 119 (thread_data.hpp:243)\r\n5   bitcoin-qt                    \t0x00000001042ea255 CConnman::ThreadOpenAddedConnections() + 2005 (net.cpp:1776)\r\n6   bitcoin-qt                    \t0x0000000104155467 boost::_mfi::mf0<void, CConnman>::operator()(CConnman*) const + 119 (mem_fn_template.hpp:49)\r\n7   bitcoin-qt                    \t0x00000001041553ce void boost::_bi::list1<boost::_bi::value<CConnman*> >::operator()<boost::_mfi::mf0<void, CConnman>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, CConnman>&, boost::_bi::list0&, int) + 94 (bind.hpp:259)\r\n8   bitcoin-qt                    \t0x0000000104155348 boost::_bi::bind_t<void, boost::_mfi::mf0<void, CConnman>, boost::_bi::list1<boost::_bi::value<CConnman*> > >::operator()() + 72 (bind.hpp:1222)\r\n9   bitcoin-qt                    \t0x0000000104342c1b boost::detail::function::void_function_obj_invoker0<boost::_bi::bind_t<void, boost::_mfi::mf0<void, CConnman>, boost::_bi::list1<boost::_bi::value<CConnman*> > >, void>::invoke(boost::detail::function::function_buffer&) + 43 (function_template.hpp:159)\r\n10  bitcoin-qt                    \t0x0000000104155a13 boost::function0<void>::operator()() const + 131 (function_template.hpp:770)\r\n11  bitcoin-qt                    \t0x000000010411752f void TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) + 335 (.util.h:208)\r\n12  bitcoin-qt                    \t0x0000000104156560 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) + 144 (bind.hpp:319)\r\n13  bitcoin-qt                    \t0x00000001041564a8 boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() + 72 (bind.hpp:1222)\r\n14  bitcoin-qt                    \t0x0000000104155f3c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() + 44 (thread.hpp:116)\r\n15  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n16  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n17  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n18  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 16:: bitcoin-opencon\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81dde6 __psynch_mutexwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94962e4a _pthread_mutex_lock_wait + 89\r\n2   libsystem_pthread.dylib       \t0x00007fff949605f5 _pthread_mutex_lock_slow + 300\r\n3   libsystem_c.dylib             \t0x00007fff946059cf fputc + 24\r\n4   libc++abi.dylib               \t0x00007fff97de5bdb abort_message + 203\r\n5   libc++abi.dylib               \t0x00007fff97e0bdff default_terminate_handler() + 243\r\n6   libobjc.A.dylib               \t0x00007fff856794a6 _objc_terminate() + 124\r\n7   libc++abi.dylib               \t0x00007fff97e0900e std::__terminate(void (*)()) + 8\r\n8   libc++abi.dylib               \t0x00007fff97e08c8f __cxa_rethrow + 99\r\n9   bitcoin-qt                    \t0x000000010411760c void TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) + 556 (.util.h:218)\r\n10  bitcoin-qt                    \t0x0000000104156560 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) + 144 (bind.hpp:319)\r\n11  bitcoin-qt                    \t0x00000001041564a8 boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() + 72 (bind.hpp:1222)\r\n12  bitcoin-qt                    \t0x0000000104155f3c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() + 44 (thread.hpp:116)\r\n13  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n14  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n15  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n16  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 17:: bitcoin-msghand\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81dde6 __psynch_mutexwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94962e4a _pthread_mutex_lock_wait + 89\r\n2   libsystem_pthread.dylib       \t0x00007fff949605f5 _pthread_mutex_lock_slow + 300\r\n3   libsystem_c.dylib             \t0x00007fff9460d3b1 vfprintf + 24\r\n4   libc++abi.dylib               \t0x00007fff97de5bce abort_message + 190\r\n5   libc++abi.dylib               \t0x00007fff97e0bdff default_terminate_handler() + 243\r\n6   libobjc.A.dylib               \t0x00007fff856794a6 _objc_terminate() + 124\r\n7   libc++abi.dylib               \t0x00007fff97e0900e std::__terminate(void (*)()) + 8\r\n8   libc++abi.dylib               \t0x00007fff97e08c8f __cxa_rethrow + 99\r\n9   bitcoin-qt                    \t0x000000010411760c void TraceThread<boost::function<void ()> >(char const*, boost::function<void ()>) + 556 (.util.h:218)\r\n10  bitcoin-qt                    \t0x0000000104156560 void boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > >::operator()<void (*)(char const*, boost::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, boost::function<void ()>), boost::_bi::list0&, int) + 144 (bind.hpp:319)\r\n11  bitcoin-qt                    \t0x00000001041564a8 boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > >::operator()() + 72 (bind.hpp:1222)\r\n12  bitcoin-qt                    \t0x0000000104155f3c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, boost::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<boost::function<void ()> > > > >::run() + 44 (thread.hpp:116)\r\n13  libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n14  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n15  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n16  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 18:: bitcoin-wallet\r\n0   libsystem_kernel.dylib        \t0x00007fff8c81ddb6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff94963728 _pthread_cond_wait + 767\r\n2   libboost_thread-mt.dylib      \t0x000000010565fbe9 boost::condition_variable::do_wait_until(boost::unique_lock<boost::mutex>&, timespec const&) + 73\r\n3   libboost_thread-mt.dylib      \t0x00000001056600ff boost::this_thread::hiden::sleep_for(timespec const&) + 191\r\n4   bitcoin-qt                    \t0x0000000104760527 MilliSleep(long long) + 119 (thread_data.hpp:243)\r\n5   bitcoin-qt                    \t0x000000010466d3aa ThreadFlushWalletDB(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 394 (walletdb.cpp:864)\r\n6   bitcoin-qt                    \t0x000000010416753e void boost::_bi::list1<boost::reference_wrapper<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::operator()<void (*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), boost::_bi::list0&, int) + 94 (bind.hpp:259)\r\n7   bitcoin-qt                    \t0x00000001041674b8 boost::_bi::bind_t<void, void (*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), boost::_bi::list1<boost::reference_wrapper<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::operator()() + 72 (bind.hpp:1222)\r\n8   bitcoin-qt                    \t0x000000010416744c boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), boost::_bi::list1<boost::reference_wrapper<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::run() + 44 (thread.hpp:116)\r\n9   libboost_thread-mt.dylib      \t0x000000010565ef05 boost::(anonymous namespace)::thread_proxy(void*) + 165\r\n10  libsystem_pthread.dylib       \t0x00007fff9496299d _pthread_body + 131\r\n11  libsystem_pthread.dylib       \t0x00007fff9496291a _pthread_start + 168\r\n12  libsystem_pthread.dylib       \t0x00007fff94960351 thread_start + 13\r\n\r\nThread 14 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x0000000000000006  rcx: 0x0000700000840648  rdx: 0x0000000000000000\r\n  rdi: 0x000000000000b503  rsi: 0x0000000000000006  rbp: 0x0000700000840670  rsp: 0x0000700000840648\r\n   r8: 0x0000000000000004   r9: 0x00007fff97e0ce23  r10: 0x0000000008000000  r11: 0x0000000000000206\r\n  r12: 0x00007000008407d0  r13: 0x00007f91f75b4258  r14: 0x0000700000841000  r15: 0x00007000008406b0\r\n  rip: 0x00007fff8c81df06  rfl: 0x0000000000000206  cr2: 0x00007fff7832b008\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000148\r\nTrap Number:     133\r\n```",
      "created_at" : "2016-10-10T08:56:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-252565028",
      "id" : 252565028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2016-10-10T08:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252565028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "I can no longer reproduce this. OS X 10.12, using 0.13.1 with a full main-net chain.",
      "created_at" : "2016-11-11T10:13:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7163#issuecomment-259925664",
      "id" : 259925664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7163",
      "updated_at" : "2016-11-11T10:13:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259925664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]

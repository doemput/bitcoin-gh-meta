[
   {
      "body" : "I agree that `\"errors\"` is maybe not the best choice there.\r\nBut this should not break existing client libraries. \r\n\r\nIIRC, the response should be something like (**error within the response->result object**):\r\n`{ \"jsonrpc\": \"2.0\", \"result\": { \"version\" : <v>, ..., \"error\" : \"Warning....\"}, \"id\": 1}` which is a valid JSON RPC 2.0 response\r\n\r\nIn case of a real error, it will return (**error object on top level**):\r\n`{ \"jsonrpc\": \"2.0\", \"result\" : {}, \"error\": \"Real-Error\", \"id\": 1}`",
      "created_at" : "2015-11-30T07:38:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7130#issuecomment-160545385",
      "id" : 160545385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7130",
      "updated_at" : "2015-11-30T07:38:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160545385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "There is zero change that `getinfo` will be changed. It exists *only* for backward compatibility and will be deprecated at some point.\r\nSee the comment here: https://github.com/bitcoin/bitcoin/blob/master/src/rpcmisc.cpp#L30\r\n\r\nNote that there is no dedicated RPC call to get the `errors` yet. So this is an open opportunity to use another name to avoid this misunderstanding... or change the global error concept completely into something more fine-grained.\r\n\r\n> The problem with the current behavior is that it causes libraries to bail: common behavior is to check for the presence of errors in the result to report an error to the calling code.\r\n\r\nHuh! No, that's not right. The 'errors' in the call result object does not interfere with JSONRPC's errors. You have a protocol level conflict in your handling somewhere if this is the case for you (ah, @jonasschnelli explains this in more detail)\r\n\r\n\r\n",
      "created_at" : "2015-11-30T09:33:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7130#issuecomment-160571467",
      "id" : 160571467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7130",
      "updated_at" : "2015-11-30T09:33:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160571467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing this issue though - it's not really a problem or bug, just a matter of using the API as it is defined.",
      "created_at" : "2015-11-30T09:34:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7130#issuecomment-160572046",
      "id" : 160572046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7130",
      "updated_at" : "2015-11-30T09:34:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160572046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

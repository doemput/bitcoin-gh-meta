[
   {
      "body" : "Reluctant ACK.\r\n\r\nCode ACK, agree about avoiding the circular dependency, and agree about avoiding GetArg calls to determine the mempool max size the whole time.\r\n\r\nI dislike moving more policy knowledge into the mempool itself (its size limit), though. It will complicate a more generic memory limiting approach, where there is not a single memory size limit, but one that depends on the UTXO size and perhaps other buffers. ",
      "created_at" : "2015-11-27T14:28:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160150366",
      "id" : 160150366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T14:28:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160150366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Complicate it by putting it into a single attribute in the class that makes more sense?\r\nAlthough I'm not sure how what you have in mind would interact with the current mempool limiting, can't we just create a simple setter when we need it?\r\nI mean, putting it as an attribute there is not the only solution. We can also make it a global in main that the mempool takes as parameter.\r\nAbout having policy code in the mempool, now that #6871 has been merged I'm eager to also decouple the CTxMemPool from CBlockPolicyEstimator (making them completely independent of each other). I expect it to be harder than last time I did it though.\r\nUnless we don't want anything else related to policy encapsulation in 0.12, in that case I can just leave that for Bitcoin JT 0.12...",
      "created_at" : "2015-11-27T14:48:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160153553",
      "id" : 160153553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T14:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160153553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon It's a philosophical point. The CTxMempool data structure IMHO should not make policy decisions at all. It shouldn't even know there is something like a size limit, it's just a data structure. It should provide methods to query its state and indexes and make mutations to it, but not be involved in what data should be in it. That's the caller's responsibility. That's just separation of concerns, and is easier to reason about if you know what responsibility is located where in the code. Just because moving a variable somewhere makes the code easier doesn't mean it's the right place for it.\r\n\r\nAs I said, ACK. I don't know a better solution right now, and I agree that the actual problem you're after (the circular dependency) needs to be solved.",
      "created_at" : "2015-11-27T14:58:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160155110",
      "id" : 160155110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T14:58:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160155110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> @jtimon It's a philosophical point. The CTxMempool data structure IMHO should not make policy decisions at all.\r\n\r\nAnd I agree. But we're very far from that. Right now CTxMempool has a CBlockPolicyEstimator, which is a policy class.\r\nBut I would like to understand your point about \"a more generic memory limiting approach\" better.\r\n\r\n> Just because moving a variable somewhere makes the code easier doesn't mean it's the right place for it.\r\n\r\nThe main goal is not simplifying the code but removing the circular dependency, and this is not the only way to do it. As said another option is to make it a global instead of an attribute of CTxMempool.\r\nI'm fine doing that instead if that is preferred.",
      "created_at" : "2015-11-27T15:05:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160156577",
      "id" : 160156577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T15:05:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160156577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Well, ideally (but that would require significant changes, which I'm not suggesting now) is that the mempool has generic hooks that inform listeners about changes, and that the policyestimator registrers itself there. The code that manages the mempool (currently main) would tell the policyestimator what the memory limit is, if any. The -maxmempool option would only be parsed there.",
      "created_at" : "2015-11-27T15:09:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160157160",
      "id" : 160157160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T15:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160157160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Here's another option without the new attribute in CTxMemPool: https://github.com/bitcoin/bitcoin/compare/master...jtimon:mempool-circular-dependency\r\n\r\nIf that is preferred, I'm happy with that too.\r\n\r\nI believe I disagree with your ideal solution with generic hooks.\r\nAs said I would prefer to just make CTxMempool  and CBlockPolicyEstimator completely independent, and only parse  -maxmempool in CBlockPolicyEstimator's or CStandardPolicy's constructor (it would become an attribute instead of a global). \r\nBut that also requires more changes. Last time I did it, it included things as disruptive as #6068, so it's almost certainly too much for 0.12. Jokes aside, this is the less outdated preparations for the complete decoupling I have at hand in case anyone is interested https://github.com/jtimon/bitcoin/commits/policy-minrelayfee-0.12.99\r\n",
      "created_at" : "2015-11-27T15:49:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160164675",
      "id" : 160164675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T15:49:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160164675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "NACK for now.\r\n\r\n@sipa Why does this circular dependency have to be solved right now?\r\n\r\nI'm all for cleaning up the code design, but I think the proper next step is to make the mempool unaware of the policy estimator not the other way around.   I think it would make sense for the mempool to be aware of it's current state, so when TrimToSize is called with an argument, the mempool should remember what size it has now been trimmed to, thus GetMinFee would no longer need an argument.  I think thats cleaner and makes more sense than having two TrimToSize functions just for testing purposes as in this pull.  I'm happy to do that as soon as I'm in front of a computer again.\r\n\r\nMore importantly, the bigger problem with this pull is it has now put logic inside of the CTxMemPool::estimate functions which were previously just dumb pass throughs.  When those functions go away (because the block policy estimator is used directly), then that logic will have to be repeated at all calling sites.  I don't see why calling code should need to understand that you have to ask the mempool for its min fee in order to call estimate fee.  I think all the logic thats required to do smart fee estimation should be contained in one place, and the policy estimator makes sense to me as that place.\r\n\r\nEven further, future developments in the policy estimator are surely going to require it to be aware of the mempool, I just don't see a way around that.  The most obvious next direct step is to asses how much current back log there is in the mempool and make sure a fee is not returned which is lower than could be reached in the target number of blocks.\r\n\r\nThese concerns have been raised with @jtimon previously, and it would been nice if this pull would have referenced them.\r\n",
      "created_at" : "2015-11-27T16:29:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160170819",
      "id" : 160170819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T16:29:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160170819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "> @sipa Why does this circular dependency have to be solved right now?\r\n\r\nBecause you just introduced it without the need to do so?\r\nThe question could be rather, why this circular dependency needed to be introduced in  #6134?\r\n\r\n> I'm all for cleaning up the code design, but I think the proper next step is to make the mempool unaware of the policy estimator not the other way around. \r\n\r\nI agree with that next step, but \"the other way around\" was already done until #6134. You don't have to chose one or the other, they can be completely independent.\r\n\r\n> I think it would make sense for the mempool to be aware of it's current state, so when TrimToSize is called with an argument, the mempool should remember what size it has now been trimmed to, thus GetMinFee would no longer need an argument\r\n\r\nI highly dislike that \"solution\" (what is this solving exactly?), the default if not provided being \"the same that was used in the last call\" is a twisted interface.\r\n\r\n> More importantly, the bigger problem with this pull is it has now put logic inside of the CTxMemPool::estimate functions which were previously just dumb pass throughs. When those functions go away (because the block policy estimator is used directly), then that logic will have to be repeated at all calling sites\r\n\r\nIt is really dumb logic, but as you say that can be solved when those functions go away. For example, if GetMinFee() was part of the estimator rather than the mempool, it could be called internally CBlockPolicyEstimator::estimateSmartFee()\r\n\r\n> I don't see why calling code should need to understand that you have to ask the mempool for its min fee in order to call estimate fee. I think all the logic thats required to do smart fee estimation should be contained in one place, and the policy estimator makes sense to me as that place.\r\n\r\nAgreed, but this has nothing to do with CBlockPolicyEstimator depending on CTxMemPool.\r\n\r\n> Even further, future developments in the policy estimator are surely going to require it to be aware of the mempool, I just don't see a way around that. \r\n\r\nI've done it once, I will do it again, and I'm convinced it is completely possible to make the mempool and the policy fully independent no matter the functionality.\r\nIf you are skeptic, that's fine. But please don't put obstacles in the way just because you don't think is possible. I'll gladly rewrite all that whenever \"is time\" for #6068 and friends again (a signal I'm waiting to hear from @sipa, btw, since he insisted that policy encapsulation would get in the way of mempool work).\r\n\r\n> These concerns have been raised with @jtimon previously, and it would been nice if this pull would have referenced them.\r\n\r\nI very explicitly and repeatedly referenced #6134 where those discussions where happening.\r\nBut for better reference: https://github.com/bitcoin/bitcoin/pull/6134#discussion_r45216058 \r\nhttps://github.com/bitcoin/bitcoin/pull/6134#issuecomment-159282982\r\n",
      "created_at" : "2015-11-27T17:13:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160177787",
      "id" : 160177787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T17:13:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160177787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "I should have been more explicit and just nacked #6134 instead of coding a nit to be ignored...\r\n\r\n@sipa did you looked at the option without moving anything to mempool.o ?",
      "created_at" : "2015-11-27T17:14:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160178012",
      "id" : 160178012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-27T17:14:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160178012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : ">I highly dislike that \"solution\" (what is this solving exactly?), the default if not provided being \"the same that was used in the last call\" is a twisted interface.\r\n\r\n@jtimon but it's not a default, that's exactly what that attribute is meant to represent.  It's used only for GetMinFee which only cares about how much the mempool has shrunk since the last time you trimmed it.  If we ever changed to some algorithm with dynamic mempool sizes and we had an attribute for the new mempool size, we would also need a separate variable tracking the last size we were trimmed to.  Would be nice if that variable were perhaps limited to the GetMinFee code itself I suppose. ",
      "created_at" : "2015-11-29T14:17:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160418637",
      "id" : 160418637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T14:17:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160418637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@sipa I really disagree re: CTxMemPool having knowledge of its size limit, etc. Bitcoin Core has a number of places where we've made similar decisions and the result is a simple data structure that has almost no encapsulation with callers left to do all the work. The mempool limiting stuff as written already suffers from this and it adds a number of lines to main that could otherwise be hidden away from the already-monolithic code there.\n\nOn November 27, 2015 9:28:13 AM EST, Pieter Wuille <notifications@github.com> wrote:\n>Reluctant ACK.\n>\n>Code ACK, agree about avoiding the circular dependency, and agree about\n>avoiding GetArg calls to determine the mempool max size the whole time.\n>\n>I dislike moving more policy knowledge into the mempool itself (its\n>size limit), though. It will complicate a more generic memory limiting\n>approach, where there is not a single memory size limit, but one that\n>depends on the UTXO size and perhaps other buffers. \n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160150366\n",
      "created_at" : "2015-11-29T19:22:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160454826",
      "id" : 160454826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T19:22:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160454826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Heh, fully agree about all that. But I don't think we should have let a\ncircular dependency in, so absent a better plan to fix that, I'd be fine\nwith at least temporarily localizing that information to the mempool.\n\nIt seems @morcos does have a better plan though, so let's go for that.\n",
      "created_at" : "2015-11-29T19:28:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160455097",
      "id" : 160455097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T19:28:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160455097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Sure, I was commenting more generally, not really in response to this specific pull.\n\nOn November 29, 2015 2:28:12 PM EST, Pieter Wuille <notifications@github.com> wrote:\n>Heh, fully agree about all that. But I don't think we should have let a\n>circular dependency in, so absent a better plan to fix that, I'd be\n>fine\n>with at least temporarily localizing that information to the mempool.\n>\n>It seems @morcos does have a better plan though, so let's go for that.\n>\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160455097\n",
      "created_at" : "2015-11-29T19:29:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160455163",
      "id" : 160455163,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T19:29:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160455163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "So which of the two branches is preferred? The attribute or the global?\nOn Nov 29, 2015 8:30 PM, \"Matt Corallo\" <notifications@github.com> wrote:\n\n> Sure, I was commenting more generally, not really in response to this\n> specific pull.\n>\n> On November 29, 2015 2:28:12 PM EST, Pieter Wuille <\n> notifications@github.com> wrote:\n> >Heh, fully agree about all that. But I don't think we should have let a\n> >circular dependency in, so absent a better plan to fix that, I'd be\n> >fine\n> >with at least temporarily localizing that information to the mempool.\n> >\n> >It seems @morcos does have a better plan though, so let's go for that.\n> >\n> >\n> >---\n> >Reply to this email directly or view it on GitHub:\n> >https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160455097\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160455163>.\n>\n",
      "created_at" : "2015-11-29T19:49:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160460521",
      "id" : 160460521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T19:49:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160460521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Unfortunately we're talking about two separate issues addressed in this pull.\r\n\r\n1) I have a different idea about how the size attribute should be stored in that I think the attribute should be called lastTrimmedSize and set from TrimToSize.  This preserves a bit more flexibility for how we do mempool trimming in the future, but both my approach and Jorge's approach just eliminate repeated calls to `GetArg(\"-maxmempool\")`.  They don't solve the circular dependency.\r\n\r\n2) Jorge and I both agree that CTxMemPool should not depend on the policy estimation code.  This is a larger change not addressed in this pull.  The other half of the circular dependency is where we disagree in that I actually think the policy estimation code should depend on the mempool.  I don't particularly understand why its bad to temporarily have introduced this circular dependency if the side that was recently added is the side that we think will persist.  But if everyone feels it has to be removed immediately, then the solution Jorge has for that in this pull (putting a tiny bit of the logic in the pass-through estimation functions) is probably as good as it gets.  When we eliminate the other side of the dependency, then we can figure out how to fix that up. \r\n",
      "created_at" : "2015-11-29T22:11:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160475677",
      "id" : 160475677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T22:11:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160475677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos Yes, it is two separate things, that's why I proposed https://github.com/bitcoin/bitcoin/compare/master...jtimon:mempool-circular-dependency because what we're discussing is where to put the maxsize command-line option (not dynamic).\r\nRight now it's in the global https://github.com/bitcoin/bitcoin/blob/master/src/util.h#L43\r\n\r\nI initially moved it to a CTxMemPool attribute but @sipa complained so I proposed it to just move it to main.o like most of the other globals in that other branch. I could have left the ```GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000``` all around, but I had already grep that...\r\nI think we can all agree that doing it in init like most command line options is a reasonable and simple refactor.\r\nIt seems we disagree on whether this is passed too much as a parameter or it should be part of CTxMemPool or CBlockPolicyEstimator or CDefaultPolicy.\r\nI think going from mapArgs to its own independent global is clearly a step forward. \r\nBut if people disagree, I can easily write a third patch that removes the circular dependency while maintaining all the ```GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000``` verbosity.\r\n\r\n> 2) Jorge and I both agree that CTxMemPool should not depend on the policy estimation code.\r\n\r\nYes, but it seems that your plan to do so is by making CBlockPolicyEstimator (and policy/policy.o?) dependent on CTxMemPool instead. This is not necessary.\r\nAnd moving in that direction at the cost of creating a new circular dependency was clearly not necessary in #6134, and that's all what this PR is about.\r\n\r\nWe can discuss the future of relay/fee/mining policy code encapsulation. Although I won't be able to rebase/rewrite a branch completely decoupling CBlockPolicyEstimator and CTxMemPool anytime before 0.12 relase, but I assure you that you can always place the code wherever you want without affecting what the code itself does. In the meantime I'm happy to review any fee estimation/policy encapsulation specific PR you may have (but I warn you, I will always be adverse to gratuitously make CBlockPolicyEstimator dependend on CTxMemPool, and I firmly believe I can always proof that it is being done \"gratuitously\", just by providing a similar alternative that doesn't, like I did in #6134).\r\nPolicy and fee encapsulation is something of interest for both of us and that's great.\r\nFinding out where we agree and disagree is, I believe, in our mutual interest.\r\nBut please let's find a solution for this PR first.",
      "created_at" : "2015-11-29T22:49:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160478983",
      "id" : 160478983,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-11-29T22:49:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160478983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "In bitcoin JT-0.12 CTxMemPool and CBlockPolicyEstimator will be completely independent, and I believe this may come with a performance improvement that I'm not sure will ever be closer than 6 commits away from bitcoin/master.\r\nClosing, @morcos you won whatever we were fighting for.\r\nLong live circular dependencies!",
      "created_at" : "2015-12-01T02:34:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160829208",
      "id" : 160829208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-01T02:40:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160829208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@morcos was suggesting to reverse the dependency that existed from mempool\non policy estimator, because it is more natural, and I agree. I don't like\nthat this (temporarily, apparently) resulted in a circular dependency.\n\nYou're arguing that because it's possible to remove both dependencies, that\nis what should be done. @morcos complained that it means moving the\nresponsibility of knowing there is something like a mempool limit to every\ncaller of the estimation code. I was fine with that approach as a simple\nsolution for now, but do you not agree it's natural for a mempool estimator\nto depend on the mempool, instead of making callers responsible for telling\none about the other?\n",
      "created_at" : "2015-12-01T12:25:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160953143",
      "id" : 160953143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-01T12:25:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160953143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> You're arguing that because it's possible to remove both dependencies, that\r\nis what should be done.\r\n\r\nNo I'm arguing that because it can't be done and we disagree, I don't like that we're deciding a priori in going towards morcos preferred direction when it is clearly not necessary at this point.\r\n\r\nAnd yes I disagree on making the estimator dependent on the mempool being a good design decision.\r\nBut if I'm alone there, letÃ¢ÂÂs just move in favor of morcos without ever seeing the two competing options.",
      "created_at" : "2015-12-01T12:31:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-160954597",
      "id" : 160954597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-01T12:31:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160954597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Sorry for the confusion, although @morcos disagrees with removing the circular dependency, he wasn't nacking the first commit in concept, he was just nacking it because I left some code on qt/coincontroldialog.cpp by mistake.\r\nUpdated the PR with the first commit properly separated from the others. I have left some more commits to comment on before definitely discarding them or squashing the uncontroversial ones.",
      "created_at" : "2015-12-01T16:07:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-161014775",
      "id" : 161014775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-01T16:07:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161014775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "e2a9957 - Alex was here\r\n30ac1d3 - NACK\r\n2e32923 - NACK\r\n0dc47a0 - NACK\r\n\r\nBut if you would please consider 2b455fb then you could accomplish what you're trying to do with 30ac1d3 and 2e32923.\r\n\r\n",
      "created_at" : "2015-12-01T17:47:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-161045375",
      "id" : 161045375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-01T17:47:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161045375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "https://github.com/bitcoin/bitcoin/commit/e2a99575dff063471d033a0c18e1f8c0af0b53f9 - ACK\r\nWow, spending a lot of code to avoid just letting the mempool have a \"always limit to X\" field. Unless someone wants to write code to make it actually clean, just add one. Making CTxMemPool a \"dumb datastructure\" with absolutely 0 knowledge of anything is a really poor goal IMO anyway.",
      "created_at" : "2015-12-02T01:56:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-161154975",
      "id" : 161154975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-02T01:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161154975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "> Making CTxMemPool a \"dumb datastructure\" with absolutely 0 knowledge of anything is a really poor goal IMO anyway.\r\n\r\nAt the same time, unlike the max size of the mempool, nothing seems to be wrong about minReasonableRelayFee, lastRollingFeeUpdate, blockSinceLastRollingFeeBump and rollingMinimumFeeRate being created as attributes of CTxMemPool for some reason I'm still not able to understand.\r\n\r\nBut as said this PR was never about turning the global to an attribute, that was just one way to remove the circular dependency. But as shown removing the verbosity around \"-maxmempool\" is not strictly necessary to reach that goal: the first commit is enough.\r\n\r\nI'm not interested in maintaing a PR to remove the circular dependency if it's not going to be a fast fix of the recently-merged #6134. This has proven not to be a fast fix PR and thus I have closed it. But the code is there quite fresh if anybody else wants to continue this. ",
      "created_at" : "2015-12-02T03:40:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-161171472",
      "id" : 161171472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-02T03:40:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161171472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK on https://github.com/bitcoin/bitcoin/commit/e2a99575dff063471d033a0c18e1f8c0af0b53f9\r\n\r\nUndecided about the others.",
      "created_at" : "2015-12-02T03:44:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7115#issuecomment-161171865",
      "id" : 161171865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7115",
      "updated_at" : "2015-12-02T03:44:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161171865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   }
]

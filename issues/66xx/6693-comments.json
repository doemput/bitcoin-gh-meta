[
   {
      "body" : "Is this a security issue?\r\n\r\nI don't really know windows networking internals, but in which circumstances can a client flood this buffer? And if it floods, what happens? Why doesn't it block (stop increasing the ACK pointer in TCP packets) and pick it up later?",
      "created_at" : "2015-09-18T15:08:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-141478483",
      "id" : 141478483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-18T15:10:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141478483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6693#discussion_r39871260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39871260"
         }
      },
      "body" : "Shouldn't this be named `MAX_WINDOWS_TCP_BUFFER_SIZE`?",
      "commit_id" : "cca9ef7bb6e9fa2e199dfdd8947eac409d45683a",
      "created_at" : "2015-09-18T16:00:48Z",
      "diff_hunk" : "@@ -60,6 +60,8 @@ static const bool DEFAULT_UPNP = false;\n static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n /** The maximum number of peer connections to maintain. */\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n+/** The maximum TCP send or receive buffer size */\n+static const unsigned int TCP_BUFFER_SIZE = 65535;   ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#discussion_r39871260",
      "id" : 39871260,
      "original_commit_id" : "4db0d198695cb6c6b5276c47d3f4022a2f80b621",
      "original_position" : 5,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6693",
      "updated_at" : "2015-09-21T20:31:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39871260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "No I'm not referring to a security issue, just functional and\nperformance related.\n\nWhat is happening is that the nodes are getting hung when large numbers\nof blocks are getting downloaded.  I see this clearly when running the\nwallet.py test and it happens 50% of the time I run that test.   I've\nverified this on both win32 and win64 workstations.   What is seen is\nthat at some point the client sends a getdata but the other node never\nreceives the request and it always happens when a large number of blocks\nhas to sync (such as mining 100 blocks during the wallet.py test).  That\nby itself could be a number of things, and I've run down quite a few\nrabbit trails to no avail, but when I then increase the buffer size the\nproblem goes away.  I wish I could see the traffic in the network\nsniffer but on Windows we can't monitor the loopback adapter with\nWireShark.   So I think it's a logical deduction that the buffer is\ngetting full. \n\nThe bigger problem though in my mind is that send buffers should not be\ngetting full to begin with.  There should be some handling in the code\nto check the buffer has room before data is sent down the pipe to\nprevent hangups, but I don't know the code base yet well enough to see\nif that is already being done and just not working properly, or whether\nit needs to be added.\n\nRegardless, the default 8KB Windows socket buffer is far too small (I\nreally don't understand why they still have kept it that low, I think\nsince windows 95).  Mac has a 64KB buffer default and I would expect\nLinux probably does also.  The bigger the buffer the more throughput is\npossible and hence better performance: Throughput = Buffersize/latency. \n\n\n\nOn 18/09/2015 8:09 AM, Wladimir J. van der Laan wrote:\n>\n> Is this a security issue?\n>\n> I don't really know windows networking internals, but in which\n> circumstances can a client flood this buffer? And if it floods, what\n> happens?\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-141478483>.\n>\n\n",
      "created_at" : "2015-09-18T17:21:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-141512620",
      "id" : 141512620,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-18T17:21:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141512620",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6693#discussion_r39880107"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39880107"
         }
      },
      "body" : "I suppose that's true, it is a MAX user defined setting, since the OS\ncan reduce the Buffer size if/when it needs to cut back on memory.  And\nit is currently related\nonly to Windows. \n\nI'll update it and push.\n\n9:01 AM, MarcoFalke wrote:\n>\n> In src/net.h\n> <https://github.com/bitcoin/bitcoin/pull/6693#discussion_r39871260>:\n>\n> > @@ -60,6 +60,8 @@ static const bool DEFAULT_UPNP = false;\n> >  static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n> >  /** The maximum number of peer connections to maintain. */\n> >  static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n> > +/** The maximum TCP send or receive buffer size */\n> > +static const unsigned int TCP_BUFFER_SIZE = 65535;   \n>\n> Shouldn't this be named |MAX_WINDOWS_TCP_BUFFER_SIZE|?\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693/files#r39871260>.\n>\n\n",
      "commit_id" : "cca9ef7bb6e9fa2e199dfdd8947eac409d45683a",
      "created_at" : "2015-09-18T17:31:50Z",
      "diff_hunk" : "@@ -60,6 +60,8 @@ static const bool DEFAULT_UPNP = false;\n static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n /** The maximum number of peer connections to maintain. */\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n+/** The maximum TCP send or receive buffer size */\n+static const unsigned int TCP_BUFFER_SIZE = 65535;   ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#discussion_r39880107",
      "id" : 39880107,
      "original_commit_id" : "4db0d198695cb6c6b5276c47d3f4022a2f80b621",
      "original_position" : 5,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6693",
      "updated_at" : "2015-09-21T20:31:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39880107",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Right, thanks for the explanation. It does leave me kind of worried that our code isn't robust against a full buffer. I understand that a larger buffer can give better performance (less copy operations), but getting entirely stuck is unexpected. So I don't disagree on this change, but I hope this doesn't cover up a deeper issue.",
      "created_at" : "2015-09-21T11:51:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-141950590",
      "id" : 141950590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-21T11:51:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141950590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I agree that this may be covering up a deeper functional issue, but if there's an issue there, it's been there for a long time and likely for all platforms.  I don't really see any risk here in raising the buffer to a more reasonable size for Native Windows which OSX  and Linux already use as defaults.  IMO it really needs to be done anyway, deeper issues aside.\r\n\r\nAnd at the least, buffers size fixes issue 6554, and will likely improve sync times for windows users, and in addition, we finally get the all the python tests working on Windows and therefore (hopefully) on Travis as well.\r\n\r\nAs a side note, and as far as security goes, there's really nothing an attacker can do with this change that they can't already do.\r\n\r\nPeter\r\n\r\n",
      "created_at" : "2015-09-21T13:09:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-141968955",
      "id" : 141968955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-21T13:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141968955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Concept ACK. But I agree with @laanwj: Even though this fixes regtest mode on Windows, there are many nodes running the \"old code\" on **main net**. If the buffer issue reveals any vulnerability, fixes need to be submitted to the old release branches as well and node operators need to be notified.",
      "created_at" : "2015-09-21T13:23:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-141974112",
      "id" : 141974112,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-21T13:23:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/141974112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@MarcoFalke This is not a 'buffer overflow' in the security sense. That formulation confused me as well. The sync gets stuck, but there is no process crash, nor any danger of anything besides the buffer being overwritten.\r\n\r\n@theuni can you take a look here?",
      "created_at" : "2015-09-21T15:40:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142018916",
      "id" : 142018916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-21T15:40:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142018916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Mmm, I don't like this as-is. Not because I think it's wrong (argument for raising the size seems reasonable), but because as the others have said, it seems much more likely this is a symptom of a larger underlying issue.\r\n\r\nIf the buffer is completely full, logically the send should fail and return some error. If it's not completely full, small writes should continue to succeed. @ptschip Could you please add some logging so that nErr is always printed if the send() fails? Something like:\r\n\r\n```patch\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 87c4f0a..4b27a88 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -750,15 +750,16 @@ void SocketSendData(CNode *pnode)\r\n                 it++;\r\n             } else {\r\n                 // could not send full message; stop sending more\r\n+                LogPrintf(\"send full. Only sent: %i bytes. %lu bytes remain\\n\", nBytes, data.size() - pnode->nSendOffset);\r\n                 break;\r\n             }\r\n         } else {\r\n             if (nBytes < 0) {\r\n                 // error\r\n                 int nErr = WSAGetLastError();\r\n+                LogPrintf(\"socket send error %s. Trying to send: %lu bytes\\n\", NetworkErrorString(nErr), data.size() - pnode->nSendOffset);\r\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\r\n                 {\r\n-                    LogPrintf(\"socket send error %s\\n\", NetworkErrorString(nErr));\r\n                     pnode->CloseSocketDisconnect();\r\n                 }\r\n             }\r\n```\r\n\r\nIt would also be helpful to see the send() return values printed before/after your buffer size change. Maybe a trend would emerge.",
      "created_at" : "2015-09-22T01:53:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142157732",
      "id" : 142157732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T01:53:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142157732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni I'll follow up with the logprints tomorrow but here's a few interesting data points.  I ran the test but this time just changing the RCV buffer.   So using 8KB send, 8KB Receive, the test fails,  using 8KB send, 16KB receive the test also fails, using 8KB send and 64KB receive, the test passes.  It seems more likely the problem is on the receiving end, also noting that when the test fails a getdata is sent and a log entry made, but never received at the other end.  After reviewing the code I also don't see anything in the send data code that is cause for alarm. However, I'll still add the logprint entries and see if anything comes out of it.  But really it's starting to look like just poorly sized buffers, ",
      "created_at" : "2015-09-22T04:46:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142180760",
      "id" : 142180760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T04:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142180760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip poorly sized buffers would mean more inefficient transfers. If a few thousand bytes can't be transferred locally in a matter of seconds, that points to something bigger. Looking forward to some log data.",
      "created_at" : "2015-09-22T05:19:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142184279",
      "id" : 142184279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T05:19:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142184279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Here are the logs, with 8KB send/receive buffers, both ends are having trouble sending:\r\n\r\nFrom the node with the blocks, trying to send block data\r\n\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1240 bytes\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1240 bytes\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1888 bytes\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1888 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1969 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2293 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2293 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1969 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2374 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2617 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2455 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2455 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 2941 bytes\r\n\r\nAnd from the node trying to sync blocks:\r\n\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 637 bytes\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 637 bytes\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 637 bytes\r\n2015-09-22 13:43:33 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 637 bytes\r\n2015-09-22 13:43:35 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 637 bytes\r\n\r\n",
      "created_at" : "2015-09-22T14:01:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142297746",
      "id" : 142297746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T14:01:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142297746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Logs for a tests with 8KB send and 64KB receive buffers show nothing out of the ordinary in the nodes that are syncing, but in the node that mines the blocks we have again the following which happens for 79 out of the 100 blocks being sent:\r\n\r\n2015-09-22 14:27:16 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 1240 bytes\r\n2015-09-22 14:27:16 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 5209 bytes\r\n2015-09-22 14:27:16 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 204 bytes\r\n2015-09-22 14:27:16 socket send error A non-blocking socket operation could not be completed immediately.  (10035). Trying to send: 5371 bytes\r\n2\r\n\r\nAlso, I noticed these entries, not sure if this is something new?  Seems to happen when mining new blocks.\r\n\r\n2015-09-22 14:27:16 ERROR: CheckProofOfWork(): hash doesn't match nBits\r\n2015-09-22 14:27:16 ERROR: CheckProofOfWork(): hash doesn't match nBits\r\n2015-09-22 14:27:16 ERROR: CheckProofOfWork(): hash doesn't match nBits\r\n",
      "created_at" : "2015-09-22T14:38:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142307662",
      "id" : 142307662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T14:38:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142307662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip We use select() to determine when we can write, so we really shouldn't be failing in that way. The only thing I can think of is that it's the optimistic writes that are failing. Could you please try disabling those as an experiment, and seeing what changes?\r\n```patch\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 87c4f0a..36b10ee 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2373,10 +2375,6 @@ void CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\r\n     ssSend.GetAndClear(*it);\r\n     nSendSize += (*it).size();\r\n \r\n-    // If write queue empty, attempt \"optimistic write\"\r\n-    if (it == vSendMsg.begin())\r\n-        SocketSendData(this);\r\n-\r\n     LEAVE_CRITICAL_SECTION(cs_vSend);\r\n }\r\n \r\n```",
      "created_at" : "2015-09-22T19:50:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142399670",
      "id" : 142399670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T19:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142399670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Another thing to try:\r\nAccording to [this](https://support.microsoft.com/en-us/kb/823764), we may get the observed behavior if a single write is larger than the underlying buffer. Here's a quick hack to determine if that's what we're seeing:\r\n```patch\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 87c4f0a..8c0ce4c 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -738,7 +738,9 @@ void SocketSendData(CNode *pnode)\r\n     while (it != pnode->vSendMsg.end()) {\r\n         const CSerializeData &data = *it;\r\n         assert(data.size() > pnode->nSendOffset);\r\n-        int nBytes = send(pnode->hSocket, &data[pnode->nSendOffset], data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\r\n+        size_t nMaxSend = 4000; // 4000 as a quick hack test. This value should come from getsockopt(...SO_SNDBUF...) cached in pnode.\r\n+        size_t nSendSize = std::min(data.size() - pnode->nSendOffset, nMaxSend);\r\n+        int nBytes = send(pnode->hSocket, &data[pnode->nSendOffset], nSendSize, MSG_NOSIGNAL | MSG_DONTWAIT);\r\n         if (nBytes > 0) {\r\n             pnode->nLastSend = GetTime();\r\n             pnode->nSendBytes += nBytes;\r\n```",
      "created_at" : "2015-09-22T20:27:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142409854",
      "id" : 142409854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-22T20:27:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142409854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni Cory, I did a couple of things (see below), neither of which worked.  The same problem persists.  Only when the receive buffer is changed to 64KB does the problem go away and the test pass.  I'm wondering if there is a problem with how truncated data is handled on the receiving end , as would happen with a  receive buffer overflow?\r\n\r\n1)  disabled optimistic sending.  No change in the test.  We still fail at exactly the same place.\r\n\r\n2) made the send socket a blocking socket, which according to Microsoft would fix the issue of a delayed ACK. So, delayed ACKing is not the cause of the problem.\r\n\r\nMethod 1: Use Blocking Sockets\r\nThis problem only occurs with non-blocking sockets. When you use a blocking socket, this problem does not occur because Afd.sys handles the socket buffer differently. For more information about blocking and non-blocking socket programming, see the Microsoft Platform SDK documentation.",
      "created_at" : "2015-09-24T03:19:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142794132",
      "id" : 142794132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-24T03:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142794132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip Thanks for trying those things. Did you try the second patch (which sets the max send size to 4000)? I actually had a good feeling about that test. Setting the socket to blocking would introduce tons of new issues since all of our code assumes non-blocking send/recv, so it's no surprise that didn't improve the situation.\r\n\r\nI'll keep looking at the receiving side. That's very helpful.",
      "created_at" : "2015-09-24T15:25:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142962502",
      "id" : 142962502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-24T15:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142962502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@ptschip Are you able to hop on IRC for some real-time troubleshooting? I'm cfields on freenode.\r\n\r\nThere are several things I'd like to poke at, but the latency here makes it tough.",
      "created_at" : "2015-09-24T15:41:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142967481",
      "id" : 142967481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-24T15:41:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142967481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni yeah, i only set the socket to blocking to verify that the\nproblem is not being caused by an overrun send buffer, i wasn't\nintending it as a fix.\n\nDidn't get to the second test.  I'm not really fully available right\nnow...in the middle of moving to a new home over the next few\ndays/week.  But I'll get to it if I can.\n\n\n\nOn 24/09/2015 8:26 AM, Cory Fields wrote:\n>\n> @ptschip <https://github.com/ptschip> Thanks for trying those things.\n> Did you try the second patch (which sets the max send size to 4000)? I\n> actually had a good feeling about that test. Setting the socket to\n> blocking would introduce tons of new issues since all of our code\n> assumes non-blocking send/recv, so it's no surprise that didn't\n> improve the situation.\n>\n> I'll keep looking at the receiving side. That's very helpful.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142962502>.\n>\n\n",
      "created_at" : "2015-09-24T15:46:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142969152",
      "id" : 142969152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-24T15:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142969152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@theuni  Sorry, no time for IRC right now but i did just try out your\nother option, limiting the maxsendsize, but no joy there...\n\nI'll have more time next week...for some real time troubleshooting but\ncan't right now.\n\nPeter\n\nOn 24/09/2015 8:42 AM, Cory Fields wrote:\n>\n> @ptschip <https://github.com/ptschip> Are you able to hop on IRC for\n> some real-time troubleshooting? I'm cfields on freenode.\n>\n> There are several things I'd like to poke at, but the latency here\n> makes it tough.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142967481>.\n>\n\n",
      "created_at" : "2015-09-24T16:18:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142977193",
      "id" : 142977193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-24T16:18:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142977193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip Ok, no worries. Good luck with the move.\r\n\r\nHere's another one to try when you get a chance. Here's the theory:\r\n\r\nWe may end up in a state where we have received lots of getdatas but not yet processed them all. The message handler and socket handler both grab the recv lock via TRY_LOCK, though it will obviously take the message handler longer to process the message than it takes to grab it from the socket. So it's likely that the socket handler will fail to grab the lock much more often.\r\n\r\nDuring that time, the receive buffer will fill up because we're not actively draining it. If it gets too full, we may start failing to send() on the other end. Increasing the receive buffer would alleviate some pressure, but it wouldn't be addressing the real issue.\r\n\r\nThat's consistent with a \"fix\" of raising the receive buffer size, while also explaining the send errors.\r\n\r\nHere's a patch to test that theory. Fingers crossed :)\r\n\r\n```patch\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 87c4f0a..8f287b5 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1115,8 +1115,8 @@ void ThreadSocketHandler()\r\n                     }\r\n                 }\r\n                 {\r\n-                    TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\r\n-                    if (lockRecv && (\r\n+                    LOCK(pnode->cs_vRecvMsg);\r\n+                    if (1 && (\r\n                         pnode->vRecvMsg.empty() || !pnode->vRecvMsg.front().complete() ||\r\n                         pnode->GetTotalRecvSize() <= ReceiveFloodSize()))\r\n                         FD_SET(pnode->hSocket, &fdsetRecv);\r\n@@ -1174,8 +1174,8 @@ void ThreadSocketHandler()\r\n                 continue;\r\n             if (FD_ISSET(pnode->hSocket, &fdsetRecv) || FD_ISSET(pnode->hSocket, &fdsetError))\r\n             {\r\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\r\n-                if (lockRecv)\r\n+                LOCK(pnode->cs_vRecvMsg);\r\n+                if (1)\r\n                 {\r\n                     {\r\n                         // typical socket buffer is 8K-64K\r\n```",
      "created_at" : "2015-09-24T17:12:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142991996",
      "id" : 142991996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-09-24T17:12:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142991996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Hi Cory,  I finally got around to trying this...it didn't work at\nall...couldn't get passed even the first 1 or 2 steps in the python\nscript wallet.py\n\n\n\nOn 24/09/2015 10:12 AM, Cory Fields wrote:\n>\n> @ptschip <https://github.com/ptschip> Ok, no worries. Good luck with\n> the move.\n>\n> Here's another one to try when you get a chance. Here's the theory:\n>\n> We may end up in a state where we have received lots of getdatas but\n> not yet processed them all. The message handler and socket handler\n> both grab the recv lock via TRY_LOCK, though it will obviously take\n> the message handler longer to process the message than it takes to\n> grab it from the socket. So it's likely that the socket handler will\n> fail to grab the lock much more often.\n>\n> During that time, the receive buffer will fill up because we're not\n> actively draining it. If it gets too full, we may start failing to\n> send() on the other end. Increasing the receive buffer would alleviate\n> some pressure, but it wouldn't be addressing the real issue.\n>\n> That's consistent with a \"fix\" of raising the receive buffer size,\n> while also explaining the send errors.\n>\n> Here's a patch to test that theory. Fingers crossed :)\n>\n> diff --git a/src/net.cpp b/src/net.cpp\n> index 87c4f0a..8f287b5 100644\n> --- a/src/net.cpp\n> +++ b/src/net.cpp\n> @@ -1115,8 +1115,8 @@ void ThreadSocketHandler()\n>                      }\n>                  }\n>                  {\n> - TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n> - if (lockRecv && (\n> + LOCK(pnode->cs_vRecvMsg);\n> + if (1 && (\n>                          pnode->vRecvMsg.empty() || !pnode->vRecvMsg.front().complete() ||\n>                          pnode->GetTotalRecvSize() <= ReceiveFloodSize()))\n>                          FD_SET(pnode->hSocket, &fdsetRecv);\n> @@ -1174,8 +1174,8 @@ void ThreadSocketHandler()\n>                  continue;\n>              if (FD_ISSET(pnode->hSocket, &fdsetRecv) || FD_ISSET(pnode->hSocket, &fdsetError))\n>              {\n> - TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n> - if (lockRecv)\n> + LOCK(pnode->cs_vRecvMsg);\n> + if (1)\n>                  {\n>                      {\n>                          // typical socket buffer is 8K-64K\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-142991996>.\n>\n\n",
      "created_at" : "2015-10-01T02:42:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-144601000",
      "id" : 144601000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-01T02:42:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144601000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@theuni   Cory,  making a little progress here.  Not sure that this is getting at the root of the issue either, but I found that the following enhancement also fixes the problem, it appears that the sleep time is rather long. ( I found that 20 milliseconds also worked.)\r\n\r\nin the ThreadMessageHandler: \r\n\r\n        if (fSleep)\r\n-  messageHandlerCondition.timed_wait(lock, boost::posix_time::microsec_clock::universal_time() + boost::posix_time::milliseconds(100));\r\n+ messageHandlerCondition.timed_wait(lock, boost::posix_time::microsec_clock::universal_time() + boost::posix_time::milliseconds(10));\r\n",
      "created_at" : "2015-10-03T16:33:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-145263304",
      "id" : 145263304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-03T16:33:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145263304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@theuni   Cory, here's yet another bit of code that fixes or masks the issue, we don't really need to be sleeping if we've just sent messages, rather we should be checking the receive queue for anything that's been coming back.  So now we have 3 different code changes, all performance enhancements, which on their own I think would be beneficial but none of them gets to the root of the problem.\r\n\r\n- g_signals.SendMessages(pnode, pnode == pnodeTrickle || pnode->fWhitelisted);\r\n+ if(g_signals.SendMessages(pnode, pnode == pnodeTrickle || pnode->fWhitelisted))\r\n+       fSleep = false;\r\n\r\nOne other thing I found today, which may be just another rabbit trail, but may also be nearer to the root of the problem is that we seem to be receiving a great many blocks that we've never requested!  In the logs of the nodes that fail to sync I see this pattern:\r\n\r\n137 blocks requested\r\n185 blocks downloaded\r\n203 blocks are actually in the database however when we RPC them we only see 119.\r\n\r\nSo it appears that all blocks \"have\" been downloaded and sync'd somehow, but are not showing up in the logs as downloaded and they can't be counted by RPC'ing and getting a block count.  And now that I think of it that was one of the original observations at the beginning of the issue 6554 thread.  \r\n\r\nI'll keep digging...\r\n",
      "created_at" : "2015-10-06T02:36:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-145727231",
      "id" : 145727231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-06T02:36:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145727231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip Thanks for continuing to dig.\r\n\r\nYour change (if I'm reading it right) is to set fSleep to false if SendMessages returns true? SendMessages always returns true :)\r\n\r\nSo you're effectively disabling the sleep. I bet you'd find that the cpu load is pegged on one core. That does work to strengthen my locking theory, though.\r\n\r\nPlease try building from this branch: https://github.com/theuni/bitcoin/tree/net-lock-hacking\r\n\r\nIt's a hack, but it should be enough to test my theory. This drops the node's receive lock while it processes messages. The result should be that it races through the messagehandler much quicker.",
      "created_at" : "2015-10-07T06:53:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146095602",
      "id" : 146095602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-07T06:53:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146095602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni I built your code and ran it, it also fixes the issue. \n\n\n\n\nOn 06/10/2015 11:54 PM, Cory Fields wrote:\n>\n> @ptschip <https://github.com/ptschip> Thanks for continuing to dig.\n>\n> Your change (if I'm reading it right) is to set fSleep to false if\n> SendMessages returns true? SendMessages always returns true :)\n>\n> So you're effectively disabling the sleep. I bet you'd find that the\n> cpu load is pegged on one core. That does work to strengthen my\n> locking theory, though.\n>\n> Please try building from this branch:\n> https://github.com/theuni/bitcoin/tree/net-lock-hacking\n>\n> It's a hack, but it should be enough to test my theory. This drops the\n> node's receive lock while it processes messages. The result should be\n> that it races through the messagehandler much quicker.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146095602>.\n>\n\n",
      "created_at" : "2015-10-07T14:04:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146204902",
      "id" : 146204902,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-07T14:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146204902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Woohoo, we've found the root cause! Thanks very much for your testing.\r\n\r\nNow to come up with some sane way to deploy it.",
      "created_at" : "2015-10-07T16:30:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146253878",
      "id" : 146253878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-07T16:30:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146253878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni  That's great Cory!\n\nAnd, although this PR only masks the underlying problem I still think it\nhas merit from a performance perspective and should be merged in to\nbring the Windows nodes up to the same tcp buffer size as the OSX and\nLinux nodes. What do you think?\n\n\nOn 07/10/2015 9:31 AM, Cory Fields wrote:\n>\n> Woohoo, we've found the root cause! Thanks very much for your testing.\n>\n> Now to come up with some sane way to deploy it.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146253878>.\n>\n\n",
      "created_at" : "2015-10-07T19:10:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146298340",
      "id" : 146298340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-07T19:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146298340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "> What do you think?\r\n\r\nFine with increasing the buffer size, but in the commit message and pull description then call it 'improve performance' instead of 'fix issue'.\r\n(and it would be nice to have measurements that show it does improve performance)",
      "created_at" : "2015-10-07T19:43:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146307459",
      "id" : 146307459,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-07T19:43:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146307459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I'm a bit skeptical that it will actually improve performance in a measurable way. Assuming the change above fixed the issue for the reason I think it did, the problem is that the socket is not being drained for long periods of time due to the eventhandler thread keeping it locked. Without that lock held, the buffer should be drained within the first few passes (ideally the first), and the time between passes should be close to zero. In fact, I suspect that the single recv buffer would become the bottleneck more quickly as soon as we bump the socket buffer above 64k: https://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L1182. That directly affects how long it takes to drain the socket.\r\n\r\nIMO if we're going to bump, we need to bump that buffer as well, since that directly affects how many passes through select() are needed to drain a message. Alternatively we could do it in a loop so that we always drain as much as possible, though I suspect that the current behavior is intended to enforce fairness among small/large messages.\r\n\r\nIt should be pretty easy to come up with some tests to demonstrate the effects of each possible change:\r\n- Benchmark a worst case for a pass through ProcessMessages()\r\n- Benchmark a worst case for the number of passes it takes to drain a full recv socket\r\n- Assume the worst: Ignoring the socket handling overhead, it could take up to ```time(ProcessMessages) * passes``` to fully drain.\r\n\r\nBy tweaking the socket recv and loop recv buffers, we should be able to calculate a measurable effect. I'll see what I can come up with.\r\n\r\nEdit: 10k -> 64k",
      "created_at" : "2015-10-07T20:47:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146322758",
      "id" : 146322758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-07T22:18:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146322758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni  Cory, that line in the code is actually 64KB in hex so it\nwouldn't need to be changed for this.  All we need is to up the\nsend/receive buffer to 64KB.  But if we want to go higher then yes we\nwould need to bump  pchBuf as well. \n\n                        typical socket buffer is 8K-64K\n                        char pchBuf[0x10000];\n\n     \n\nOn 07/10/2015 1:47 PM, Cory Fields wrote:\n>\n> I'm a bit skeptical that it will actually improve performance in a\n> measurable way. Assuming the change above fixed the issue for the\n> reason I think it did, the problem is that the socket is not being\n> drained for long periods of time due to the eventhandler thread\n> keeping it locked. Without that lock held, the buffer should be\n> drained within the first few passes (ideally the first), and the time\n> between passes should be close to zero. In fact, I suspect that the\n> single recv buffer would become the bottleneck more quickly as soon as\n> we bump the socket buffer above 10k:\n> https://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L1182. That\n> directly affects how long it takes to drain the socket.\n>\n> IMO if we're going to bump, we need to bump that buffer as well, since\n> that directly affects how many passes through select() are needed to\n> drain a message. Alternatively we could do it in a loop so that we\n> always drain as much as possible, though I suspect that the current\n> behavior is intended to enforce fairness among small/large messages.\n>\n> It should be pretty easy to come up with some tests to demonstrate the\n> effects of each possible change:\n>\n>   * Benchmark a worst case for a pass through ProcessMessages()\n>   * Benchmark a worst case for the number of passes it takes to drain\n>     a full recv socket\n>   * Assume the worst: Ignoring the socket handling overhead, it could\n>     take up to |time(ProcessMessages) * passes| to fully drain.\n>\n> By tweaking the socket recv and loop recv buffers, we should be able\n> to calculate a measurable effect. I'll see what I can come up with.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146322758>.\n>\n\n",
      "created_at" : "2015-10-08T04:08:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146414423",
      "id" : 146414423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-08T04:08:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146414423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "I changed both the commit message and pull description to  \"Set Windows\nTCP buffers to 64KB to match OSX  and Unix\" .  I thought there would be\nless confusion/questions as to why OSX and UNIX were left out if I had\njust mentioned  \"improvements for windows\"  only.\n\nI've already run tests on this last week, syncing a 600MB blockchain\nover a private 78Mbit wireless network, running Windows 7 on both\nmachines, for both 8KB buffers and 64KB and got a 12% improvement in\noverall sync time. \n\nThese were the results of the tests, each run 3 times: \n\n        8KB buffer node sending to 64KB buffer node :   347 secs, 342\nsecs, 344 secs  for a 344 sec average\n        64KB buffer node sending to a 64KB buffer node:  309 secs, 311\nsecs, 294 secs for a 304 sec average\n\n\n\nOn 07/10/2015 12:45 PM, Wladimir J. van der Laan wrote:\n>\n>     What do you think?\n>\n> Fine with increasing the buffer size, but in the commit message and\n> pull description then call it 'improve performance' instead of 'fix\n> issue'.\n> (and it would be nice to have measurements that show it does improve\n> performance)\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146307459>.\n>\n\n",
      "created_at" : "2015-10-08T04:58:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146420141",
      "id" : 146420141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-08T04:58:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146420141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip I'd be curious to see how it compares when using the patch above instead.\r\n\r\nAlso, not sure about OSX, but Linux sock sizes vary a good bit. On my machine I get:\r\nrecvbuf: 87380. sendbuf: 22320, but I'm pretty sure those fluctuate based on the current conditions.",
      "created_at" : "2015-10-08T05:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146423014",
      "id" : 146423014,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-08T05:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146423014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni,  I'm curious about that too, I'll run some tests when I get a\nchance but won't be for a few days, I'm busy with something else and\nit's Thanksgiving this weekend in Canada also :) ...\n\nOn 07/10/2015 10:21 PM, Cory Fields wrote:\n>\n> @ptschip <https://github.com/ptschip> I'd be curious to see how it\n> compares when using the patch above instead.\n>\n> Also, not sure about OSX, but Linux sock sizes vary a good bit. On my\n> machine I get:\n> recvbuf: 87380. sendbuf: 22320, but I'm pretty sure those fluctuate\n> based on the current conditions.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146423014>.\n>\n\n",
      "created_at" : "2015-10-09T01:55:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-146736015",
      "id" : 146736015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-09T01:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146736015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@theuni Cory,  I got around to testing your \"net-lock-hacking\" code and the results are pretty good.\r\n\r\nTested again on a Windows 7 with a wireless high speed connection (not over the internet)...syncing a 600MB blockchain, 3 tests each and average taken.\r\n\r\nCurrent Master Build with 8KB tcp send buffer, 8KB receive buffer:   236 seconds to sync\r\nCory's net lock code with 8KB tcp send buffer and 8KB receive buffer:  194 seconds to sync.\r\n\r\nAlmost an 18% improvement.  Even so, we're still only using about 1/3 of the network bandwidth...there's clearly more improvement possible to increase throughput.  Judging from the logs there is a about 50 seconds of just verifying blocks, not sure much can be done about that, but there should be another 40 or 50 seconds to save somewhere to get bandwidth utilization up to 60 or 70%.\r\n\r\nAnyway, I thought you'd like to know the results...great stuff.\r\n\r\nI'm still looking at the buffersizes and going to run some tests tomorrow.  After your code changes and the low latency of my network I'm not seeing much difference in terms of tcp buffer sizes helping performance. I'm going try test form a  separate internet connection to see what happens when there's more latency on the wire. \r\n\r\n",
      "created_at" : "2015-10-14T00:57:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-147894623",
      "id" : 147894623,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-14T00:57:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/147894623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "@ptschip That's great to hear!\r\n\r\nAs for the peak/trough download pattern, that's a much larger issue. Though I'm working to fix it as part of a much more invasive refactor.",
      "created_at" : "2015-10-14T01:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-147899545",
      "id" : 147899545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-10-14T01:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/147899545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "> typical socket buffer is 8K-64K\r\n>  char pchBuf[0x10000];\r\n\r\nBe careful increasing that - it is allocated on the stack. When I investigated bitcoin's stack frames in the context of the UPnP buffer overflow, `ThreadSocketHandler` came out as the function with the single biggest stack frame in our source base. I think 64kB is acceptable (thread stacks are usually 4-8MB), but it is something to keep an eye on, we wouldn't want to introduce e.g. a stack overflow DoS.\r\n\r\nBTW: what is the outcome of this? Are you going to PR anything @theuni, or is it better to leave this be for 0.12 and aim for merging the libevent transition in 0.13?\r\n",
      "created_at" : "2015-11-05T11:35:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-154037193",
      "id" : 154037193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-11-05T11:36:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154037193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> (thread stacks are usually 4-8MB)\r\n\r\nAre we explicitly setting that? Mac OS X thread stacks are only 512k by default...",
      "created_at" : "2015-11-05T11:40:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-154037927",
      "id" : 154037927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-11-05T11:40:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154037927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> Are we explicitly setting that? Mac OS X thread stacks are only 512k by default...\r\n\r\nNo, we aren't changing it. 4-8MB is for Linux. But this is the reason why I say to be careful, it's indeed possible for OSes to have even smaller stacks.",
      "created_at" : "2015-11-05T12:49:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-154049986",
      "id" : 154049986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-11-05T12:49:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154049986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "To allow for further investigation, I think we should hold off on this\nmerge for now.  I'm seeing unexpected performance results when buffers\nare increased and network latency is introduced, and not sure if it's my\ntest setup or something deeper in the messaging system.  When @theuni\nsubmits his refactor that he's working on for the backend messaging I\ncould re-test/investigate after that.  \n\n\n\nOn 05/11/2015 3:36 AM, Wladimir J. van der Laan wrote:\n>\n>     typical socket buffer is 8K-64K\n>     char pchBuf[0x10000];\n>\n> Be careful increasing that - it is allocated on the stack. When I\n> investigated bitcoin's stack frames in the context of the UPnP buffer\n> overflow, |ThreadSocketHandler| came out as the function with the\n> single biggest stack frame in our source base. I think 64kB is\n> acceptable (thread stacks are 4-8MB), but it is something to keep an\n> eye on, we wouldn't want to introduce e.g. a stack overflow DoS.\n>\n> BTW: what is the outcome of this? Are you going to PR anything @theuni\n> <https://github.com/theuni>, or is it better to leave this be for 0.12\n> and aim for merging the libevent transition in 0.13?\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-154037193>.\n>\n\n",
      "created_at" : "2015-11-05T15:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-154100908",
      "id" : 154100908,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-11-05T15:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154100908",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   },
   {
      "body" : "Closing this for now - to be revisited later",
      "created_at" : "2015-11-10T14:51:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-155440331",
      "id" : 155440331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-11-10T14:51:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155440331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Sorry, missed your ping here. Yes, I'd like to leave this alone for 0.12. The lock interaction is far too complicated.",
      "created_at" : "2015-11-10T21:22:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-155571121",
      "id" : 155571121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2015-11-10T21:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155571121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Probably should revisit this for 0.13.\r\nIs this related to \"Test Nodes will sometimes not sync their blocks on native Windows #6554\"?",
      "created_at" : "2016-02-16T17:27:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-184786391",
      "id" : 184786391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2016-02-16T17:27:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/184786391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "It does work around issue 6554 but I believe that Cory discovered the\nreal root cause of 6554 was in the message handling and the locking\nissues therein.\n\nOn 16/02/2016 9:28 AM, Wladimir J. van der Laan wrote:\n>\n> Probably should revisit this for 0.13.\n> Is this related to \"Test Nodes will sometimes not sync their blocks on\n> native Windows #6554 <https://github.com/bitcoin/bitcoin/issues/6554>\"?\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-184786391>.\n>\n\n",
      "created_at" : "2016-02-16T18:46:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6693#issuecomment-184822319",
      "id" : 184822319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6693",
      "updated_at" : "2016-02-16T18:46:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/184822319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12862928?v=3",
         "events_url" : "https://api.github.com/users/ptschip/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ptschip/followers",
         "following_url" : "https://api.github.com/users/ptschip/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ptschip/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ptschip",
         "id" : 12862928,
         "login" : "ptschip",
         "organizations_url" : "https://api.github.com/users/ptschip/orgs",
         "received_events_url" : "https://api.github.com/users/ptschip/received_events",
         "repos_url" : "https://api.github.com/users/ptschip/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ptschip/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ptschip"
      }
   }
]

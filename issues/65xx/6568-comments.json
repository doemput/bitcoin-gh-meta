[
   {
      "body" : "ECDH addresses have been previously discussed in the Dark Wallet \"stealth address\" scheme.  I'm not a super big fan of that scheme which has never been completely specified.\r\n\r\nIt results in addresses which are more than 2x larger than our current ones, largely so it can support a secure delegated scanning mode.  But, of course, the scanning delegation totally undermines the privacy of the system.  Adam Back and I spent some amount of time exploring fancier crypto to try to repair the scanning damage, but short of ought switching to pairing based signatures (which are slow to verify) we don't really have a way to fix the delegation.\r\n\r\nBut the ECDH code in libsecp256k1 can scan something like 40,000 transactions per second on a fast desktop. With that in mind, we could instead forget about delegation. \r\n\r\nI was contemplating a scheme for a future elements update called \"Donation addresses\" which would give you a stealth like ephemeral address which is as short as (or shorter) than a current Bitcoin address. But you couldn't securely delegate the scanning: someone who could scan for your payments could spend the coins.  This might be a worthwhile trade-off.\r\n \r\n\r\n",
      "created_at" : "2015-08-18T09:56:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132150599",
      "id" : 132150599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T09:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132150599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I'm not entirely clear what you mean by \"private transaction submission tool\", could you elaborate please?\r\n\r\nAlso as I suspect there will be those reading this who may not be aware of the confident transactions suggestion, link for their reference: https://people.xiph.org/~greg/confidential_values.txt",
      "created_at" : "2015-08-18T09:57:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132151065",
      "id" : 132151065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T09:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132151065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3513077?v=3",
         "events_url" : "https://api.github.com/users/rnicoll/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rnicoll/followers",
         "following_url" : "https://api.github.com/users/rnicoll/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rnicoll/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rnicoll",
         "id" : 3513077,
         "login" : "rnicoll",
         "organizations_url" : "https://api.github.com/users/rnicoll/orgs",
         "received_events_url" : "https://api.github.com/users/rnicoll/received_events",
         "repos_url" : "https://api.github.com/users/rnicoll/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rnicoll/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rnicoll"
      }
   },
   {
      "body" : "There are more advanced cryptographic privacy schemes which have been proposed. \r\n\r\nFor example, there is my Confidential Transactions scheme (https://people.xiph.org/~greg/confidential_values.txt)  which is running in elements alpha sidechain (https://github.com/ElementsProject/elements).  In that sidechain CT is implemented as a major change to the transaction format, so it would be a hard fork to apply it directly.\r\n\r\nBut it's actually possible to implement CT as a soft fork, though ... more than a little kludge. Ignoring how ugly that might or might not be for a moment--\r\n\r\nWhat performance envelope do we think needs to be achieved for something like this to deploy it in Bitcoin?\r\n\r\nMaybe it would be helpful if I made a brief table that laid out the performance implications very clearly?\r\n\r\nThere are other schemes which could be considered, for example Zero Cash, but it's less clear how to soft fork deploy them (except e.g. via the extension block concept). Again, it's unclear how we can go about reasoning on the acceptable trade-offs in this space.",
      "created_at" : "2015-08-18T09:59:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132151792",
      "id" : 132151792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T10:30:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132151792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@rnicoll  0.11 added a feature to suppress the local broadcast of transactions by the wallet.  The idea is that a daemon could run along side your Bitcoin Core and submit your transactions via a high latency privacy network, or the like.  If widely used this would greatly discourage the common practice of running spy nodes that suck up everyone's connection slots watching for TX broadcasts.",
      "created_at" : "2015-08-18T10:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132153414",
      "id" : 132153414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T10:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132153414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell These are very important issues at the network consensus level and is an issue of high priority at the enterprise and institutional level.\r\n\r\nIn the meantime, regarding the ability to avoid spy nodes there is already a process in place using features from other available wallets which shrinks the attack surface to something very manageable and controllable. (1) craft the offline transaction with Armory using a full Bitcoin Core node so there is no leakage of any information to a third-party when looking up address balances and (2) privately (TOR, etc.) submit the signed transaction through https://blockchain.info/pushtx (using the 'Copy Raw Tx HEX' feature in Armory).",
      "created_at" : "2015-08-18T13:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132199478",
      "id" : 132199478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T13:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132199478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4149214?v=3",
         "events_url" : "https://api.github.com/users/sunnankar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sunnankar/followers",
         "following_url" : "https://api.github.com/users/sunnankar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sunnankar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sunnankar",
         "id" : 4149214,
         "login" : "sunnankar",
         "organizations_url" : "https://api.github.com/users/sunnankar/orgs",
         "received_events_url" : "https://api.github.com/users/sunnankar/received_events",
         "repos_url" : "https://api.github.com/users/sunnankar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sunnankar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sunnankar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sunnankar"
      }
   },
   {
      "body" : "@sunnankar that is in armory and tor though. We need solutions for this in core not in armory or by use of Tor. It MUST be a prerogative that \"normal\" people aren't being spied on per-say.  ",
      "created_at" : "2015-08-18T13:55:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132216304",
      "id" : 132216304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T13:55:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132216304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7454206?v=3",
         "events_url" : "https://api.github.com/users/akstunt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/akstunt/followers",
         "following_url" : "https://api.github.com/users/akstunt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/akstunt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/akstunt",
         "id" : 7454206,
         "login" : "akstunt",
         "organizations_url" : "https://api.github.com/users/akstunt/orgs",
         "received_events_url" : "https://api.github.com/users/akstunt/received_events",
         "repos_url" : "https://api.github.com/users/akstunt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/akstunt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/akstunt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/akstunt"
      }
   },
   {
      "body" : "@gmaxwell If you haven't already, please take a look at how Vertcoin has implemented stealth addresses in their reference client.  They have a \"stealth addresses\" tab with a \"new\" button on the bottom, along with a \"import stealth address transactions\" button.  This eliminates the need to be constantly scanning for stealth transactions, so there is zero performance hit for non-stealth users.  If you are using stealth addresses, you just hit the scan button from time to time when you're expecting something.\r\n\r\nI agree that centralized delegation is no good, but I feel like people who would use stealth addresses would be just fine running a full node, or they would accept the security compromise that comes from verifying from an SPV wallet.  Maybe if bitcoind allowed for some obelisk style verification commands, then SPV clients could ask the nodes themselves to scan as needed.",
      "created_at" : "2015-08-18T14:10:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132222504",
      "id" : 132222504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T14:10:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132222504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/76767?v=3",
         "events_url" : "https://api.github.com/users/pierce403/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierce403/followers",
         "following_url" : "https://api.github.com/users/pierce403/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierce403/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierce403",
         "id" : 76767,
         "login" : "pierce403",
         "organizations_url" : "https://api.github.com/users/pierce403/orgs",
         "received_events_url" : "https://api.github.com/users/pierce403/received_events",
         "repos_url" : "https://api.github.com/users/pierce403/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierce403/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierce403/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierce403"
      }
   },
   {
      "body" : "In this context the impact of hub and spoke networks on fungibility and vice versa the necessity of fungibility for an actually decentralized hub and spoke system should be considered.\r\n\r\nHubs need liquidity.\r\n\r\nAnonymously run hubs might also function as mixing services for anonymous liquidity providers.\r\n\r\nPolicy makers might impose strict rules on hubs and consequently on users of non-complying hubs if lack of fungibility reveals their use. This could lead to the centralization many see as a danger with the lightning network.\r\n\r\nIf hubs work as mixes they will pay incentives resulting in zero or even slightly negative transaction fees.",
      "created_at" : "2015-08-18T14:12:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132223219",
      "id" : 132223219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T16:10:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132223219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/96378?v=3",
         "events_url" : "https://api.github.com/users/Giszmo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Giszmo/followers",
         "following_url" : "https://api.github.com/users/Giszmo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Giszmo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Giszmo",
         "id" : 96378,
         "login" : "Giszmo",
         "organizations_url" : "https://api.github.com/users/Giszmo/orgs",
         "received_events_url" : "https://api.github.com/users/Giszmo/received_events",
         "repos_url" : "https://api.github.com/users/Giszmo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Giszmo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Giszmo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Giszmo"
      }
   },
   {
      "body" : "I think the ideal implementation of ECDH would be by offloading secret exchange to a peripheral network. Probably BitMessage at this point. It has multiple implementations and is probably one of the more supported networks for messaging. That said, if I'm remembering right it *itself* still requires the addition of ECDH to messaging for further privacy. I'm not sure that's a huge new feature to add.\r\n\r\nYou would send the information needed to redeem the transaction along with the transaction ID directly to the payee over this channel. It's simple and doesn't result in appending any information to transactions that could result in further censorship. It's possible that the addition of the OP_RETURN data itself could result in the closing of accounts at major exchanges, which would generally negate the usefulness of all of this. In this scheme, there is also no blockchain scanning because users communicate directly.\r\n\r\nCoinJoin may be a dead end because of its voluntary nature and the fact that it will be so easily open to manipulation so long as the channels to enter a CoinJoin transaction are public. Programs with involuntary inclusion of inputs in spending seem superior (e.g. ring signatures with \"key image\" inclusion), although I doubt we'll see an inclusion of that with a Bitcoin soft fork.",
      "created_at" : "2015-08-18T14:23:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132228900",
      "id" : 132228900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132228900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "I would like you to consider my cut-and-choose+random-subset-test method for creating range proofs when you think of adding confidential transactions to Bitcoin. \r\nI blame myself for not publishing this proof in a clear separate proposal for you to check. I will publish it separately soon. It has very similar properties as borromean signatures (a big larger proofs, I think). It has the benefit of being much simpler, and easily allows 64-bit of numeric ranges without doing floating point encoding.",
      "created_at" : "2015-08-18T14:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132232740",
      "id" : 132232740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T14:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132232740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1752347?v=3",
         "events_url" : "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SergioDemianLerner/followers",
         "following_url" : "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SergioDemianLerner",
         "id" : 1752347,
         "login" : "SergioDemianLerner",
         "organizations_url" : "https://api.github.com/users/SergioDemianLerner/orgs",
         "received_events_url" : "https://api.github.com/users/SergioDemianLerner/received_events",
         "repos_url" : "https://api.github.com/users/SergioDemianLerner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SergioDemianLerner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SergioDemianLerner"
      }
   },
   {
      "body" : "> ECDH addresses have been previously discussed in the Dark Wallet \"stealth address\" scheme. I'm not a super big fan of that scheme which has never been completely specified.\r\n> \r\n> It results in addresses which are more than 2x larger than our current ones, largely so it can support a secure delegated scanning mode. But, of course, the scanning delegation totally undermines the privacy of the system.\r\n\r\nHave you reviewed BIP47 Reusable Payment Codes #159? By using notification transactions, clients do not need to outsource finding payment addresses to scanning delegates.",
      "created_at" : "2015-08-18T14:47:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132237084",
      "id" : 132237084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T14:47:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132237084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7227529?v=3",
         "events_url" : "https://api.github.com/users/kristovatlas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristovatlas/followers",
         "following_url" : "https://api.github.com/users/kristovatlas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristovatlas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristovatlas",
         "id" : 7227529,
         "login" : "kristovatlas",
         "organizations_url" : "https://api.github.com/users/kristovatlas/orgs",
         "received_events_url" : "https://api.github.com/users/kristovatlas/received_events",
         "repos_url" : "https://api.github.com/users/kristovatlas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristovatlas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristovatlas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristovatlas"
      }
   },
   {
      "body" : "@cjepson CoinJoin is actively used by [JoinMarket](https://github.com/chris-belcher/joinmarket), which already supports sending [directly from the core wallet](https://github.com/chris-belcher/joinmarket/blob/master/sendpayment.py#L121-L123). There are several issues preventing JoinMarket from inclusion in Bitcoin Core (such as the \"pit\" being an IRC channel, part of the project's relative youth), but it's worth noting that this approach is far from \"dead end\".",
      "created_at" : "2015-08-18T15:10:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132244037",
      "id" : 132244037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T15:18:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132244037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94171?v=3",
         "events_url" : "https://api.github.com/users/adlai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adlai/followers",
         "following_url" : "https://api.github.com/users/adlai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adlai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adlai",
         "id" : 94171,
         "login" : "adlai",
         "organizations_url" : "https://api.github.com/users/adlai/orgs",
         "received_events_url" : "https://api.github.com/users/adlai/received_events",
         "repos_url" : "https://api.github.com/users/adlai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adlai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adlai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adlai"
      }
   },
   {
      "body" : "@adlai The problem with CoinJoin is the difficulty in ensuring most or all of the participants are not malicious. If you have 4 inputs and 3 of them are an attacker in a CoinJoin, then the attacker knows which input and output you own. This gives the illusion of privacy, which may be worse. As with all of the input mixing methods, including ring signatures with ZKPs to prevent double spending, there is the possibility of sybil attack which makes them less attractive as privacy solutions.",
      "created_at" : "2015-08-18T15:30:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132251159",
      "id" : 132251159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T15:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132251159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "The problems with privacy tools are of the \"not a bug; feature!\" variety, as they dispel the illusion of magic invisibility cloaks, revealing instead a market for anonymity set membership. (This discussion may be more appropriately continued in #3226)",
      "created_at" : "2015-08-18T15:37:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132253000",
      "id" : 132253000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T15:38:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132253000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94171?v=3",
         "events_url" : "https://api.github.com/users/adlai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adlai/followers",
         "following_url" : "https://api.github.com/users/adlai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adlai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adlai",
         "id" : 94171,
         "login" : "adlai",
         "organizations_url" : "https://api.github.com/users/adlai/orgs",
         "received_events_url" : "https://api.github.com/users/adlai/received_events",
         "repos_url" : "https://api.github.com/users/adlai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adlai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adlai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adlai"
      }
   },
   {
      "body" : "@cjepson I don't think that criticism is still relevant. Chaumian blinding in theory can help \"blind\" CoinJoin. But in fact, CoinShuffle already exists for this purpose, and is simple to implement.\r\n\r\nEdit: Oops, I didn't read the post correctly.",
      "created_at" : "2015-08-18T17:31:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132289509",
      "id" : 132289509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:08:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132289509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7227529?v=3",
         "events_url" : "https://api.github.com/users/kristovatlas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristovatlas/followers",
         "following_url" : "https://api.github.com/users/kristovatlas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristovatlas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristovatlas",
         "id" : 7227529,
         "login" : "kristovatlas",
         "organizations_url" : "https://api.github.com/users/kristovatlas/orgs",
         "received_events_url" : "https://api.github.com/users/kristovatlas/received_events",
         "repos_url" : "https://api.github.com/users/kristovatlas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristovatlas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristovatlas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristovatlas"
      }
   },
   {
      "body" : "I've got some more privacy-related issues for you:\r\n\"Clients leak IPs if they are recipients of a transaction\": https://github.com/bitcoin/bitcoin/issues/3828\r\n\"Implement nested multi-paper backup\" (the \"nested\" is the privacy, or rather stealth, part) https://github.com/bitcoin/bitcoin/issues/3212",
      "created_at" : "2015-08-18T20:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132339491",
      "id" : 132339491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T20:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132339491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2364130?v=3",
         "events_url" : "https://api.github.com/users/leo-bogert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leo-bogert/followers",
         "following_url" : "https://api.github.com/users/leo-bogert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leo-bogert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leo-bogert",
         "id" : 2364130,
         "login" : "leo-bogert",
         "organizations_url" : "https://api.github.com/users/leo-bogert/orgs",
         "received_events_url" : "https://api.github.com/users/leo-bogert/received_events",
         "repos_url" : "https://api.github.com/users/leo-bogert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leo-bogert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leo-bogert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leo-bogert"
      }
   },
   {
      "body" : "Another interesting way to achieve privacy is using ring signatures like in the CryptoNote protocol (I'm surprised this hasn't been mentioned already).",
      "created_at" : "2015-08-18T20:57:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132348456",
      "id" : 132348456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T20:57:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132348456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/752237?v=3",
         "events_url" : "https://api.github.com/users/Midar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Midar/followers",
         "following_url" : "https://api.github.com/users/Midar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Midar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Midar",
         "id" : 752237,
         "login" : "Midar",
         "organizations_url" : "https://api.github.com/users/Midar/orgs",
         "received_events_url" : "https://api.github.com/users/Midar/received_events",
         "repos_url" : "https://api.github.com/users/Midar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Midar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Midar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Midar"
      }
   },
   {
      "body" : "@kristovatlas CoinShuffle doesn't solve the Sybil attack as far as I'm aware.  If you own all the other outputs of the CoinShuffle except for that of a single external participant, you still know that the remaining output you don't own belongs to the single participant.\r\n\r\nSybil attacks on input mixing were investigated classically by Monero:\r\nhttps://lab.getmonero.org/pubs/MRL-0001.pdf\r\n\r\nI'm not sure how Chaumian style blinding helps either, but maybe I haven't thought hard enough about it. It just lets a third party sign for spending the output without knowing what the output is.",
      "created_at" : "2015-08-18T21:04:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132350335",
      "id" : 132350335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132350335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "@cjepson: You're right, my bad. I didn't read your post correctly. Sybil attacks are hard. Joinmarket potentially places incentives to reduce Sybil attackers overall % of the network, but I haven't seen any economic analysis of that yet.",
      "created_at" : "2015-08-18T21:09:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132352473",
      "id" : 132352473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-18T21:09:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132352473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7227529?v=3",
         "events_url" : "https://api.github.com/users/kristovatlas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristovatlas/followers",
         "following_url" : "https://api.github.com/users/kristovatlas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristovatlas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristovatlas",
         "id" : 7227529,
         "login" : "kristovatlas",
         "organizations_url" : "https://api.github.com/users/kristovatlas/orgs",
         "received_events_url" : "https://api.github.com/users/kristovatlas/received_events",
         "repos_url" : "https://api.github.com/users/kristovatlas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristovatlas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristovatlas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristovatlas"
      }
   },
   {
      "body" : "ECDH as i understand it have a very similar result as generating unique addresses for every receiving payment, i don't see how it is any privacy improvement. When you spend the coins received by the  ECDH method you still have the same problems of today, the recipient knows where the coins came from etc.\r\n\r\nFor the short term something already known and recognized should start being implemented as of today, so many years have passed and the promised privacy of bitcoin is still a myth. Built-in CoinJoin in the Core wallet should be good enough for now while something better is studied for the long term, but should be enabled by default in the wallet to avoid discrimination against its users if the mehtod happens to be detectable in the blockchain.",
      "created_at" : "2015-08-19T14:42:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132623579",
      "id" : 132623579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-19T14:48:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132623579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13870845?v=3",
         "events_url" : "https://api.github.com/users/SpaceBitz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SpaceBitz/followers",
         "following_url" : "https://api.github.com/users/SpaceBitz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SpaceBitz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SpaceBitz",
         "id" : 13870845,
         "login" : "SpaceBitz",
         "organizations_url" : "https://api.github.com/users/SpaceBitz/orgs",
         "received_events_url" : "https://api.github.com/users/SpaceBitz/received_events",
         "repos_url" : "https://api.github.com/users/SpaceBitz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SpaceBitz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SpaceBitz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SpaceBitz"
      }
   },
   {
      "body" : "No itÃÂ´s not.\r\nCoinJoin/Shuffle whatever - all of those interactive solutions are a pain for the users to use, its not enough to put them into BTC CORE.\r\nFor obvious reasons, most people donÃÂ´t even use BTC Core they are on Electrum, Multibit, Copay and whatever else wallet; most of them prolly use their mobile phone etc.\r\n\"Premixing\" coins just to be able to be a bit anonymous? Total No-go from a user experience perspective. \r\nBitcoin needs to get more simple in every way to be successfull, not more complicated.\r\n\r\nIf you want to archive better privacy in BTC, then go with a protocol level change and enforce it for everyone, always.\r\n\r\n\r\nThis is all cool for us nerds but definately not for my Mom if we ever want an average person to get involved into Btc.",
      "created_at" : "2015-08-19T17:01:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132696066",
      "id" : 132696066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-19T17:01:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132696066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10147431?v=3",
         "events_url" : "https://api.github.com/users/thoatbk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/thoatbk/followers",
         "following_url" : "https://api.github.com/users/thoatbk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/thoatbk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/thoatbk",
         "id" : 10147431,
         "login" : "thoatbk",
         "organizations_url" : "https://api.github.com/users/thoatbk/orgs",
         "received_events_url" : "https://api.github.com/users/thoatbk/received_events",
         "repos_url" : "https://api.github.com/users/thoatbk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/thoatbk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/thoatbk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/thoatbk"
      }
   },
   {
      "body" : "thoatbk's comments are correct.  Unless the innovation is included in the protocol and can thus be used at a full node, it is less useful for decentralized and distributed cryptocurrency computing.  (Which is why Cryptonote/Monero is a strong contender in the arena of cryptocurrencies.)",
      "created_at" : "2015-08-20T10:54:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-132972437",
      "id" : 132972437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-20T11:00:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/132972437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12029920?v=3",
         "events_url" : "https://api.github.com/users/palexande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/palexande/followers",
         "following_url" : "https://api.github.com/users/palexande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/palexande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/palexande",
         "id" : 12029920,
         "login" : "palexande",
         "organizations_url" : "https://api.github.com/users/palexande/orgs",
         "received_events_url" : "https://api.github.com/users/palexande/received_events",
         "repos_url" : "https://api.github.com/users/palexande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/palexande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/palexande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/palexande"
      }
   },
   {
      "body" : "@gmaxwell Do you have a POC for CT as a soft-fork? Or maybe a high-level description for what would be necessary? I'd be interested to have \"kludge\" qualified a bit.",
      "created_at" : "2015-08-20T13:36:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-133010024",
      "id" : 133010024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-20T13:36:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133010024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni The major issue I would say is that transactions spending multiple masked amounts now have a minimum size of 2,564 bytes for the range proof alone. Bitcoin is struggling with transaction volume of smaller transactions. I'm not sure it's softfork implementable as a new OP_CODE where you can pay out to masked outputs. What the amount/value field in the TX out would be considered is unclear. Normally it has to sum to <= inputs. If you zero/mask them out you'd need to add new consensus rules about using the outputs elsewhere in the blockchain as inputs. That's hardfork. I'm not sure it's super easy to drop it in. But maybe someone has some better ideas.\r\n\r\nOn the other hand, stealth TX negotiated off chain add no new bloat to the Bitcoin blockchain and appear as normal transactions where address reuse prevention is enforced. I think this should get a priority, as it requires no modifications to Bitcoin.",
      "created_at" : "2015-08-20T16:05:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-133061728",
      "id" : 133061728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-20T16:07:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133061728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10604806?v=3",
         "events_url" : "https://api.github.com/users/cjepson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cjepson/followers",
         "following_url" : "https://api.github.com/users/cjepson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cjepson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cjepson",
         "id" : 10604806,
         "login" : "cjepson",
         "organizations_url" : "https://api.github.com/users/cjepson/orgs",
         "received_events_url" : "https://api.github.com/users/cjepson/received_events",
         "repos_url" : "https://api.github.com/users/cjepson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cjepson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cjepson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cjepson"
      }
   },
   {
      "body" : "@cjepson there is no cryptosystem in the world that can give you transaction privacy if all the users except you are sybils who co-operate with each other.\r\n\r\nEven if you used zerocoin but every single other user was the NSA, you would still not get privacy from them.\r\n\r\nSo yes your criticism of CoinJoin is true but it's also true for everything else. Of course in some systems it might be easier or harder to get the required numbers to sybil attack.",
      "created_at" : "2015-08-23T13:16:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-133832060",
      "id" : 133832060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2016-02-09T12:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133832060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8398185?v=3",
         "events_url" : "https://api.github.com/users/chris-belcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chris-belcher/followers",
         "following_url" : "https://api.github.com/users/chris-belcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chris-belcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chris-belcher",
         "id" : 8398185,
         "login" : "chris-belcher",
         "organizations_url" : "https://api.github.com/users/chris-belcher/orgs",
         "received_events_url" : "https://api.github.com/users/chris-belcher/received_events",
         "repos_url" : "https://api.github.com/users/chris-belcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chris-belcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chris-belcher"
      }
   },
   {
      "body" : "A bitcoin cloud mining firm with 5 petahash capacity partners with an AML firm to \"monitor and report suspicious activities\":\r\n\r\nhttp://www.prnewswire.com/news-releases/bitcoin-and-blockchain-focused-hashingspace-retains-services-of-identitymind-global-an-anti-money-laundering-and-regulatory-compliance-platform-300134571.html\r\n> HashingSpace Corporation, a bitcoin ASIC mining and hosting company, announced today their decision to use the IdentityMind platform to monitor and report suspicious activities, as an integral part of the firm's commitment to compliance with all regulatory requirements worldwide.\r\n\r\n> IdentityMind GlobalÃ¢ÂÂ¢ is recognized as the leading provider of anti-money laundering and compliance services for Bitcoin and virtual currency companies across 4 continents, and offers the most advanced compliance platform for virtual currencies. The company provides a full suite of risk monitoring and Anti-Money Laundering technologies, enabling businesses to comply with US (FinCEN) and worldwide regulations.",
      "created_at" : "2015-08-31T20:56:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-136496809",
      "id" : 136496809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-31T22:41:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/136496809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11140618?v=3",
         "events_url" : "https://api.github.com/users/eragmus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eragmus/followers",
         "following_url" : "https://api.github.com/users/eragmus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eragmus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eragmus",
         "id" : 11140618,
         "login" : "eragmus",
         "organizations_url" : "https://api.github.com/users/eragmus/orgs",
         "received_events_url" : "https://api.github.com/users/eragmus/received_events",
         "repos_url" : "https://api.github.com/users/eragmus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eragmus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eragmus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eragmus"
      }
   },
   {
      "body" : "Hashing Space smells like a total scam. Just judging by the amount of \"no\nnews\" press releases they have issued over the past few months. I would\nstay away IMHO\n\nOn Mon, Aug 31, 2015 at 1:56 PM, eragmus <notifications@github.com> wrote:\n\n>\n> http://www.prnewswire.com/news-releases/bitcoin-and-blockchain-focused-hashingspace-retains-services-of-identitymind-global-an-anti-money-laundering-and-regulatory-compliance-platform-300134571.html\n>\n> HashingSpace Corporation (OTCQB: HSHS), a bitcoin ASIC mining and hosting\n> company, announced today their decision to use the IdentityMind platform to\n> monitor and report suspicious activities, as an integral part of the firm's\n> commitment to compliance with all regulatory requirements worldwide.\n>\n> IdentityMind GlobalÃ¢ÂÂ¢ is recognized as the leading provider of anti-money\n> laundering and compliance services for Bitcoin and virtual currency\n> companies across 4 continents, and offers the most advanced compliance\n> platform for virtual currencies. The company provides a full suite of risk\n> monitoring and Anti-Money Laundering technologies, enabling businesses to\n> comply with US (FinCEN) and worldwide regulations.\n>\n> Ã¢ÂÂ\n> Reply to this email directly or view it on GitHub\n> <https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-136496809>.\n>\n\n\n\n-- \nAmith Ã Â¸Â¿. Nirgunarthy | IHB <https://ihb.io/>\n+1.310.795.9666 | +1.201.839.6148 (USA) | +91.9611.415.486 (India)\nAngel <https://angel.co/amith-nirgunarthy> | LinkedIn\n<https://www.linkedin.com/in/anirgu> | @anirgu <https://twitter.com/anirgu>\n | Facebook <https://www.facebook.com/anirgu> | Google+\n<https://plus.google.com/+AmithNirgunarthy/about> | Skype: anirgu\n",
      "created_at" : "2015-08-31T21:13:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-136502426",
      "id" : 136502426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-08-31T21:13:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/136502426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8682778?v=3",
         "events_url" : "https://api.github.com/users/anirgu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/anirgu/followers",
         "following_url" : "https://api.github.com/users/anirgu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/anirgu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/anirgu",
         "id" : 8682778,
         "login" : "anirgu",
         "organizations_url" : "https://api.github.com/users/anirgu/orgs",
         "received_events_url" : "https://api.github.com/users/anirgu/received_events",
         "repos_url" : "https://api.github.com/users/anirgu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/anirgu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/anirgu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/anirgu"
      }
   },
   {
      "body" : "Break it down into the known risks as axioms, then present infinity type assumptions to them to describe the \"best\" solution in a non-infinity world.\r\n\r\nCore Axioms\r\n1. The Internet is based on IP communications.\r\n2. Your direct peers know your IP.\r\n3. Your outputs will be recorded in a public ledger.\r\n4. Your inputs will be recorded in a ledger.\r\n5. Various transaction in the ledger are associated with identities by third-parties.\r\n\r\nSecond Level Axioms (Networking)\r\n1. The more hops between you and the reader of the ledger, the less chance there is of associating your inputs/outputs with your IP.  (Infinite hops eliminates the association.)\r\n2. Encryption between hops can help protect from network snooping.\r\n\r\nThird Level Axioms (Transactions)\r\n1. Increased participants in a transaction reduces individual identity.  (Infinite participants in a transaction eliminates identity.)\r\n2. Increased anonymity between participants in a transaction decreases identity.\r\n3. Increased cost of transaction (net loss) decreases risk of information gathering only participants.\r\n4. Increased spending stake decreases risk of information gathering only participants.\r\n5. Increased profit stake increases risk of information gathering only participants, and can negate #4.\r\n6. The primary privacy goal is to eliminate the association of the input Bitcoin address from the output address.\r\n\r\nFourth Level Axioms (Randomization Through Pooling)\r\n1. Increased pools size increase individual identity outside pool.\r\n2. Increased hops to pool increases identity within pool.\r\n3. Hashes and public keys can decrease identity within pool.\r\n4. Increasing pool size can increase transaction latency.\r\n5. The pool needs a means of output the transactions in a way that minimizes exposure of input identity.\r\n6. Minimizing viewers of the building of the pool minimizes risk of those outside it identifying participants.\r\n7. Destruction of the pool after it completes its mission minimizes leakage of its internal history. Absolute destruction may not be obtainable, but this is an avenue that could be explored to at least minimize persistence of its past.\r\n8. Separating the input from the output increases privacy.\r\n\r\nLooking at this, it appears like a side-chain can be used to build a pool.  However, obtaining a desirable size can result in significant latency.  Perhaps one inevitable trade-off is increased latency for increased privacy.\r\n\r\nThe trick is to create a pool protocol with the following goals:\r\n1. Individual nodes, especially non-participants in a pool, have minimal knowledge of each pool while still facilitating its building.\r\n2. Building of the pool is completely decentralized.\r\n2. Have algorithms that match participants to create a complete pool.\r\n3. Have the ability to prove to Bitcoin that the final transaction is authentic.\r\n4. Allows the creator(s) of the final transaction to do so without being participants in it.\r\n\r\nExample Use Case\r\nJoe wants to send 1 BTC to Sally.  He specifies that the pool size must include no less than 100 participants, and each participant must have a stake of no less than 0.1 BTC.\r\n\r\nJoe authorizes the side-chain to withdraw 1 BTC from Bitcoin while securing the output within the side-chain.  Only the node who can execute the final pooled transaction with BTC can know the recipient, and that node will by then have no way of knowing it was from Joe.  The only known by intermediary nodes is the amount of the transaction. The encrypted output is \"authenticated\" but unknown.\r\n\r\nThis permits the authenticated output to become part of the temporary ledge as a candidate for a pool.  When enough candidates build, and perhaps other \"proof of work\" criteria was met, the pool transaction outputs could be sent to Bitcoin.  At this point, no details of the pool are persisted within the side-chain.\r\n\r\nChallenges\r\n1. Cryptography must hide the destination address from all but the last node.\r\n2. The side-chain must be trust-less, yet be able to act on behalf of Joe with his permission, particularly with regard to withdrawing his BTC.\r\n3. The side-chain must be able to protect Alice's BTC after that point.\r\n4. The final node transferring Alice's BTC must be able to do so, yet without the ability to steal it.\r\n5. The final node should not require any knowledge of how the pool was built.  It just knows the requirements were completed.\r\n6. There needs to be a way to ensure that this does not result in duplicate Bitcion transactions.  How will the input and output transactions be created on Bitcoin?\r\n\r\nThis last challenge appears to require that side-chains become a feature of Bitcoins. This could eliminate the concept of a final node completely, as this side-chain could reach consensus and simply \"broadcast\" the final transaction to Bitcoin.  That way, 100 nodes could do this, and it wouldn't matter.\r\n\r\nIntegrating with Bitcoin\r\nWhether this pooling became a part of the Bitcoin is irrelevant because no matter what, the building of a pool requires a side-chain.  It makes sense to just put general side-chain capability in Bitcoin, and just consider this a use-case.\r\n\r\nBitcoin can define this as a collateral side-chain, \"locking\" withdrawals until outputs are made, maintaining a side-chain balance.  This would mean that Joe's 1 BTC would be locked, perhaps with an expiration. Alternately, a side-chain could \"deposit\" with Bitcoin collateral equal to the maximum withdrawal balance.  A hybrid of these two could be possible as well.  Regardless, to build a pool totalling 100 BTC these funds would have to either be provided as collateral to Bitcoin first, or temporarily \"lock\" withdrawals (tx inputs) until the pool dispersed its funds back to Bitcoin (tx outputs).  Ideally, many pools would build simultaneously to separate withdrawals from deposits, though.  So, we could realistically be talking about 1000 BTC to support 10x100 BTC pools building at once.  If it could only build one at a time, then inputs could be associated with output pool. \r\n\r\nSide chains can charge TX fees, which can then be used to recoup any collateral, or free up any locked funds.  Competition between side chains would keep these fees low. \r\n\r\nIn any event, I don't see this type of side-chain happening without a well designed fork of Bitcoin to enable it.  I also, given the axioms, don't see this type of privacy being possible without a hard fork.\r\n\r\nIronically, I didn't imagine this requiring side chains when I started writing this.  This is the first time I really thought it out, as well.  Now that I have, I think I really love them.  Despite the accusations of them favoring Bitstream, if designed right, they will be equally beneficial to EVERYONE.  In this scheme, it is entirely decentralized and trust-less.  Anyone can fire up a side-chain and potentially profit from it. Anyone can use any side chain open to the public, such as the privacy one I just described.  Public ones will compete, creating an open marketplace. And, as I described, the side-chain itself can choose to be completely decentralized and trust-less.  Nodes will have to run it, and will require an incentive, possibly earning transaction fees.  But, that's no different than Bitcoin today.  ",
      "created_at" : "2015-09-03T04:40:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-137329672",
      "id" : 137329672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2015-09-03T04:40:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/137329672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/684432?v=3",
         "events_url" : "https://api.github.com/users/erik777/events{/privacy}",
         "followers_url" : "https://api.github.com/users/erik777/followers",
         "following_url" : "https://api.github.com/users/erik777/following{/other_user}",
         "gists_url" : "https://api.github.com/users/erik777/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/erik777",
         "id" : 684432,
         "login" : "erik777",
         "organizations_url" : "https://api.github.com/users/erik777/orgs",
         "received_events_url" : "https://api.github.com/users/erik777/received_events",
         "repos_url" : "https://api.github.com/users/erik777/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/erik777/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/erik777/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/erik777"
      }
   },
   {
      "body" : "I'd suggest putting this to high priority given how zcash has immediately gone to being valued more highly than bitcoin.",
      "created_at" : "2016-11-04T03:03:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6568#issuecomment-258333949",
      "id" : 258333949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6568",
      "updated_at" : "2016-11-04T03:03:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258333949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   }
]

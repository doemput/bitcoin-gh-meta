[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r38689599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38689599"
         }
      },
      "body" : "nit: update this comment?",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-03T20:00:44Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n     // Remove transactions spending a coinbase which are now immature",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r38689599",
      "id" : 38689599,
      "original_commit_id" : "2276af1501931e05979d11921d1f9104f0013e9f",
      "original_position" : 15,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-06T04:40:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38689599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r38817562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38817562"
         }
      },
      "body" : "Done",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-06T04:40:35Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n     // Remove transactions spending a coinbase which are now immature",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r38817562",
      "id" : 38817562,
      "original_commit_id" : "2276af1501931e05979d11921d1f9104f0013e9f",
      "original_position" : 15,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-06T04:40:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38817562",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK,  concept ACK.",
      "created_at" : "2015-09-07T13:05:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138292825",
      "id" : 138292825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-09-07T13:05:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138292825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Untested ACK.\r\n",
      "created_at" : "2015-09-07T15:46:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138328154",
      "id" : 138328154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-09-07T15:46:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138328154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "ACK.\r\n\r\nFYI I think that it's worth thinking about this code again if we consider merging #6216, because I believe with the anti-fee sniping use of nlocktime we may end up purging a lot of transactions from the mempool  whenever there is a reorg.",
      "created_at" : "2015-09-08T14:40:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138587004",
      "id" : 138587004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-09-08T14:40:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138587004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Longer term, I think it's better to change the invariant for the mempool\nfrom \"Valid for the expected next block\" to \"will be eventually valid\".\nAccepting non-final transactions then becomes a policy question, rather\nthan a consistency requirement. It would also speed up block disconnects,\nwhich is a good thing  as reorganizations are already slower than normal\nblock connects - they shouldn't need this extra cleanup work on top.\n",
      "created_at" : "2015-09-08T14:51:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138590569",
      "id" : 138590569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-09-08T14:51:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138590569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I'm not too worried about changing the mempool invariant...mostly because I think (someone should audit to be sure), that this code would work as-is if it were just called once at the end of a reorg instead of after each bock disconnect.",
      "created_at" : "2015-09-09T00:53:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138742155",
      "id" : 138742155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-09-09T00:53:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138742155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39093631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39093631"
         }
      },
      "body" : "To be clear, the reason why you test both !coins and against COINBASE_MATURITY is because AccessCoins() will return a CCoins result for immature coins, right?\r\n\r\nI smell a future refactoring, but for now please add a comment describing those two cases and why there are two tests.",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T20:43:44Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39093631",
      "id" : 39093631,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T20:43:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39093631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39093908"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39093908"
         }
      },
      "body" : "Oh, and come to think of it your test above doesn't actually test both those cases; you need to do a >COINBASE_MATURITY reorg as well, to a chain that is equally long.",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T20:46:16Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39093908",
      "id" : 39093908,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T20:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39093908",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@sipa I was the one who added that invariant in the first place, and I only meant it as a DoS attack defence, not as a true invariant. In fact, IIRC my original proposal was that we'd allow txs into the mempool so long as they'd be valid in the next two or three blocks.\r\n\r\nAs for calling it at the end of a reorg, that looks fine to me modulo issues raised in my comments.\r\n",
      "created_at" : "2015-09-09T20:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-139041031",
      "id" : 139041031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-09-09T20:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/139041031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39094889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39094889"
         }
      },
      "body" : "Hmm? I didnt change this code at all, only its indentation. And, yes, I know the test-case is not complete, but creating a testcase that is complete is kinda a PITA (or, which case are you claiming should be implemented?)",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T20:54:11Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39094889",
      "id" : 39094889,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T20:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39094889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39096664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39096664"
         }
      },
      "body" : "Sorry, arguably that's not your fault, agreed. :)\r\n\r\nI'm really thinking of the case where we change this to be called end-of-reorg; if that isn't the case in theory this !coins check should be redundant.\r\n\r\nMight be reasonable to leave this code as-is, and make a separate end-of-reorg function that just removes non-final transactions from the mempool.",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T21:08:03Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39096664",
      "id" : 39096664,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T21:08:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39096664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39097826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39097826"
         }
      },
      "body" : "No, it would be my fault, I think I wrote that code, too :p.",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T21:18:21Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39097826",
      "id" : 39097826,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T21:18:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39097826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39097875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39097875"
         }
      },
      "body" : "Why are redundant checks to make code more reviewable and more clearly not segfault-y bad?",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T21:18:55Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39097875",
      "id" : 39097875,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T21:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39097875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39098630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39098630"
         }
      },
      "body" : "They're not bad! I just think it'd help if they were explained with comments. (and testing all ways of invoking them is always good)",
      "commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "created_at" : "2015-09-09T21:26:17Z",
      "diff_hunk" : "@@ -156,22 +157,26 @@ void CTxMemPool::remove(const CTransaction &origTx, std::list<CTransaction>& rem\n     }\n }\n \n-void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n+void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight)\n {\n-    // Remove transactions spending a coinbase which are now immature\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     list<CTransaction> transactionsToRemove;\n     for (std::map<uint256, CTxMemPoolEntry>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->second.GetTx();\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n-            std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-            if (it2 != mapTx.end())\n-                continue;\n-            const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n-            if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n-                transactionsToRemove.push_back(tx);\n-                break;\n+        if (!IsFinalTx(tx, nMemPoolHeight, GetAdjustedTime()))\n+            transactionsToRemove.push_back(tx);\n+        else {\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                std::map<uint256, CTxMemPoolEntry>::const_iterator it2 = mapTx.find(txin.prevout.hash);\n+                if (it2 != mapTx.end())\n+                    continue;\n+                const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n+                if (fSanityCheck) assert(coins);\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#discussion_r39098630",
      "id" : 39098630,
      "original_commit_id" : "b394d266def649088c08619cd32b923ed8ab3c89",
      "original_position" : 39,
      "path" : "src/txmempool.cpp",
      "position" : 39,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6595",
      "updated_at" : "2015-09-09T21:26:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39098630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Rebased at #6915",
      "created_at" : "2015-11-05T19:00:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-154153649",
      "id" : 154153649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6595",
      "updated_at" : "2015-11-05T19:00:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/154153649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]

[
   {
      "body" : "concept ACK",
      "created_at" : "2015-08-21T05:20:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133289586",
      "id" : 133289586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T05:20:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133289586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608063"
         }
      },
      "body" : "Oh actually, I was thinking for the first release, not only allow pfrom->nVersion < NO_BLOOM_VERSION clients to send filterX messages, but also respond to them, to give a bit of time for those clients to be upgraded. (this could even be gated to some fixed deadline in the future)\r\n\r\nMy original logic re: disconnecting clients immediately was to give those clients an opportunity to find another node quickly.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T05:50:11Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608063",
      "id" : 37608063,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608079"
         }
      },
      "body" : "stray space",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T05:50:43Z",
      "diff_hunk" : "@@ -49,12 +49,13 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"{\\n\"\n             \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"services\\\": \\\"xxxxxxxx\\\",     (string) the local services\\n\"\n             \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n             \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n             \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",       (string, optional) the proxy used by the server\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608079",
      "id" : 37608079,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 11,
      "path" : "src/rpcmisc.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608087"
         }
      },
      "body" : "another stray space",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T05:50:55Z",
      "diff_hunk" : "@@ -62,7 +63,7 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"             (string) any error messages\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608087",
      "id" : 37608087,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 20,
      "path" : "src/rpcmisc.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608346"
         }
      },
      "body" : "I believe that there is sufficient time for clients that need the NODE_BLOOM commands to upgrade before a client with this patch is even significantly deployed to the network, much less bloom filters widely disabled.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T05:59:38Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608346",
      "id" : 37608346,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608662"
         }
      },
      "body" : "Is the else part required? With a score of 100 it get directly banned (with the default `-banscore`) anyways?",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T06:10:12Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608662",
      "id" : 37608662,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 11,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "utACK.",
      "created_at" : "2015-08-21T06:11:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133298746",
      "id" : 133298746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T06:11:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133298746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608724"
         }
      },
      "body" : "True, and of course it's easy to patch the DNS seeds that the affected wallets use to only return nodes that have NODE_BLOOM set - BitcoinJ doesn't do any peer addr caching, relying totally on the DNS seeds every time.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T06:11:58Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608724",
      "id" : 37608724,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608755"
         }
      },
      "body" : "Well, the idea would be that >= NO_BLOOM_VERSION should *know* not to send filters to non-bloom-supporting peers - it's misbehavior in that case.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T06:13:14Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37608755",
      "id" : 37608755,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 11,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37608755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "utACK (testing now)",
      "created_at" : "2015-08-21T06:14:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133299448",
      "id" : 133299448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T06:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133299448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Concept ACK.\r\nProcess-wise, this indeed does need a BIP.\r\n",
      "created_at" : "2015-08-21T08:00:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133320397",
      "id" : 133320397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T08:00:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133320397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "BIP on the mailing list (still unnumbered).\r\n\r\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010535.html",
      "created_at" : "2015-08-21T10:25:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133365934",
      "id" : 133365934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T10:26:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133365934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "Libbitcoin doesn't support BIP37 (and doesn't intend to). This allows us to fix the resulting protocol break.",
      "created_at" : "2015-08-21T11:18:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133375376",
      "id" : 133375376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T11:18:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133375376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1369335?v=3",
         "events_url" : "https://api.github.com/users/evoskuil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evoskuil/followers",
         "following_url" : "https://api.github.com/users/evoskuil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evoskuil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evoskuil",
         "id" : 1369335,
         "login" : "evoskuil",
         "organizations_url" : "https://api.github.com/users/evoskuil/orgs",
         "received_events_url" : "https://api.github.com/users/evoskuil/received_events",
         "repos_url" : "https://api.github.com/users/evoskuil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evoskuil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evoskuil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evoskuil"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37655045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37655045"
         }
      },
      "body" : "Nope, purposeful space. It makes it lign up on RPC output.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T17:07:06Z",
      "diff_hunk" : "@@ -49,12 +49,13 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"{\\n\"\n             \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"services\\\": \\\"xxxxxxxx\\\",     (string) the local services\\n\"\n             \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n             \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n             \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",       (string, optional) the proxy used by the server\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37655045",
      "id" : 37655045,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 11,
      "path" : "src/rpcmisc.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37655045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37655047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37655047"
         }
      },
      "body" : "Nope, purposeful space. It makes it lign up on RPC output.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T17:07:09Z",
      "diff_hunk" : "@@ -62,7 +63,7 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"             (string) any error messages\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37655047",
      "id" : 37655047,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 20,
      "path" : "src/rpcmisc.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37655047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37655176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37655176"
         }
      },
      "body" : "Oops, yes, I meant to do what @petertodd said first, happens when you write code then change it without thinking :).",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-08-21T17:08:45Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r37655176",
      "id" : 37655176,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/37655176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I'm happy to see this being added.  We've wanted this in btcd for quite some time as currently the only ways to not support bloom filters are either a protocol break or simply not applying the filters while claiming to do so.",
      "created_at" : "2015-08-21T17:59:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133513576",
      "id" : 133513576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-21T18:01:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133513576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2115102?v=3",
         "events_url" : "https://api.github.com/users/davecgh/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davecgh/followers",
         "following_url" : "https://api.github.com/users/davecgh/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davecgh/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davecgh",
         "id" : 2115102,
         "login" : "davecgh",
         "organizations_url" : "https://api.github.com/users/davecgh/orgs",
         "received_events_url" : "https://api.github.com/users/davecgh/received_events",
         "repos_url" : "https://api.github.com/users/davecgh/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davecgh/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davecgh/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davecgh"
      }
   },
   {
      "body" : "Tested ACK (tested w/ Android Bitcoin Wallet, rescans with and without NODE_BLOOM work as expected)",
      "created_at" : "2015-08-24T02:09:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-133991022",
      "id" : 133991022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T02:09:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/133991022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "ACK conditional on not breaking notable groups of users in the field.  @petertodd testing w/ Android Bitcoin Wallet is much appreciated and is excellent test coverage.\r\n\r\nThe \"some wallets are moving to centralized servers\" argument is weak.  The desire is robust service for users - especially those using decentralized wallets; would not want to hurt active, decentralized solutions because some other wallets are abandoning DC. &lt;/general principle&gt;\r\n",
      "created_at" : "2015-08-24T03:47:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134009655",
      "id" : 134009655,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T03:48:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134009655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "Hum.  Some further thoughts:\r\n\r\nThe general goal is to phase out this feature, yes?\r\n\r\nCurrently we have bloom support + no node_bloom bit.\r\n\r\nSeems silly to introduce a NODE_BLOOM bit only to eliminate bloom support - the natural end state of a default-bloom-disabled eventual ship mode after this + further changes, subsequently widely deployed.\r\n\r\nFurther, the end user client PoV is that P2P nodes that _do_ support a protocol version with fRelayTx randomly do not respond to filter*  NODE_BLOOM does not help the end user client.  Old software will not know about this new bit, and will randomly fail.\r\n\r\nTherefore, why add planned-obsolete bit?\r\n\r\nAnyone wanting to keep bloom support could advertise the service via #4657 (NODE_EXT_SERVICE) or a similar optional-service advertisement & rendezvous mechanism.  The breakage (explained above) is the same for end users as default-disabled NODE_BLOOM.  \r\n",
      "created_at" : "2015-08-24T04:04:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134021930",
      "id" : 134021930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T04:04:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134021930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "> The general goal is to phase out this feature, yes?\r\n\r\nI didn't bump the BIP with that in mind. The intent is just to be able to signal to wallet users that there's no point wasting your time and bandwidth sending filterload messages that are never going to do anything. Many SPV wallets seem to blindly follow whatever DNS seeds return, so if you punt them they just come straight back with the same request. libbitcoin, bitcoin-ruby, pseudonode and btcd already break the expected P2P protocol by simply ignoring these messages. \r\n\r\nIf and when the network evolves to have partial history storage nodes, or some majority of pruned nodes this messaging will need to happen one way or another as nodes will simply not be able to respond with merkleblock messages for blocks they do not have on disk. \r\n\r\nI don't really have an opinion on how this is executed, I would just like both to be able to \r\n\r\n* signal intent to ignore those messages so I don't denial of service attack peoples wallets\r\n\r\n* easily disable BIP37 on high reliability nodes without having to manually patch ",
      "created_at" : "2015-08-24T04:10:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134024497",
      "id" : 134024497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T04:41:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134024497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "IMO, the goal of this is not to phase out the feature. Sure, it could be phased out at some point but some SPV wallets are using it so there is no hurry.\r\n\r\nThe goal is to make it optional for node implementations to implement it. As bloom filters are unnecessary for inter-full-node communications, IMO coupling NODE_NETWORK and support for bloom filters was a mistake and this corrects that.\r\n",
      "created_at" : "2015-08-24T10:31:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134139438",
      "id" : 134139438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T10:31:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134139438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "NACK - we went around all this in 2013 and the same arguments were made then. Nothing has changed since that time.\r\n\r\nThere is no need to make this optional, it doesn't help anyone and it can easily hurt. For instance, the next thing that will happen is that Peter Todd runs around telling everyone it's dangerous and they should disable it (he is wrong, but he'll do so anyway).\r\n\r\nYes, obviously it adds work to fully implement the protocol. So does implementing the other bits. If you want to write a full serving node, then you should implement all of the Bitcoin protocol, not just the bits of it you happen to like. If you don't want to do that, or are worried about unpredictable resource usage, then don't open a listening port: very simple. You are then a client and can implement whatever minimum subset you like.\r\n\r\nWRT phasing out - it's very obviously the intent to do exactly that, as Matt said on the BIP thread:\r\n\r\n> The proposal will not break any existing clients in the first release. After sufficient time to upgrade SPV clients, a new version will be released which will result in older SPV clients finding themselves disconnected from peers when they send filter* commands, so they can go find other peers which do support bloom filtering\r\n\r\nSPV wallets will not stop using this feature. There is no \"phasing out\". There is only Bitcoin Core deciding it doesn't want to support P2P smartphone wallets anymore. And why would you do that?",
      "created_at" : "2015-08-24T14:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134222138",
      "id" : 134222138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T14:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134222138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "I agree with @mikehearn on this one. Bloom filters are important for smartphone wallets and nothing is won by not supporting them.",
      "created_at" : "2015-08-24T14:32:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134227463",
      "id" : 134227463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T14:32:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134227463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/743306?v=3",
         "events_url" : "https://api.github.com/users/schildbach/events{/privacy}",
         "followers_url" : "https://api.github.com/users/schildbach/followers",
         "following_url" : "https://api.github.com/users/schildbach/following{/other_user}",
         "gists_url" : "https://api.github.com/users/schildbach/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/schildbach",
         "id" : 743306,
         "login" : "schildbach",
         "organizations_url" : "https://api.github.com/users/schildbach/orgs",
         "received_events_url" : "https://api.github.com/users/schildbach/received_events",
         "repos_url" : "https://api.github.com/users/schildbach/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/schildbach/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/schildbach/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/schildbach"
      }
   },
   {
      "body" : "I'm personally in support with the intent pointed out by @evGUzQIEQaL4,  such that the PR should:\r\n\r\n* Signal intent to ignore those messages so I don't denial of service attack peoples wallets\r\n* [Allow ability to] easily disable BIP37 on high reliability nodes without having to manually patch\r\n\r\nI also think that the current default behaviour of supporting BIP37 should **not** be disabled until a suitable replacement is found.\r\n~~NACK for `NO_BLOOM_VERSION`~~,  concept ACK for listed intents.\r\n\r\n**edit:** As pointed out by @TheBlueMatt, `NO_BLOOM_VERSION` is just a protocol version to specify this change in the protocol,  it doesn't disable BIP37 in any way,  nor enforce a disabling default.",
      "created_at" : "2015-08-24T14:44:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134230406",
      "id" : 134230406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:20:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134230406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "1) It sounds like this does negatively impact major user segments.\r\n\r\n2) The problem of bit inversion & backwards compatibility remains.  In-field client experience will be of nodes randomly failing to produce a proper filter* response as expected, because they are unaware of NODE_BLOOM.\r\n",
      "created_at" : "2015-08-24T14:51:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134232071",
      "id" : 134232071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T14:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134232071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "NACK from me, I'll repeat what I said last year: \"no consensus this is a good idea.\"",
      "created_at" : "2015-08-24T15:08:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134239911",
      "id" : 134239911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:08:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134239911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Exactly @dcousens.\r\nFYI this **doesn't** change the default of supporting bloom filters in Bitcoin Core. It does make it possible to *signal* not supporting it for implementations that - generally already -  do not support it (such as btcd, obelisk)\r\n```c++\r\nif (GetBoolArg(\"-peerbloomfilters\", true))\r\n    nLocalServices |= NODE_BLOOM;\r\n```\r\nMost SPV wallets are mobile applications, thus easily updated to pay attention to this bit.",
      "created_at" : "2015-08-24T15:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134240037",
      "id" : 134240037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134240037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "\"I assume applications may be easily updated\" is a poor approach to backwards compat.\r\n",
      "created_at" : "2015-08-24T15:10:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134240995",
      "id" : 134240995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:10:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134240995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "Well the alternative (as currently used) is to ignore bloom commands without signaling it. Or disconnecting clients that request filtering functionality.\r\nIs that better for backwards compatiblity?",
      "created_at" : "2015-08-24T15:12:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134241719",
      "id" : 134241719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:12:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134241719",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Users should have the choice to not serve SPV clients. It's their node, and their choice. It's not like a controversial hardfork that everyone has to agree on...",
      "created_at" : "2015-08-24T15:20:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134246078",
      "id" : 134246078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:20:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134246078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@mikehearn \r\n1) Agree on user benefit\r\n\r\n2) Let's not assume about others motivations.  It remains true that there is an attack vector.\r\n",
      "created_at" : "2015-08-24T15:31:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134251968",
      "id" : 134251968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:31:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134251968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "I just posted some hard data on the DoS attack risk to the mailing list.\r\n\r\nSummary is: I implemented a program that does a filter-a-lot attack. It turns out to not really affect anything, and 90% of the CPU usage is anyway in just loading the block from disk, not doing the filtering.",
      "created_at" : "2015-08-24T15:32:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134252693",
      "id" : 134252693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:32:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134252693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "That's why it is an I/O DoS.",
      "created_at" : "2015-08-24T15:35:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134253881",
      "id" : 134253881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:35:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134253881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "What @laanwj said...",
      "created_at" : "2015-08-24T15:37:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134254861",
      "id" : 134254861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:37:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134254861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "It's not an IO DoS. Please read the email I sent. There is no DoS - no service is denied, which is the essential element of a DoS attack.\r\n\r\nbitcoind spends much more time just deserializing the blocks than it does waiting for disk seeks. If it was an IOP DoS then CPU usage would be low. In fact it pegs the core.",
      "created_at" : "2015-08-24T15:40:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134255467",
      "id" : 134255467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:40:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134255467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "Even ignoring the DoS argument, the fact is that there are codebases that\ndo not support this feature...\n",
      "created_at" : "2015-08-24T15:40:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134255613",
      "id" : 134255613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:40:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134255613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "The exact impact depends on the speed of the disk and the speed of the CPU.\r\nIt is a fact that allowing a client to request blocks without sending them over the network opens up the possibility to generate lots of I/O. There is not even a way to optimize or index for it.\r\n\r\nObviously I agree that bloom filtering provides a useful service, that's why it deserves a service bit. Otherwise it should just be removed. But I don't see any of this as an argument to disallow disabling it. It is not *required* for participating in the network as a full node.",
      "created_at" : "2015-08-24T15:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134256595",
      "id" : 134256595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134256595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The attack doesn't let you generate lots of I/O because bitcoind is single threaded and spends most of its time digesting the data it just loaded. IO is simply not a bottleneck in this attack at all. I tested this both on my laptop and the bog-standard VPS I had for the last ~15 years.\r\n\r\nIs there any experimental data I can give you that would convince you this theory is wrong?\r\n\r\n@sipa Any protocol can have half-complete implementations. That doesn't mean every feature should become optional. Otherwise it'd become really hard to implement anything, you'd have to try and implement sane fallbacks for every case and eventually it just gets nuts. OpenGL had this problem, everything got added as an optional extension and it resulted in a horrible developer and user experience. Direct3D kicked their ass because it was willing to mandate functionality. Eventually the GL guys got a lot stricter about expanding the base functionality set.\r\n\r\nAnyway, this change clearly does not have consensus.",
      "created_at" : "2015-08-24T15:51:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134258033",
      "id" : 134258033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T15:51:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134258033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "> Otherwise it'd become really hard to implement anything, you'd have to try and implement sane fallbacks for every case and eventually it just gets nuts\r\n\r\nI thought the point of this was to be trust less; in which case,  we have to have sane fall backs.\r\n\r\nI'd rather ask nodes if they support a service, and if they do,  penalize them if they fail to provide that service.\r\nRight now,  I might penalize nodes that simply don't want to support one feature of the protocol.\r\n\r\n> Anyway, this change clearly does not have consensus.\r\n\r\nConsensus is only relevant on the `NODE_BLOOM` service bit protocol specifics.\r\nIt is not at all relevant on making this an optional feature to support.\r\n\r\n> Well the alternative (as currently used) is to ignore bloom commands without signaling it. Or disconnecting clients that request filtering functionality.\r\n\r\nThat sounds like a misconstrued intent,  and might be misinterpreted as a connection issue by the client.\r\nI think it would be beneficial to make this intent clear to avoid over-penalization of **honest** nodes.\r\n\r\n> Meanwhile, all the users benefit a lot from the abundant serving capacity we have on the production network. The last thing we need is a serving capacity crisis in future.\r\n\r\nWhich is why the default behaviour remains.  If users are configuring to disable SPV support en masse,  then perhaps that is the clearest measure of consensus that they don't want to support that feature.\r\n\r\n**edit:** made some additional comments",
      "created_at" : "2015-08-24T16:03:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134264910",
      "id" : 134264910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:13:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134264910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@mikehearn Ok, it doesn't strictly need to be single-threaded, though. That's an artifact of how things are handled in BitcoinCore's current implementation. Probably a cs_main lock that is held all the time. \r\nI think that's a good point, in a way: by artificially slowing down bloom queries the DoS can be avoided: don't read blocks from disk faster than you would if you had to send them over the network.\r\n\r\nBut no, this won't convince me that this change is not \"needed\". I'm looking at this from the other way around. Providing this service is not needed, it is something that can be offered altruistically. It should have been a service bit from the beginning.\r\n\r\nFull community consensus is important for changes to the consensus code, certainly for hard forks. Not for an optional behavior change in the P2P network code.\r\n",
      "created_at" : "2015-08-24T16:04:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134265215",
      "id" : 134265215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:04:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134265215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "For the record: btcd *does* in fact fully support bloom filtering. \r\n\r\nHowever, [there is a patch](https://github.com/btcsuite/btcd/pull/317) that was proposed earlier this year which introduces a CLI flag that if enabled, just sends `merkleblock` messages containing the entire, unfiltered block (lowering CPU utilization, but increasing bandwidth usage for the node). ",
      "created_at" : "2015-08-24T16:06:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134267718",
      "id" : 134267718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134267718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/998190?v=3",
         "events_url" : "https://api.github.com/users/Roasbeef/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Roasbeef/followers",
         "following_url" : "https://api.github.com/users/Roasbeef/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Roasbeef/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Roasbeef",
         "id" : 998190,
         "login" : "Roasbeef",
         "organizations_url" : "https://api.github.com/users/Roasbeef/orgs",
         "received_events_url" : "https://api.github.com/users/Roasbeef/received_events",
         "repos_url" : "https://api.github.com/users/Roasbeef/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Roasbeef/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Roasbeef/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Roasbeef"
      }
   },
   {
      "body" : "This discussion seems to have been derailed, so let me make this clear: Neither this pull nor the BIP has any stated intention of phasing out bloom filtering support in the protocol. As much as I'd love to, I 100% agree with @mikehearn here, that would break any ability of SPV clients to operate on the P2P network (either as a way to double-check centralized servers, or otherwise), and that is really not a good idea without a replacement in place. This pull/BIP DOES suggest we phase out REQUIRED bloom filtering support in the protocol - thereby fixing the peer selection of SPV clients in the face of btcd with some flags/many patched versions of Core/etc peers, providing a remedy for a potential DoS attack, etc.",
      "created_at" : "2015-08-24T16:13:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134273468",
      "id" : 134273468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:23:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134273468",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@jgarzik re: clients being updated: I'd love to hear a better way? Right now, as an SPV client expecting bloom filtering support, you can connect to a number of nodes, and they will disconnect you/not filter/etc. This allows us to keep exactly that same behavior (for nodes which do not disable the enabled-by-default flag), while giving SPV clients a better way to find peers after a relatively small update.",
      "created_at" : "2015-08-24T16:25:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134288085",
      "id" : 134288085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134288085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I want to clarify that we don't like not having a proper option to disable the feature in `btcd` not because we simply don't want to implement that part of the protocol (it is already done and has been for over a year), rather because it is a dangerous, low-cost attack vector and we want to provide our users with the **choice**.\r\n\r\nThis isn't some theoretical concern either.  Back when we implemented this feature in `btcd`, we realized just how dangerous it is due to the ease by which malicious actors can use it at almost zero cost to attack virtually every reachable node on the network for very little effort.  In order to test our concerns, we wrote a utility (in roughly less than an hour I might add, so it wasn't even difficult) that makes use of bloom filters to effectively make some nodes unusable and severely hamper others.  We then proceeded to setup a private simulation network and test the results.  In short, we confirmed our fears.  A single node can be used to wreak havoc on every reachable node on the network at almost zero cost the attacker.  This experience greatly differs from what Mike is claiming above about it not really affecting anything.  Also, the assumption about single threads disregards the fact that is a current implementation detail in Bitcoin Core that might change and btcd is already not single threaded.\r\n\r\nBefore anyone asks, no the code for the tool is not released and no we won't release it.  We care about Bitcoin and refuse to release things that can trivially be used to harm it.  Honestly, I was very hesitant to publicly post that we even created such a tool and performed internal testing as this community has historically liked to spread a lot of FUD, particularly about alternative full node implementations, and should a malicious attacker start to use this attack vector, the first thing people will probably do is point to this post and blame us as the culprits.\r\n\r\nIt is not my intention to offend anyone, but the fact is that the current implementation of bloom filters are a dangerous feature that is forced onto all implementations with no proper recourse in choosing not to support it.  As I mentioned above, currently the alternatives are a protocol break or simply not applying the filters while claiming to do so.  Neither of those options is better for the clients than having an optional bit which signals support.",
      "created_at" : "2015-08-24T16:30:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134290734",
      "id" : 134290734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134290734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2115102?v=3",
         "events_url" : "https://api.github.com/users/davecgh/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davecgh/followers",
         "following_url" : "https://api.github.com/users/davecgh/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davecgh/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davecgh",
         "id" : 2115102,
         "login" : "davecgh",
         "organizations_url" : "https://api.github.com/users/davecgh/orgs",
         "received_events_url" : "https://api.github.com/users/davecgh/received_events",
         "repos_url" : "https://api.github.com/users/davecgh/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davecgh/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davecgh/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davecgh"
      }
   },
   {
      "body" : "@davecgh Sadly, there are other such attack codes already public (dont know about their effectiveness, however), eg https://github.com/petertodd/bloom-io-attack",
      "created_at" : "2015-08-24T16:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134291659",
      "id" : 134291659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134291659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Dave, if you send me the code of your attack tool I'll compare it to mine and see if I can reproduce what you saw with Bitcoin Core/XT. \r\n\r\nRegardless, this entire approach is wrong. You don't fix denial of service attacks by denying service to your users! That's exactly what the attacker wants. You fix them with better resource scheduling, prioritisation and potentially bans, to ensure your real users are serviced first. \r\n\r\nBitcoin Core, for now at least, seems to survive even when being pelted with tons of getdatas for filtered blocks. Given the CPU profiles this is not surprising: it's doing much the same thing as it would just serving full blocks.\r\n\r\nA hypothetical future version of Core might be multi-threaded or optimised in other ways, moving the bottleneck around. But then a hypothetical future version of Core can also be smarter about how it handles DoS attacks.\r\n\r\n@TheBlueMatt Glad to hear you don't think phasing out Bloom filtering is realistic. In that case, given that apparently only libbitcoin doesn't implement it and that's not widely used at all, it seems this change is a form of makework. Nodes that don't want to implement the protocol can just not listen, or (at worst) just disconnect peers that want this service to make them go away, just as they can today.",
      "created_at" : "2015-08-24T16:38:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134293524",
      "id" : 134293524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:38:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134293524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "> @TheBlueMatt Nodes that don't want to implement the protocol can just not listen, or (at worst) just disconnect peers that want this service to make them go away, just as they can today.\r\n\r\nExcept,  that sucks.   I'm not going to repeat my comments,  but to avoid you just stepping over them,  here is a [link](https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134264910).",
      "created_at" : "2015-08-24T16:51:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134297627",
      "id" : 134297627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T16:51:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134297627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@mikehearn I was also referring to some Bitcoin Core nodes which are patched to not support bloom filtering, eg for some miner relaynodes where sleeping for one second responding to some bloom requests is a huge problem.",
      "created_at" : "2015-08-24T17:07:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134303007",
      "id" : 134303007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T17:07:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134303007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Those nodes should not listen at all. If someone finds a new kind of DoS attack that does actually cause DoS against the RPC interface, you'd be vulnerable. If your node is super-critical and very latency sensitive, just not listening solves all kinds of potential problems in one go.\r\n\r\nLook - I realise that just having a node bit is not the end of the world. But it also doesn't solve anything, as the stated rationale's for the BIP aren't valid, and the feature is not something that can actually be removed without breaking lots of wallets. If there are problems with it they need to be fixed, not used as an excuse to kill an important feature by the Blockstream employees who already admit they would love to do so.\r\n\r\n@dcousens I did read your comment. You say \"that sucks\" but the alternative also sucks for a different set of people.",
      "created_at" : "2015-08-24T17:22:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134306986",
      "id" : 134306986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T17:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134306986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "@mikehearn Those nodes absolutely should listen, in fact that is the reason they exist - to listen and get as many connections as possible out to the network.",
      "created_at" : "2015-08-24T17:26:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134307879",
      "id" : 134307879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T17:26:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134307879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Oh, I see where this goes - of course, a node can easily establish lots of outbound connections, but Core doesn't currently allow that to be configured, does it. So the only way to get lots of connections is to listen.\r\n\r\nBut that's a self-imposed constraint. There's a patch to fix it, it could be merged tomorrow. Then miner nodes could have lots of connections without listening.",
      "created_at" : "2015-08-24T17:36:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134311393",
      "id" : 134311393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T17:36:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134311393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "I think this line of discussion has gone rather tangential to the issue at hand. Sufficient to say, some people do, today, run listening nodes which, for perfectly logical reasons (not just \"I dont want to implement this\"), do not support filtered connections but nonetheless support the rest of the protocol.",
      "created_at" : "2015-08-24T17:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134313800",
      "id" : 134313800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T17:45:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134313800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I fully agree that there should be an option to turn this off.\r\n\r\nI run 3 full nodes, 1 on a production server and 2 on my personal machines. \r\n\r\nI find it absurd that i cannot turn off bloom filtering on my production server where bitcoind runs on the same machine as my webserver and DB. The site/service should not be disrupted because bitcoind is busy serving some guy on a SPV wallet who wants to buy coffee.\r\n\r\nI have no issues leaving Bloom filtering on my personal machines but i should have the ability to disable it if i need to.\r\n\r\nMoreover, pruned nodes will require this to indicate to SPV wallets that they are unable to service their requests anyway.\r\n\r\nI can see Mike's point with his OpenGL example. However i do not think providing bloom filtering or the servicing of SPV clients is remotely close to a mandatory protocol requirement, especially when taking into account that provision of this service is a matter of altruism.",
      "created_at" : "2015-08-24T18:03:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134319493",
      "id" : 134319493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T18:10:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134319493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5078381?v=3",
         "events_url" : "https://api.github.com/users/GamerSg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/GamerSg/followers",
         "following_url" : "https://api.github.com/users/GamerSg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/GamerSg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/GamerSg",
         "id" : 5078381,
         "login" : "GamerSg",
         "organizations_url" : "https://api.github.com/users/GamerSg/orgs",
         "received_events_url" : "https://api.github.com/users/GamerSg/received_events",
         "repos_url" : "https://api.github.com/users/GamerSg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/GamerSg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/GamerSg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/GamerSg"
      }
   },
   {
      "body" : "@GamerSg My tests don't seem to indicate any actual issue with filtering, but I do understand your concern. For a production critical node you want to minimise things that can go wrong and that's entirely reasonable.\r\n\r\nA better way to give you what you want is to let outbound connections be configured and then you can disable listening. That means you are protected against *any* funny protocol games unless you get really unlucky and connect to an attacking node. However it'd require merging this:\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/6014/files\r\n\r\nI think we'll probably add that to XT, as the arguments against it weren't really convincing to me or Gavin, and as we can see above, Matt is arguing that useful features for clients should be disabled because you \"must\" listen if you have a miner node. But that's only because the above patch wasn't merged. If it was, that logic would no longer apply.\r\n\r\nOnce that's fixed, I disagree there's any logical reason to disable this feature: I think we analysed all of the suggested reasons by now.\r\n\r\nBut hey, I guess you'll do this anyway, despite the objections of various wallet developers and other protocol experts. So go ahead and define a node bit for it. Handling nodes that don't support it will go onto wallet devs giant TODO lists, and get prioritised along with other things.",
      "created_at" : "2015-08-24T18:09:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134321470",
      "id" : 134321470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T18:09:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134321470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "@mikehearn No one is suggesting removing the functionality, or even disabling it by default. All that is being discussed is making it optional in a way that doesn't break users completely-- usually a pretty good principle of protocol design for resource intensive functionality. Sometimes the cost/complexity with making something optional isn't worth it-- but for resource intensive features, it often is.\r\n\r\nAs an aside, the claim that BIP37 filters provide any privacy in practice appears to have been soundly disproved  ( https://eprint.iacr.org/2014/763.pdf among others ) and it's unclear how much privacy can usefully provide even in theory.  There are alternative proposals for things which would be private, lack the transaction hiding vulnerability, be less resource intensive on the servers, etc.  which have been tendered.  Phasing out the feature wouldn't make sense now, but it may sometime in the future and so that shouldn't be precluded by making it mandatory in a way that is hard to correctly handle.\r\n\r\nRegarding #6014 it is a facility to _increase_ the number of outbound connections.  It's suggested application was improving mining pool relay, but measurements show it has the opposite effect. It also wastes capacity on external peers, and in the future will likely increase the odds of a node being banned by peers for being a mass connector.  I do not see why it's been implicated to address the fairly reasonable request of making an unneeded expensive to offer service optional-- disabling listening is sufficient if you'll really tolerate a nuclear workaround-- it doesn't also require making an ordinary node look like an abusive user monitoring mass-connecting one.  (Though I can see why some people would prefer that ordinary nodes and spy nodes would appear indistinguishable)",
      "created_at" : "2015-08-24T18:31:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134329986",
      "id" : 134329986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-24T18:54:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134329986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@mikehearn Your suggestion for #6014 is *typical* of the kind of shallow half-solutions you've been pursuing in your fork.\r\n\r\nSure, disabling listening will make it significantly harder to target you specifically.\r\nHowever it is no robust solution: if the goal is to attack the network then setting up 'trap' nodes that attack any connecting full node would work as well. Furthermore by combining different exploits (MiTM, BGP, ...) it may still be possible to tickle your node to connect to a specific node and attack it.\r\n\r\nYou are distracting from the problem at hand and proposing something that may have more dangerous consequences for the network. In this case you apparently prefer an option to cause obnoxious node behavior, which #6014 allows by exhausting connection slots, to *allowing* people to disable a known DoS vector on their own node with as little impact as possible.\r\n",
      "created_at" : "2015-08-25T00:15:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134422154",
      "id" : 134422154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T00:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134422154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@mikehearn you mentioned the following:\r\n\r\n> the alternative also sucks for a different set of people.\r\n\r\nBut you have failed to address why this is actually a problem? (or address any of my points for that matter).\r\n\r\nThe arguments you presented have been based around disruption to services and users,  yet,  this change **does not** change the protocols current availability in **any** way.\r\n\r\nYour argument for nodes who shouldn't be allowed to disable SPV are contradicted by your own instructions on doing it in a protocol-hostile way.\r\n\r\nRemember, this PR does not change the default behaviour of allowing `filter*` commands.\r\n\r\nIt just makes it **explicit** that the node **does** support them,  to avoid both DoS to *users* **AND** *nodes* a-like.\r\n\r\nTherefore,  I think this can only increase the overall quality of the network;  as it avoids pervasive behaviours of \"just disconnect users you don't like\",  which,  while valid,  is quite hostile to an open network.",
      "created_at" : "2015-08-25T00:58:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134431566",
      "id" : 134431566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T01:07:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134431566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@Roasbeef Sorry misread other btd commenter, so you support BIP37 but would prefer not to for denial of service reasons? That seems quite reasonable. \r\n\r\n> However, there is a patch that was proposed earlier this year which introduces a CLI flag that if enabled, just sends merkleblock messages containing the entire, unfiltered block (lowering CPU utilization, but increasing bandwidth usage for the node). \r\n\r\nKeep in mind that patch would have a severe effect on people using mobile wallets based on BIP37. If they expect to download 50MB of data and end up downloading 50GB over their 3G connection in some countries this could cost tens of thousands of dollars. As far as I can find no wallet has the ability to detect the overage of data usage and just keeps downloading and processing more blocks blindly. Absent NODE_BLOOM you would be best kicking them, ignoring their requests, or doing a soft denial of service against the client by returning fake-filtered blocks with no contents. \r\n\r\n> However it is no robust solution: if the goal is to attack the network then setting up 'trap' nodes that attack any connecting full node would work as well. Furthermore by combining different exploits (MiTM, BGP, ...) it may still be possible to tickle your node to connect to a specific node and attack it.\r\n\r\n@laanwj I'm slightly surprised to learn that BIP37 commands are respected for outgoing connections, that seems to be simultaneously a liability for non listening nodes and completely useless. It means the comment about not listening protects you from it is fairly poor. Chainalysis was quite successful in getting thousands of nodes to connect to them, it seems quite feasible to do that. Probably room for making that a 100+ DoS score, I don't see any reason for anybody to ever use it like that except for denial of service. ",
      "created_at" : "2015-08-25T03:01:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134460429",
      "id" : 134460429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T05:32:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134460429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "If everyone disables listening, how exactly do outbound connections work?",
      "created_at" : "2015-08-25T06:34:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134496279",
      "id" : 134496279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T06:34:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134496279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1369335?v=3",
         "events_url" : "https://api.github.com/users/evoskuil/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evoskuil/followers",
         "following_url" : "https://api.github.com/users/evoskuil/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evoskuil/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evoskuil",
         "id" : 1369335,
         "login" : "evoskuil",
         "organizations_url" : "https://api.github.com/users/evoskuil/orgs",
         "received_events_url" : "https://api.github.com/users/evoskuil/received_events",
         "repos_url" : "https://api.github.com/users/evoskuil/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evoskuil/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evoskuil/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evoskuil"
      }
   },
   {
      "body" : "> I think we'll probably add that to XT, as the arguments against it weren't really convincing to me or Gavin, and as we can see above, Matt is arguing that useful features for clients should be disabled because you \"must\" listen if you have a miner node. But that's only because the above patch wasn't merged. If it was, that logic would no longer apply.\r\n\r\n@mikehearn  That's ludicrous, you know that the network has a very small number of listening sockets, a large number which are being burnt by irresponsible services like bitnodes.io (6000+) and blockchain.info (2000+). People will mindlessly increase their number of outgoing connections to the point that we reach saturation and nobody will be able to join the network, that includes BIP37 SPV wallets. In total we have only 700k sockets, and every single non listening node already burns 8 of them without your patch, a maximum of 87k non listening nodes with no room for denial of service absorption or SPV clients. \r\n\r\n@evoskuil They don't, listening sockets are a precious resource. ",
      "created_at" : "2015-08-25T07:12:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134506534",
      "id" : 134506534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T07:19:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134506534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "Well, this is drifting off topic - but bitnodes.io doesn't hold connections open all the time by any means, which is why they appear so often in the logs. Most of the sockets that I can see being used on my nodes are by long term nodes, or transient SPV wallets used by real users.\r\n\r\nRegardless, I was responding to the argument \"you have to listen to get lots of connections which is why everything that might use resources should be optional\". It sounds like some of you disagree there's ever any reason to open lots of connections. Alright then - that's why I said there's no downside to just disabling listening if you have a node that you cannot risk any kind of disruption at all (i.e. not most nodes). Kills multiple possibly unknown birds with one stone.\r\n\r\nWRT optionality. If indeed the code is never disabled, then this whole change has very little impact either way. That's why I'm asking why bother? It adds complexity that is only wanted by a tiny number of node implementations (just libbitcoin and pseudo-node I think?), but every wallet author will have to deal with.\r\n\r\nIf the code is disabled, which frankly, I can easily see you guys arguing for in future given recent comments elsewhere (eg this \"spv-lite\" nonsense), then we just substitute one set of problems with another.\r\n\r\nSo it seems like a poor cost/benefit tradeoff, to me.\r\n\r\nBut anyway, whatever, you guys do what you like. ",
      "created_at" : "2015-08-25T11:18:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134557453",
      "id" : 134557453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T11:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134557453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "@laanwj By the way, you make it sound like hijacking BGP is something anyone can do from their bog-standard Windows box. All attacks have costs and all you can ever do is raise those costs. The cost difference between \"make a TCP connection and send a message\" and \"do a globally visible BGP hijack\" is ..... extremely large. I'll take it.",
      "created_at" : "2015-08-25T11:19:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134557666",
      "id" : 134557666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T11:19:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134557666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "> It adds complexity that is only wanted by a tiny number of node implementations (just libbitcoin and pseudo-node I think?), but every wallet author will have to deal with.\r\n\r\nSeeing as the majority of SPV wallets are backed by BitcoinJ, you can deal with them quite handily in a single change. The authors of btcd also commented that they would like it given their concerns of denial of service, which is completely valid. \r\n\r\n> My tests don't seem to indicate any actual issue with filtering, but I do understand your concern.\r\n\r\nWould you mind publishing your tests and tools to produce them? Your results don't mesh with other peoples concerns, it would be interesting to see how you came to the conclusion that BIP37 is harmless.",
      "created_at" : "2015-08-25T11:32:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134559901",
      "id" : 134559901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T11:41:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134559901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "I did publish my tests: see my email to the mailing list. If you mean publish the code then I won't do that for the same reasons Dave gave. Peter Todd *has* published a program which is rather similar (and I notice it pretends to be bitcoinj - that's piss poor behaviour right there).\r\n\r\nI have a snapshot of the CPU profiles saved to disk. I can send them to you if you like. They show about 90% of the time spent loading blocks off disk, mostly inside CTransaction::UpdateHash. The issue is that tx hashes are not cached on disk alongside blocks, so loading a block ends up spending a lot of time in SHA256. It looks to me like block loading and filtering could be optimised a lot.\r\n\r\n> Seeing as the majority of SPV wallets are backed by BitcoinJ, you can deal with them quite handily in a single change\r\n\r\nMaybe it will help if I spell out the cost/benefit analysis I'm using.\r\n\r\nThere are several SPV wallet engines out there that aren't bitcoinj. And because the DNS protocol doesn't support service bit queries, all the operators would have to update to exclude !NODE_BLOOM by default as well, or everyone would have to migrate to the Cartographer protocol which does support more advanced queries.\r\n\r\nAnd then bitcoinj is a library, so all the apps that use that library have to have new versions issued, including desktop wallets that may not even be maintained anymore but which people still use, or where users can reject upgrades.\r\n\r\nSo there's a fair chunk of work. Of course it's doable. That's the cost.\r\n\r\nIf we weigh it against the benefits, well, I think they're pretty small. DoS attacks have to be fixed no matter what, as users rely on it. A simple prioritisation scheme can easily mitigate issues if they were to arise, e.g. if you have 10 IPs with a pending filtered getdata request, pick the one that has so far requested the fewest blocks. DoS connections will rapidly get the highest counts and end up being serviced last. If your node uses work scheduling and thread priorities correctly it should not disrupt any other more important tasks and sure enough, in Core, it doesn't seem to. At least with the obvious/basic form of the attack.\r\n\r\nThat leaves \"I don't want to implement it because it's extra work\". But it's a few pages of code, even in C++. Compared to the rest of the protocol it's really not a big deal.\r\n\r\nSo: higher costs than benefits -> not a good idea.\r\n\r\nThat's the rationale. It's debatable. If you think there will be way more node implementations than wallet implementations perhaps the cost/benefit ratio looks different. But so far I think we see the opposite.\r\n\r\nHowever just saying \"everyone uses bitcoinj so there's no cost\" is not really true.",
      "created_at" : "2015-08-25T11:55:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134562922",
      "id" : 134562922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T11:55:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134562922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "@mikehearn So you wouldn't have a problem with a Bitcoin Core option that disabled BIP37 responses entirely without making any attempt to signal it to its peers? Is dropping them the best, faking filtering and returning blank blocks, or just ignoring those responses entirely? You're the one who is going to need to make sure BitcoinJ can handle those situations properly so your contributions here are invaluable. \r\n\r\n> I did publish my tests: see my email to the mailing list. If you mean publish the code then I won't do that for the same reasons Dave gave. \r\n\r\nI guess it's just a bit weird to have changes denied because someone did all this testing which shows everything is absolutely fine but can't actually show their process. It's not like exhaustion attacks against BIP37 are a new thing, the code is already out there. If it is as benign as you have said then there should be absolutely no concern of anybody using it to attack Bitcoin nodes, wouldn't you say?\r\n\r\n> Peter Todd has published a program which is rather similar \r\n\r\nPeter Todds implementation is actually pretty weak now and could do with an upgrade, as there are much larger blocks in the chain now from the spam attack you can do a much better job denial of service attacking clients if you hand pick blocks which have the highest impact on the node. \r\n\r\nIf your BIP101 goes through then we will inevitably have 8x bigger blocks with which to perform the attack, is there enough headroom in the \"not a problem\" levels of denial of service possible? Come January this will be a much more potent vector if you get your way. \r\n\r\n> (and I notice it pretends to be bitcoinj - that's piss poor behavior right there).\r\n\r\nWelcome to the real world, where BitcoinJ is the new Mozilla/5.0. ",
      "created_at" : "2015-08-25T12:34:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134571196",
      "id" : 134571196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T12:39:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134571196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "> @mikehearn So you wouldn't have a problem with a Bitcoin Core option that disabled BIP37 responses entirely without making any attempt to signal it to its peers? \r\n\r\nHow did you arrive at that conclusion? Of course I would. I'm arguing it shouldn't be an optional part of the protocol.\r\n\r\n> I guess it's just a bit weird to have changes denied because someone did all this testing which shows everything is absolutely fine but can't actually show their process.\r\n\r\nWould you like me to send you the code privately? It uses blocks which were selected to be above 800kb, though in fact most of them are max sized (1mb).\r\n\r\nI mean, I don't know what more you want. I gave the data I gathered from the attack I implemented. I have suggested algorithms that would resolve further issues were they to arise, for example because they slowed down syncing of legit mobile phones.\r\n\r\nYou're right that releasing the source probably wouldn't be a big deal, given that the attack doesn't really seem to work, but it can't help anyone either.\r\n\r\n> If your BIP101 goes through then we will inevitably have 8x bigger blocks with which to perform the attack, is there enough headroom in the \"not a problem\" levels of denial of service possible?\r\n\r\nAs blocks get bigger, Bloom filtering will get slower for all users. RPCs and other things run in a different thread to network traffic, so I guess it wouldn't make much difference there. They respond just fine even when the network thread is maxed out.\r\n\r\nBut the CPU profiles suggest that it should be possible to eliminate most of that 90% block loading time. Bloom filtering has scaled through two orders of magnitude since it was designed and launched, with tuning it can probably do another order of magnitude. That'd take us to 10mb blocks. 10kb to 10mb is not bad!\r\n\r\nBut at some point the whole search-everything-to-find-what-you-want approach won't work any more, *assuming* Bitcoin becomes more than ~20x as popular as it is today. Let's hope so, eh? In anticipation of this wondrous event, I have described a more scalable alternative scheme on the bitcoinj list at the bottom of this email:\r\n\r\nhttps://groups.google.com/forum/#!searchin/bitcoinj/bloom$20filtering/bitcoinj/Ys13qkTwcNg/9qxnhwnkeoIJ\r\n\r\nThere will be plenty of time to develop such things in future.\r\n\r\nNow I'm trying to figure out why you want this again. From the bug you filed here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/6578\r\n\r\nyou talked about miners and high reliability merchant nodes. We already beat this to death: disable listening and then you can avoid all kinds of issues. There have been plenty of DoS attacks that didn't involve Bloom filtering so it makes sense to take this approach. If you need max reliability, you should not be allowing random potential attackers to connect to your node.\r\n\r\n> Welcome to the real world, where BitcoinJ is the new Mozilla/5.0.\r\n\r\nWrong. Nothing changes behaviour based on the subver field. Peter did it just to make people angry at me instead of him, it has no other purpose. It's exactly what I've come to expect from a guy like that.",
      "created_at" : "2015-08-25T15:59:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134647822",
      "id" : 134647822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T15:59:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134647822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "> How did you arrive at that conclusion? Of course I would. I'm arguing it shouldn't be an optional part of the protocol.\r\n\r\nSo far your arguments have been complaining about protocol modification time, I don't see why you think all nodes should be serving BIP37. They already don't, and there's no requirement for inter full node communication to ever need it. \r\n\r\n> Now I'm trying to figure out why you want this again. From the bug you filed [ ] you talked about miners and high reliability merchant nodes. We already beat this to death: disable listening and then you can avoid all kinds of issues. There have been plenty of DoS attacks that didn't involve Bloom filtering so it makes sense to take this approach. If you need max reliability, you should not be allowing random potential attackers to connect to your node.\r\n\r\nBIP37 commands appear to be responded to even for outgoing connections so not listening is hardly a bulletproof defense, there's no strong guarantee your client won't connect to at least one sybil attacking node. \r\n\r\nAs far as I'm aware the only other denial of service attacks are going to be things like socket exhaustion, which don't disrupt my node at all. Most of all I want to lower my attack surface, and disabling a very intensive feature with known risk and no peering improvements for me is a no-brainer. It might not make me impervious, but it reduces risk. \r\n\r\n> Wrong. Nothing changes behaviour based on the subver field. Peter did it just to make people angry at me instead of him, it has no other purpose. It's exactly what I've come to expect from a guy like that.\r\n\r\nThat's quite a jump to make, I clone the Satoshi subversion for all my evil clients because otherwise I stick out in peoples access logs. What else are you going to call it, /MyFirstEvilClient:0.1/?\r\n\r\n> But at some point the whole search-everything-to-find-what-you-want approach won't work any more, assuming Bitcoin becomes more than ~20x as popular as it is today. Let's hope so, eh? In anticipation of this wondrous event, I have described a more scalable alternative scheme on the bitcoinj list at the bottom of this email:\r\n\r\nIt's not the subject of this pull request, but those assumptions are utterly ridiculous. People don't log bloom filter requests because of wiretapping laws? There's academic papers which are built on the foundation of collected information that was leaked by BIP37! Fixing address reuse provides almost no perceivable privacy in bitcoin due to [change addresses leaking incredible amounts of user information](http://walletexplorer.com/). BIP37 leaks are only useful to GCHQ or NSA!? Unbelievable.",
      "created_at" : "2015-08-25T16:34:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134664259",
      "id" : 134664259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T16:38:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134664259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "I'm starting to feel this debate will go nowhere.\r\n\r\n> So far your arguments have been complaining about protocol modification time\r\n\r\nI already said in my comment above, that I don't think this is a good idea for a whole bunch of reasons, one of which is that supporting it would take a big pile of time away from more important things. But that's not the *only* reason.\r\n\r\n> As far as I'm aware the only other denial of service attacks are going to be things like socket exhaustion\r\n\r\nThen you would be wrong.\r\n\r\nI have been on the bitcoin-security list for many years. DoS attacks are found routinely. Some of them have been able to e.g. ensure you never download a transaction.\r\n\r\nAssuming that the *only* DoS attacks that have been or ever will be are BIP 37 + connection exhaustion related is a very bad assumption indeed. I think every release of Core has had DoS fixes in them.\r\n\r\n> BIP37 commands appear to be responded to even for outgoing connections so not listening is hardly a bulletproof defense\r\n\r\nIt's not bulletproof but it raises the difficulty for an attacker substantially. If you find you got super unlucky and ended up connecting to a malicious node, OK, ban it and you won't connect to them again. Fixed.\r\n\r\nThe BF protocol might turn out to be useful for shrinking relay bandwidth in future, as a quickly deployable option. Full-match filters are already short-circuited in the code. So that's why they aren't ignored for outbound connections.\r\n\r\n> I clone the Satoshi subversion for all my evil clients because otherwise I stick out in peoples access logs. What else are you going to call it, /MyFirstEvilClient:0.1/?\r\n\r\nUm, yes. If your goal is to be a \"security researcher\" then obviously your attack programs are only meant to demonstrate an issue, not actually be designed for real attackers :(\r\n\r\n> It's not the subject of this pull request, but those assumptions are utterly ridiculous.\r\n\r\nWe're talking about scalability, not privacy. But yeah, I've yet to find anyone other than academic researchers who actually care about doing analysis on Bloom filters, though it's a safe bet intelligence agencies do too. Beyond that, the data appears to be fairly useless (read: no profit in it).\r\n\r\nBut I don't want to have that debate again right now. You were supposed to read the last section. I guess you have no thoughts on better scaling protocols.",
      "created_at" : "2015-08-25T16:45:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134666945",
      "id" : 134666945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T16:45:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134666945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "> I've yet to find anyone other than academic researchers who actually care about doing analysis on Bloom filters,\r\n\r\n\"Nobody cares\" is a pretty poor privacy defense, at the very minimum captured bloom filter leaks would be an extremely potent tool for blackmail. \r\n\r\n> I guess you have no thoughts on better scaling protocols.\r\n\r\n\"Scaling\" at the detriment of user privacy and node stability is insane. Rather than propose solutions which do this, it is also completely acceptable to say that you know what, this doesn't scale at all and there's no solutions I can come up with. If the only option is to run through a mine field, you don't present it as a sensible option. Many users are very focused on privacy, I'm not sure they would be as quick to rush to BIP37 if they really knew how leaky the system is. \r\n\r\n> I have been on the bitcoin-security list for many years. DoS attacks are found routinely. Some of them have been able to e.g. ensure you never download a transaction.\r\n\r\nI know, the contents of it was leaked a while back, would you like a copy? Some of the responses to issues are fairly discouraging against people bothering to report them in the future. Refusing to let nodes make their own choice to disable code which is a known DoS risk (2 years is hardly a secret) is a completely different matter than responsibly disclosed bugs, for which there's no feasible way for people to disable. ",
      "created_at" : "2015-08-25T17:00:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134670653",
      "id" : 134670653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T17:01:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134670653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "It seems useful to signal the supported services, and since `NODE_BLOOM` appears to be (willingly or unwillingly) not available at any time, I can see how this service bit provides value. The discussion whether it can optionally be disabled seems pretty unrelated though.\r\n\r\nI'm wondering, how it plays together with block pruning, and I'd assume if pruning is enabled, then `NODE_BLOOM` should be disabled, [similar to](https://github.com/TheBlueMatt/bitcoin/blob/2fec72d37dfb6e66648dd9dc843fdfba7b493180/src/init.cpp#L1466) `NODE_NETWORK`? *edit: thanks for the clarification.*",
      "created_at" : "2015-08-25T17:01:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134670906",
      "id" : 134670906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T17:05:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134670906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5836089?v=3",
         "events_url" : "https://api.github.com/users/dexX7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dexX7/followers",
         "following_url" : "https://api.github.com/users/dexX7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dexX7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dexX7",
         "id" : 5836089,
         "login" : "dexX7",
         "organizations_url" : "https://api.github.com/users/dexX7/orgs",
         "received_events_url" : "https://api.github.com/users/dexX7/received_events",
         "repos_url" : "https://api.github.com/users/dexX7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dexX7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dexX7"
      }
   },
   {
      "body" : "As far as I know there's no bad interaction between a pruned node and NODE_BLOOM, it could still serve BIP37 filters if it chose to and has the blocks available. New BIP37 SPV wallets won't attempt to download very old blocks so it's likely that they will be able to completely sync from even a heavily pruned node. ",
      "created_at" : "2015-08-25T17:04:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134671865",
      "id" : 134671865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T17:04:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134671865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13894884?v=3",
         "events_url" : "https://api.github.com/users/evGUzQIEQaL4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evGUzQIEQaL4/followers",
         "following_url" : "https://api.github.com/users/evGUzQIEQaL4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evGUzQIEQaL4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evGUzQIEQaL4",
         "id" : 13894884,
         "login" : "evGUzQIEQaL4",
         "organizations_url" : "https://api.github.com/users/evGUzQIEQaL4/orgs",
         "received_events_url" : "https://api.github.com/users/evGUzQIEQaL4/received_events",
         "repos_url" : "https://api.github.com/users/evGUzQIEQaL4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evGUzQIEQaL4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evGUzQIEQaL4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evGUzQIEQaL4"
      }
   },
   {
      "body" : "Given that pruning will likely become more granular, with nodes advertizing\nranges or other subsets of blocks they maintain, I think the meaning of\nNODE_BLOOM should be \"I support the filter* commands and will apply the\nfilters to reportee blocks and transactions, regardless of what blocks and\ntransactions I actually have available\", and not \"I serve all filtered\nblocks\".\n",
      "created_at" : "2015-08-25T17:06:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134672312",
      "id" : 134672312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T17:06:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134672312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa That was my intent with NODE_BLOOM as well in the original BIP I wrote.",
      "created_at" : "2015-08-25T17:20:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134676372",
      "id" : 134676372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T17:20:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134676372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Indeed, @sipa, that is what the current BIP text states.\n\nOn August 25, 2015 10:21:05 AM PDT, Peter Todd <notifications@github.com> wrote:\n>@sipa That was my intent with NODE_BLOOM as well in the original BIP I\n>wrote.\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134676372\n",
      "created_at" : "2015-08-25T17:23:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-134677198",
      "id" : 134677198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-08-25T17:23:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/134677198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38662023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38662023"
         }
      },
      "body" : "What is the point in ignoring filter* messages, instead of disconnecting the asking nodes? I don't see how that's any friendlier.\r\nI like @petertodd's solution as well to respond to old `clients< NO_BLOOM_VERSION ` for now then in a later release, add the disconnect.\r\nBut I don't see the point in this ignore behavior. It's worst of both worlds.\r\n",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T15:53:09Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38662023",
      "id" : 38662023,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38662023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663269"
         }
      },
      "body" : "FWIW I did test my original disconnect instantly approach, and (at the time) the wallets I tested it with handled it just fine.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T16:03:36Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663269",
      "id" : 38663269,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663418"
         }
      },
      "body" : "But yeah, a release that changes nothing for old version clients is 100% ok by me, and it should apply the filter to avoid bandwidth exhaustion. (which itself indicates stupid code in existing SPV wallets...)",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T16:05:07Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663418",
      "id" : 38663418,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663470"
         }
      },
      "body" : "ACK on \"if not willing to serve a request, disconnect\".\n",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T16:05:27Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663470",
      "id" : 38663470,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663633"
         }
      },
      "body" : "ACK on \"if not willing to serve a request, disconnect\" too.\r\n",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T16:06:56Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38663633",
      "id" : 38663633,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38663633",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38674971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38674971"
         }
      },
      "body" : "@laanwj I think you misread, that behavior was a bug and was unintentional. The current code does not ignore filter requests, ever, I agree that would be a bad idea. As the BIP has always suggested, it currently serves filtered connections to clients which propose an old version number, and disconnects clients with a new version number (with DoS prejudice). If you follow the two TODO comments (remove one line, add two lines), it will disconnect all nodes, only giving DoS prejudice to nodes which propose a new version number.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T17:51:08Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38674971",
      "id" : 38674971,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38674971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38676185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38676185"
         }
      },
      "body" : "@thebluematt Ah you're right, did't notice the `&& from->nVersion >= NO_BLOOM_VERSION` in the outer if.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-03T18:00:35Z",
      "diff_hunk" : "@@ -4590,6 +4590,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\"))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38676185",
      "id" : 38676185,
      "original_commit_id" : "2fec72d37dfb6e66648dd9dc843fdfba7b493180",
      "original_position" : 13,
      "path" : "src/main.cpp",
      "position" : 15,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38676185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38769694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38769694"
         }
      },
      "body" : "Please see the comment at the top of getinfo(). This call is going to be deprecated in the future and should not be extended anymore: https://github.com/bitcoin/bitcoin/blob/master/src/rpcmisc.cpp#L30\r\n\r\nThe right place to add \"services\" woud be  `getnetworkinfo`. But it already has 'localservices'.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-04T16:35:45Z",
      "diff_hunk" : "@@ -49,12 +49,13 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"{\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38769694",
      "id" : 38769694,
      "original_commit_id" : "1fcc433a65311b6c113fd9f29f4b0e40a746bc32",
      "original_position" : 1,
      "path" : "src/rpcmisc.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38769694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "ACK, apart from nit about `getinfo`.",
      "created_at" : "2015-09-04T16:36:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-137785529",
      "id" : 137785529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-09-04T16:36:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/137785529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38778089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38778089"
         }
      },
      "body" : "Lol, how did I miss that? I added localservices in 99ddc6cb706e825e54da244a10d4d6389fc5eaae\r\n\r\n@laanwj Thanks for catching that!",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2015-09-04T18:03:09Z",
      "diff_hunk" : "@@ -49,12 +49,13 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"{\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r38778089",
      "id" : 38778089,
      "original_commit_id" : "1fcc433a65311b6c113fd9f29f4b0e40a746bc32",
      "original_position" : 1,
      "path" : "src/rpcmisc.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2015-09-06T06:29:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/38778089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Rebased and removed the getinfo commit from @petertodd's original pull.",
      "created_at" : "2015-09-06T06:29:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-138046642",
      "id" : 138046642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-09-06T06:29:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138046642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK (again)",
      "created_at" : "2015-09-06T14:26:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-138089689",
      "id" : 138089689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-09-06T14:26:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138089689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "ACK (again)",
      "created_at" : "2015-09-07T17:13:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-138342082",
      "id" : 138342082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2015-09-07T17:13:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138342082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r76189162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76189162"
         }
      },
      "body" : "Not sure why Misbehaving is used here. I thought this function was for the protection of the node using it, but I can't see what harm there would be if the connection was kept open. I think that yes, disconnect makes sense if this is on an outgoing connection and using up one of the outgoing slots.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2016-08-25T06:53:40Z",
      "diff_hunk" : "@@ -4591,6 +4591,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\") &&\n+              //TODO: Remove this line after reasonable network upgrade\n+              pfrom->nVersion >= NO_BLOOM_VERSION)\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r76189162",
      "id" : 76189162,
      "original_commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : 12,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2016-08-25T06:54:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76189162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "As answered elsewhere, you need to disconnect, or the peer will waste time waiting for your responses later. It is polite to disconnect then, so they can find a better peer.",
      "created_at" : "2016-08-25T06:57:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#issuecomment-242297309",
      "id" : 242297309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6579",
      "updated_at" : "2016-08-25T06:57:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242297309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r78431483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78431483"
         }
      },
      "body" : "Why the jump from 70002 to 70011?",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2016-09-12T18:49:21Z",
      "diff_hunk" : "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70002;\n+static const int PROTOCOL_VERSION = 70011;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r78431483",
      "id" : 78431483,
      "original_commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "original_position" : 5,
      "path" : "src/version.h",
      "position" : 5,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2016-09-12T18:49:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78431483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r78485962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78485962"
         }
      },
      "body" : "Ages back, before this was merged, I'd written code that permitted turning off TX relaying during IBD (when relaying TXs is less useful to do most TXs being orphans), and then when we were getting close to the latest block, it would send a \"filterclear\" message to all connected nodes in order for them to start relaying TXs. If I was to be using this code today, I would be getting banned from every fairly recent Bitcoin Core node. Somehow seems a little extreme considering all I am effectively doing is offering to relay ALL TXs they sent to my node. Presumeably there isn't any DoS vector in getting a node to revert to behaviour that has existed since the very first version of the Satoshi client - and given this pull request was primarily for anti-DoS reasons, then could perhaps \"filterclear\" be excluded from the list of messages that cause the node to be banned? Or is thre a DoS vector in allowng only \"filterclear\" messages? Without allowing \"filterclear\" then I can see no other way to enable TX relaying at a point in time after the version message has been sent.",
      "commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "created_at" : "2016-09-13T02:01:29Z",
      "diff_hunk" : "@@ -4591,6 +4591,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\") &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6579#discussion_r78485962",
      "id" : 78485962,
      "original_commit_id" : "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "original_position" : 7,
      "path" : "src/main.cpp",
      "position" : 7,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6579",
      "updated_at" : "2016-09-13T02:02:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/78485962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   }
]

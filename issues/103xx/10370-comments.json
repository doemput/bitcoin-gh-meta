[
   {
      "body" : "The tests seem to be failing on some rebased code. \r\n\r\nBut as I said, I added this PR as a general discussion request. If there is an interest, I will clean this up.",
      "created_at" : "2017-05-09T12:28:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300147587",
      "id" : 300147587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T12:28:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300147587",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/104945?v=3",
         "events_url" : "https://api.github.com/users/runn1ng/events{/privacy}",
         "followers_url" : "https://api.github.com/users/runn1ng/followers",
         "following_url" : "https://api.github.com/users/runn1ng/following{/other_user}",
         "gists_url" : "https://api.github.com/users/runn1ng/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/runn1ng",
         "id" : 104945,
         "login" : "runn1ng",
         "organizations_url" : "https://api.github.com/users/runn1ng/orgs",
         "received_events_url" : "https://api.github.com/users/runn1ng/received_events",
         "repos_url" : "https://api.github.com/users/runn1ng/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/runn1ng/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/runn1ng"
      }
   },
   {
      "body" : "Having an independent address-index available somewhere may be handy and in general a great thing. Though, I'm not sure if we want to add this to the Bitcoin-Core repository. It already contains (too) much. Wallet, utilities, txindex, UI, p2p, consensus.\r\n\r\nI would prefer to keep the address-index (and all other sorts of indexes) in other repositories.\r\nSince Core offers ZMQ, creating an address-index via a python script/application (with it's independent leveldb dababase/layer) should not be very complex.\r\nThe python application could then handle the additional RPC commands.\r\n\r\nIf there are missing ZMQ features (I guess there is still an open PR for mempool ZMQ notifications), we should rather add those instead of the indexes.\r\n\r\nBut I'm open for other opinions.",
      "created_at" : "2017-05-09T13:35:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300165607",
      "id" : 300165607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T13:35:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300165607",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "I am not sure about the exact reasoning (cc @braydonf again), but older versions of Bitcore (< 3) had something similar - unpatched bitcoin core with additional indexes in node.js (see https://github.com/bitpay/bitcore-node/tree/v2.1.1/lib/services ) - but in Bitcore 3, they instead moved to including the address index in the bitcoin core itself. \r\n\r\nPerhaps it is easier to maintain one database over 2 separate databases? (I am guessing here)",
      "created_at" : "2017-05-09T13:58:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300172971",
      "id" : 300172971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T13:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300172971",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/104945?v=3",
         "events_url" : "https://api.github.com/users/runn1ng/events{/privacy}",
         "followers_url" : "https://api.github.com/users/runn1ng/followers",
         "following_url" : "https://api.github.com/users/runn1ng/following{/other_user}",
         "gists_url" : "https://api.github.com/users/runn1ng/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/runn1ng",
         "id" : 104945,
         "login" : "runn1ng",
         "organizations_url" : "https://api.github.com/users/runn1ng/orgs",
         "received_events_url" : "https://api.github.com/users/runn1ng/received_events",
         "repos_url" : "https://api.github.com/users/runn1ng/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/runn1ng/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/runn1ng"
      }
   },
   {
      "body" : "@runn1ng have you looked at https://github.com/bitcoinjs/indexd?\r\nIt has all the indexes listed above, and it works seamlessly with an unpatched bitcoin-core RPC.",
      "created_at" : "2017-05-09T14:04:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300174955",
      "id" : 300174955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T14:05:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300174955",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "@dcousens thanks for noticing me! I will definitely look at that.",
      "created_at" : "2017-05-09T14:10:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300176542",
      "id" : 300176542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T14:10:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300176542",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/104945?v=3",
         "events_url" : "https://api.github.com/users/runn1ng/events{/privacy}",
         "followers_url" : "https://api.github.com/users/runn1ng/followers",
         "following_url" : "https://api.github.com/users/runn1ng/following{/other_user}",
         "gists_url" : "https://api.github.com/users/runn1ng/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/runn1ng",
         "id" : 104945,
         "login" : "runn1ng",
         "organizations_url" : "https://api.github.com/users/runn1ng/orgs",
         "received_events_url" : "https://api.github.com/users/runn1ng/received_events",
         "repos_url" : "https://api.github.com/users/runn1ng/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/runn1ng/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/runn1ng"
      }
   },
   {
      "body" : "There was a significant performance gain by building the indexes at the same time as the txindex, since each block only needed to be read and deserialized once.",
      "created_at" : "2017-05-09T14:13:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300177682",
      "id" : 300177682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T14:13:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300177682",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/544777?v=3",
         "events_url" : "https://api.github.com/users/braydonf/events{/privacy}",
         "followers_url" : "https://api.github.com/users/braydonf/followers",
         "following_url" : "https://api.github.com/users/braydonf/following{/other_user}",
         "gists_url" : "https://api.github.com/users/braydonf/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/braydonf",
         "id" : 544777,
         "login" : "braydonf",
         "organizations_url" : "https://api.github.com/users/braydonf/orgs",
         "received_events_url" : "https://api.github.com/users/braydonf/received_events",
         "repos_url" : "https://api.github.com/users/braydonf/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/braydonf/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/braydonf/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/braydonf"
      }
   },
   {
      "body" : "See-also #9806 (and #8660 and #5048). I think the jury might still be out on whether we want more indexes supported in Bitcoin Core.",
      "created_at" : "2017-05-09T14:19:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300179649",
      "id" : 300179649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T14:19:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300179649",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@braydonf at ~400ms per 1MB block... that really shouldn't be an issue - and the above is _Javascript_.\r\nIf you're concern is related to the initial import,  tools like https://github.com/dcousens/fast-dat-parser can dump the leveldb as fast as it can push IO.\r\n\r\nIMHO I don't think `bitcoind` should support any further indexes...",
      "created_at" : "2017-05-09T14:20:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300179992",
      "id" : 300179992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-09T14:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300179992",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "In the past, we had implemented indexes in several ways, as mentioned, and found this to be the best option. I do think additional indexes, if needed, should be implemented within a full/spv node, the closeness reduces the overall complexity and duplication of disk and CPU usage. It otherwise ends up being what is effectively two nodes next to each other. The point that I realized this was when it was necessary to keep what is effectively another UTXO set for determining the address for inputs.\r\n\r\nAs far as the utility of the indexes, and if they should be included in Bitcoin Core: I'd like to see the ability for an address index to be pruned *(not included in this current implementation)*. An address index of the UTXO set and memory pool only, for example, may enable a pruned Bitcoin QT wallet to not need to rescan *(and download)* all blocks when adding new keys to a wallet. This could support many different hardware/offline wallets, with addresses and keys that the full node may not be aware. And in a way that doesn't depend on remote servers. This could also be useful for accepting bitcoin payments in an environment that the keys may change frequently e.g. on a web server, while also reducing the setup costs.\r\n\r\nAs far as specific implementation details here, there may be some work here still: The indexes may ideally be implemented with a B/B+ tree in C (e.g. LMDB, WiredTiger, and etc.), the LSM tree of LevelDB is useful for smaller write heavy sets of data that are not queried often. The write amplification that happens in block compaction, especially when the database reaches 100+ GB can become problematic. This implementation of indexes is impacted by this issue, however it's mostly revolved by running on SSD and could be helped by running manual compaction *(also not implemented here)*. That same issue may eventually affect the UTXO database as it grows in size.",
      "created_at" : "2017-05-10T04:55:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300373601",
      "id" : 300373601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-10T04:55:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300373601",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/544777?v=3",
         "events_url" : "https://api.github.com/users/braydonf/events{/privacy}",
         "followers_url" : "https://api.github.com/users/braydonf/followers",
         "following_url" : "https://api.github.com/users/braydonf/following{/other_user}",
         "gists_url" : "https://api.github.com/users/braydonf/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/braydonf",
         "id" : 544777,
         "login" : "braydonf",
         "organizations_url" : "https://api.github.com/users/braydonf/orgs",
         "received_events_url" : "https://api.github.com/users/braydonf/received_events",
         "repos_url" : "https://api.github.com/users/braydonf/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/braydonf/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/braydonf/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/braydonf"
      }
   },
   {
      "body" : "> the closeness reduces the overall complexity and duplication of disk and CPU usage\r\n\r\nIf you are using a pruned or SPV node,  you really shouldn't be suffering from disk duplication problems.\r\nThe CPU usage _for an index_ is near completely negligible compared to your IO.\r\nYou don't need to verify anything if you trust your data source (your node).\r\n\r\n>  An address index ... [would be optimal] when adding new keys to a wallet\r\n\r\nPersonally, I would only concept ACK this if it was completely contained to `src/wallet`.\r\n\r\nAs far as I'm concerned,  `bitcoind` is my source of truth.\r\nAny \"indexes\" are purely convenient views of that truth - and therefore as a matter of single responsibility - they should be isolated.\r\n\r\nI don't see how there could be any significant IO inequal to that as if it was inlined within `bitcoind` - short of your local pipe and RPC overhead - which, as far as I have measured - is completely negligible compared to the disk IO.\r\nIf any effort was to be made in the name of \"performance\",  it should be focused on a high performance binary pipe,  not just moving cruft into `bitcoind` for the sake of convenience. \r\n\r\n> ...reducing the setup costs...\r\n\r\nI agree that the lack of convenient setup/configuration for these services is not great,  but that doesn't mean we have to merge it all into a single binary.\r\n\r\n> The write amplification that happens in block compaction, especially when the database reaches 100+ GB can become problematic\r\n\r\nI don't see how an inline index would alleviate this. ",
      "created_at" : "2017-05-10T05:25:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300377458",
      "id" : 300377458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-10T11:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300377458",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "Allowing Bitcore-Wallet-Service to run on top of a vanilla bitcoind + bitcore (no patched binaries needed during install) would be extremely useful.",
      "created_at" : "2017-05-10T10:19:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-300439772",
      "id" : 300439772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-10T10:19:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300439772",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/11246316?v=3",
         "events_url" : "https://api.github.com/users/junderw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/junderw/followers",
         "following_url" : "https://api.github.com/users/junderw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/junderw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/junderw",
         "id" : 11246316,
         "login" : "junderw",
         "organizations_url" : "https://api.github.com/users/junderw/orgs",
         "received_events_url" : "https://api.github.com/users/junderw/received_events",
         "repos_url" : "https://api.github.com/users/junderw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/junderw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/junderw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/junderw"
      }
   },
   {
      "body" : "I just want to say that a UTXO database index in bitcoin core is a very good idea in my opinion.\r\n\r\nKeep in mind also there is BIP131, which requires a index on the UTXO set to be implemented. If BIP131 gets implemented, the UTXO database no longer becomes optional (as it will be required to validate new transactions), but since the UTXO index is relatively tiny compared to the `txindex` I don't think its a problem.\r\n\r\nIn the future, I see the wallet features and UI elements removed from bitcoin core, and backend stuff like indexes taking it's place.My opinion is we should go hog wild and add as many (optional) indexes as conceivable.",
      "created_at" : "2017-05-16T12:41:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-301769749",
      "id" : 301769749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-05-16T12:41:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301769749",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/132586?v=3",
         "events_url" : "https://api.github.com/users/priestc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/priestc/followers",
         "following_url" : "https://api.github.com/users/priestc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/priestc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/priestc",
         "id" : 132586,
         "login" : "priestc",
         "organizations_url" : "https://api.github.com/users/priestc/orgs",
         "received_events_url" : "https://api.github.com/users/priestc/received_events",
         "repos_url" : "https://api.github.com/users/priestc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/priestc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/priestc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/priestc"
      }
   },
   {
      "body" : "As said in #9806 I'm not opposed to an additional optional index similar to -txindex. For example \"-scriptpubkeyindex\".\r\nBut instead I think it's more generic to use the scriptPubKey directly as key instead of addresses.\r\nThe translation from address to script is simple for p2pkh (and other script templates) can be done externally or maybe internally too as an additional rpc call.\r\n\r\nThe minimum necessary for an explorer I think would be -scriptpubkeyindex plus a call searchscriptpukey that takes the hex of a scriptpubkey and returns a list of outpoints (perhaps including the block hash, see #10275 ).\r\nFrom there, one can call getrawtransaction and/or gettxout can be used. But this is just the minimal design, not the optimal or more convenient. At the same time, I think the list currently in the OP is too much.\r\n\r\nBut for the block explorer use case I assume no pruning and serving spent transactions too, which will result in a big index and code that I'm sure some people won't be very happy to help maintain. Even if that's the case, I'm interested in this use case and I may be interested in rebasing the same resulting branch from major version to major version.\r\nI want to note that \"I run my own explorer locally for privacy reasons\" is a perfectly valid use case, not only for this index, but also for non pruned full nodes in general (and we shouldn't disregard potential reasons for users to want to run archival nodes, beyond \"helping the network\").\r\n\r\nStarting with a branch that only indexes the unspent scriptpupkeys as @braydonf suggests may be much more acceptable (and whether or not the explorer part is acceptable, the diff to maintain will be much smaller if that gets accepted). Not only because the index would be much smaller and because it doesn't conflict with pruning in any way, but also because the use case of removing the need for rescan is much more compelling.\r\n\r\n> If you are using a pruned or SPV node, you really shouldn't be suffering from disk duplication problems.\r\n\r\nSure, the explorer and norescan are different use cases.\r\nEven non pruned full nodes could benefit from the latter, for example, allowing to import private keys leveraging the index, maybe with an additional norescan option that allows you to only look in the scriptpubkeyUtxoIndex and completely avoid a rescan to get info about already spent outputs that key once controlled.\r\n\r\n> You don't need to verify anything if you trust your data source (your node).\r\n\r\nPruned or not, you don't need to trust your data source if you are already a full node. I think the SPV use case is just adding confusion, the utxo-only index can be very useful without taking SPV nodes into account at all.\r\n\r\n> I agree that the lack of convenient setup/configuration for these services is not great, but that doesn't mean we have to merge it all into a single binary.\r\n\r\nAbsolutely, adding the index doesn't mean we should also add every potential call that would make use of it. Even if that would be more convenient, marginal use cases can perhaps go through less direct routes like implementing some things on their side or calling the rpc twice instead of once to get some data they want, which is may not be a great penalty in performance depending on the case.\r\n",
      "created_at" : "2017-07-18T23:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-316225670",
      "id" : 316225670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-07-18T23:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316225670",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "I am closing this PR. We are running bitcoin with these custom patches on our servers and while it is working so far, it is not very maintainable long-term and the leveldb performance is subpar for the addressindex.\r\n\r\nExternal index is the only solution.",
      "created_at" : "2017-08-17T22:26:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10370#issuecomment-323211049",
      "id" : 323211049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10370",
      "updated_at" : "2017-08-17T22:26:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323211049",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/104945?v=4",
         "events_url" : "https://api.github.com/users/runn1ng/events{/privacy}",
         "followers_url" : "https://api.github.com/users/runn1ng/followers",
         "following_url" : "https://api.github.com/users/runn1ng/following{/other_user}",
         "gists_url" : "https://api.github.com/users/runn1ng/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/runn1ng",
         "id" : 104945,
         "login" : "runn1ng",
         "organizations_url" : "https://api.github.com/users/runn1ng/orgs",
         "received_events_url" : "https://api.github.com/users/runn1ng/received_events",
         "repos_url" : "https://api.github.com/users/runn1ng/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/runn1ng/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/runn1ng"
      }
   }
]

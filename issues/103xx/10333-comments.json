[
   {
      "body" : "Note: This is a \"regression\" due to `MIN_FINAL_CHANGE` being taken out of the calculation: https://github.com/bitcoin/bitcoin/pull/10333/files#diff-b2bb174788c7409b671c46ccc86034bdL2647\r\n\r\nA bit confusing since the change is dropped when `IsDust` as before... this would be a good time to sync this behavior.",
      "created_at" : "2017-05-08T17:33:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-299935053",
      "id" : 299935053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-05-08T17:33:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299935053",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "rebased, and included logic to attempt change larger than `MIN_FINAL_CHANGE` when possible. In the end some cases cannot be avoided, and just-over-dust change may be kept.",
      "created_at" : "2017-05-12T14:18:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-301089430",
      "id" : 301089430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-05-12T14:18:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/301089430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "suggested new strategy: instead of \"trying one more time\" when change is in middle-ground, cache the current transaction, increase the amount you're attempting to send, and try again. If you then run out of available coins, you simply return the cached version of the transaction.",
      "created_at" : "2017-06-21T13:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-310086654",
      "id" : 310086654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-06-21T13:57:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310086654",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "Implemented the previously mentioned idea. Instead of doing \"one more try\" to get acceptable change, it caches the successful yet small change transaction and slowly grows the amount of coins it grabs until it creates an acceptable transaction, given reasonable chosen inputs this will result in a transaction with change larger than MIN_FINAL_CHANGE. If it fails and runs out of coins it returns the cached transaction.",
      "created_at" : "2017-06-23T04:48:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-310570245",
      "id" : 310570245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-06-23T04:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310570245",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123827636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123827636"
         }
      },
      "body" : "`have_cached_txn` should probably be set to true here as it is never actually set anywhere",
      "commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "created_at" : "2017-06-23T19:28:07Z",
      "diff_hunk" : "@@ -2709,41 +2712,54 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                     return false;\n                 }\n \n-                if (nFeeRet >= nFeeNeeded) {\n-                    // Reduce fee to only the needed amount if we have change\n-                    // output to increase.  This prevents potential overpayment\n-                    // in fees if the coins selected to meet nFeeNeeded result\n-                    // in a transaction that requires less fee than the prior\n-                    // iteration.\n-                    // TODO: The case where nSubtractFeeFromAmount > 0 remains\n-                    // to be addressed because it requires returning the fee to\n-                    // the payees and not the change output.\n-                    // TODO: The case where there is no change output remains\n-                    // to be addressed so we avoid creating too small an output.\n-                    if (nFeeRet > nFeeNeeded && nChangePosInOut != -1 && nSubtractFeeFromAmount == 0) {\n-                        CAmount extraFeePaid = nFeeRet - nFeeNeeded;\n-                        std::vector<CTxOut>::iterator change_position = txNew.vout.begin()+nChangePosInOut;\n-                        change_position->nValue += extraFeePaid;\n-                        nFeeRet -= extraFeePaid;\n+                // Modify fee to the needed amount from the change\n+                // output, or recipients in the case of subtractFeeFromAmount.\n+                // This prevents potential overpayment in fees if\n+                // the coins selected to meet nFeeNeeded result\n+                // in a transaction that requires less fee than the prior\n+                // iteration.\n+                CAmount excessFee = nFeeRet - nFeeNeeded;\n+\n+                if (nSubtractFeeFromAmount == 0) {\n+                    // Take fee excess\n+                    txNew.vout[nChangePosInOut].nValue += excessFee;;\n+                    nFeeRet -= excessFee;\n+\n+                    // Negative change value means include more fee and try again.\n+                    if (txNew.vout[nChangePosInOut].nValue < 0) {\n+                        reservekey.ReturnKey();\n+                        nFeeRet = nFeeNeeded;\n+                        continue;\n                     }\n-                    break; // Done, enough fee included.\n+                    // Drop change if dust\n+                    // TODO replace with economical change calc\n+                    else if (IsDust(txNew.vout[nChangePosInOut], ::dustRelayFee)) {\n+                        nFeeRet += txNew.vout[nChangePosInOut].nValue;\n+                        txNew.vout.erase(txNew.vout.begin() + nChangePosInOut);\n+                        nChangePosInOut = -1;\n+                        reservekey.ReturnKey();\n+                    // If larger than dust, but still small, increase fee target and try again\n+                    } else if (txNew.vout[nChangePosInOut].nValue < MIN_FINAL_CHANGE) {\n+                        // Save this transaction, use if we cannot get large-enough change\n+                        if (!have_cached_txn) {\n+                            tx_cached = txNew;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123827636",
      "id" : 123827636,
      "original_commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "original_position" : 189,
      "path" : "src/wallet/wallet.cpp",
      "position" : 189,
      "pull_request_review_id" : 46072001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333",
      "updated_at" : "2017-06-23T19:30:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123827636",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123827711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123827711"
         }
      },
      "body" : "Shouldn't you assign `have_cached_txn` to false here as it is not assiged before it is used down below?",
      "commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "created_at" : "2017-06-23T19:28:35Z",
      "diff_hunk" : "@@ -2501,6 +2501,13 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n     wtxNew.fTimeReceivedIsTxTime = true;\n     wtxNew.BindWallet(this);\n     CMutableTransaction txNew;\n+    // This transaction is used to track the best transaction that has change\n+    // falling between uneconomical dust and MIN_FINAL_CHANGE. If the wallet\n+    // runs out of funds trying to find a transaction that has pruneable\n+    // change dust or change larger than MIN_FINAL_CHANGE, it will\n+    // return this transaction.\n+    CMutableTransaction tx_cached;\n+    bool have_cached_txn;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123827711",
      "id" : 123827711,
      "original_commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "original_position" : 10,
      "path" : "src/wallet/wallet.cpp",
      "position" : 10,
      "pull_request_review_id" : 46072001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333",
      "updated_at" : "2017-06-23T19:30:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123827711",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123828021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123828021"
         }
      },
      "body" : "I don't see how this case matters. Wouldn't `nChangePosInOut` never be set to an out of range index?",
      "commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "created_at" : "2017-06-23T19:30:38Z",
      "diff_hunk" : "@@ -2592,73 +2599,69 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                 setCoins.clear();\n                 if (!SelectCoins(vAvailableCoins, nValueToSelect, setCoins, nValueIn, coinControl))\n                 {\n+                    // We previously succeeded with smaller change we can keep\n+                    if (have_cached_txn) {\n+                        txNew = tx_cached;\n+                        break;\n+                    }\n                     strFailReason = _(\"Insufficient funds\");\n                     return false;\n                 }\n \n                 const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    // TODO: pass in scriptChange instead of reservekey so\n-                    // change transaction isn't always pay-to-bitcoin-address\n-                    CScript scriptChange;\n+                assert(nChange >= 0);\n \n-                    // coin control: send change to custom address\n-                    if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange))\n-                        scriptChange = GetScriptForDestination(coinControl->destChange);\n+                // Fill a vout to ourself, may be removed later on final fee adjustment\n+                // TODO: pass in scriptChange instead of reservekey so\n+                // change transaction isn't always pay-to-bitcoin-address\n+                CScript scriptChange;\n \n-                    // no coin control: send change to newly generated address\n-                    else\n+                // coin control: send change to custom address\n+                if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange)) {\n+                    scriptChange = GetScriptForDestination(coinControl->destChange);\n+                }\n+                // no coin control: send change to newly generated address\n+                else\n+                {\n+                    // Note: We use a new key here to keep it from being obvious which side is the change.\n+                    //  The drawback is that by not reusing a previous key, the change may be lost if a\n+                    //  backup is restored, if the backup doesn't have the new private key for the change.\n+                    //  If we reused the old key, it would be possible to add code to look for and\n+                    //  rediscover unknown transactions that were written with keys of ours to recover\n+                    //  post-backup change.\n+\n+                    // Reserve a new key pair from key pool\n+                    CPubKey vchPubKey;\n+                    bool ret;\n+                    ret = reservekey.GetReservedKey(vchPubKey, true);\n+                    if (!ret)\n                     {\n-                        // Note: We use a new key here to keep it from being obvious which side is the change.\n-                        //  The drawback is that by not reusing a previous key, the change may be lost if a\n-                        //  backup is restored, if the backup doesn't have the new private key for the change.\n-                        //  If we reused the old key, it would be possible to add code to look for and\n-                        //  rediscover unknown transactions that were written with keys of ours to recover\n-                        //  post-backup change.\n-\n-                        // Reserve a new key pair from key pool\n-                        CPubKey vchPubKey;\n-                        bool ret;\n-                        ret = reservekey.GetReservedKey(vchPubKey, true);\n-                        if (!ret)\n-                        {\n-                            strFailReason = _(\"Keypool ran out, please call keypoolrefill first\");\n-                            return false;\n-                        }\n-\n-                        scriptChange = GetScriptForDestination(vchPubKey.GetID());\n+                        strFailReason = _(\"Keypool ran out, please call keypoolrefill first\");\n+                        return false;\n                     }\n \n-                    CTxOut newTxOut(nChange, scriptChange);\n+                    scriptChange = GetScriptForDestination(vchPubKey.GetID());\n+                }\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    if (IsDust(newTxOut, ::dustRelayFee))\n-                    {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n-                        reservekey.ReturnKey();\n-                    }\n-                    else\n-                    {\n-                        if (nChangePosInOut == -1)\n-                        {\n-                            // Insert change txn at random position:\n-                            nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n-                        }\n-                        else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n-                        {\n-                            strFailReason = _(\"Change index out of range\");\n-                            return false;\n-                        }\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                        std::vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosInOut;\n-                        txNew.vout.insert(position, newTxOut);\n-                    }\n+                // TODO move this section near fee-adjustment area.\n+                if (nChangePosInOut == -1)\n+                {\n+                    // Insert change txn at random position:\n+                    nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n+                }\n+                else if ((unsigned int)nChangePosInOut > txNew.vout.size())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123828021",
      "id" : 123828021,
      "original_commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "original_position" : 123,
      "path" : "src/wallet/wallet.cpp",
      "position" : 123,
      "pull_request_review_id" : 46072001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333",
      "updated_at" : "2017-06-23T19:30:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123828021",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3782274?v=3",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123828993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123828993"
         }
      },
      "body" : "Caller may request a too-high change position. This is also a simple code move, not going to change this logic.",
      "commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "created_at" : "2017-06-23T19:36:20Z",
      "diff_hunk" : "@@ -2592,73 +2599,69 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                 setCoins.clear();\n                 if (!SelectCoins(vAvailableCoins, nValueToSelect, setCoins, nValueIn, coinControl))\n                 {\n+                    // We previously succeeded with smaller change we can keep\n+                    if (have_cached_txn) {\n+                        txNew = tx_cached;\n+                        break;\n+                    }\n                     strFailReason = _(\"Insufficient funds\");\n                     return false;\n                 }\n \n                 const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    // TODO: pass in scriptChange instead of reservekey so\n-                    // change transaction isn't always pay-to-bitcoin-address\n-                    CScript scriptChange;\n+                assert(nChange >= 0);\n \n-                    // coin control: send change to custom address\n-                    if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange))\n-                        scriptChange = GetScriptForDestination(coinControl->destChange);\n+                // Fill a vout to ourself, may be removed later on final fee adjustment\n+                // TODO: pass in scriptChange instead of reservekey so\n+                // change transaction isn't always pay-to-bitcoin-address\n+                CScript scriptChange;\n \n-                    // no coin control: send change to newly generated address\n-                    else\n+                // coin control: send change to custom address\n+                if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange)) {\n+                    scriptChange = GetScriptForDestination(coinControl->destChange);\n+                }\n+                // no coin control: send change to newly generated address\n+                else\n+                {\n+                    // Note: We use a new key here to keep it from being obvious which side is the change.\n+                    //  The drawback is that by not reusing a previous key, the change may be lost if a\n+                    //  backup is restored, if the backup doesn't have the new private key for the change.\n+                    //  If we reused the old key, it would be possible to add code to look for and\n+                    //  rediscover unknown transactions that were written with keys of ours to recover\n+                    //  post-backup change.\n+\n+                    // Reserve a new key pair from key pool\n+                    CPubKey vchPubKey;\n+                    bool ret;\n+                    ret = reservekey.GetReservedKey(vchPubKey, true);\n+                    if (!ret)\n                     {\n-                        // Note: We use a new key here to keep it from being obvious which side is the change.\n-                        //  The drawback is that by not reusing a previous key, the change may be lost if a\n-                        //  backup is restored, if the backup doesn't have the new private key for the change.\n-                        //  If we reused the old key, it would be possible to add code to look for and\n-                        //  rediscover unknown transactions that were written with keys of ours to recover\n-                        //  post-backup change.\n-\n-                        // Reserve a new key pair from key pool\n-                        CPubKey vchPubKey;\n-                        bool ret;\n-                        ret = reservekey.GetReservedKey(vchPubKey, true);\n-                        if (!ret)\n-                        {\n-                            strFailReason = _(\"Keypool ran out, please call keypoolrefill first\");\n-                            return false;\n-                        }\n-\n-                        scriptChange = GetScriptForDestination(vchPubKey.GetID());\n+                        strFailReason = _(\"Keypool ran out, please call keypoolrefill first\");\n+                        return false;\n                     }\n \n-                    CTxOut newTxOut(nChange, scriptChange);\n+                    scriptChange = GetScriptForDestination(vchPubKey.GetID());\n+                }\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    if (IsDust(newTxOut, ::dustRelayFee))\n-                    {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n-                        reservekey.ReturnKey();\n-                    }\n-                    else\n-                    {\n-                        if (nChangePosInOut == -1)\n-                        {\n-                            // Insert change txn at random position:\n-                            nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n-                        }\n-                        else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n-                        {\n-                            strFailReason = _(\"Change index out of range\");\n-                            return false;\n-                        }\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                        std::vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosInOut;\n-                        txNew.vout.insert(position, newTxOut);\n-                    }\n+                // TODO move this section near fee-adjustment area.\n+                if (nChangePosInOut == -1)\n+                {\n+                    // Insert change txn at random position:\n+                    nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n+                }\n+                else if ((unsigned int)nChangePosInOut > txNew.vout.size())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123828993",
      "id" : 123828993,
      "original_commit_id" : "405cf1032c71eedeaaa890b65c7bf8b9f9489735",
      "original_position" : 123,
      "path" : "src/wallet/wallet.cpp",
      "position" : 123,
      "pull_request_review_id" : 46073554,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10333",
      "updated_at" : "2017-06-23T19:36:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123828993",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "fixed issues, thanks @achow101 ",
      "created_at" : "2017-06-24T13:15:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-310837809",
      "id" : 310837809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-06-24T13:15:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310837809",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "I think #10712 is preferable to this PR",
      "created_at" : "2017-07-05T15:25:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-313137292",
      "id" : 313137292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-07-05T15:25:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313137292",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "closing in favor of #10712",
      "created_at" : "2017-07-05T15:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-313139092",
      "id" : 313139092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10333",
      "updated_at" : "2017-07-05T15:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313139092",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]

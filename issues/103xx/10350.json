{
   "assignee" : null,
   "assignees" : [],
   "body" : "After much deliberation and a few attempts at other approaches to provide a workable near-term sync mechanism for thin clients that require witness data, I decided to just go with the simplest short-term path with the least amount of complications expecting BIP37 to be completely replaced eventually - hopefully in the not-very-distant future.\r\n\r\nI believe the approach of filtering blocks on the client is a simpler and superior approach for most use cases than requiring the server to perform the filtering. I believe @Roasbeef has something written up for this that he's using for lnd. I would love to see that approach used in Bitcoin Core as well.\r\n\r\nBut given the good likelihood of nearterm SegWit activation on the Bitcoin mainnet, I believe this solution will suffice for all essential use cases of BIP37 for now - and I don't believe it's worth the effort to try to make more complex additions to BIP37 since it will eventually be entirely replaced.\r\n\r\nPeers can request MSG_FILTERED_WITNESS_BLOCK and will receive a merkleblock structure with transactions serialized with witnesses. The merkle proof for the witnesses is not supplied. This means that the client cannot verify that the witness data is what's actually in the block. However, the attack vectors here given the actual intended use cases seem extremely slim for several reasons:\r\n\r\n1) The witness data contains signatures which the client can still verify. Spoofing the witness would require supplying signatures that still redeem the output, meaning that only parties that can sign for the output could produce false witness data.\r\n\r\n2) In order to use BIP37 with any real degree of privacy and security, you need to connect to a trusted node. If this is your setup, adding merkle proofs for witnesses is an unnecessary complication.\r\n\r\n3) The foreseen intended use cases here are wallets that support multisignature scripts or scripts with multiple execution paths where you want to be able to check which signatures are provided or which execution path has been taken. In anticipated use cases, there is not much an attacker could gain from a transaction being signed in two different ways - and typically, the attacker would be easily identifiable.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 5,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10350/comments",
   "created_at" : "2017-05-07T00:59:39Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10350/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/10350",
   "id" : 226817105,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10350/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 10350,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/10350.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10350",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/10350.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10350"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Added support for MSG_FILTERED_WITNESS_BLOCK messages.",
   "updated_at" : "2017-05-07T01:27:05Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10350",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/894059?v=3",
      "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
      "followers_url" : "https://api.github.com/users/CodeShark/followers",
      "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/CodeShark",
      "id" : 894059,
      "login" : "CodeShark",
      "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
      "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
      "repos_url" : "https://api.github.com/users/CodeShark/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/CodeShark"
   }
}

[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109834797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/109834797"
         }
      },
      "body" : "Don't do this! This existed for a reason. What you did will reduce libevent performance extremely by always enabling their internal debugging. Same is probably true for leveldb. I'd prefer just not to allow to switch those at runtime.\r\n(unless it can be done in a thread-safe way later on, but I don't think so)",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-05T05:52:41Z",
      "diff_hunk" : "@@ -385,13 +385,7 @@ bool InitHTTPServer()\n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n #if LIBEVENT_VERSION_NUMBER >= 0x02010100\n-    // If -debug=libevent, set full libevent debugging.\n-    // Otherwise, disable all libevent debugging.\n-    if (LogAcceptCategory(BCLog::LIBEVENT)) {\n-        event_enable_debug_logging(EVENT_DBG_ALL);\n-    } else {\n-        event_enable_debug_logging(EVENT_DBG_NONE);\n-    }\n+    event_enable_debug_logging(EVENT_DBG_ALL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109834797",
      "id" : 109834797,
      "original_commit_id" : "0365458af7a11ea00649905569894eceb69fba24",
      "original_position" : 11,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 30960982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/109834797",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK ofcourse",
      "created_at" : "2017-04-05T06:49:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-291770269",
      "id" : 291770269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10150",
      "updated_at" : "2017-04-05T06:49:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291770269",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Oh. That's great.\r\nConcept ACK. Will test soon.",
      "created_at" : "2017-04-05T06:53:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-291770883",
      "id" : 291770883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10150",
      "updated_at" : "2017-04-05T06:53:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/291770883",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109924304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/109924304"
         }
      },
      "body" : "Are you sure? I've tested this and logging is only enabled when libevent is built in debug mode:\r\n\r\nhttps://github.com/libevent/libevent/blob/2e52bace9f9998826bd3819af328efc8d18decf9/log-internal.h#L46\r\n\r\nand\r\n\r\nhttps://github.com/libevent/libevent/blob/2e52bace9f9998826bd3819af328efc8d18decf9/log-internal.h#L86\r\n\r\nI would have thought that if we're running libevent in debug, then performance is already hosed.\r\n\r\nIf I'm wrong, I left this as a separate commit so we can leave it out if needed. The first commit forbids trying to change libevent logging during runtime and stands on its own.\r\n\r\nleveldb: #9999 always hands a logging class to leveldb at startup, even if logging is disabled. I don't know if that affects performance. This PR doesn't change that behaviour.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-05T14:05:03Z",
      "diff_hunk" : "@@ -385,13 +385,7 @@ bool InitHTTPServer()\n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n #if LIBEVENT_VERSION_NUMBER >= 0x02010100\n-    // If -debug=libevent, set full libevent debugging.\n-    // Otherwise, disable all libevent debugging.\n-    if (LogAcceptCategory(BCLog::LIBEVENT)) {\n-        event_enable_debug_logging(EVENT_DBG_ALL);\n-    } else {\n-        event_enable_debug_logging(EVENT_DBG_NONE);\n-    }\n+    event_enable_debug_logging(EVENT_DBG_ALL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109924304",
      "id" : 109924304,
      "original_commit_id" : "0365458af7a11ea00649905569894eceb69fba24",
      "original_position" : 11,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 31057669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/109924304",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110120525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110120525"
         }
      },
      "body" : "Yes, it is possible to compile libevent wholesale without debug messages. However, most distributions enable them.\r\nEven if it is compiled with debug messages, normally they just sink at the libevent side before even being formatted: https://github.com/libevent/libevent/blob/master/log-internal.h#L80\r\nRemember that libevent debugging is extremely noisy. It always is - the mask is currently unused - there are no specific flags.\r\nThere will be significant overhead to dropping the messages at our side, after formatting. That's worth it for the questionable advantage of being able to enable it during runtime.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-06T09:48:58Z",
      "diff_hunk" : "@@ -385,13 +385,7 @@ bool InitHTTPServer()\n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n #if LIBEVENT_VERSION_NUMBER >= 0x02010100\n-    // If -debug=libevent, set full libevent debugging.\n-    // Otherwise, disable all libevent debugging.\n-    if (LogAcceptCategory(BCLog::LIBEVENT)) {\n-        event_enable_debug_logging(EVENT_DBG_ALL);\n-    } else {\n-        event_enable_debug_logging(EVENT_DBG_NONE);\n-    }\n+    event_enable_debug_logging(EVENT_DBG_ALL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110120525",
      "id" : 110120525,
      "original_commit_id" : "0365458af7a11ea00649905569894eceb69fba24",
      "original_position" : 11,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 31268042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110120525",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110255587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110255587"
         }
      },
      "body" : "Turns out libevent logging can be changed at runtime: https://github.com/libevent/libevent/blob/2e52bace9f9998826bd3819af328efc8d18decf9/whatsnew-2.1.txt#L269\r\n\r\nI've pushed a new commit that leaves `InitHTTPServer()` unchanged and uses `event_enable_debug_logging()` to update logging.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-06T20:09:19Z",
      "diff_hunk" : "@@ -385,13 +385,7 @@ bool InitHTTPServer()\n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n #if LIBEVENT_VERSION_NUMBER >= 0x02010100\n-    // If -debug=libevent, set full libevent debugging.\n-    // Otherwise, disable all libevent debugging.\n-    if (LogAcceptCategory(BCLog::LIBEVENT)) {\n-        event_enable_debug_logging(EVENT_DBG_ALL);\n-    } else {\n-        event_enable_debug_logging(EVENT_DBG_NONE);\n-    }\n+    event_enable_debug_logging(EVENT_DBG_ALL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110255587",
      "id" : 110255587,
      "original_commit_id" : "0365458af7a11ea00649905569894eceb69fba24",
      "original_position" : 11,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 31417348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110255587",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Pushed a new commit that I hope addresses @laanwj's point here: https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109834797",
      "created_at" : "2017-04-06T20:10:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-292301275",
      "id" : 292301275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10150",
      "updated_at" : "2017-04-06T20:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292301275",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110264637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110264637"
         }
      },
      "body" : "It looks like this code is almost duplicated with the exclude case (except the |/& and true/false). Might make sense to roll this into a function that converts a list of flag strings into a bitmask and apply that wholesale.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-06T20:52:27Z",
      "diff_hunk" : "@@ -555,6 +556,65 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    if (request.params.size() > 0 && request.params[0].isArray()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110264637",
      "id" : 110264637,
      "original_commit_id" : "ea4ae762bbbc7535e3ffa3cf1f14f36ef7fa6a49",
      "original_position" : 32,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 31427281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110264637",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110466837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110466837"
         }
      },
      "body" : "sounds sensible. Done",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-07T19:40:58Z",
      "diff_hunk" : "@@ -555,6 +556,65 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    if (request.params.size() > 0 && request.params[0].isArray()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110466837",
      "id" : 110466837,
      "original_commit_id" : "ea4ae762bbbc7535e3ffa3cf1f14f36ef7fa6a49",
      "original_position" : 32,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 31646990,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110466837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110640698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110640698"
         }
      },
      "body" : "If you add this warning I'd suggest it be context-sensitive:\r\n- libevent logging is being updated \r\n- the libevent version is older than 2.1.1\r\n\r\nThough you could also make it an error in that case! (e.g. make UpdateHTTPServerLogging return false and then raise a JSON exception here)",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-10T12:24:52Z",
      "diff_hunk" : "@@ -555,6 +556,61 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+uint32_t getCategoryMask(UniValue cats) {\n+    cats = cats.get_array();\n+    uint32_t mask = 0;\n+    for (unsigned int i = 0; i < cats.size(); ++i) {\n+        uint32_t flag = 0;\n+        std::string cat = cats[i].get_str();\n+        if (!GetLogCategory(&flag, &cat)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n+        }\n+        mask |= flag;\n+    }\n+    return mask;\n+}\n+\n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    if (request.params.size() > 0 && request.params[0].isArray()) {\n+        logCategories |= getCategoryMask(request.params[0]);\n+    }\n+\n+    if (request.params.size() > 1 && request.params[1].isArray()) {\n+        logCategories &= ~getCategoryMask(request.params[1]);\n+    }\n+\n+    // Update libevent logging. If the library version doesn't allow it, UpdateHTTPServerLogging() is a no-op.\n+    UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT);\n+\n+    UniValue result(UniValue::VOBJ);\n+    std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();\n+    for (const auto& logCatActive : vLogCatActive) {\n+        result.pushKV(logCatActive.category, logCatActive.active);\n+    }\n+    result.pushKV(\"WARNING\", \"libevent logging cannot be updated when using libevent before v2.1.1.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110640698",
      "id" : 110640698,
      "original_commit_id" : "bc3ad60b41a0d8379f6f2da07b6315ba39438e8a",
      "original_position" : 62,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 31826455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110640698",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110640802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110640802"
         }
      },
      "body" : "Yup, thanks, much better",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-10T12:25:20Z",
      "diff_hunk" : "@@ -555,6 +556,65 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    if (request.params.size() > 0 && request.params[0].isArray()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110640802",
      "id" : 110640802,
      "original_commit_id" : "ea4ae762bbbc7535e3ffa3cf1f14f36ef7fa6a49",
      "original_position" : 32,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 31826542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110640802",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110649021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110649021"
         }
      },
      "body" : "I initially tried doing something like that, but it's a bit tricky:\r\n\r\n- we only want to raise an error if *only* libevent logging is changed (ie if the user wants to include or exclude \"all\", then we shouldn't throw an error simply because \"all\" includes libevent).\r\n- I've already applied the include/excude bitmasks by this point, and we need the before/after state to know whether to throw.\r\n\r\nI'll see if I can come up with something sensible.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-10T13:06:38Z",
      "diff_hunk" : "@@ -555,6 +556,61 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+uint32_t getCategoryMask(UniValue cats) {\n+    cats = cats.get_array();\n+    uint32_t mask = 0;\n+    for (unsigned int i = 0; i < cats.size(); ++i) {\n+        uint32_t flag = 0;\n+        std::string cat = cats[i].get_str();\n+        if (!GetLogCategory(&flag, &cat)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n+        }\n+        mask |= flag;\n+    }\n+    return mask;\n+}\n+\n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    if (request.params.size() > 0 && request.params[0].isArray()) {\n+        logCategories |= getCategoryMask(request.params[0]);\n+    }\n+\n+    if (request.params.size() > 1 && request.params[1].isArray()) {\n+        logCategories &= ~getCategoryMask(request.params[1]);\n+    }\n+\n+    // Update libevent logging. If the library version doesn't allow it, UpdateHTTPServerLogging() is a no-op.\n+    UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT);\n+\n+    UniValue result(UniValue::VOBJ);\n+    std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();\n+    for (const auto& logCatActive : vLogCatActive) {\n+        result.pushKV(logCatActive.category, logCatActive.active);\n+    }\n+    result.pushKV(\"WARNING\", \"libevent logging cannot be updated when using libevent before v2.1.1.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110649021",
      "id" : 110649021,
      "original_commit_id" : "bc3ad60b41a0d8379f6f2da07b6315ba39438e8a",
      "original_position" : 62,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 31835288,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110649021",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110650882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110650882"
         }
      },
      "body" : "I'm perfectly fine with removing this warning from this pull and doing that later. I just don't think it should be added unconditionally.\r\n\r\n> I've already applied the include/excude bitmasks by this point, and we need the before/after state to know whether to throw.\r\n\r\nSure. `if((before ^ after) & BCLog::LIBEVENT)` would work :-) Though it's probably best to do the check inside UpdateHTTPServerLogging  because there you have the previous state, the desired new state, and the libevent version information available.\r\n\r\n> we only want to raise an error if only libevent logging is changed \r\n\r\nThat's a good point, and indeed speaks for making it a warning instead.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-10T13:15:23Z",
      "diff_hunk" : "@@ -555,6 +556,61 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+uint32_t getCategoryMask(UniValue cats) {\n+    cats = cats.get_array();\n+    uint32_t mask = 0;\n+    for (unsigned int i = 0; i < cats.size(); ++i) {\n+        uint32_t flag = 0;\n+        std::string cat = cats[i].get_str();\n+        if (!GetLogCategory(&flag, &cat)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n+        }\n+        mask |= flag;\n+    }\n+    return mask;\n+}\n+\n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    if (request.params.size() > 0 && request.params[0].isArray()) {\n+        logCategories |= getCategoryMask(request.params[0]);\n+    }\n+\n+    if (request.params.size() > 1 && request.params[1].isArray()) {\n+        logCategories &= ~getCategoryMask(request.params[1]);\n+    }\n+\n+    // Update libevent logging. If the library version doesn't allow it, UpdateHTTPServerLogging() is a no-op.\n+    UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT);\n+\n+    UniValue result(UniValue::VOBJ);\n+    std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();\n+    for (const auto& logCatActive : vLogCatActive) {\n+        result.pushKV(logCatActive.category, logCatActive.active);\n+    }\n+    result.pushKV(\"WARNING\", \"libevent logging cannot be updated when using libevent before v2.1.1.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110650882",
      "id" : 110650882,
      "original_commit_id" : "bc3ad60b41a0d8379f6f2da07b6315ba39438e8a",
      "original_position" : 62,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 31837328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110650882",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Pushed an updated version that hopefully addresses @laanwj's comments. Changes:\r\n\r\n- `UpdateHTTPServerLogging()` is now called by `InitHTTPServer()`. This contains the `#if LIBEVENT_VERSION_NUMBER >= 0x02010100` preprocessor logic to one place.\r\n- `UpdateHTTPServerLogging()` now removes the `BCLog::LIBEVENT` bit flag if the libevent version does not support debug logging. That means that a call to the logging RPC will return the correct value for libevent (0 if libevent logging is not supported).\r\n- the logging RPC will throw an error if:\r\n    - the libevent version does not support debug logging; and\r\n    - the user tries to update *only* the `BCLog::LIBEVENT` flag\r\n",
      "created_at" : "2017-04-10T14:55:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-292974648",
      "id" : 292974648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10150",
      "updated_at" : "2017-04-10T14:55:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292974648",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110680933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110680933"
         }
      },
      "body" : "Looks good to me. One nit: I don't think this global flag should be changed here as a side-effect. Maybe move the \"disable the flag in logCategories if this function returns false\" logic outside the function.",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-10T15:05:56Z",
      "diff_hunk" : "@@ -435,6 +430,21 @@ bool InitHTTPServer()\n     return true;\n }\n \n+bool UpdateHTTPServerLogging(bool enable) {\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    if (enable) {\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    } else {\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+    }\n+    return true;\n+#else\n+    // Can't update libevent logging if version < 02010100\n+    logCategories &= ~BCLog::LIBEVENT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110680933",
      "id" : 110680933,
      "original_commit_id" : "df35edb2eebbd6782c4ef79457ef55d24d179e9e",
      "original_position" : 34,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 31869585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:06:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110680933",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110763686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110763686"
         }
      },
      "body" : "ok, changed so that the caller updates the logCategories bitfield (happens in two places - ` InitHTTPServer()` and the `logging()` rpc).",
      "commit_id" : "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "created_at" : "2017-04-10T21:07:28Z",
      "diff_hunk" : "@@ -435,6 +430,21 @@ bool InitHTTPServer()\n     return true;\n }\n \n+bool UpdateHTTPServerLogging(bool enable) {\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    if (enable) {\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    } else {\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+    }\n+    return true;\n+#else\n+    // Can't update libevent logging if version < 02010100\n+    logCategories &= ~BCLog::LIBEVENT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110763686",
      "id" : 110763686,
      "original_commit_id" : "df35edb2eebbd6782c4ef79457ef55d24d179e9e",
      "original_position" : 34,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 31960101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10150",
      "updated_at" : "2017-04-10T21:07:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110763686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Tested ACK 7fd50c3",
      "created_at" : "2017-04-12T17:57:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-293658469",
      "id" : 293658469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10150",
      "updated_at" : "2017-04-12T17:57:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293658469",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

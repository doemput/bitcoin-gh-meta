[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111027118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111027118"
         }
      },
      "body" : "I think the division should be outside of GetArg. Otherwise, if you specify -maxsigcachesize=32, you end up with a total of 64MiB worth of caches.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-11T22:18:19Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111027118",
      "id" : 111027118,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 143,
      "pull_request_review_id" : 32242425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111027118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Fixed test_bitcoin segfaulting as it didnt init the script cache as it does the sigcache.",
      "created_at" : "2017-04-11T23:36:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293430562",
      "id" : 293430562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-11T23:36:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293430562",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111068810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111068810"
         }
      },
      "body" : "Maybe better to add a wrapper class around cuckoocache.h in a separate file so that you don't depend on CuckooCache internals and can replace it with something more efficient more easily.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T05:47:30Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111068810",
      "id" : 111068810,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111068810",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111069200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111069200"
         }
      },
      "body" : "https://github.com/bitcoin/bitcoin/pull/9480 exposes this class from the sigcache, we should probably just use that rather than adding this code again in a another location.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T05:52:07Z",
      "diff_hunk" : "@@ -1356,7 +1382,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111069200",
      "id" : 111069200,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 77,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111069200",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070178"
         }
      },
      "body" : "static in the middle of a function is messy -- add a wrapper class around cuckoocache.h",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T06:02:44Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070178",
      "id" : 111070178,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070178",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070401"
         }
      },
      "body" : "Yes; adding a wrapper class would do this for you. Can be a read lock.\r\n\r\nAlso if you're using this class single threaded only ever, cuckoocache could be extended to offer a version without atomics...",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T06:04:56Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111070401",
      "id" : 111070401,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 117,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111070401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111073537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111073537"
         }
      },
      "body" : "FYI You can cut the hashing overhead in half by either:\r\n\r\n- making the nonce 64 bytes & static caching then copyinh the midstate.\r\n- using only 19 bytes of nonce.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T06:35:06Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111073537",
      "id" : 111073537,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 116,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32285828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111073537",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111106329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111106329"
         }
      },
      "body" : "Good, because the division is outside of the GetArg. :)",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T09:42:36Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111106329",
      "id" : 111106329,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 143,
      "pull_request_review_id" : 32325959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111106329",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2017-04-12T09:44:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293527298",
      "id" : 293527298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T09:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293527298",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111191039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111191039"
         }
      },
      "body" : "Struggling to understand how a unique nonce per cache entry vs per cache works.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T16:00:01Z",
      "diff_hunk" : "@@ -1378,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111191039",
      "id" : 111191039,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 105,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32419116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111191039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111195372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111195372"
         }
      },
      "body" : "it's static so it is per cache.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T16:17:23Z",
      "diff_hunk" : "@@ -1378,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111195372",
      "id" : 111195372,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 105,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32423861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111195372",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2017-04-12T16:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293634385",
      "id" : 293634385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T16:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293634385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211908"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211908"
         }
      },
      "body" : "Is using the public interface of CuckooCache::cache really using its \"internals\"?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T17:28:25Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211908",
      "id" : 111211908,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211908",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211946"
         }
      },
      "body" : "Rebased on that, removed this class.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T17:28:38Z",
      "diff_hunk" : "@@ -1356,7 +1382,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111211946",
      "id" : 111211946,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 77,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111211946",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212068"
         }
      },
      "body" : "I'd much much rather have a static in the function than add yet another class to compile. We need to have fewer two-line wrapper classes, not more...our memory usage is already insane.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T17:29:17Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212068",
      "id" : 111212068,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212117"
         }
      },
      "body" : "Using 19 bytes of nonce, thats way more than enough.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T17:29:32Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            CSHA256().Write(nonce.begin(), 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111212117",
      "id" : 111212117,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 116,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32441808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111212117",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Addressed Jeremy's comments aside from the request for a wrapper class, I think we need fewer dummy classes, not more :/. Also rebased on #9480.",
      "created_at" : "2017-04-12T17:30:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-293651106",
      "id" : 293651106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-12T17:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293651106",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111266451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111266451"
         }
      },
      "body" : "Memory usage during compile time? Is it really that bad for an added class?\r\n\r\nCan you at least move the static decl to the top of the function?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-12T21:36:20Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111266451",
      "id" : 111266451,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 32500529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111266451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111423717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111423717"
         }
      },
      "body" : "It seems I am blind.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-13T15:55:29Z",
      "diff_hunk" : "@@ -1356,7 +1373,32 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+namespace {\n+class ShaHashSplitter {\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select < 32/4, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        memcpy(&u, key.begin() + 4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n+CuckooCache::cache<uint256, ShaHashSplitter> scriptExecutionCache;\n+}; // anonymous namespace\n+\n+void InitScriptExecutionCache() {\n+    // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n+    // setup_bytes creates the minimum possible cache (2 elements).\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r111423717",
      "id" : 111423717,
      "original_commit_id" : "7a0fb5a0a451ff6d15e1e2cf62316c3589e80657",
      "original_position" : 86,
      "path" : "src/validation.cpp",
      "position" : 143,
      "pull_request_review_id" : 32669925,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111423717",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112029279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112029279"
         }
      },
      "body" : "Static assert on the size of the flags so the nonce gets reduced if the flags are made 64-bits in the future?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-18T18:27:00Z",
      "diff_hunk" : "@@ -1376,13 +1401,28 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112029279",
      "id" : 112029279,
      "original_commit_id" : "8ef8ce5b4fa265ef4ddc2974140f90d38a4e7976",
      "original_position" : 103,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33313042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112029279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112036572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112036572"
         }
      },
      "body" : "Done.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-18T18:58:55Z",
      "diff_hunk" : "@@ -1376,13 +1401,28 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112036572",
      "id" : 112036572,
      "original_commit_id" : "8ef8ce5b4fa265ef4ddc2974140f90d38a4e7976",
      "original_position" : 103,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33321006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112036572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112062972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112062972"
         }
      },
      "body" : "Done. Moved the static to the top of the function with the static CuckooCache as well.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-18T21:01:20Z",
      "diff_hunk" : "@@ -1376,13 +1427,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            static uint256 nonce(GetRandHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112062972",
      "id" : 112062972,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 114,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33350164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112062972",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "> Note that the cache is indexed only on the script execution flags\r\nand the transaction's witness hash. While this is sufficient to\r\nmake the CScriptCheck() calls pure functions, this introduces\r\ndependancies on the mempool calculating things such as the\r\nPrecomputedTransactionData object, filling the CCoinsViewCache, etc\r\nin the exact same way as ConnectBlock. I belive this is a reasonable\r\nassumption, but should be noted carefully.\r\n\r\nSo if I understand correctly, this makes CCoinsViewMempool, and therefore the mempool itself, consensus critical, which I would prefer to avoid.  Would we still get a performance benefit if we were to include the coins being spent in the hash for the index lookup?\r\n\r\nEdited: as per offline discussion, perhaps just move CCoinsViewMemPool into validation.cpp to make it clear it's part of consensus, and sanity check the results from the mempool.",
      "created_at" : "2017-04-19T15:45:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-295316813",
      "id" : 295316813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-19T17:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295316813",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar I'm not convinced its a massive concern, but I went ahead and added a wrapper which checks each scriptPubKey returned by the CCoinsViewCache is the one committed to by the input's prevout hash, which I believe removes that dependancy entirely.",
      "created_at" : "2017-04-19T18:06:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-295371111",
      "id" : 295371111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-19T18:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295371111",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639333"
         }
      },
      "body" : "Would be nice to update the LogPrintf here (and in the new Init) to say something about how the space is divided among multiple caches now, so users aren't confused why they aren't getting the full allocation here.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-21T08:37:37Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ void InitSignatureCache()\n {\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n     // setup_bytes creates the minimum possible cache (2 elements).\n-    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE)), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n     size_t nElems = signatureCache.setup_bytes(nMaxCacheSize);\n     LogPrintf(\"Using %zu MiB out of %zu requested for signature cache, able to store %zu elements\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639333",
      "id" : 112639333,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 7,
      "path" : "src/script/sigcache.cpp",
      "position" : null,
      "pull_request_review_id" : 33969253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639333",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639391"
         }
      },
      "body" : "I guess not.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-21T08:38:00Z",
      "diff_hunk" : "@@ -12,6 +12,7 @@\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n+#include \"cuckoocache.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112639391",
      "id" : 112639391,
      "original_commit_id" : "b917cfd59869687dae50488bb58c51cdc875dfe9",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 33969253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112639391",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112771950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112771950"
         }
      },
      "body" : "OK, done, also updated the doc for -maxsigcachesize.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-21T20:38:49Z",
      "diff_hunk" : "@@ -74,7 +74,7 @@ void InitSignatureCache()\n {\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n     // setup_bytes creates the minimum possible cache (2 elements).\n-    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE)), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n     size_t nElems = signatureCache.setup_bytes(nMaxCacheSize);\n     LogPrintf(\"Using %zu MiB out of %zu requested for signature cache, able to store %zu elements\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r112771950",
      "id" : 112771950,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 7,
      "path" : "src/script/sigcache.cpp",
      "position" : null,
      "pull_request_review_id" : 34118234,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112771950",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Concept ACK\r\nBut I'd prefer if there were more safeguards in place against future changes that might cause consensus failure.  For instance, I think anything that is inputted to CScriptCheck should be committed to by the hash.  Right now it its the case that anything USED by CScriptCheck is committed to, but there is nothing stopping a future change to CScriptCheck that used the height from the Coins or something and caused problems.\r\n",
      "created_at" : "2017-04-25T16:21:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-297084564",
      "id" : 297084564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-25T16:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297084564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113251292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113251292"
         }
      },
      "body" : "This function can take Consensus::Params directly instead of CChainParams\r\nCan we pass ```ThresholdConditionCache& cache``` to this and move it to src/versionbits ?\r\nI know not all flags are activated with bip9, but it seems the best place to me.\r\nDoing so would prevent you from calling IsWitnessEnabled() and AssertLockHeld(cs_main), but do you need to?\r\nYou can do the latter from the caller like we do with VersionBitsState",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-25T16:53:41Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113251292",
      "id" : 113251292,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34623315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113251292",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113252837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113252837"
         }
      },
      "body" : "why a separated declaration if it's going to be static?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-25T17:00:02Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113252837",
      "id" : 113252837,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34625069,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113252837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113254568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113254568"
         }
      },
      "body" : "It's a forward declaration. As to why the definition isn't just there, I'm not sure, maybe GetBlockScriptFlags also has some dependency that would need a forward decl.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-25T17:07:25Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113254568",
      "id" : 113254568,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34626981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113254568",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113329148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113329148"
         }
      },
      "body" : "history bike-sheeding currentBlockScriptVerifyFlags should be part of the previous commit, not this one (and for my taste this commit could be an independent PR).",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-25T22:40:59Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113329148",
      "id" : 113329148,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34707843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113329148",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113330975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113330975"
         }
      },
      "body" : "Perhaps everything that is below this case could be moved to CheckInputsFromMempoolAndCache too",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-25T22:53:30Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113330975",
      "id" : 113330975,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 34709759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113330975",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713125"
         }
      },
      "body" : "I'd much prefer to encapsulate the version bits stuff in GetBlockScriptFlags, and keep the diff on the smaller side. You're welcome to move things around afterwards, validation.cpp need to continue its trek towards better internal interfaces.\r\n\r\nI changed it to take Consensus::Params.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T14:40:53Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713125",
      "id" : 113713125,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713125",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713135"
         }
      },
      "body" : "The reason its down further is that I didnt want to move it up with the mempool stuff in validation.cpp, but its called from ATMP, so needed the forward declaration. Hopefully this stuff gets ironed out as we move towards better internal interfaces (see #10279).",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T14:40:55Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713135",
      "id" : 113713135,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713135",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713145"
         }
      },
      "body" : "Its needed in this PR because its much more likely to trigger after the changes in this PR, though still unsupported. I'm happy to make it a PR on its own if you think its really worth it, but it seems to me this PR is still of very-reviewable-size.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T14:40:57Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713145",
      "id" : 113713145,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713145",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713156"
         }
      },
      "body" : "I dont think CheckInputsFromMempoolAndCache should make assumptions about having called CheckInputs already prior to this call? Maybe I'm confused as to what you're suggesting here.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T14:40:59Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113713156",
      "id" : 113713156,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125388,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713156",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@morcos I added an additional commit to only pass the scriptPubKey and nValue from the prevout into CScriptCheck, so hopefully any such future changes would be super clear to reviewers as consensus bugs. Sadly I dont really want to just include the height in the hash, as there are many heights, but I think this is a sufficient change.",
      "created_at" : "2017-04-27T14:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-297734351",
      "id" : 297734351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-04-27T14:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297734351",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113725617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113725617"
         }
      },
      "body" : "Moving it to src/versionbits.cpp would still encapsulate version bits stuff in GetBlockScriptFlags, you would just not be using the versionbitscache and cs_main globals from validation.cpp.\r\nYou will also avoid using the unnecessary wrapper ```IsWitnessEnabled()``` (specially unnecessary in this function since you are already using ```VersionBitsState()``` directly for csv anyway).\r\n\r\nIt is \"free\" to do it now vs moving it in the future (if that ever gets the review). It may not be important to your approach to libconsensus, but it is to mine. I've been trying to do this for a long time, @CodeShark tried something similar as preparation to bip9 too.\r\n",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:19:55Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113725617",
      "id" : 113725617,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35139022,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113725617",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113726199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113726199"
         }
      },
      "body" : "You are creating the function as new, it won't be any more disruptive to avoid the forward declaration. Anyway, my preference would be to move it to versionbits.o which is also ignored as \"something that can be ironed out later\", so whatever.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:22:13Z",
      "diff_hunk" : "@@ -451,6 +451,8 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+// Returns the script flags which should be checked for a given block\n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113726199",
      "id" : 113726199,
      "original_commit_id" : "82afc49955967ac33af84e542aaad3b503df345a",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35139702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113726199",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113727154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113727154"
         }
      },
      "body" : "You misunderstood. Creating a currentBlockScriptVerifyFlags local variable just makes the next line simpler, which is fine, but could have been done in \"Cache full script execution results in addition to signatures\" directly which already touches those lines instead of \"Do not print soft-fork-script warning with -promiscuousmempool\", which would be clearer without that extra bikeshedding +2-1.\r\nAnyway, as said, history bikeshedding, not a big deal",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:25:51Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113727154",
      "id" : 113727154,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35140782,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113727154",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113728900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113728900"
         }
      },
      "body" : "I mean moving the following inside the function too: \r\n```\r\n         {\r\n              // If we're using promiscuousmempoolflags, we may hit this normally\r\n              // Check if current block has some flags that scriptVerifyFlags\r\n             // does not before printing an ominous warning\r\n             if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags))\r\n                 return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\r\n                     __func__, hash.ToString(), FormatStateMessage(state));\r\n         }\r\n```\r\nThen here you would just call:\r\n\r\n```\r\nif (!CheckInputsFromMempoolAndCache(tx, state, view, pool, scriptVerifyFlags, currentBlockScriptVerifyFlags, true, txdata)) {\r\n   return false;\r\n}",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:32:16Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113728900",
      "id" : 113728900,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35142665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113728900",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113729145"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113729145"
         }
      },
      "body" : "The error should no be printed, but the function still needs to return false, no?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:33:08Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n+        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags))\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113729145",
      "id" : 113729145,
      "original_commit_id" : "061d06faceed0272d1913800369768188876df77",
      "original_position" : 14,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35142937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113729145",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113730339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113730339"
         }
      },
      "body" : "Perhaps even put the 2 calls to checkinputs in it, from https://github.com/bitcoin/bitcoin/pull/10192/commits/061d06faceed0272d1913800369768188876df77#diff-24efdb00bfbe56b140fb006b562cc70bR889",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:37:31Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113730339",
      "id" : 113730339,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35144274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113730339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113733922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113733922"
         }
      },
      "body" : "I dont think it makes any sense to move this entire function into src/versionbits.cpp? This function has stuff for BIP 65, 66 and 16, none of which are versionbits-activated? Moving all soft forks into a separate thing is definitely a separate issue from this PR.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:51:53Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113733922",
      "id" : 113733922,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35148152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113733922",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734840"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:55:15Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734840",
      "id" : 113734840,
      "original_commit_id" : "bb136ee6f0943bc0285b7d7d1f99c32668f947a3",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35149169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734840",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734844"
         }
      },
      "body" : "But that logging implicitly makes an assumption about the fact that you've already called CheckInputs prior to the CheckInputsFromMempoolAndCache call, which I'd prefer not to do. CheckInputsFromMempoolAndCache *only* does some additional mempool-shouldnt-pollute-cache checks, and then calls CheckInputs.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:55:17Z",
      "diff_hunk" : "@@ -923,7 +955,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params());\n-        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n+        if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734844",
      "id" : 113734844,
      "original_commit_id" : "1f75777760ddc2d1ac1b1f14e68797716c836b51",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35149175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734844",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734847"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T15:55:18Z",
      "diff_hunk" : "@@ -922,10 +922,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        if (!CheckInputs(tx, state, view, true, GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus()), true, true, txdata))\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n+        if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags))\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113734847",
      "id" : 113734847,
      "original_commit_id" : "061d06faceed0272d1913800369768188876df77",
      "original_position" : 14,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35149179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113734847",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113744666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113744666"
         }
      },
      "body" : "I noted that at the beginning \"I know not all flags are activated with bip9\", but I still think it's the best place for this new function (even if some lines of the function don't rely on versionbits, they also don't rely on anything that versionbits didn't already rely on).Doing a separate module only for this single function seems stupid to me.\r\nAnyway, as disappointing as your rejection to move the new function for free may be to me, let's move on. \r\n\r\nCan you at least avoid the use of globals you don't need to use, ie versionbitscache and cs_main  (both used directly and also indirectly through IsWitnessEnabled())?\r\nThat way, if we ever move this function out of validation (like all previous attempts at creating it did) it can be a clean moveonly commit (whether it goes to versionbits.o or somewhere else) instead of needing to change the function signature.\r\n ",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-04-27T16:36:02Z",
      "diff_hunk" : "@@ -1669,6 +1748,41 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const CChainParams& chainparams) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r113744666",
      "id" : 113744666,
      "original_commit_id" : "f8ceb94544c6d647be9bcc54c074bc3b331b6ba3",
      "original_position" : 187,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35160014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113744666",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Needs rebase",
      "created_at" : "2017-05-19T17:25:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-302762722",
      "id" : 302762722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-05-19T17:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302762722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@TheBlueMatt REBASE ME",
      "created_at" : "2017-05-20T09:01:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-302860834",
      "id" : 302860834,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-05-20T09:01:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302860834",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Rebased :).",
      "created_at" : "2017-05-22T19:55:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-303202994",
      "id" : 303202994,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-05-22T19:55:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303202994",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Needs moar rebase.",
      "created_at" : "2017-05-24T01:26:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-303592028",
      "id" : 303592028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-05-24T01:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303592028",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r118331939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118331939"
         }
      },
      "body" : "spelling nit: \"promiscuous\"",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-05-24T18:35:15Z",
      "diff_hunk" : "@@ -732,8 +732,20 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n         if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags)) {\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n+                    __func__, hash.ToString(), FormatStateMessage(state));\n+            } else {\n+                if (!CheckInputs(tx, state, view, true, MANDATORY_SCRIPT_VERIFY_FLAGS, true, false, txdata)) {\n+                    return error(\"%s: ConnectInputs failed against MANDATORY but not STANDARD flags due to promiscuous mempool %s, %s\",\n+                        __func__, hash.ToString(), FormatStateMessage(state));\n+                } else {\n+                    LogPrintf(\"Warning: -promisuousmempool flags set to not include currently enforced soft forks, this may break mining or otherwise cause instability!\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r118331939",
      "id" : 118331939,
      "original_commit_id" : "847c35e9ad905ddaa65f5f1062d45ecb54a2836c",
      "original_position" : 17,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 40113725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118331939",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r118332433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118332433"
         }
      },
      "body" : "This error message isn't quite right; at this point we haven't actually compared against the MANDATORY flags. ",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-05-24T18:37:20Z",
      "diff_hunk" : "@@ -732,8 +732,20 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n         if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags)) {\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r118332433",
      "id" : 118332433,
      "original_commit_id" : "847c35e9ad905ddaa65f5f1062d45ecb54a2836c",
      "original_position" : 10,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 40113725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118332433",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "https://github.com/bitcoin/bitcoin/pull/10427 introduces GetScriptFlags like here but with some of my nits solved. If merged first, should make this a little bit smaller and simpler to review.\r\nThis needs rebase again.",
      "created_at" : "2017-05-25T15:37:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-304042225",
      "id" : 304042225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-05-25T15:37:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/304042225",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r118514801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118514801"
         }
      },
      "body" : "Why this? if you want to use it between this and its deifinition, why not move the definition here directly?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-05-25T15:41:30Z",
      "diff_hunk" : "@@ -310,6 +310,9 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool\n }\n \n \n+// Returns the script flags which should be checked for a given block",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r118514801",
      "id" : 118514801,
      "original_commit_id" : "39bdb8ba6b2be80608d94cefa2d206f93ada7390",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 40314364,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/118514801",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "This sounds like it would break (or at least complicate) CHECKBLOCKVERSION and possibly even CHECKBLOCKATHEIGHT...?",
      "created_at" : "2017-06-01T19:42:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-305599779",
      "id" : 305599779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-01T19:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305599779",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> This sounds like it would break (or at least complicate) CHECKBLOCKVERSION and possibly even CHECKBLOCKATHEIGHT...?\r\n\r\nI'm skeptical that we'd ever adopt such context-dependent script flags (which strike me as a bad idea), but putting that aside: I benchmarked this patch on data from December 2016, and observed a 31% reduction in total block validation time, which is such a large performance improvement that I don't think this should be held up by a hypothetical type of consensus change, which we've not done before.  We can always revisit this performance optimization in the future if necessary.",
      "created_at" : "2017-06-01T20:02:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-305604489",
      "id" : 305604489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-01T20:02:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305604489",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Needs rebase.",
      "created_at" : "2017-06-02T00:47:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-305658918",
      "id" : 305658918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-02T00:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305658918",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@TheBlueMatt needs rebase\r\n",
      "created_at" : "2017-06-04T05:56:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-306020292",
      "id" : 306020292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-04T05:56:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306020292",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120243670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120243670"
         }
      },
      "body" : "It feels much more reasonable next to the consensus code, as it is really critical consensus logic, instead of mixed in with all the ATMP code.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-06T00:49:10Z",
      "diff_hunk" : "@@ -310,6 +310,9 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool\n }\n \n \n+// Returns the script flags which should be checked for a given block",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120243670",
      "id" : 120243670,
      "original_commit_id" : "39bdb8ba6b2be80608d94cefa2d206f93ada7390",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 42189300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120243670",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Addressed @sdaftuar's comments and rebased.",
      "created_at" : "2017-06-06T00:50:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-306350298",
      "id" : 306350298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-06T00:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306350298",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "This does not look like it's rebased on top of #10195?",
      "created_at" : "2017-06-06T01:54:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-306359178",
      "id" : 306359178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-06T01:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306359178",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Yes it was, though I fucked up the second-to-last commit. Fixed now.",
      "created_at" : "2017-06-06T03:22:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-306371028",
      "id" : 306371028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-06T03:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306371028",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt the tests timed out and need kicking.",
      "created_at" : "2017-06-06T08:25:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-306417200",
      "id" : 306417200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-06T08:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306417200",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120495816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120495816"
         }
      },
      "body" : "In commit \"Cache full script execution results in addition to signatures\"\r\n\r\nWould it be more efficient to avoid this hashing and the cache lookup below when `cacheFullScriptStore` is false?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-06T22:18:36Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120495816",
      "id" : 120495816,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 88,
      "path" : "src/validation.cpp",
      "position" : 183,
      "pull_request_review_id" : 42463412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120495816",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120496918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120496918"
         }
      },
      "body" : "In commit \"Cache full script execution results in addition to signatures\"\r\n\r\nIf `pvChecks` is non-null, is it ok to just return true here without populating it? If so, it'd be good to have a comment here saying why, because it doesn't seem completely obvious.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-06T22:24:38Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks\n+            if (scriptExecutionCache.contains(hashCacheEntry, !cacheFullScriptStore)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120496918",
      "id" : 120496918,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 90,
      "path" : "src/validation.cpp",
      "position" : 185,
      "pull_request_review_id" : 42463412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120496918",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120509803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120509803"
         }
      },
      "body" : "I believe actual block checking sets cacheFullScriptStore to false, so that's kinda when you want it to cache lookup :).",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T00:17:10Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120509803",
      "id" : 120509803,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 88,
      "path" : "src/validation.cpp",
      "position" : 183,
      "pull_request_review_id" : 42477850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120509803",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120510037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120510037"
         }
      },
      "body" : "I'm confused, pvChecks is passed in, you dont populate, just push back your set of to-be-validated CScriptChecks?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T00:19:14Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks\n+            if (scriptExecutionCache.contains(hashCacheEntry, !cacheFullScriptStore)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120510037",
      "id" : 120510037,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 90,
      "path" : "src/validation.cpp",
      "position" : 185,
      "pull_request_review_id" : 42478098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120510037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2017-06-07T00:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-306650687",
      "id" : 306650687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-07T00:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306650687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120612883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120612883"
         }
      },
      "body" : "I'm not following, in this commit this additional declaration (when nobody is calling it between the declaration and the definition) is completely redundant. The definition is close to ConnectBlock, also consensus code, not ATMP.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T12:39:04Z",
      "diff_hunk" : "@@ -310,6 +310,9 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool\n }\n \n \n+// Returns the script flags which should be checked for a given block",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120612883",
      "id" : 120612883,
      "original_commit_id" : "39bdb8ba6b2be80608d94cefa2d206f93ada7390",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 42589003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120612883",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120643004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120643004"
         }
      },
      "body" : "> I believe actual block checking sets cacheFullScriptStore to false, so that's kinda when you want it to cache lookup :)\r\n\r\nI see, `cacheFullScriptStore == false` really means \"check and erase from cache\" not \"don't use cache\" like I was thinking. Could add a comment about this, though in retrospect I guess it's pretty obvious.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T14:34:47Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120643004",
      "id" : 120643004,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 88,
      "path" : "src/validation.cpp",
      "position" : 183,
      "pull_request_review_id" : 42622403,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120643004",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120648144"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120648144"
         }
      },
      "body" : "> I'm confused, pvChecks is passed in, you dont populate, just push back your set of to-be-validated CScriptChecks?\r\n\r\nI guess I wouldn't expect `cacheFullScriptStore` being set to true or false to have an effect on what gets returned in `pvChecks`, and that an interaction between the two parameters would be documented.\r\n\r\nThe specific case where it looks like there is an interaction is after calling `CheckInputs` once with `pvChecks = null` and a script where `check() == true` for all inputs.\r\n\r\nIf `CheckInputs` is called after that on the same script with `pvChecks != null`, it seems like `pvChecks` will be empty if `cacheFullScriptStore` was previously true, and populated if it was previously false.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T14:50:58Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks\n+            if (scriptExecutionCache.contains(hashCacheEntry, !cacheFullScriptStore)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120648144",
      "id" : 120648144,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 90,
      "path" : "src/validation.cpp",
      "position" : 185,
      "pull_request_review_id" : 42622403,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120648144",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120652781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120652781"
         }
      },
      "body" : "Added a better comment.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T15:05:40Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());\n+            AssertLockHeld(cs_main); //TODO: Remove this requirement by making CuckooCache not require external locks\n+            if (scriptExecutionCache.contains(hashCacheEntry, !cacheFullScriptStore)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120652781",
      "id" : 120652781,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 90,
      "path" : "src/validation.cpp",
      "position" : 185,
      "pull_request_review_id" : 42633015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120652781",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120652787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120652787"
         }
      },
      "body" : "Well its the same thing that the sigcache itself does, though I added a comment to the top of ConnectInputs.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T15:05:43Z",
      "diff_hunk" : "@@ -1167,6 +1188,21 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Of course, if an assumed valid block is invalid due to false scriptSigs\n         // this optimization would allow an invalid chain to be accepted.\n         if (fScriptChecks) {\n+            // First check if script executions have been cached with the same\n+            // flags. Note that this assumes that the inputs provided are\n+            // correct (ie that the transaction hash which is in tx's prevouts\n+            // properly commits to the scriptPubKey in the inputs view of that\n+            // transaction).\n+            uint256 hashCacheEntry;\n+            // We only use the first 19 bytes of nonce to avoid a second SHA\n+            // round - giving us 19 + 32 + 4 = 55 bytes (+ 8 + 1 = 64)\n+            static_assert(55 - sizeof(flags) - 32 >= 128/8, \"Want at least 128 bits of nonce for script execution cache\");\n+            CSHA256().Write(scriptExecutionCacheNonce.begin(), 55 - sizeof(flags) - 32).Write(tx.GetWitnessHash().begin(), 32).Write((unsigned char*)&flags, sizeof(flags)).Finalize(hashCacheEntry.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120652787",
      "id" : 120652787,
      "original_commit_id" : "8d3c76d4605ad9706cc04d507ccdcb1fbf29689c",
      "original_position" : 88,
      "path" : "src/validation.cpp",
      "position" : 183,
      "pull_request_review_id" : 42633027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120652787",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120654209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120654209"
         }
      },
      "body" : "In commit \"Better document CheckInputs parameter meanings\"\r\n\r\ns/true/false I think. Thanks for the comments!",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-07T15:10:18Z",
      "diff_hunk" : "@@ -1216,8 +1216,15 @@ void InitScriptExecutionCache() {\n \n /**\n  * Check whether all inputs of this transaction are valid (no double spends, scripts & sigs, amounts)\n- * This does not modify the UTXO set. If pvChecks is not NULL, script checks are pushed onto it\n- * instead of being performed inline.\n+ * This does not modify the UTXO set.\n+ *\n+ * If pvChecks is not NULL, script checks are pushed onto it instead of being performed inline. Any\n+ * script checks which are not necessary (eg due to script execution cache hits) are, obviously,\n+ * not pushed onto pvChecks/run.\n+ *\n+ * Setting cacheSigStore/cacheFullScriptStore to true will remove elements from the corresponding cache",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120654209",
      "id" : 120654209,
      "original_commit_id" : "d47d913eef580433bdf366b5cf5f52b534b4a32e",
      "original_position" : 12,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 42634539,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120654209",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120908324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120908324"
         }
      },
      "body" : "In commit \"Add CheckInputs wrapper CCoinsViewMemPool -> non-consensus-critical\"\r\n\r\nCould you add a comment explaining the return? It's not clear to me if this is supposed to be an optimization or a paranoid safety check. If it's meant to be the latter, maybe a way to make it more paranoid would be to do `if (coin.IsSpent()) has_spent_input = true` here and assert `!CheckInputs || !has_spent_input` at the end.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-08T14:46:35Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r120908324",
      "id" : 120908324,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 15,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 42913093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120908324",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121031989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121031989"
         }
      },
      "body" : "No way to structure this so you can avoid the duplicate error line?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-09T01:13:57Z",
      "diff_hunk" : "@@ -784,8 +784,20 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n         if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags)) {\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against latest-block but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121031989",
      "id" : 121031989,
      "original_commit_id" : "eada04e778435574198b5778bf6ccc72cfcba7be",
      "original_position" : 10,
      "path" : "src/validation.cpp",
      "position" : 119,
      "pull_request_review_id" : 43049883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121031989",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121034338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121034338"
         }
      },
      "body" : "I don't think this section is necessary. The goal of this function should just be checking that no mempool bugs are leaking into consensus validation. This branch looks like an unrelated sanity check.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-09T01:42:06Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;\n+\n+            const CTransactionRef& txFrom = pool.get(txin.prevout.hash);\n+            if (txFrom) {\n+                assert(txFrom->GetHash() == txin.prevout.hash);\n+                assert(txFrom->vout.size() > txin.prevout.n);\n+                assert(txFrom->vout[txin.prevout.n] == coin.out);\n+            } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121034338",
      "id" : 121034338,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 22,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 43049883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121034338",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121034424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121034424"
         }
      },
      "body" : "You can make the pool lookup conditional on `coin.nHeight == MEMPOOL_HEIGHT`. I think it's reasonable to rely on the fact the mempool - even if broken - will return Coin objects with nHeight set to that value.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-09T01:43:08Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;\n+\n+            const CTransactionRef& txFrom = pool.get(txin.prevout.hash);\n+            if (txFrom) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121034424",
      "id" : 121034424,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 18,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 43049883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121034424",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121034591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121034591"
         }
      },
      "body" : "I believe the code is correct. No entry was found in the cache, so validation should fail - it's not a consistency bug.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-09T01:45:35Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121034591",
      "id" : 121034591,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 15,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 43049883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121034591",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Theoretical question: Have you considered making both caches store their hashes in the same instance of the data structure? Might work out a bit better as each can borrow unused capacity from one another.\r\n\r\n",
      "created_at" : "2017-06-09T04:54:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-307295134",
      "id" : 307295134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-09T04:54:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307295134",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121142873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121142873"
         }
      },
      "body" : "> I believe the code is correct. No entry was found in the cache, so validation should fail - it's not a consistency bug.\r\n\r\nI also think the code is correct, just would like a comment saying why this is a return rather than a continue, or something that asserts against the CheckInputs() result. The whole function except this one line seems intended to do a bunch of checks and catch logic errors, while this line bypasses checks and seems to be doing some kind of optimization. AFAICT. Right now the intent is unclear.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-09T14:39:43Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r121142873",
      "id" : 121142873,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 15,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 43172702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121142873",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Looks like it is to me?\n\nOn June 5, 2017 9:54:23 PM EDT, Pieter Wuille <notifications@github.com> wrote:\n>This does not look like it's rebased on top of 10195?\n",
      "created_at" : "2017-06-09T20:06:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-307487182",
      "id" : 307487182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-09T20:06:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307487182",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Now it is. When I made the comment, this PR had `CCoins` in it in some places.",
      "created_at" : "2017-06-09T20:08:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-307487483",
      "id" : 307487483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-09T20:08:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307487483",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123320049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123320049"
         }
      },
      "body" : "They arent duplicates? One prints that an issue has been found (and should be reported), the other simply warns you about your promiscuousmempool flags.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-21T17:51:20Z",
      "diff_hunk" : "@@ -784,8 +784,20 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n         if (!CheckInputs(tx, state, view, true, currentBlockScriptVerifyFlags, true, true, txdata))\n         {\n-            return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s, %s\",\n-                __func__, hash.ToString(), FormatStateMessage(state));\n+            // If we're using promiscuousmempoolflags, we may hit this normally\n+            // Check if current block has some flags that scriptVerifyFlags\n+            // does not before printing an ominous warning\n+            if (!(~scriptVerifyFlags & currentBlockScriptVerifyFlags)) {\n+                return error(\"%s: BUG! PLEASE REPORT THIS! ConnectInputs failed against latest-block but not STANDARD flags %s, %s\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123320049",
      "id" : 123320049,
      "original_commit_id" : "eada04e778435574198b5778bf6ccc72cfcba7be",
      "original_position" : 10,
      "path" : "src/validation.cpp",
      "position" : 119,
      "pull_request_review_id" : 45511643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123320049",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123320421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123320421"
         }
      },
      "body" : "I'd really prefer not to. The unordered_map lookup should essentially be free since anything required to find that transaction should already be very hot in cache, and if its free, why shouldnt we?",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-21T17:52:51Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;\n+\n+            const CTransactionRef& txFrom = pool.get(txin.prevout.hash);\n+            if (txFrom) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123320421",
      "id" : 123320421,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 18,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 45512070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123320421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123320706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123320706"
         }
      },
      "body" : "The goal of this function includes checking CCoinsViewMempool, which is mempool code, from leaking into consensus code. As a part of that, this branch is required (and like the mempool get, this pcoinsTip lookup should be incredibly hot in cache, so it shouldn't be a big deal).",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-21T17:53:58Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;\n+\n+            const CTransactionRef& txFrom = pool.get(txin.prevout.hash);\n+            if (txFrom) {\n+                assert(txFrom->GetHash() == txin.prevout.hash);\n+                assert(txFrom->vout.size() > txin.prevout.n);\n+                assert(txFrom->vout[txin.prevout.n] == coin.out);\n+            } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123320706",
      "id" : 123320706,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 22,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 45512396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123320706",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123321358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123321358"
         }
      },
      "body" : "Added.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-21T17:56:12Z",
      "diff_hunk" : "@@ -399,6 +399,35 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);\n+        for (const CTxIn& txin : tx.vin) {\n+            const Coin& coin = view.AccessCoin(txin.prevout);\n+            if (coin.IsSpent()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123321358",
      "id" : 123321358,
      "original_commit_id" : "4653582139805c351c172e63885dd9059e829601",
      "original_position" : 15,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 45513083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123321358",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@JeremyRubin I have not, that would likely be interesting in the future (as well as possibly not making it an even 1/2-1/2 split in memory usage).",
      "created_at" : "2017-06-21T17:57:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-310157486",
      "id" : 310157486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-21T17:57:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310157486",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123391592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123391592"
         }
      },
      "body" : "I think this lock is unnecessary - CTxMemPool::get grabs a lock on its own.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-21T23:37:25Z",
      "diff_hunk" : "@@ -399,6 +399,40 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123391592",
      "id" : 123391592,
      "original_commit_id" : "81c63f25ba33aec8111e0e65c94322e08070afb5",
      "original_position" : 12,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 45590355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123391592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123405471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123405471"
         }
      },
      "body" : "I think the second `fCacheResults` here can be `false`; as we normally pass a non-NULL `pvChecks` here, `fCacheFullScriptStore = true` has no effects anyway. This only affects `TestBlockValidity`.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-22T01:50:55Z",
      "diff_hunk" : "@@ -1666,7 +1779,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123405471",
      "id" : 123405471,
      "original_commit_id" : "c435d9fbb76a5c4b5525ffdf8fc74afdac1a42df",
      "original_position" : 303,
      "path" : "src/validation.cpp",
      "position" : 307,
      "pull_request_review_id" : 45590355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123405471",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "utACK c435d9fbb76a5c4b5525ffdf8fc74afdac1a42df apart from nits",
      "created_at" : "2017-06-22T07:33:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-310300229",
      "id" : 310300229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-22T07:33:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310300229",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123557356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123557356"
         }
      },
      "body" : "fCacheFullScriptStore has a second meaning - it also deletes the element from the cache if a match is found, so we really should pass it through here to avoid deleting (or marking available) cache entries for TBV.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-22T16:20:45Z",
      "diff_hunk" : "@@ -1666,7 +1779,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123557356",
      "id" : 123557356,
      "original_commit_id" : "c435d9fbb76a5c4b5525ffdf8fc74afdac1a42df",
      "original_position" : 303,
      "path" : "src/validation.cpp",
      "position" : 307,
      "pull_request_review_id" : 45773583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123557356",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123557576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123557576"
         }
      },
      "body" : "I moved the lock up in the function and added a comment noting why we might want it (note that its already held outside of this function before calling it in ATMP).",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-22T16:21:41Z",
      "diff_hunk" : "@@ -399,6 +399,40 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123557576",
      "id" : 123557576,
      "original_commit_id" : "81c63f25ba33aec8111e0e65c94322e08070afb5",
      "original_position" : 12,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 45773836,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123557576",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123651812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123651812"
         }
      },
      "body" : "Ah thanks, I missed that.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-23T00:32:57Z",
      "diff_hunk" : "@@ -1666,7 +1779,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123651812",
      "id" : 123651812,
      "original_commit_id" : "c435d9fbb76a5c4b5525ffdf8fc74afdac1a42df",
      "original_position" : 303,
      "path" : "src/validation.cpp",
      "position" : 307,
      "pull_request_review_id" : 45877856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123651812",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123651925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123651925"
         }
      },
      "body" : "I'm still unconvinced it is needed, as it does not operate on CCoinsViewMemPool directly, but on a dissociated cache with the mempool UTXO loaded into it. If it's valid at one point with those inputs, it's also valid later.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-23T00:34:03Z",
      "diff_hunk" : "@@ -399,6 +399,40 @@ void UpdateMempoolForReorg(DisconnectedBlockTransactions &disconnectpool, bool f\n     LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n }\n \n+// Used to avoid mempool polluting consensus critical paths if CCoinsViewMempool\n+// were somehow broken and returning the wrong scriptPubKeys\n+static bool CheckInputsFromMempoolAndCache(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, CTxMemPool& pool,\n+                 unsigned int flags, bool cacheSigStore, PrecomputedTransactionData& txdata) {\n+    AssertLockHeld(cs_main);\n+\n+    assert(!tx.IsCoinBase());\n+    {\n+        LOCK(pool.cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123651925",
      "id" : 123651925,
      "original_commit_id" : "81c63f25ba33aec8111e0e65c94322e08070afb5",
      "original_position" : 12,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 45877977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123651925",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sdaftuar pointed out that we could directly test CheckInputs' use of its own cache in unit tests, so I added a rather simple one that did so.",
      "created_at" : "2017-06-23T20:25:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-310764667",
      "id" : 310764667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-23T20:25:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310764667",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123860597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123860597"
         }
      },
      "body" : "spends is undeclared",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-23T23:16:45Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/validation.h\"\n+#include \"validation.h\"\n+#include \"coins.h\"\n+#include \"script/standard.h\"\n+#include \"script/sign.h\"\n+\n+#include \"test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks);\n+\n+BOOST_AUTO_TEST_SUITE(checkinptus_script_cache_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(kheckinputs_cache_test, TestChain100Setup)\n+{\n+    // Check that CheckInputs properly invalidates cache entries when the provided flags change,\n+    // and doesn't generate new script checks when it should have a cache entry.\n+\n+    InitScriptExecutionCache();\n+\n+    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+\n+    // Create a double-spend of mature coinbase txn:\n+    CMutableTransaction spend;\n+    spend.nVersion = 1;\n+    spend.vin.resize(1);\n+    spend.vin[0].prevout.hash = coinbaseTxns[0].GetHash();\n+    spend.vin[0].prevout.n = 0;\n+    spend.vout.resize(1);\n+    spend.vout[0].nValue = 11*CENT;\n+    spend.vout[0].scriptPubKey = scriptPubKey;\n+\n+    // Sign:\n+    std::vector<unsigned char> vchSig;\n+    uint256 hash = SignatureHash(scriptPubKey, spend, 0, SIGHASH_ALL, 0, SIGVERSION_BASE);\n+    BOOST_CHECK(coinbaseKey.Sign(hash, vchSig));\n+    vchSig.push_back((unsigned char)SIGHASH_ALL);\n+    spend.vin[0].scriptSig << vchSig;\n+\n+    LOCK(cs_main);\n+\n+    CValidationState state;\n+    PrecomputedTransactionData txdata(spends[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123860597",
      "id" : 123860597,
      "original_commit_id" : "35b420a4837411f3dedafaf09768a33c77f13f5d",
      "original_position" : 48,
      "path" : "src/test/checkinputs_script_cache_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 46109089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123860597",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123861801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123861801"
         }
      },
      "body" : "Heh, thats what happens when you change a variable type after fixing the test.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-23T23:30:38Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus/validation.h\"\n+#include \"validation.h\"\n+#include \"coins.h\"\n+#include \"script/standard.h\"\n+#include \"script/sign.h\"\n+\n+#include \"test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks);\n+\n+BOOST_AUTO_TEST_SUITE(checkinptus_script_cache_tests)\n+\n+BOOST_FIXTURE_TEST_CASE(kheckinputs_cache_test, TestChain100Setup)\n+{\n+    // Check that CheckInputs properly invalidates cache entries when the provided flags change,\n+    // and doesn't generate new script checks when it should have a cache entry.\n+\n+    InitScriptExecutionCache();\n+\n+    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+\n+    // Create a double-spend of mature coinbase txn:\n+    CMutableTransaction spend;\n+    spend.nVersion = 1;\n+    spend.vin.resize(1);\n+    spend.vin[0].prevout.hash = coinbaseTxns[0].GetHash();\n+    spend.vin[0].prevout.n = 0;\n+    spend.vout.resize(1);\n+    spend.vout[0].nValue = 11*CENT;\n+    spend.vout[0].scriptPubKey = scriptPubKey;\n+\n+    // Sign:\n+    std::vector<unsigned char> vchSig;\n+    uint256 hash = SignatureHash(scriptPubKey, spend, 0, SIGHASH_ALL, 0, SIGVERSION_BASE);\n+    BOOST_CHECK(coinbaseKey.Sign(hash, vchSig));\n+    vchSig.push_back((unsigned char)SIGHASH_ALL);\n+    spend.vin[0].scriptSig << vchSig;\n+\n+    LOCK(cs_main);\n+\n+    CValidationState state;\n+    PrecomputedTransactionData txdata(spends[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r123861801",
      "id" : 123861801,
      "original_commit_id" : "35b420a4837411f3dedafaf09768a33c77f13f5d",
      "original_position" : 48,
      "path" : "src/test/checkinputs_script_cache_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 46110340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-27T20:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123861801",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK 316d328b915f2e23bb750096ee9878b14dfd0a26",
      "created_at" : "2017-06-26T23:09:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-311206891",
      "id" : 311206891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-26T23:09:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311206891",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I believe @sdaftuar indicated that he had a better test written for this, not sure what format it takes, however.",
      "created_at" : "2017-06-27T00:37:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-311219744",
      "id" : 311219744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-27T00:37:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311219744",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Verified empirically that this actually gives a performance improvement:\r\n\r\nLast 10 block verifications on my server (benchmarked using -debug=bench):\r\n\r\nOn master as of a few weeks ago:\r\n```\r\n2017-06-26 22:16:21.499109     - Verify 5160 txins: 118.87ms (0.023ms/txin) [96.86s]\r\n2017-06-26 22:22:34.710518     - Verify 3957 txins: 84.70ms (0.021ms/txin) [96.95s]\r\n2017-06-26 22:32:43.025738     - Verify 4333 txins: 85.08ms (0.020ms/txin) [97.03s]\r\n2017-06-26 22:41:47.084320     - Verify 4300 txins: 83.29ms (0.019ms/txin) [97.12s]\r\n2017-06-26 22:46:33.711967     - Verify 4650 txins: 60.67ms (0.013ms/txin) [97.18s]\r\n2017-06-26 22:53:00.210314     - Verify 4656 txins: 61.19ms (0.013ms/txin) [97.24s]\r\n2017-06-26 22:54:35.550521     - Verify 5128 txins: 100.05ms (0.020ms/txin) [97.34s]\r\n2017-06-26 23:16:50.156286     - Verify 4889 txins: 118.09ms (0.024ms/txin) [97.46s]\r\n2017-06-26 23:18:17.993009     - Verify 4973 txins: 104.94ms (0.021ms/txin) [97.56s]\r\n2017-06-26 23:27:55.039898     - Verify 4712 txins: 92.86ms (0.020ms/txin) [97.65s]\r\n```\r\n\r\nAfter restarting with this PR:\r\n```\r\n2017-06-26 23:38:16.352833     - Verify 6016 txins: 39.89ms (0.007ms/txin) [0.26s]\r\n2017-06-26 23:38:37.499180     - Verify 6650 txins: 33.67ms (0.005ms/txin) [0.29s]\r\n2017-06-26 23:52:52.539748     - Verify 4686 txins: 60.94ms (0.013ms/txin) [0.35s]\r\n2017-06-27 00:34:42.788390     - Verify 4417 txins: 61.53ms (0.014ms/txin) [0.42s]\r\n2017-06-27 00:38:47.022972     - Verify 3023 txins: 33.88ms (0.011ms/txin) [0.45s]\r\n2017-06-27 00:42:59.372504     - Verify 4289 txins: 38.45ms (0.009ms/txin) [0.49s]\r\n2017-06-27 00:44:06.469073     - Verify 5065 txins: 34.92ms (0.007ms/txin) [0.52s]\r\n2017-06-27 00:53:41.905643     - Verify 4378 txins: 72.81ms (0.017ms/txin) [0.60s]\r\n2017-06-27 01:04:23.953806     - Verify 4917 txins: 52.77ms (0.011ms/txin) [0.65s]\r\n2017-06-27 01:08:59.598035     - Verify 5002 txins: 48.47ms (0.010ms/txin) [0.70s]\r\n```",
      "created_at" : "2017-06-27T04:57:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-311253118",
      "id" : 311253118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-27T04:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311253118",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Replaced test with one by @sdaftuar which is much better. Should be good to go now.",
      "created_at" : "2017-06-27T20:05:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-311469664",
      "id" : 311469664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-27T20:05:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311469664",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "ACK e3f9c05",
      "created_at" : "2017-06-27T21:00:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-311484062",
      "id" : 311484062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-06-27T21:00:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311484062",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r124683567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124683567"
         }
      },
      "body" : "This logic may become unnecessary with #10699.",
      "commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "created_at" : "2017-06-28T23:45:03Z",
      "diff_hunk" : "@@ -84,4 +90,282 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n     BOOST_CHECK_EQUAL(mempool.size(), 0);\n }\n \n+// Run CheckInputs (using pcoinsTip) on the given transaction, for all script\n+// flags.  Test that CheckInputs passes for all flags that don't overlap with\n+// the failing_flags argument, but otherwise fails.\n+// CHECKLOCKTIMEVERIFY and CHECKSEQUENCEVERIFY (and future NOP codes that may\n+// get reassigned) have an interaction with DISCOURAGE_UPGRADABLE_NOPS: if\n+// the script flags used contain DISCOURAGE_UPGRADABLE_NOPS but don't contain\n+// CHECKLOCKTIMEVERIFY (or CHECKSEQUENCEVERIFY), but the script does contain\n+// OP_CHECKLOCKTIMEVERIFY (or OP_CHECKSEQUENCEVERIFY), then script execution\n+// should fail.\n+// Capture this interaction with the upgraded_nop argument: set it when evaluating\n+// any script flag that is implemented as an upgraded NOP code.\n+void ValidateCheckInputsForAllFlags(CMutableTransaction &tx, uint32_t failing_flags, bool add_to_cache, bool upgraded_nop)\n+{\n+    PrecomputedTransactionData txdata(tx);\n+    // If we add many more flags, this loop can get too expensive, but we can\n+    // rewrite in the future to randomly pick a set of flags to evaluate.\n+    for (uint32_t test_flags=0; test_flags < (1U << 16); test_flags += 1) {\n+        CValidationState state;\n+        // Filter out incompatible flag choices\n+        if ((test_flags & SCRIPT_VERIFY_CLEANSTACK)) {\n+            // CLEANSTACK requires P2SH and WITNESS, see VerifyScript() in\n+            // script/interpreter.cpp\n+            test_flags |= SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS;\n+        }\n+        if ((test_flags & SCRIPT_VERIFY_WITNESS)) {\n+            // WITNESS requires P2SH\n+            test_flags |= SCRIPT_VERIFY_P2SH;\n+        }\n+        bool ret = CheckInputs(tx, state, pcoinsTip, true, test_flags, true, add_to_cache, txdata, nullptr);\n+        // CheckInputs should succeed iff test_flags doesn't intersect with\n+        // failing_flags\n+        bool expected_return_value = !(test_flags & failing_flags);\n+        if (expected_return_value && upgraded_nop) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#discussion_r124683567",
      "id" : 124683567,
      "original_commit_id" : "e3f9c05b966622146e090f2a01a913516ccb874a",
      "original_position" : 54,
      "path" : "src/test/txvalidationcache_tests.cpp",
      "position" : 54,
      "pull_request_review_id" : 46997220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10192",
      "updated_at" : "2017-06-28T23:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124683567",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "posthumous utACK\r\n\r\nThanks for doing this.\r\n",
      "created_at" : "2017-07-05T20:18:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-313214819",
      "id" : 313214819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-07-05T20:18:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313214819",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "probably wrong place to have this conversation, but for the sake of continuity...\r\n\r\n> @JeremyRubin I have not, that would likely be interesting in the future (as well as possibly not making it an even 1/2-1/2 split in memory usage).\r\n\r\nYeah I've (asynchronously) been thinking about this one a little bit in spare cycles. There are a couple tricks on could do to easily increase frequency, e.g. add a insert_n_times to the cuckoocache where you can specify that it should be put onto 1-8 of it's hash locations. This makes the hash \"stickier\" in memory compared to other entries and is pretty easy to compute.\r\n\r\nGenerally, this also provides a really interesting mechanism for further tuning the hit rate based on other priors. E.g., if a txn comes in and we estimate that it has a 0.5 chance of entering a block, we could set it to have, say, half of it's hash values inserted onto. If a txn comes in and we estimate that it has 0.25 we could fill a quarter of them.\r\n\r\nThis can also be simulated by inserting the hash N times with different salts or something without modifying the cuckoocache internally.",
      "created_at" : "2017-07-06T08:45:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10192#issuecomment-313334895",
      "id" : 313334895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10192",
      "updated_at" : "2017-07-06T08:45:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313334895",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]

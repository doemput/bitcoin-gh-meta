[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10109#discussion_r108856027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108856027"
         }
      },
      "body" : "style nit: Any reason you don't mention on_pong here?",
      "commit_id" : "159fe88abfadf67410578c145e631819cf50b660",
      "created_at" : "2017-03-30T07:22:26Z",
      "diff_hunk" : "@@ -1506,17 +1490,36 @@ def deliver(self, conn, message):\n             except:\n                 logger.exception(\"ERROR delivering %s\" % repr(message))\n \n-    def on_version(self, conn, message):\n-        if message.nVersion >= 209:\n-            conn.send_message(msg_verack())\n-        conn.ver_send = min(MY_VERSION, message.nVersion)\n-        if message.nVersion < 209:\n-            conn.ver_recv = conn.ver_send\n-        conn.nServices = message.nServices\n+    def set_deliver_sleep_time(self, value):\n+        with mininode_lock:\n+            self.deliver_sleep_time = value\n \n-    def on_verack(self, conn, message):\n-        conn.ver_recv = conn.ver_send\n-        self.verack_received = True\n+    def get_deliver_sleep_time(self):\n+        with mininode_lock:\n+            return self.deliver_sleep_time\n+\n+    # Callbacks which can be overridden by subclasses\n+    #################################################\n+\n+    def on_addr(self, conn, message): pass\n+    def on_alert(self, conn, message): pass\n+    def on_block(self, conn, message): pass\n+    def on_blocktxn(self, conn, message): pass\n+    def on_close(self, conn): pass\n+    def on_cmpctblock(self, conn, message): pass\n+    def on_feefilter(self, conn, message): pass\n+    def on_getaddr(self, conn, message): pass\n+    def on_getblocks(self, conn, message): pass\n+    def on_getblocktxn(self, conn, message): pass\n+    def on_getdata(self, conn, message): pass\n+    def on_getheaders(self, conn, message): pass\n+    def on_headers(self, conn, message): pass\n+    def on_mempool(self, conn): pass\n+    def on_open(self, conn): pass",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10109#discussion_r108856027",
      "id" : 108856027,
      "original_commit_id" : "159fe88abfadf67410578c145e631819cf50b660",
      "original_position" : 68,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 68,
      "pull_request_review_id" : 29915963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10109",
      "updated_at" : "2017-03-30T07:22:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108856027",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10109#discussion_r108914102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108914102"
         }
      },
      "body" : "I put all the no-op callbacks in this block and the callbacks that do something below. Happy to move them around if you think that's unclear.",
      "commit_id" : "159fe88abfadf67410578c145e631819cf50b660",
      "created_at" : "2017-03-30T12:37:30Z",
      "diff_hunk" : "@@ -1506,17 +1490,36 @@ def deliver(self, conn, message):\n             except:\n                 logger.exception(\"ERROR delivering %s\" % repr(message))\n \n-    def on_version(self, conn, message):\n-        if message.nVersion >= 209:\n-            conn.send_message(msg_verack())\n-        conn.ver_send = min(MY_VERSION, message.nVersion)\n-        if message.nVersion < 209:\n-            conn.ver_recv = conn.ver_send\n-        conn.nServices = message.nServices\n+    def set_deliver_sleep_time(self, value):\n+        with mininode_lock:\n+            self.deliver_sleep_time = value\n \n-    def on_verack(self, conn, message):\n-        conn.ver_recv = conn.ver_send\n-        self.verack_received = True\n+    def get_deliver_sleep_time(self):\n+        with mininode_lock:\n+            return self.deliver_sleep_time\n+\n+    # Callbacks which can be overridden by subclasses\n+    #################################################\n+\n+    def on_addr(self, conn, message): pass\n+    def on_alert(self, conn, message): pass\n+    def on_block(self, conn, message): pass\n+    def on_blocktxn(self, conn, message): pass\n+    def on_close(self, conn): pass\n+    def on_cmpctblock(self, conn, message): pass\n+    def on_feefilter(self, conn, message): pass\n+    def on_getaddr(self, conn, message): pass\n+    def on_getblocks(self, conn, message): pass\n+    def on_getblocktxn(self, conn, message): pass\n+    def on_getdata(self, conn, message): pass\n+    def on_getheaders(self, conn, message): pass\n+    def on_headers(self, conn, message): pass\n+    def on_mempool(self, conn): pass\n+    def on_open(self, conn): pass",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10109#discussion_r108914102",
      "id" : 108914102,
      "original_commit_id" : "159fe88abfadf67410578c145e631819cf50b660",
      "original_position" : 68,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 68,
      "pull_request_review_id" : 29978538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10109",
      "updated_at" : "2017-03-30T12:37:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108914102",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]

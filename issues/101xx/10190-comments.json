[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r111810625"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111810625"
         }
      },
      "body" : "Guessing you'll want to change this comment.",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-17T20:10:22Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r111810625",
      "id" : 111810625,
      "original_commit_id" : "df93f6cc8d80e78eb8758a7d6b5148df9bc3afa9",
      "original_position" : 5,
      "path" : "test/functional/mining.py",
      "position" : null,
      "pull_request_review_id" : 33078653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/111810625",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112027035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112027035"
         }
      },
      "body" : "is `tmpl['transactions']` expected to be empty?",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T18:17:47Z",
      "diff_hunk" : "@@ -82,13 +83,13 @@ def run_test(self):\n         # Mine a block to leave initial block download\n         node.generate(1)\n         tmpl = node.getblocktemplate()\n-        if 'coinbasetxn' not in tmpl:\n-            rawcoinbase = encodeUNum(tmpl['height'])\n-            rawcoinbase += b'\\x01-'\n-            hexcoinbase = b2x(rawcoinbase)\n-            hexoutval = b2x(pack('<Q', tmpl['coinbasevalue']))\n-            tmpl['coinbasetxn'] = {'data': '01000000' + '01' + '0000000000000000000000000000000000000000000000000000000000000000ffffffff' + ('%02x' % (len(rawcoinbase),)) + hexcoinbase + 'fffffffe' + '01' + hexoutval + '00' + '00000000'}\n-        txlist = list(bytearray(a2b_hex(a['data'])) for a in (tmpl['coinbasetxn'],) + tuple(tmpl['transactions']))\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]) + 1)\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        tmpl['coinbasetxn'] = {'data': coinbase_tx.serialize()}\n+        txlist = [bytearray(coinbase_tx.serialize())]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112027035",
      "id" : 112027035,
      "original_commit_id" : "4687fe6a225613b204fa6ef9f8445fadc01d0039",
      "original_position" : 25,
      "path" : "test/functional/getblocktemplate_proposals.py",
      "position" : null,
      "pull_request_review_id" : 33078653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112027035",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112028662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112028662"
         }
      },
      "body" : "rename the test to `MiningTest`?",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T18:24:37Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"\n+\n+from binascii import b2a_hex\n+import copy\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.mininode import CBlock\n+from test_framework.util import *\n+\n+def b2x(b):\n+    return b2a_hex(b).decode('ascii')\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate({'data': b2x(block.serialize()), 'mode': 'proposal'})\n+    assert_equal(rsp, expect)\n+\n+class GetBlockTemplateProposalTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112028662",
      "id" : 112028662,
      "original_commit_id" : "df93f6cc8d80e78eb8758a7d6b5148df9bc3afa9",
      "original_position" : 24,
      "path" : "test/functional/mining.py",
      "position" : null,
      "pull_request_review_id" : 33078653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112028662",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112028775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112028775"
         }
      },
      "body" : "`MiningTest`?",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T18:25:04Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"\n+\n+from binascii import b2a_hex\n+import copy\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.mininode import CBlock\n+from test_framework.util import *\n+\n+def b2x(b):\n+    return b2a_hex(b).decode('ascii')\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate({'data': b2x(block.serialize()), 'mode': 'proposal'})\n+    assert_equal(rsp, expect)\n+\n+class GetBlockTemplateProposalTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n+\n+    def setup_network(self):\n+        self.nodes = self.setup_nodes()\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        # Mine a block to leave initial block download\n+        node.generate(1)\n+        tmpl = node.getblocktemplate()\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]) + 1)\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]\n+\n+        self.log.info(\"getblocktemplate: Test valid block\")\n+        assert_template(node, block, None)\n+\n+        self.log.info(\"submitblock: Test block decode failure\")\n+        assert_raises_jsonrpc(-22, \"Block decode failed\", node.submitblock, b2x(block.serialize()[:-15]))\n+\n+        self.log.info(\"getblocktemplate: Test bad input hash for coinbase transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].vin[0].prevout.hash += 1\n+        bad_block.vtx[0].rehash()\n+        assert_template(node, bad_block, 'bad-cb-missing')\n+\n+        self.log.info(\"submitblock: Test invalid coinbase transaction\")\n+        assert_raises_jsonrpc(-22, \"Block does not start with a coinbase\", node.submitblock, b2x(bad_block.serialize()))\n+\n+        self.log.info(\"getblocktemplate: Test truncated final transaction\")\n+        assert_raises_jsonrpc(-22, \"Block decode failed\", node.getblocktemplate, {'data': b2x(block.serialize()[:-1]), 'mode': 'proposal'})\n+\n+        self.log.info(\"getblocktemplate: Test duplicate transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx.append(bad_block.vtx[0])\n+        assert_template(node, bad_block, 'bad-txns-duplicate')\n+\n+        self.log.info(\"getblocktemplate: Test invalid transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_tx = copy.deepcopy(bad_block.vtx[0])\n+        bad_tx.vin[0].prevout.hash = 255\n+        bad_tx.rehash()\n+        bad_block.vtx.append(bad_tx)\n+        assert_template(node, bad_block, 'bad-txns-inputs-missingorspent')\n+\n+        self.log.info(\"getblocktemplate: Test nonfinal transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].nLockTime = 2 ** 32 - 1\n+        bad_block.vtx[0].rehash()\n+        assert_template(node, bad_block, 'bad-txns-nonfinal')\n+\n+        self.log.info(\"getblocktemplate: Test bad tx count\")\n+        # The tx count is immediately after the block header\n+        TX_COUNT_OFFSET = 80\n+        bad_block_sn = bytearray(block.serialize())\n+        assert_equal(bad_block_sn[TX_COUNT_OFFSET], 1)\n+        bad_block_sn[TX_COUNT_OFFSET] += 1\n+        assert_raises_jsonrpc(-22, \"Block decode failed\", node.getblocktemplate, {'data': b2x(bad_block_sn), 'mode': 'proposal'})\n+\n+        self.log.info(\"getblocktemplate: Test bad bits\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.nBits = 469762303  # impossible in the real world\n+        assert_template(node, bad_block, 'bad-diffbits')\n+\n+        self.log.info(\"getblocktemplate: Test bad merkle root\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashMerkleRoot += 1\n+        assert_template(node, bad_block, 'bad-txnmrklroot', False)\n+\n+        self.log.info(\"getblocktemplate: Test bad timestamps\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.nTime = 2 ** 31 - 1\n+        assert_template(node, bad_block, 'time-too-new')\n+        bad_block.nTime = 0\n+        assert_template(node, bad_block, 'time-too-old')\n+\n+        self.log.info(\"getblocktemplate: Test not best block\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashPrevBlock = 123\n+        assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n+\n+if __name__ == '__main__':\n+    GetBlockTemplateProposalTest().main()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112028775",
      "id" : 112028775,
      "original_commit_id" : "df93f6cc8d80e78eb8758a7d6b5148df9bc3afa9",
      "original_position" : 125,
      "path" : "test/functional/mining.py",
      "position" : null,
      "pull_request_review_id" : 33078653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112028775",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/524761?v=3",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054387"
         }
      },
      "body" : "Yes, thanks.",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T20:22:52Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054387",
      "id" : 112054387,
      "original_commit_id" : "df93f6cc8d80e78eb8758a7d6b5148df9bc3afa9",
      "original_position" : 5,
      "path" : "test/functional/mining.py",
      "position" : null,
      "pull_request_review_id" : 33340965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054387",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054406"
         }
      },
      "body" : "agreed",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T20:22:57Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"\n+\n+from binascii import b2a_hex\n+import copy\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.mininode import CBlock\n+from test_framework.util import *\n+\n+def b2x(b):\n+    return b2a_hex(b).decode('ascii')\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate({'data': b2x(block.serialize()), 'mode': 'proposal'})\n+    assert_equal(rsp, expect)\n+\n+class GetBlockTemplateProposalTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054406",
      "id" : 112054406,
      "original_commit_id" : "df93f6cc8d80e78eb8758a7d6b5148df9bc3afa9",
      "original_position" : 24,
      "path" : "test/functional/mining.py",
      "position" : null,
      "pull_request_review_id" : 33340965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054406",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054429"
         }
      },
      "body" : "yep",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T20:23:03Z",
      "diff_hunk" : "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"\n+\n+from binascii import b2a_hex\n+import copy\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.mininode import CBlock\n+from test_framework.util import *\n+\n+def b2x(b):\n+    return b2a_hex(b).decode('ascii')\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate({'data': b2x(block.serialize()), 'mode': 'proposal'})\n+    assert_equal(rsp, expect)\n+\n+class GetBlockTemplateProposalTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n+\n+    def setup_network(self):\n+        self.nodes = self.setup_nodes()\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        # Mine a block to leave initial block download\n+        node.generate(1)\n+        tmpl = node.getblocktemplate()\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]) + 1)\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]\n+\n+        self.log.info(\"getblocktemplate: Test valid block\")\n+        assert_template(node, block, None)\n+\n+        self.log.info(\"submitblock: Test block decode failure\")\n+        assert_raises_jsonrpc(-22, \"Block decode failed\", node.submitblock, b2x(block.serialize()[:-15]))\n+\n+        self.log.info(\"getblocktemplate: Test bad input hash for coinbase transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].vin[0].prevout.hash += 1\n+        bad_block.vtx[0].rehash()\n+        assert_template(node, bad_block, 'bad-cb-missing')\n+\n+        self.log.info(\"submitblock: Test invalid coinbase transaction\")\n+        assert_raises_jsonrpc(-22, \"Block does not start with a coinbase\", node.submitblock, b2x(bad_block.serialize()))\n+\n+        self.log.info(\"getblocktemplate: Test truncated final transaction\")\n+        assert_raises_jsonrpc(-22, \"Block decode failed\", node.getblocktemplate, {'data': b2x(block.serialize()[:-1]), 'mode': 'proposal'})\n+\n+        self.log.info(\"getblocktemplate: Test duplicate transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx.append(bad_block.vtx[0])\n+        assert_template(node, bad_block, 'bad-txns-duplicate')\n+\n+        self.log.info(\"getblocktemplate: Test invalid transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_tx = copy.deepcopy(bad_block.vtx[0])\n+        bad_tx.vin[0].prevout.hash = 255\n+        bad_tx.rehash()\n+        bad_block.vtx.append(bad_tx)\n+        assert_template(node, bad_block, 'bad-txns-inputs-missingorspent')\n+\n+        self.log.info(\"getblocktemplate: Test nonfinal transaction\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].nLockTime = 2 ** 32 - 1\n+        bad_block.vtx[0].rehash()\n+        assert_template(node, bad_block, 'bad-txns-nonfinal')\n+\n+        self.log.info(\"getblocktemplate: Test bad tx count\")\n+        # The tx count is immediately after the block header\n+        TX_COUNT_OFFSET = 80\n+        bad_block_sn = bytearray(block.serialize())\n+        assert_equal(bad_block_sn[TX_COUNT_OFFSET], 1)\n+        bad_block_sn[TX_COUNT_OFFSET] += 1\n+        assert_raises_jsonrpc(-22, \"Block decode failed\", node.getblocktemplate, {'data': b2x(bad_block_sn), 'mode': 'proposal'})\n+\n+        self.log.info(\"getblocktemplate: Test bad bits\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.nBits = 469762303  # impossible in the real world\n+        assert_template(node, bad_block, 'bad-diffbits')\n+\n+        self.log.info(\"getblocktemplate: Test bad merkle root\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashMerkleRoot += 1\n+        assert_template(node, bad_block, 'bad-txnmrklroot', False)\n+\n+        self.log.info(\"getblocktemplate: Test bad timestamps\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.nTime = 2 ** 31 - 1\n+        assert_template(node, bad_block, 'time-too-new')\n+        bad_block.nTime = 0\n+        assert_template(node, bad_block, 'time-too-old')\n+\n+        self.log.info(\"getblocktemplate: Test not best block\")\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashPrevBlock = 123\n+        assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n+\n+if __name__ == '__main__':\n+    GetBlockTemplateProposalTest().main()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054429",
      "id" : 112054429,
      "original_commit_id" : "df93f6cc8d80e78eb8758a7d6b5148df9bc3afa9",
      "original_position" : 125,
      "path" : "test/functional/mining.py",
      "position" : null,
      "pull_request_review_id" : 33340965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054429",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054978"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054978"
         }
      },
      "body" : "yes, I believe so",
      "commit_id" : "8d80db230b3a07680cec1c227ff84dbe0678cf45",
      "created_at" : "2017-04-18T20:25:24Z",
      "diff_hunk" : "@@ -82,13 +83,13 @@ def run_test(self):\n         # Mine a block to leave initial block download\n         node.generate(1)\n         tmpl = node.getblocktemplate()\n-        if 'coinbasetxn' not in tmpl:\n-            rawcoinbase = encodeUNum(tmpl['height'])\n-            rawcoinbase += b'\\x01-'\n-            hexcoinbase = b2x(rawcoinbase)\n-            hexoutval = b2x(pack('<Q', tmpl['coinbasevalue']))\n-            tmpl['coinbasetxn'] = {'data': '01000000' + '01' + '0000000000000000000000000000000000000000000000000000000000000000ffffffff' + ('%02x' % (len(rawcoinbase),)) + hexcoinbase + 'fffffffe' + '01' + hexoutval + '00' + '00000000'}\n-        txlist = list(bytearray(a2b_hex(a['data'])) for a in (tmpl['coinbasetxn'],) + tuple(tmpl['transactions']))\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]) + 1)\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        tmpl['coinbasetxn'] = {'data': coinbase_tx.serialize()}\n+        txlist = [bytearray(coinbase_tx.serialize())]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#discussion_r112054978",
      "id" : 112054978,
      "original_commit_id" : "4687fe6a225613b204fa6ef9f8445fadc01d0039",
      "original_position" : 25,
      "path" : "test/functional/getblocktemplate_proposals.py",
      "position" : null,
      "pull_request_review_id" : 33341599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10190",
      "updated_at" : "2017-04-18T20:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112054978",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@gmaxwell can I convince you to take a look at this? It adds a regression test for your fix in #10146 ",
      "created_at" : "2017-05-09T20:30:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#issuecomment-300292029",
      "id" : 300292029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10190",
      "updated_at" : "2017-05-09T20:30:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300292029",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Concept ACK. I am testing the test.",
      "created_at" : "2017-05-26T01:10:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#issuecomment-304164543",
      "id" : 304164543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10190",
      "updated_at" : "2017-05-26T01:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/304164543",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "No great rush for this but it'd be good to get it in soonish. It includes a regression test for #10146, which was backported to 0.14.1. Other benefits:\r\n\r\n- tidies up test code\r\n- increases coverage of mining RPCs",
      "created_at" : "2017-06-18T16:12:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#issuecomment-309286965",
      "id" : 309286965,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10190",
      "updated_at" : "2017-06-18T16:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309286965",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "rebased",
      "created_at" : "2017-06-27T15:04:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#issuecomment-311387434",
      "id" : 311387434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10190",
      "updated_at" : "2017-06-27T15:04:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311387434",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "utACK 11ba8e9",
      "created_at" : "2017-07-11T13:21:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10190#issuecomment-314441373",
      "id" : 314441373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10190",
      "updated_at" : "2017-07-11T13:21:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314441373",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

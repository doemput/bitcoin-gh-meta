[
   {
      "body" : "Hmm, do we care about enforcing the listed copyright holders? As long as it appears in the MIT header, I'm not sure it matters all that much.\r\nAlso, would it be simple to enforce that all of the copyright date of files modified (according to git timestamp) after date X (ie ignore the issues from #9450) have the right copyright year on them?",
      "created_at" : "2017-01-01T15:31:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269907289",
      "id" : 269907289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-01T15:31:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269907289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "If we want it to not care about the holder's name, that would be simple to add in the regex. However, there are two side effects I can think of:\r\n\r\n1) It would then have to tolerate bad spelling/punctuation/capitalization.\r\n2) It would require some more sophisticated logic in the `update` part of the script to make sure that the last holder is the one that is incremented and not necessarily the one with `The Bitcoin Core developers`.\r\n\r\nIt would be simple to enforce that the end year gets bumped upon file modification. There are a couple downsides, so I left it out (for now):\r\n1) It takes a minute or two to pull the file modification history info from git. In CI that probably isn't much of a problem though. In other codebases, I have seen similar checks as part of `make test` scripting so a check that is reasonably fast is desirable.\r\n2) It might take a period of adjustment to train everyone to update the year in sync with changes and this might create demand for \"increment every file on January 1st dammit!\".",
      "created_at" : "2017-01-01T18:29:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269913822",
      "id" : 269913822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-01T18:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269913822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "body" : "> ... and hence requires an ACK from @nomnombtc\r\n\r\nSure whatever. ACK :)",
      "created_at" : "2017-01-02T02:17:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269929900",
      "id" : 269929900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-02T02:17:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269929900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1503969?v=3",
         "events_url" : "https://api.github.com/users/nomnombtc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nomnombtc/followers",
         "following_url" : "https://api.github.com/users/nomnombtc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nomnombtc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nomnombtc",
         "id" : 1503969,
         "login" : "nomnombtc",
         "organizations_url" : "https://api.github.com/users/nomnombtc/orgs",
         "received_events_url" : "https://api.github.com/users/nomnombtc/received_events",
         "repos_url" : "https://api.github.com/users/nomnombtc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nomnombtc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nomnombtc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nomnombtc"
      }
   },
   {
      "body" : "To be honest I'd prefer not to add to many of these extra bureaucratic rules to Travis. It's reason for existence is to test the code. If too many auxiliary checks are added it becomes too pesky it increases the chance people will just skip it and merge anyway, as sometimes something needs to be merged.\r\n\r\nCopyright is a grey area but please don't go on to add code style checks and such...\r\n",
      "created_at" : "2017-01-02T08:27:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269944158",
      "id" : 269944158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-02T08:27:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/269944158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thanks @laanwj - getting your take is most important. Keeping header adjustments periodic and asynchronous is perfectly reasonable.\r\n\r\nThe script improvements here are still useful for assessing and fixing up the headers as they drift over time. I have re-submitted as #9459 with the CI part and 'enforcement' language taken out.\r\n\r\n> Copyright is a grey area but please don't go on to add code style checks and such...\r\n\r\nCould you clarify your perspective on automated code style checks? Some sense of what is and isn't on the wish list would be helpful.\r\n\r\nThe way I see it, there are a couple levels of similar things that can be done for improving code style:\r\n\r\n1) a script to assess and highlight problems with basic style (spaces over tabstops, no trailing whitespace, don't end lines with double semicolons, etc...)\r\n2) attaching this basic style script to CI for enforcement\r\n3) a script wrapper to run clang-format/pylint/whatever and highlight deviations from a preferred style\r\n4) attaching this script wrapper CI to lock down a preferred style in the codebase (probably starting out with an include/exclude list to manage pain, but then ratchet up)\r\n\r\n1 and 3 can be done in a similar way to copyright_header.py to assess and periodically nudge the code in a good direction asynchronous to day-to-day development PRs.\r\n\r\n2 and 4 are more for automating away style nits to better focus on PR contents. Also, ratcheting towards and achieving a consistent code style helps make reading the code easier and bugs shallower. I would expect this to be more controversial since it requires some irritation and short-term pain. However if 1 and 3 are well-built and mature first, demand for CI integration may naturally follow.",
      "created_at" : "2017-01-02T22:01:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270024811",
      "id" : 270024811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-02T22:01:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270024811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "body" : "@laanwj On the flip side, everything that travis enforces is one less thing we need to check in review...Obviously code style checks aren't coming anytime soon, but I think this is reasonable.",
      "created_at" : "2017-01-03T11:16:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270093844",
      "id" : 270093844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-03T11:16:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270093844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Regarding code style: we're a long way from really enforcing anything regarding code style...would be cool if we could detect indentation errors (since those are likely to introduce real bugs, whereas other code style issues may or may not be as likely), but I'm not sure if we could do ONLY that with many tools.",
      "created_at" : "2017-01-03T11:17:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270094012",
      "id" : 270094012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-03T11:17:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270094012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Well, considering white space errors that caused bugs such as https://github.com/bitcoin/bitcoin/pull/9319#discussion_r95053851 or de8980df9d3a1fc0b257139cef10a0e6ba29a8bd, I think having an indicator that the touched code is clang formatted really makes sense. Some months ago I hacked up a script for travis, which fails when the new code is not formatted, but a failing travis is obviously not something we want in pull requests.\r\n\r\nWould it be possible to have another service run that provides this indicator, but is still not too prevalent so that a \"failing\" format check can be ignored?\r\n\r\n",
      "created_at" : "2017-01-07T11:20:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271077648",
      "id" : 271077648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-07T11:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271077648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "I am not deeply familiar with Travis CI, but from looking at their docs there doesn't seem to be an obvious way to 'warn' instead of 'fail'.\r\n\r\nOne interesting thing in the docs is a workflow they discuss for coverity scans:\r\n\r\nhttps://docs.travis-ci.com/user/coverity-scan/#Build-Submission-Frequency\r\n\r\nSimilarly, we could have a collection of tools and corresponding side branches that do thorough static code checks in CI. Any found issues can be fixed on those branches and then periodically cherry picked back into the mainline.",
      "created_at" : "2017-01-07T17:41:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271098074",
      "id" : 271098074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-07T17:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271098074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "body" : "Rebased. The conflict was in the files:\r\n\r\ncontrib/linearize/linearize-data.py\r\ncontrib/linearize/linearize-hashes.py\r\nshare/rpcuser/rpcuser.py\r\n\r\nFor three files, the conflict was with 27765b6403cece54320374b37afb01a0cfe571c3 which incremented the end year to 2016.\r\n\r\nFor linearize-data.py and linearize-hashes.py it *also* conflicted with 3c8f63ba7c7be62d462727f4d67633e1064f0f79 which changed the shebang at the top of the file to point to python3",
      "created_at" : "2017-01-07T18:12:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271099947",
      "id" : 271099947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-07T18:12:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271099947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "body" : "Heh, #9487 is pretty much exactly what I was referring to that it'd be ideal to fix in https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270094012.",
      "created_at" : "2017-01-07T18:50:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271102173",
      "id" : 271102173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-07T18:50:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271102173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "It should be possible to hack something up with cpplint (c.f. https://github.com/google/styleguide/blob/b282a74fea1455f4648d7f3098c954cce46e3a8d/cpplint/cpplint.py#L246)\r\n",
      "created_at" : "2017-01-07T19:51:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271105792",
      "id" : 271105792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-07T19:51:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271105792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "Closing this in favour of #9603. Enforcing copyright header styling (to a sub-tree level) is currently overkill.",
      "created_at" : "2017-01-21T00:07:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-274212672",
      "id" : 274212672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
      "updated_at" : "2017-01-21T00:07:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274212672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]

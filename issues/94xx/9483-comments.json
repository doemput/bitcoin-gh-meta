[
   {
      "body" : "(Prefer if we don't propagate the misuse of \"SPV\" for things that don't support fraud proofs)",
      "created_at" : "2017-01-06T17:14:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-270953023",
      "id" : 270953023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-06T17:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270953023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I kinda want to use an open lock icon instead of the likely meaningless to uses SPV in any case. \r\n\r\nWe also should do something about the confirmed counts in this mode. I'm not sure what. The issue is that confirmations mean less when you're not validating.  Perhaps displaying transactions like they are unconfirmed until they have 6 blocks might be the thing to do. Or displaying a visible \"not-verified\" on any transaction with the not validated flag. ",
      "created_at" : "2017-01-06T21:24:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271011343",
      "id" : 271011343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-06T21:24:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271011343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Indeed, I would assume any mode like this shouldn't count confirmation at all.",
      "created_at" : "2017-01-06T23:42:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271040132",
      "id" : 271040132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-06T23:42:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271040132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "How about a flag for showing confirmations during SPV mode? Default to off.\r\n\r\nPeople who understand the implications and just don't want to bother having to search their address on an explorer can enable in the menu / config",
      "created_at" : "2017-01-07T05:05:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271063561",
      "id" : 271063561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-07T05:05:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271063561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6586275?v=3",
         "events_url" : "https://api.github.com/users/dabura667/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dabura667/followers",
         "following_url" : "https://api.github.com/users/dabura667/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dabura667/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dabura667",
         "id" : 6586275,
         "login" : "dabura667",
         "organizations_url" : "https://api.github.com/users/dabura667/orgs",
         "received_events_url" : "https://api.github.com/users/dabura667/received_events",
         "repos_url" : "https://api.github.com/users/dabura667/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dabura667/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dabura667/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dabura667"
      }
   },
   {
      "body" : "@dabura667 Is it sufficient to simply show it in the transaction details dialog, perhaps?",
      "created_at" : "2017-01-07T05:52:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271065224",
      "id" : 271065224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-07T05:52:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271065224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr I would think so, yes.",
      "created_at" : "2017-01-07T09:13:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271072461",
      "id" : 271072461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-07T09:13:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271072461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6586275?v=3",
         "events_url" : "https://api.github.com/users/dabura667/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dabura667/followers",
         "following_url" : "https://api.github.com/users/dabura667/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dabura667/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dabura667",
         "id" : 6586275,
         "login" : "dabura667",
         "organizations_url" : "https://api.github.com/users/dabura667/orgs",
         "received_events_url" : "https://api.github.com/users/dabura667/received_events",
         "repos_url" : "https://api.github.com/users/dabura667/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dabura667/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dabura667/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dabura667"
      }
   },
   {
      "body" : "On transactions screen, fully-confirmed receiving txs show only one confirmation, and fully-confirmed sending txs show \"unconfirmed\" with question marks.  \r\n![spv-txscreen](https://cloud.githubusercontent.com/assets/21127776/21752655/6e4431e0-d5aa-11e6-9493-141437b40085.png)\r\n",
      "created_at" : "2017-01-08T18:58:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271170997",
      "id" : 271170997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-08T18:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271170997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21127776?v=3",
         "events_url" : "https://api.github.com/users/molxyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/molxyz/followers",
         "following_url" : "https://api.github.com/users/molxyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/molxyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/molxyz",
         "id" : 21127776,
         "login" : "molxyz",
         "organizations_url" : "https://api.github.com/users/molxyz/orgs",
         "received_events_url" : "https://api.github.com/users/molxyz/received_events",
         "repos_url" : "https://api.github.com/users/molxyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/molxyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/molxyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/molxyz"
      }
   },
   {
      "body" : "@molxyz I've also noticed the same thing, confirmations in Transactions list don't update, unless I restart Core.\r\n\r\nOther than that it works great.\r\n\r\nI used this for testing: `./bitcoin-qt -spv=1 -autorequestblocks=0 -testnet`.",
      "created_at" : "2017-01-08T19:45:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271174040",
      "id" : 271174040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-08T19:45:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271174040",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4371?v=3",
         "events_url" : "https://api.github.com/users/diegoviola/events{/privacy}",
         "followers_url" : "https://api.github.com/users/diegoviola/followers",
         "following_url" : "https://api.github.com/users/diegoviola/following{/other_user}",
         "gists_url" : "https://api.github.com/users/diegoviola/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/diegoviola",
         "id" : 4371,
         "login" : "diegoviola",
         "organizations_url" : "https://api.github.com/users/diegoviola/orgs",
         "received_events_url" : "https://api.github.com/users/diegoviola/received_events",
         "repos_url" : "https://api.github.com/users/diegoviola/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/diegoviola/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/diegoviola/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/diegoviola"
      }
   },
   {
      "body" : "Thanks for reporting. This seems to be a UI update issue. Will fix it in the next overhaul / PR update.",
      "created_at" : "2017-01-08T21:35:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271181374",
      "id" : 271181374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-08T21:35:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271181374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Thought: Can this be made to work with external wallets/software?",
      "created_at" : "2017-01-20T20:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-274171231",
      "id" : 274171231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-20T20:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274171231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> Thought: Can this be made to work with external wallets/software?\r\n\r\nI don't know what you mean by this.\r\nCan you make an use-case example?",
      "created_at" : "2017-01-21T09:29:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-274250613",
      "id" : 274250613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-21T09:29:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274250613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Needs rebase.\r\nConcept ACK\r\n\r\nWhat happens with -autorequestblocks=0 -spv=0?\r\nI assume both -spv and -autorequestblocks are 1 by default. With -spv=0 -autorequestblocks=1 you would get what you have today, but is it really so useful compared to -spv=1 -autorequestblocks=1 ?\r\n\r\nI don't know it seems overly complicated. I thought we would just have a single param spvonly that defaults to 0 (equivalent to this autorequestblocks, and your spv is always =1, ie spvonly=0 equivalent to -spv=1 -autorequestblocks=1, spvonly=1 equivalent to -spv=1 -autorequestblocks=0). Not sure, just thinking out loud.",
      "created_at" : "2017-01-24T14:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-274812696",
      "id" : 274812696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-24T14:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274812696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Rebased.\r\n\r\n> What happens with -autorequestblocks=0 -spv=0?\r\n\r\nThis would result in a mode where no blocks are automatically requested (only headers are fetched).\r\n`autorequestblocks=0` is a debug option and I could imagine some interesting use-cases where you only want to fetch certain blocks with `requestblocks` RPC call.",
      "created_at" : "2017-01-24T15:10:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-274830852",
      "id" : 274830852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-24T15:10:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274830852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Adapted to work with bumpfee.\r\nAdded a fix for the UI update issue reported by @molxyz and @diegoviola (https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-271170997).",
      "created_at" : "2017-01-24T20:12:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-274924573",
      "id" : 274924573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-01-24T20:12:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274924573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97670226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97670226"
         }
      },
      "body" : "It would be nice if you could choose one of the terms \"nonvalidation\" \"nonvalidated\" and \"nvs\" and use it consistently everywhere in the code (personally I like \"nonvalidated\"). Right now it seems like everything is named randomly and it's hard to remember what things are called.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-01-24T22:43:26Z",
      "diff_hunk" : "@@ -141,6 +141,9 @@ class CWalletDB : public CDB\n     bool WriteBestBlock(const CBlockLocator& locator);\n     bool ReadBestBlock(CBlockLocator& locator);\n \n+    bool WriteNonValidationBestBlock(const CBlockLocator& locator);\n+    bool ReadNonValidationBestBlock(CBlockLocator& locator);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97670226",
      "id" : 97670226,
      "original_commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "original_position" : 5,
      "path" : "src/wallet/walletdb.h",
      "position" : 5,
      "pull_request_review_id" : 18287308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-08T22:10:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97670226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97671419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97671419"
         }
      },
      "body" : "Comment is out of date. Could you update it to mention that this now checks the wallet, and also mention why it does this (maybe it should be obvious, but the reason isn't clear to me yet).",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-01-24T22:50:21Z",
      "diff_hunk" : "@@ -3085,13 +3122,16 @@ bool SendMessages(CNode* pto, CConnman& connman, std::atomic<bool>& interruptMsg\n                     }\n                     // Not in the mempool anymore? don't bother sending it.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97671419",
      "id" : 97671419,
      "original_commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "original_position" : 149,
      "path" : "src/net_processing.cpp",
      "position" : 149,
      "pull_request_review_id" : 18287308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-01-24T23:12:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97671419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97672157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97672157"
         }
      },
      "body" : "Any reason not to call this `FindTransaction` like the signal which it binds to? FindTransaction definitely seems like a better name given the implementation because if this method is called, it will return a transaction whether it is in the mempool or not.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-01-24T22:54:59Z",
      "diff_hunk" : "@@ -1182,6 +1212,14 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::GetNonMempoolTransaction(const uint256 &hash, CTransactionRef &txsp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97672157",
      "id" : 97672157,
      "original_commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "original_position" : 94,
      "path" : "src/wallet/wallet.cpp",
      "position" : 94,
      "pull_request_review_id" : 18287308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T21:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97672157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97672320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97672320"
         }
      },
      "body" : "txsp = mi->second.tx; might be better to avoid a temporary.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-01-24T22:55:55Z",
      "diff_hunk" : "@@ -1182,6 +1212,14 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::GetNonMempoolTransaction(const uint256 &hash, CTransactionRef &txsp)\n+{\n+    map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(hash);\n+    if (mi != mapWallet.end())\n+    {\n+        txsp = MakeTransactionRef(mi->second);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97672320",
      "id" : 97672320,
      "original_commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "original_position" : 99,
      "path" : "src/wallet/wallet.cpp",
      "position" : 99,
      "pull_request_review_id" : 18287308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-01-24T23:12:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97672320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97673509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97673509"
         }
      },
      "body" : "I think you can just make pNVSLastKnownBestHeader and pNVSBestBlock into const pointers to avoid these const_casts.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-01-24T23:03:13Z",
      "diff_hunk" : "@@ -1165,11 +1175,31 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n     }\n }\n \n-void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, int posInBlock)\n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n {\n     LOCK2(cs_main, cs_wallet);\n \n-    if (!AddToWalletIfInvolvingMe(tx, pindex, posInBlock, true))\n+    if (pNVSLastKnownBestHeader && !headersChainActive.Contains(pNVSLastKnownBestHeader))\n+    {\n+        const CBlockIndex *pindexFork = headersChainActive.FindFork(pNVSLastKnownBestHeader);\n+        if (headersChainActive.Tip() && headersChainActive.Tip() != pindexFork)\n+        {\n+            pNVSLastKnownBestHeader = const_cast<CBlockIndex *>(pindexFork);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97673509",
      "id" : 97673509,
      "original_commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "original_position" : 71,
      "path" : "src/wallet/wallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 18287308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-01-24T23:12:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97673509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97673910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97673910"
         }
      },
      "body" : "fInitialDownload isn't actually used, though maybe it is worth keeping if you plan to unify with the NotifyHeaderTip signal in the future.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-01-24T23:05:25Z",
      "diff_hunk" : "@@ -1165,11 +1175,31 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n     }\n }\n \n-void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, int posInBlock)\n+void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r97673910",
      "id" : 97673910,
      "original_commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "original_position" : 61,
      "path" : "src/wallet/wallet.cpp",
      "position" : 61,
      "pull_request_review_id" : 18287308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-01-24T23:12:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97673910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100077677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100077677"
         }
      },
      "body" : "I think it would be better if this class didn't exist, and the logic to download and process these blocks was integrated into the normal network processing logic instead of being segregated. This could mean:\r\n\r\n- Getting rid of the new `currentBlockRequest` global variable. Instead just add a simple `deque<const CBlockIndex*> blocksToDownloadFirst` or similar variable in `net_processing.cpp` alongside related variables like `mapBlocksInFlight`.\r\n- Replacing `CAuxiliaryBlockRequest::progressCallback` with an ordinary validationinterface signal.\r\n- Moving logic currently in `CAuxiliaryBlockRequest::fillInNextBlocks` to `FindNextBlocksToDownload`. Instead of having a convoluted control flow where `FindNextBlocksToDownload` calls `fillInNextBlocks` which calls back to a `FindNextBlocksToDownload` closure just to push a few `CBlockIndex` pointers onto a vector, you could use a regular for loop to fill the vector.\r\n- Moving logic currently in `CAuxiliaryBlockRequest::processWithPossibleBlock` into `ProcessNewBlock` or into an analog of `ActivateBestChain` called by `ProcessNewBlock` that sends the needed wallet and ui notifications for unvalidated blocks in the same way that `ActivateBestChain` does for validated blocks.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T14:34:11Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_AUXILIARYBLOCKREQUEST_H\n+#define BITCOIN_AUXILIARYBLOCKREQUEST_H\n+\n+#include <atomic>\n+#include \"chain.h\"\n+#include \"consensus/consensus.h\"\n+#include \"net.h\"\n+#include <stdint.h>\n+#include <vector>\n+\n+// \"Lock free\" auxiliary block request\n+class CAuxiliaryBlockRequest : public std::enable_shared_from_this<CAuxiliaryBlockRequest> {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100077677",
      "id" : 100077677,
      "original_commit_id" : "3a6364de88913b6bbf480c3ed1e17286528252ca",
      "original_position" : 16,
      "path" : "src/auxiliaryblockrequest.h",
      "position" : 16,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100077677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100100096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100100096"
         }
      },
      "body" : "Doxygen comment is now out of date.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T16:02:01Z",
      "diff_hunk" : "@@ -231,7 +232,7 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * @param[out]  fNewBlock A boolean which is set to indicate if the block was first received via this call",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100100096",
      "id" : 100100096,
      "original_commit_id" : "3a6364de88913b6bbf480c3ed1e17286528252ca",
      "original_position" : 9,
      "path" : "src/validation.h",
      "position" : 9,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100100096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100105549"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100105549"
         }
      },
      "body" : "Do you really want to skip this whole section just because blockRequest is not null? E.g. wouldn't it make sense to avoid WriteBlockToDisk below when fAlreadyHave is true like this is doing?\r\n\r\nAlso it's not clear to me whether `BLOCK_FAILED_VALID` and `setDirtyBlockIndex` below should be updated for blockRequest blocks. If you know that they should not be updated, it would be useful to have a comment explaining why.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T16:22:09Z",
      "diff_hunk" : "@@ -3160,40 +3160,47 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     if (!AcceptBlockHeader(block, state, chainparams, &pindex))\n         return false;\n \n-    // Try to process all requested blocks that we don't have, but only\n-    // process an unrequested block if it's new and has enough work to\n-    // advance our tip, and isn't too many blocks ahead.\n-    bool fAlreadyHave = pindex->nStatus & BLOCK_HAVE_DATA;\n-    bool fHasMoreWork = (chainActive.Tip() ? pindex->nChainWork > chainActive.Tip()->nChainWork : true);\n-    // Blocks that are too out-of-order needlessly limit the effectiveness of\n-    // pruning, because pruning will not delete block files that contain any\n-    // blocks which are too close in height to the tip.  Apply this test\n-    // regardless of whether pruning is enabled; it should generally be safe to\n-    // not process unrequested blocks.\n-    bool fTooFarAhead = (pindex->nHeight > int(chainActive.Height() + MIN_BLOCKS_TO_KEEP));\n-\n-    // TODO: Decouple this function from the block download logic by removing fRequested\n-    // This requires some new chain datastructure to efficiently look up if a\n-    // block is in a chain leading to a candidate for best tip, despite not\n-    // being such a candidate itself.\n-\n-    // TODO: deal better with return value and error conditions for duplicate\n-    // and unrequested blocks.\n-    if (fAlreadyHave) return true;\n-    if (!fRequested) {  // If we didn't ask for it:\n-        if (pindex->nTx != 0) return true;  // This is a previously-processed block that was pruned\n-        if (!fHasMoreWork) return true;     // Don't process less-work chains\n-        if (fTooFarAhead) return true;      // Block height is too high\n-    }\n-    if (fNewBlock) *fNewBlock = true;\n-\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), GetAdjustedTime()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n-        if (state.IsInvalid() && !state.CorruptionPossible()) {\n-            pindex->nStatus |= BLOCK_FAILED_VALID;\n-            setDirtyBlockIndex.insert(pindex);\n+    // don't validate the block if we fetch it with a auxiliary CAuxiliaryBlockRequest\n+    if (onlyHeaderCheck) {\n+        LogPrint(\"net\", \"Accept specific block %s (%d)\\n\", pindex->GetBlockHash().ToString(), pindex->nHeight);\n+    }\n+    else\n+    {\n+        // Try to process all requested blocks that we don't have, but only\n+        // process an unrequested block if it's new and has enough work to\n+        // advance our tip, and isn't too many blocks ahead.\n+        bool fAlreadyHave = pindex->nStatus & BLOCK_HAVE_DATA;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100105549",
      "id" : 100105549,
      "original_commit_id" : "3a6364de88913b6bbf480c3ed1e17286528252ca",
      "original_position" : 54,
      "path" : "src/validation.cpp",
      "position" : 150,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100105549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100135571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100135571"
         }
      },
      "body" : "Why change signature of SyncTransaction when the value of the new argument can already be derived from pindex? It seems like it would make handling code clearer if the validated condition were written out there where it is actually used, instead of determined by the networking code and then passed along.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T18:31:03Z",
      "diff_hunk" : "@@ -30,7 +30,7 @@ class PeerLogicValidation : public CValidationInterface {\n public:\n     PeerLogicValidation(CConnman* connmanIn);\n \n-    virtual void SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock);\n+    virtual void SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock, bool validated);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100135571",
      "id" : 100135571,
      "original_commit_id" : "340e363a7f229e42a02badbbb8ab26f5ed5a5215",
      "original_position" : 5,
      "path" : "src/net_processing.h",
      "position" : 19,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100135571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100137348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100137348"
         }
      },
      "body" : "Maybe change \"is_cancled\" to \"cancelled\" (to be consistent with \"created\"). Spelling error is also above in rpc documentation.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T18:38:58Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw runtime_error(\n+                            \"requestblocks (start|cancel|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...]) (<pass-internally>)\\n\"\n+                            \"\\nRequests blocks (auxiliary) by eventually downloading them.\\n\"\n+                            \"\\nDownload of the requested blocks will be priorized.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. action            (string, required) the action to execute\\n\"\n+                            \"                                        start  = start a new block request (overwrite existing one)\\n\"\n+                            \"                                        cancel = stop current block request\\n\"\n+                            \"                                        status = get info about current request\\n\"\n+                            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+                            \"3. pass-internally   (boolean, optional, default = false) If set, the transactions of the requested blocks get passed into the wallet/ZMQ/etc.\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   cancel: <true|false> (\\\"true\\\" if a blockrequest was present)\\n\"\n+                            \"   start: {\\\"overwrite\\\": <true|false>} (if the new blocksrequest has overwritten an already existign one\\n\"\n+                            \"   status: {\\n\"\n+                            \"              \\\"created\\\": <timestamp> (block request was created at this timestamp)\\n\"\n+                            \"              \\\"is_cancled\\\": <true|false> (set if blockrequest is cancled)\\n\"\n+                            \"              \\\"requested_blocks\\\": <number> (amount of requestes blocks)\\n\"\n+                            \"              \\\"loaded_blocks\\\": <number> (amount of blocks already available on disk)\\n\"\n+                            \"              \\\"processed_blocks\\\": <number> (amount of already processed blocks)\\n\"\n+                            \"           }\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            + HelpExampleRpc(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            );\n+\n+    if (request.params[0].get_str() == \"cancel\")\n+    {\n+        if (CAuxiliaryBlockRequest::GetCurrentRequest()) {\n+            CAuxiliaryBlockRequest::GetCurrentRequest()->cancel();\n+            return UniValue(true);\n+        }\n+        else\n+            return UniValue(false);\n+    }\n+    if (request.params[0].get_str() == \"status\")\n+    {\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest = CAuxiliaryBlockRequest::GetCurrentRequest();\n+        UniValue ret(UniValue::VOBJ);\n+        ret.pushKV(\"request_present\", (bool)blockRequest);\n+        if (blockRequest) {\n+            ret.pushKV(\"created\", UniValue(blockRequest->created));\n+            ret.pushKV(\"is_cancled\", UniValue(blockRequest->isCancelled()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100137348",
      "id" : 100137348,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 90,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 137,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100137348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100141701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100141701"
         }
      },
      "body" : "Can you explain what the the use-cases for this api are, and also what the use cases for the cancellation and SyncTransaction-suppressing options are? It doesn't seem good that this RPC can interfere with block download in spv mode and prevent transactions from getting to the wallet, but I can't figure out if this is designed to interact this way intentionally or if it is something that should be fixed.\r\n\r\n",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T18:58:01Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100141701",
      "id" : 100141701,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 45,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 92,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100141701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100142206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100142206"
         }
      },
      "body" : "Maybe avoid copy with const &",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T18:59:56Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw runtime_error(\n+                            \"requestblocks (start|cancel|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...]) (<pass-internally>)\\n\"\n+                            \"\\nRequests blocks (auxiliary) by eventually downloading them.\\n\"\n+                            \"\\nDownload of the requested blocks will be priorized.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. action            (string, required) the action to execute\\n\"\n+                            \"                                        start  = start a new block request (overwrite existing one)\\n\"\n+                            \"                                        cancel = stop current block request\\n\"\n+                            \"                                        status = get info about current request\\n\"\n+                            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+                            \"3. pass-internally   (boolean, optional, default = false) If set, the transactions of the requested blocks get passed into the wallet/ZMQ/etc.\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   cancel: <true|false> (\\\"true\\\" if a blockrequest was present)\\n\"\n+                            \"   start: {\\\"overwrite\\\": <true|false>} (if the new blocksrequest has overwritten an already existign one\\n\"\n+                            \"   status: {\\n\"\n+                            \"              \\\"created\\\": <timestamp> (block request was created at this timestamp)\\n\"\n+                            \"              \\\"is_cancled\\\": <true|false> (set if blockrequest is cancled)\\n\"\n+                            \"              \\\"requested_blocks\\\": <number> (amount of requestes blocks)\\n\"\n+                            \"              \\\"loaded_blocks\\\": <number> (amount of blocks already available on disk)\\n\"\n+                            \"              \\\"processed_blocks\\\": <number> (amount of already processed blocks)\\n\"\n+                            \"           }\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            + HelpExampleRpc(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            );\n+\n+    if (request.params[0].get_str() == \"cancel\")\n+    {\n+        if (CAuxiliaryBlockRequest::GetCurrentRequest()) {\n+            CAuxiliaryBlockRequest::GetCurrentRequest()->cancel();\n+            return UniValue(true);\n+        }\n+        else\n+            return UniValue(false);\n+    }\n+    if (request.params[0].get_str() == \"status\")\n+    {\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest = CAuxiliaryBlockRequest::GetCurrentRequest();\n+        UniValue ret(UniValue::VOBJ);\n+        ret.pushKV(\"request_present\", (bool)blockRequest);\n+        if (blockRequest) {\n+            ret.pushKV(\"created\", UniValue(blockRequest->created));\n+            ret.pushKV(\"is_cancled\", UniValue(blockRequest->isCancelled()));\n+            ret.pushKV(\"requested_blocks\", (int64_t)blockRequest->vBlocksToDownload.size());\n+            ret.pushKV(\"loaded_blocks\", (int)blockRequest->amountOfBlocksLoaded());\n+            ret.pushKV(\"processed_blocks\", (int64_t)blockRequest->processedUpToSize);\n+        }\n+        return ret;\n+    }\n+    if (request.params[0].get_str() == \"start\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");\n+\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (UniValue strHashU : hash_Uarray.getValues())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100142206",
      "id" : 100142206,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 108,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 155,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100142206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100144981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100144981"
         }
      },
      "body" : "Probably should use \"pass_internally\" (underscore instead of dash) so the argument can be a valid identifier in python and other languages.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T19:12:29Z",
      "diff_hunk" : "@@ -1433,8 +1531,8 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,  {} },\n     { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        true,  {\"height\"} },\n     { \"blockchain\",         \"verifychain\",            &verifychain,            true,  {\"checklevel\",\"nblocks\"} },\n-\n     { \"blockchain\",         \"preciousblock\",          &preciousblock,          true,  {\"blockhash\"} },\n+    { \"blockchain\",         \"requestblocks\",          &requestblocks,          true,  {\"action\", \"blockhashes\", \"pass-internally\"} },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100144981",
      "id" : 100144981,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 146,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 217,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100144981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100171010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100171010"
         }
      },
      "body" : "Seems like it makes sense to return \"headers-only-fork\" when `block->nChainTx == 0 && !headersChainActive.Contains(block)`, but I don't see how it makes sense to return \"headers-only\" when `block->nChainTx != 0 && headersChainActive.Contains(block)` instead of valid-fork or valid-headers when those conditions apply.\r\n\r\nMaybe this should be changed to:\r\n\r\n```\r\n} else if (block->nChainTx == 0) {\r\n    // This block cannot be connected because full block data for it or one of its parents is missing.\r\n    status = headersChainActive.Contains(block) ? \"headers-only-fork\" : \"headers-only\";\r\n} ...\r\n```",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T21:11:54Z",
      "diff_hunk" : "@@ -1251,9 +1252,12 @@ UniValue getchaintips(const JSONRPCRequest& request)\n         } else if (block->nStatus & BLOCK_FAILED_MASK) {\n             // This block or one of its ancestors is invalid.\n             status = \"invalid\";\n-        } else if (block->nChainTx == 0) {\n+        } else if (headersChainActive.Contains(block)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100171010",
      "id" : 100171010,
      "original_commit_id" : "1687a0e5bc958bd204644f2d5ad3647ab461d65d",
      "original_position" : 13,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 79,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100171010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100180187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100180187"
         }
      },
      "body" : "`!pcoin->fValidated` seems like it might be too lax a condition, because the transaction could be from an orphaned block. \r\n\r\nAnd it's unclear why this change would have any desirable effect given that `GetDepthInMainChain` is updated in this commit to search headersChainActive, so presumably any nonvalidated transaction in headersChainActive would return true for IsTrusted.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T21:55:45Z",
      "diff_hunk" : "@@ -1947,7 +1944,7 @@ CAmount CWallet::GetUnconfirmedBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n+            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && (!pcoin->fValidated || pcoin->InMempool()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100180187",
      "id" : 100180187,
      "original_commit_id" : "1cc9293bfaa9e506ee8bd9f83154ab0b905d6cab",
      "original_position" : 45,
      "path" : "src/wallet/wallet.cpp",
      "position" : 137,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100180187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100182392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100182392"
         }
      },
      "body" : "Probably should just squash this commit (`Keep track of the headers chain tip to detect forks`) together with commit `Add full working SPV mode to the wallet` to avoid the code churn here.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:06:52Z",
      "diff_hunk" : "@@ -1173,7 +1173,21 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n \n void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n {\n+    LOCK2(cs_main, cs_wallet);\n \n+    if (pLastKnownBestHeader != NULL)\n+    {\n+        if (!headersChainActive.Contains(pLastKnownBestHeader))\n+        {\n+            const CBlockIndex *pindexFork = headersChainActive.FindFork(pLastKnownBestHeader);\n+            if (headersChainActive.Tip() && headersChainActive.Tip() != pindexFork)\n+            {\n+                // fork detected\n+                // TODO",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100182392",
      "id" : 100182392,
      "original_commit_id" : "1d3011ef91ae88fce88647e7d4a3fe924ff0cb22",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100182392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100182620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100182620"
         }
      },
      "body" : "Should just make pLastKnownBestHeader a pointer to const to avoid the need for this cast.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:07:55Z",
      "diff_hunk" : "@@ -1173,7 +1173,21 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n \n void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pindexNew)\n {\n+    LOCK2(cs_main, cs_wallet);\n \n+    if (pLastKnownBestHeader != NULL)\n+    {\n+        if (!headersChainActive.Contains(pLastKnownBestHeader))\n+        {\n+            const CBlockIndex *pindexFork = headersChainActive.FindFork(pLastKnownBestHeader);\n+            if (headersChainActive.Tip() && headersChainActive.Tip() != pindexFork)\n+            {\n+                // fork detected\n+                // TODO\n+            }\n+        }\n+    }\n+    pLastKnownBestHeader = (CBlockIndex *)pindexNew;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100182620",
      "id" : 100182620,
      "original_commit_id" : "1d3011ef91ae88fce88647e7d4a3fe924ff0cb22",
      "original_position" : 18,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100182620",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100183635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100183635"
         }
      },
      "body" : "There's a race condition here where GetCurrentRequest() can return null between the first and second calls.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:11:49Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100183635",
      "id" : 100183635,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 87,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100183635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100183791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100183791"
         }
      },
      "body" : "double semicolon here, also probably should choose consistently between snake_case and camelCase for local variable names.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:12:14Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100183791",
      "id" : 100183791,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 92,
      "path" : "src/wallet/wallet.cpp",
      "position" : 239,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100183791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100184230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100184230"
         }
      },
      "body" : "Maybe for (const auto& entry : mapKeyBirth)",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:13:55Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;\n+    int nonValidationScanUpToHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        if (pNVSBestBlock)\n+            nonValidationScanUpToHeight = pNVSBestBlock->nHeight;\n+        chainActiveTip = chainActive.Tip();\n+        pIndex = headersChainActive.Tip();\n+        std::map<CKeyID, int64_t> mapKeyBirth;\n+        GetKeyBirthTimes(mapKeyBirth);\n+        for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100184230",
      "id" : 100184230,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 102,
      "path" : "src/wallet/wallet.cpp",
      "position" : 249,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100184230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100184301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100184301"
         }
      },
      "body" : "Maybe it->second",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:14:11Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;\n+    int nonValidationScanUpToHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        if (pNVSBestBlock)\n+            nonValidationScanUpToHeight = pNVSBestBlock->nHeight;\n+        chainActiveTip = chainActive.Tip();\n+        pIndex = headersChainActive.Tip();\n+        std::map<CKeyID, int64_t> mapKeyBirth;\n+        GetKeyBirthTimes(mapKeyBirth);\n+        for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n+            if ((*it).second < oldest_key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100184301",
      "id" : 100184301,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 103,
      "path" : "src/wallet/wallet.cpp",
      "position" : 250,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100184301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100186329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100186329"
         }
      },
      "body" : "Eliminate optional_timestamp argument? I don't see any calls where optional_timestamp is nonzero.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:23:46Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100186329",
      "id" : 100186329,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 85,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100186329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100186596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100186596"
         }
      },
      "body" : "As noted above, this case never seems to happen. But if it could happen, it would seem to negate all the code right above this, so maybe that code should be moved into an else.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:24:57Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;\n+    int nonValidationScanUpToHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        if (pNVSBestBlock)\n+            nonValidationScanUpToHeight = pNVSBestBlock->nHeight;\n+        chainActiveTip = chainActive.Tip();\n+        pIndex = headersChainActive.Tip();\n+        std::map<CKeyID, int64_t> mapKeyBirth;\n+        GetKeyBirthTimes(mapKeyBirth);\n+        for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n+            if ((*it).second < oldest_key)\n+                oldest_key = (*it).second;\n+        }\n+    }\n+\n+    if (optional_timestamp > 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100186596",
      "id" : 100186596,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 108,
      "path" : "src/wallet/wallet.cpp",
      "position" : 255,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100186596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100187697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100187697"
         }
      },
      "body" : "No need for const_cast if you just make pNVSBestBlock a const pointer.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:30:34Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;\n+    int nonValidationScanUpToHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        if (pNVSBestBlock)\n+            nonValidationScanUpToHeight = pNVSBestBlock->nHeight;\n+        chainActiveTip = chainActive.Tip();\n+        pIndex = headersChainActive.Tip();\n+        std::map<CKeyID, int64_t> mapKeyBirth;\n+        GetKeyBirthTimes(mapKeyBirth);\n+        for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n+            if ((*it).second < oldest_key)\n+                oldest_key = (*it).second;\n+        }\n+    }\n+\n+    if (optional_timestamp > 0)\n+    {\n+        oldest_key = optional_timestamp;\n+        nonValidationScanUpToHeight = 0;\n+    }\n+\n+    // find header\n+    if (!pIndex)\n+        return;\n+\n+    std::vector<const CBlockIndex*> blocksToDownload;\n+    do {\n+        if (pIndex == chainActiveTip)\n+            break;\n+\n+        // don't request blocks that are already scanned\n+        if (pIndex->nHeight <= nonValidationScanUpToHeight)\n+            break;\n+\n+        // check if block is relevant to this wallet\n+        if (pIndex->GetBlockTime() + 7200 < oldest_key)\n+            break;\n+\n+        // block is relevant, request\n+        blocksToDownload.push_back(pIndex);\n+\n+        // ensure we only request up to nMaxBlocksPerAuxiliaryRequest\n+        if (blocksToDownload.size() > nMaxBlocksPerAuxiliaryRequest)\n+            blocksToDownload.erase(blocksToDownload.begin());\n+        pIndex = pIndex->pprev;\n+    } while (pIndex->pprev);\n+\n+    // don't create empty CBlockRequests\n+    if (blocksToDownload.size() == 0)\n+        return;\n+    // reverse the blocks vector from older->newer\n+    std::reverse(blocksToDownload.begin(), blocksToDownload.end());\n+    // create an auxiliary block request\n+    std::shared_ptr<CAuxiliaryBlockRequest> auxiliaryRequest(new CAuxiliaryBlockRequest(blocksToDownload, GetAdjustedTime(), true, [this](std::shared_ptr<CAuxiliaryBlockRequest> cb_AuxiliaryBlockRequest, const CBlockIndex *pindex) -> bool {\n+\n+        LOCK2(cs_main, cs_wallet);\n+        if (pindex && (!pNVSBestBlock || pindex->nHeight > pNVSBestBlock->nHeight))\n+        {\n+            // write non validation best block\n+            pNVSBestBlock = const_cast<CBlockIndex *>(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100187697",
      "id" : 100187697,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 152,
      "path" : "src/wallet/wallet.cpp",
      "position" : 299,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100187697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100188554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100188554"
         }
      },
      "body" : "Could switch to from vector to deque, or treat blocksToDownload as a circular buffer and call std::rotate after the loop to avoid O(n^2) cost of erasing from the beginning of a vector in a loop.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-08T22:34:45Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;\n+    int nonValidationScanUpToHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        if (pNVSBestBlock)\n+            nonValidationScanUpToHeight = pNVSBestBlock->nHeight;\n+        chainActiveTip = chainActive.Tip();\n+        pIndex = headersChainActive.Tip();\n+        std::map<CKeyID, int64_t> mapKeyBirth;\n+        GetKeyBirthTimes(mapKeyBirth);\n+        for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n+            if ((*it).second < oldest_key)\n+                oldest_key = (*it).second;\n+        }\n+    }\n+\n+    if (optional_timestamp > 0)\n+    {\n+        oldest_key = optional_timestamp;\n+        nonValidationScanUpToHeight = 0;\n+    }\n+\n+    // find header\n+    if (!pIndex)\n+        return;\n+\n+    std::vector<const CBlockIndex*> blocksToDownload;\n+    do {\n+        if (pIndex == chainActiveTip)\n+            break;\n+\n+        // don't request blocks that are already scanned\n+        if (pIndex->nHeight <= nonValidationScanUpToHeight)\n+            break;\n+\n+        // check if block is relevant to this wallet\n+        if (pIndex->GetBlockTime() + 7200 < oldest_key)\n+            break;\n+\n+        // block is relevant, request\n+        blocksToDownload.push_back(pIndex);\n+\n+        // ensure we only request up to nMaxBlocksPerAuxiliaryRequest\n+        if (blocksToDownload.size() > nMaxBlocksPerAuxiliaryRequest)\n+            blocksToDownload.erase(blocksToDownload.begin());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100188554",
      "id" : 100188554,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 136,
      "path" : "src/wallet/wallet.cpp",
      "position" : 283,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100188554",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100325280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100325280"
         }
      },
      "body" : "Maybe should throw if no arguments passed.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T15:04:46Z",
      "diff_hunk" : "@@ -2913,6 +2914,32 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue setspv(const JSONRPCRequest& request)\n+{\n+    if (!EnsureWalletIsAvailable(request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100325280",
      "id" : 100325280,
      "original_commit_id" : "3756ad373539be49dab9cac08c42f3ca35d1b2d6",
      "original_position" : 17,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 94,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100325280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100326127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100326127"
         }
      },
      "body" : "Seems incongruous that unlike the setting -spv option, enabling spv via RPC does not update `fFetchBlocksWhileFetchingHeaders`",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T15:08:05Z",
      "diff_hunk" : "@@ -2913,6 +2914,32 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue setspv(const JSONRPCRequest& request)\n+{\n+    if (!EnsureWalletIsAvailable(request.fHelp))\n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw runtime_error(\n+                            \"setspv (true|false)\\n\"\n+                            \"\\nEnabled or disabled full block SPV mode.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. state             (boolean, optional) enables or disables the spv mode\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   status: <true|false> (\\\"true\\\" if the spv mode is enabled)\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"setspv\", \"\\\"true\\\"\")\n+                            + HelpExampleRpc(\"setspv\", \"\\\"true\\\"\")\n+                            );\n+\n+    if (request.params.size() == 1)\n+        pwalletMain->setSPVEnabled(request.params[0].get_bool());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100326127",
      "id" : 100326127,
      "original_commit_id" : "3756ad373539be49dab9cac08c42f3ca35d1b2d6",
      "original_position" : 31,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100326127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100326881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100326881"
         }
      },
      "body" : "Seems incongruous that unlike setting the -spv option, toggling the spv mode in the GUI does not update `fFetchBlocksWhileFetchingHeaders`.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T15:11:25Z",
      "diff_hunk" : "@@ -702,6 +710,21 @@ bool WalletModel::hdEnabled() const\n     return wallet->IsHDEnabled();\n }\n \n+bool WalletModel::spvEnabled() const\n+{\n+    return wallet->IsSPVEnabled();\n+}\n+\n+void WalletModel::setSpvEnabled(bool state)\n+{\n+    wallet->setSPVEnabled(state);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100326881",
      "id" : 100326881,
      "original_commit_id" : "e783bae27220e24e62ab7badd872b7411766623e",
      "original_position" : 40,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 65,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100326881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100354856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100354856"
         }
      },
      "body" : "I think it would make the logic of this PR (and the code) clearer if both `fFetchBlocksWhileFetchingHeaders` and `fAutoRequestBlocks` flags were both handled inside of `FindNextBlocksToDownload`, instead of one flag handled inside, and one outside.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T16:59:14Z",
      "diff_hunk" : "@@ -3187,7 +3188,9 @@ bool SendMessages(CNode* pto, CConnman& connman, std::atomic<bool>& interruptMsg\n         // Message: getdata (blocks)\n         //\n         vector<CInv> vGetData;\n-        if (!pto->fClient && (fFetch || !IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+        if (!pto->fClient && (fFetch || !IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER\n+                && (fFetchBlocksWhileFetchingHeaders || (headersChainActive.Tip() && headersChainActive.Tip()->GetBlockTime() > GetAdjustedTime()-600*24))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100354856",
      "id" : 100354856,
      "original_commit_id" : "9c4055dc46ad8dceecf098524e4577bb71da62d7",
      "original_position" : 14,
      "path" : "src/net_processing.cpp",
      "position" : 183,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100354856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100361215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100361215"
         }
      },
      "body" : "Maybe rename `fFetchBlocksWhileFetchingHeaders` to `fRequestBlocksWhileFetchingHeaders` for consistency with `fAutoRequestBlocks`.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T17:24:21Z",
      "diff_hunk" : "@@ -27,6 +27,9 @@ void UnregisterNodeSignals(CNodeSignals& nodeSignals);\n static const bool DEFAULT_AUTOMATIC_BLOCK_REQUESTS = true;\n extern std::atomic<bool> fAutoRequestBlocks;\n \n+static const bool DEFAULT_FETCH_BLOCKS_WHILE_FETCH_HEADERS = true;\n+extern std::atomic<bool> fFetchBlocksWhileFetchingHeaders;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100361215",
      "id" : 100361215,
      "original_commit_id" : "9c4055dc46ad8dceecf098524e4577bb71da62d7",
      "original_position" : 5,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100361215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100361396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100361396"
         }
      },
      "body" : "Should 600 be 3600?",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T17:25:04Z",
      "diff_hunk" : "@@ -3187,7 +3188,9 @@ bool SendMessages(CNode* pto, CConnman& connman, std::atomic<bool>& interruptMsg\n         // Message: getdata (blocks)\n         //\n         vector<CInv> vGetData;\n-        if (!pto->fClient && (fFetch || !IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+        if (!pto->fClient && (fFetch || !IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER\n+                && (fFetchBlocksWhileFetchingHeaders || (headersChainActive.Tip() && headersChainActive.Tip()->GetBlockTime() > GetAdjustedTime()-600*24))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100361396",
      "id" : 100361396,
      "original_commit_id" : "9c4055dc46ad8dceecf098524e4577bb71da62d7",
      "original_position" : 14,
      "path" : "src/net_processing.cpp",
      "position" : 183,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100361396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100392268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100392268"
         }
      },
      "body" : "Need to update the man page, too, I believe. Maybe also worth documenting that when -autorequestblocks is disabled, it only prevents blocks downloaded as part of the normal sync. It doesn't prevent downloading of blocks newer than the oldest wallet key in the -spv syncing code.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T19:33:45Z",
      "diff_hunk" : "@@ -435,6 +435,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-bip9params=deployment:start:end\", \"Use given start/end times for specified BIP9 deployment (regtest-only)\");\n+        strUsage += HelpMessageOpt(\"-autorequestblocks\", strprintf(\"Automatic block request, if disabled, blocks will not be requested in IBD/sync-up (default: %u)\", DEFAULT_AUTOMATIC_BLOCK_REQUESTS));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100392268",
      "id" : 100392268,
      "original_commit_id" : "567055e6c4894707d5bd8ea28402dbb721d24f15",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : 4,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100392268",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100393126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100393126"
         }
      },
      "body" : "spelling \"useful\"",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T19:37:24Z",
      "diff_hunk" : "@@ -507,6 +509,10 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n         return;\n     }\n \n+    // don't request any other blocks if we are in non autorequest mode (usefull for non-validation mode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100393126",
      "id" : 100393126,
      "original_commit_id" : "567055e6c4894707d5bd8ea28402dbb721d24f15",
      "original_position" : 13,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100393126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100397625"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100397625"
         }
      },
      "body" : "Const casts here should not be necessary if you declare pNVSLastKnownBestHeader and pNVSLastKnownBestHeader as pointers to const CBlockIndex objects.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T19:57:22Z",
      "diff_hunk" : "@@ -1175,19 +1178,20 @@ void CWallet::UpdatedBlockHeaderTip(bool fInitialDownload, const CBlockIndex *pi\n {\n     LOCK2(cs_main, cs_wallet);\n \n-    if (pLastKnownBestHeader != NULL)\n+    if (pNVSLastKnownBestHeader && !headersChainActive.Contains(pNVSLastKnownBestHeader))\n     {\n-        if (!headersChainActive.Contains(pLastKnownBestHeader))\n+        const CBlockIndex *pindexFork = headersChainActive.FindFork(pNVSLastKnownBestHeader);\n+        if (headersChainActive.Tip() && headersChainActive.Tip() != pindexFork)\n         {\n-            const CBlockIndex *pindexFork = headersChainActive.FindFork(pLastKnownBestHeader);\n-            if (headersChainActive.Tip() && headersChainActive.Tip() != pindexFork)\n-            {\n-                // fork detected\n-                // TODO\n-            }\n+            pNVSLastKnownBestHeader = const_cast<CBlockIndex *>(pindexFork);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100397625",
      "id" : 100397625,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 34,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100397625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100399039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100399039"
         }
      },
      "body" : "Seems to be a bug, this should probably say `!wtx.fValidated`.\r\n\r\nThis `CheckFinalTx(*wtx.tx, -1, !wtx.fValidated)` pattern is repeated enough times that I think it would be better if it were wrapped in a method:\r\n\r\n```\r\nbool CWalletTx::CheckFinal() const {\r\n    return CheckFinalTx(*tx, -1, !fValidated);\r\n}\r\n```",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:03:54Z",
      "diff_hunk" : "@@ -1151,7 +1152,7 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n     {\n         const CWalletTx& wtx = (*it).second;\n \n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx, -1, wtx.fValidated))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100399039",
      "id" : 100399039,
      "original_commit_id" : "1cc9293bfaa9e506ee8bd9f83154ab0b905d6cab",
      "original_position" : 40,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 40,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100399039",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100400047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100400047"
         }
      },
      "body" : "Maybe use make_shared.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:08:36Z",
      "diff_hunk" : "@@ -3897,6 +3914,95 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+void CWallet::RequestNonValidationScan(int64_t optional_timestamp)\n+{\n+    if (CAuxiliaryBlockRequest::GetCurrentRequest() && !CAuxiliaryBlockRequest::GetCurrentRequest()->isCompleted())\n+        return;\n+\n+    CBlockIndex *pIndex = NULL;\n+    CBlockIndex *chainActiveTip = NULL;\n+    int64_t oldest_key = std::numeric_limits<int64_t>::max();;\n+    int nonValidationScanUpToHeight = 0;\n+    {\n+        LOCK2(cs_main, cs_wallet);\n+        if (pNVSBestBlock)\n+            nonValidationScanUpToHeight = pNVSBestBlock->nHeight;\n+        chainActiveTip = chainActive.Tip();\n+        pIndex = headersChainActive.Tip();\n+        std::map<CKeyID, int64_t> mapKeyBirth;\n+        GetKeyBirthTimes(mapKeyBirth);\n+        for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n+            if ((*it).second < oldest_key)\n+                oldest_key = (*it).second;\n+        }\n+    }\n+\n+    if (optional_timestamp > 0)\n+    {\n+        oldest_key = optional_timestamp;\n+        nonValidationScanUpToHeight = 0;\n+    }\n+\n+    // find header\n+    if (!pIndex)\n+        return;\n+\n+    std::vector<const CBlockIndex*> blocksToDownload;\n+    do {\n+        if (pIndex == chainActiveTip)\n+            break;\n+\n+        // don't request blocks that are already scanned\n+        if (pIndex->nHeight <= nonValidationScanUpToHeight)\n+            break;\n+\n+        // check if block is relevant to this wallet\n+        if (pIndex->GetBlockTime() + 7200 < oldest_key)\n+            break;\n+\n+        // block is relevant, request\n+        blocksToDownload.push_back(pIndex);\n+\n+        // ensure we only request up to nMaxBlocksPerAuxiliaryRequest\n+        if (blocksToDownload.size() > nMaxBlocksPerAuxiliaryRequest)\n+            blocksToDownload.erase(blocksToDownload.begin());\n+        pIndex = pIndex->pprev;\n+    } while (pIndex->pprev);\n+\n+    // don't create empty CBlockRequests\n+    if (blocksToDownload.size() == 0)\n+        return;\n+    // reverse the blocks vector from older->newer\n+    std::reverse(blocksToDownload.begin(), blocksToDownload.end());\n+    // create an auxiliary block request\n+    std::shared_ptr<CAuxiliaryBlockRequest> auxiliaryRequest(new CAuxiliaryBlockRequest(blocksToDownload, GetAdjustedTime(), true, [this](std::shared_ptr<CAuxiliaryBlockRequest> cb_AuxiliaryBlockRequest, const CBlockIndex *pindex) -> bool {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100400047",
      "id" : 100400047,
      "original_commit_id" : "5585662d372ec422b45a6ae44d45c38d8c63eb82",
      "original_position" : 146,
      "path" : "src/wallet/wallet.cpp",
      "position" : 293,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100400047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100401972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100401972"
         }
      },
      "body" : "There's a race condition here if the state changes between the GetCurrentRequest() and setAsCurrentRequest() calls. Could easily be avoided by having setAsCurrentRequest return the overwrite bool, or a pointer to the previous request.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:17:49Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw runtime_error(\n+                            \"requestblocks (start|cancel|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...]) (<pass-internally>)\\n\"\n+                            \"\\nRequests blocks (auxiliary) by eventually downloading them.\\n\"\n+                            \"\\nDownload of the requested blocks will be priorized.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. action            (string, required) the action to execute\\n\"\n+                            \"                                        start  = start a new block request (overwrite existing one)\\n\"\n+                            \"                                        cancel = stop current block request\\n\"\n+                            \"                                        status = get info about current request\\n\"\n+                            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+                            \"3. pass-internally   (boolean, optional, default = false) If set, the transactions of the requested blocks get passed into the wallet/ZMQ/etc.\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   cancel: <true|false> (\\\"true\\\" if a blockrequest was present)\\n\"\n+                            \"   start: {\\\"overwrite\\\": <true|false>} (if the new blocksrequest has overwritten an already existign one\\n\"\n+                            \"   status: {\\n\"\n+                            \"              \\\"created\\\": <timestamp> (block request was created at this timestamp)\\n\"\n+                            \"              \\\"is_cancled\\\": <true|false> (set if blockrequest is cancled)\\n\"\n+                            \"              \\\"requested_blocks\\\": <number> (amount of requestes blocks)\\n\"\n+                            \"              \\\"loaded_blocks\\\": <number> (amount of blocks already available on disk)\\n\"\n+                            \"              \\\"processed_blocks\\\": <number> (amount of already processed blocks)\\n\"\n+                            \"           }\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            + HelpExampleRpc(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            );\n+\n+    if (request.params[0].get_str() == \"cancel\")\n+    {\n+        if (CAuxiliaryBlockRequest::GetCurrentRequest()) {\n+            CAuxiliaryBlockRequest::GetCurrentRequest()->cancel();\n+            return UniValue(true);\n+        }\n+        else\n+            return UniValue(false);\n+    }\n+    if (request.params[0].get_str() == \"status\")\n+    {\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest = CAuxiliaryBlockRequest::GetCurrentRequest();\n+        UniValue ret(UniValue::VOBJ);\n+        ret.pushKV(\"request_present\", (bool)blockRequest);\n+        if (blockRequest) {\n+            ret.pushKV(\"created\", UniValue(blockRequest->created));\n+            ret.pushKV(\"is_cancled\", UniValue(blockRequest->isCancelled()));\n+            ret.pushKV(\"requested_blocks\", (int64_t)blockRequest->vBlocksToDownload.size());\n+            ret.pushKV(\"loaded_blocks\", (int)blockRequest->amountOfBlocksLoaded());\n+            ret.pushKV(\"processed_blocks\", (int64_t)blockRequest->processedUpToSize);\n+        }\n+        return ret;\n+    }\n+    if (request.params[0].get_str() == \"start\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");\n+\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (UniValue strHashU : hash_Uarray.getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+                blocksToDownload.push_back((*mi).second);\n+            }\n+        }\n+\n+        bool passThroughSignals = false;\n+        if (request.params.size() == 3 && request.params[2].isBool())\n+            passThroughSignals = request.params[2].get_bool();\n+\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest(new CAuxiliaryBlockRequest(blocksToDownload, GetAdjustedTime(), passThroughSignals, [](std::shared_ptr<CAuxiliaryBlockRequest> cb_spvRequest, const CBlockIndex *pindex) -> bool {\n+            return true;\n+        }));\n+        bool overwrite = (CAuxiliaryBlockRequest::GetCurrentRequest() != nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100401972",
      "id" : 100401972,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 125,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 172,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100401972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100402468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100402468"
         }
      },
      "body" : "Could use make_shared.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:20:34Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw runtime_error(\n+                            \"requestblocks (start|cancel|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...]) (<pass-internally>)\\n\"\n+                            \"\\nRequests blocks (auxiliary) by eventually downloading them.\\n\"\n+                            \"\\nDownload of the requested blocks will be priorized.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. action            (string, required) the action to execute\\n\"\n+                            \"                                        start  = start a new block request (overwrite existing one)\\n\"\n+                            \"                                        cancel = stop current block request\\n\"\n+                            \"                                        status = get info about current request\\n\"\n+                            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+                            \"3. pass-internally   (boolean, optional, default = false) If set, the transactions of the requested blocks get passed into the wallet/ZMQ/etc.\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   cancel: <true|false> (\\\"true\\\" if a blockrequest was present)\\n\"\n+                            \"   start: {\\\"overwrite\\\": <true|false>} (if the new blocksrequest has overwritten an already existign one\\n\"\n+                            \"   status: {\\n\"\n+                            \"              \\\"created\\\": <timestamp> (block request was created at this timestamp)\\n\"\n+                            \"              \\\"is_cancled\\\": <true|false> (set if blockrequest is cancled)\\n\"\n+                            \"              \\\"requested_blocks\\\": <number> (amount of requestes blocks)\\n\"\n+                            \"              \\\"loaded_blocks\\\": <number> (amount of blocks already available on disk)\\n\"\n+                            \"              \\\"processed_blocks\\\": <number> (amount of already processed blocks)\\n\"\n+                            \"           }\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            + HelpExampleRpc(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            );\n+\n+    if (request.params[0].get_str() == \"cancel\")\n+    {\n+        if (CAuxiliaryBlockRequest::GetCurrentRequest()) {\n+            CAuxiliaryBlockRequest::GetCurrentRequest()->cancel();\n+            return UniValue(true);\n+        }\n+        else\n+            return UniValue(false);\n+    }\n+    if (request.params[0].get_str() == \"status\")\n+    {\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest = CAuxiliaryBlockRequest::GetCurrentRequest();\n+        UniValue ret(UniValue::VOBJ);\n+        ret.pushKV(\"request_present\", (bool)blockRequest);\n+        if (blockRequest) {\n+            ret.pushKV(\"created\", UniValue(blockRequest->created));\n+            ret.pushKV(\"is_cancled\", UniValue(blockRequest->isCancelled()));\n+            ret.pushKV(\"requested_blocks\", (int64_t)blockRequest->vBlocksToDownload.size());\n+            ret.pushKV(\"loaded_blocks\", (int)blockRequest->amountOfBlocksLoaded());\n+            ret.pushKV(\"processed_blocks\", (int64_t)blockRequest->processedUpToSize);\n+        }\n+        return ret;\n+    }\n+    if (request.params[0].get_str() == \"start\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");\n+\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (UniValue strHashU : hash_Uarray.getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+                blocksToDownload.push_back((*mi).second);\n+            }\n+        }\n+\n+        bool passThroughSignals = false;\n+        if (request.params.size() == 3 && request.params[2].isBool())\n+            passThroughSignals = request.params[2].get_bool();\n+\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest(new CAuxiliaryBlockRequest(blocksToDownload, GetAdjustedTime(), passThroughSignals, [](std::shared_ptr<CAuxiliaryBlockRequest> cb_spvRequest, const CBlockIndex *pindex) -> bool {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100402468",
      "id" : 100402468,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 122,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100402468",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100404045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100404045"
         }
      },
      "body" : "Could just pass {} or nullptr for progress function instead of writing out the long lambda declaration.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:28:00Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw runtime_error(\n+                            \"requestblocks (start|cancel|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...]) (<pass-internally>)\\n\"\n+                            \"\\nRequests blocks (auxiliary) by eventually downloading them.\\n\"\n+                            \"\\nDownload of the requested blocks will be priorized.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. action            (string, required) the action to execute\\n\"\n+                            \"                                        start  = start a new block request (overwrite existing one)\\n\"\n+                            \"                                        cancel = stop current block request\\n\"\n+                            \"                                        status = get info about current request\\n\"\n+                            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+                            \"3. pass-internally   (boolean, optional, default = false) If set, the transactions of the requested blocks get passed into the wallet/ZMQ/etc.\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   cancel: <true|false> (\\\"true\\\" if a blockrequest was present)\\n\"\n+                            \"   start: {\\\"overwrite\\\": <true|false>} (if the new blocksrequest has overwritten an already existign one\\n\"\n+                            \"   status: {\\n\"\n+                            \"              \\\"created\\\": <timestamp> (block request was created at this timestamp)\\n\"\n+                            \"              \\\"is_cancled\\\": <true|false> (set if blockrequest is cancled)\\n\"\n+                            \"              \\\"requested_blocks\\\": <number> (amount of requestes blocks)\\n\"\n+                            \"              \\\"loaded_blocks\\\": <number> (amount of blocks already available on disk)\\n\"\n+                            \"              \\\"processed_blocks\\\": <number> (amount of already processed blocks)\\n\"\n+                            \"           }\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            + HelpExampleRpc(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            );\n+\n+    if (request.params[0].get_str() == \"cancel\")\n+    {\n+        if (CAuxiliaryBlockRequest::GetCurrentRequest()) {\n+            CAuxiliaryBlockRequest::GetCurrentRequest()->cancel();\n+            return UniValue(true);\n+        }\n+        else\n+            return UniValue(false);\n+    }\n+    if (request.params[0].get_str() == \"status\")\n+    {\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest = CAuxiliaryBlockRequest::GetCurrentRequest();\n+        UniValue ret(UniValue::VOBJ);\n+        ret.pushKV(\"request_present\", (bool)blockRequest);\n+        if (blockRequest) {\n+            ret.pushKV(\"created\", UniValue(blockRequest->created));\n+            ret.pushKV(\"is_cancled\", UniValue(blockRequest->isCancelled()));\n+            ret.pushKV(\"requested_blocks\", (int64_t)blockRequest->vBlocksToDownload.size());\n+            ret.pushKV(\"loaded_blocks\", (int)blockRequest->amountOfBlocksLoaded());\n+            ret.pushKV(\"processed_blocks\", (int64_t)blockRequest->processedUpToSize);\n+        }\n+        return ret;\n+    }\n+    if (request.params[0].get_str() == \"start\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");\n+\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (UniValue strHashU : hash_Uarray.getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+                blocksToDownload.push_back((*mi).second);\n+            }\n+        }\n+\n+        bool passThroughSignals = false;\n+        if (request.params.size() == 3 && request.params[2].isBool())\n+            passThroughSignals = request.params[2].get_bool();\n+\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest(new CAuxiliaryBlockRequest(blocksToDownload, GetAdjustedTime(), passThroughSignals, [](std::shared_ptr<CAuxiliaryBlockRequest> cb_spvRequest, const CBlockIndex *pindex) -> bool {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100404045",
      "id" : 100404045,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 122,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100404045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100406742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100406742"
         }
      },
      "body" : "`headersChainActive` variable doesn't seem to be defined yet. Should reorder this commit (\"Allow CheckFinalTx() without validation using the headers chain\") after \"Add CChain object for headers-only chain.\"",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:41:44Z",
      "diff_hunk" : "@@ -253,15 +253,21 @@ bool CheckFinalTx(const CTransaction &tx, int flags)\n     // evaluated is what is used. Thus if we want to know if a\n     // transaction can be part of the *next* block, we need to call\n     // IsFinalTx() with one more than chainActive.Height().\n-    const int nBlockHeight = chainActive.Height() + 1;\n+    //\n+    // If calcHeightFromHeaders is set to true, we use the headers-\n+    // chain-tip to calculate the block height\n+    CChain *chainToUse = &chainActive;\n+    if (calcHeightFromHeaders && headersChainActive.Tip())\n+        chainToUse = &headersChainActive;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100406742",
      "id" : 100406742,
      "original_commit_id" : "a86c66d9dab7574ecef891ddff0accd5e31a3ab4",
      "original_position" : 19,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100406742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100408846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100408846"
         }
      },
      "body" : "Probably should just squash this \"CBlockRequest: make SyncTransaction() optional\" commit into \"Add CAuxiliaryBlockRequest, a class to handle auxiliary blocks downloads\" to avoid churn.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:52:01Z",
      "diff_hunk" : "@@ -20,9 +20,10 @@ class CAuxiliaryBlockRequest : public std::enable_shared_from_this<CAuxiliaryBlo\n \n     const std::vector<const CBlockIndex*> vBlocksToDownload;\n     const int64_t created; //!timestamp when the block request was created\n+    const bool passThroughSignals; //!if passThroughSignals is set, the received blocks transaction will be passed through the SyncTransaction signal */\n \n     /** Constructor of the lock free CAuxiliaryBlockRequest, vBlocksToDownloadIn remains constant */\n-    CAuxiliaryBlockRequest(std::vector<const CBlockIndex*> vBlocksToDownloadIn, int64_t created, const std::function<bool(std::shared_ptr<CAuxiliaryBlockRequest>, const CBlockIndex *pindex)> progressCallbackIn);\n+    CAuxiliaryBlockRequest(std::vector<const CBlockIndex*> vBlocksToDownloadIn, int64_t created, bool passThroughSignalsIn, const std::function<bool(std::shared_ptr<CAuxiliaryBlockRequest>, const CBlockIndex *pindex)> progressCallbackIn);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100408846",
      "id" : 100408846,
      "original_commit_id" : "ba99197aef1ba3bda5f5ab32dcd27c6c46e9a7f0",
      "original_position" : 8,
      "path" : "src/auxiliaryblockrequest.h",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100408846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100410117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100410117"
         }
      },
      "body" : "Would be good to squash this \"[Wallet] don't consume non-validated transactions\" commit into the \"Pass CBlockRequest blocks through SyncTransaction signal\" to make commit order less fragile and review more straightforward.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:58:20Z",
      "diff_hunk" : "@@ -1169,6 +1169,9 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n {\n     LOCK2(cs_main, cs_wallet);\n \n+    if (!validated)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100410117",
      "id" : 100410117,
      "original_commit_id" : "32770b8bf7fbbf016d2d176571cd67da9a68dcab",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100410117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100410334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100410334"
         }
      },
      "body" : "Probably should throw if no arguments passed.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T20:59:35Z",
      "diff_hunk" : "@@ -1511,6 +1512,30 @@ UniValue requestblocks(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unkown action\");\n }\n \n+UniValue setautorequestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100410334",
      "id" : 100410334,
      "original_commit_id" : "567055e6c4894707d5bd8ea28402dbb721d24f15",
      "original_position" : 32,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100410334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100411448"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100411448"
         }
      },
      "body" : "Method looks like it could be const.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T21:05:05Z",
      "diff_hunk" : "@@ -1185,6 +1185,14 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex,\n     }\n }\n \n+void CWallet::GetNonMempoolTransaction(const uint256 &hash, CTransactionRef &txsp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100411448",
      "id" : 100411448,
      "original_commit_id" : "7ca1a8738a878078c0d1546f7743a05ee474dd1b",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : 94,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100411448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100416401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100416401"
         }
      },
      "body" : "Should probably squash this commit (`Little CAuxiliaryBlockRequest refactor`) into commit `Add CAuxiliaryBlockRequest, a class to handle auxiliary blocks downloads` to avoid code churn in the review.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T21:28:37Z",
      "diff_hunk" : "@@ -45,6 +45,9 @@ class CAuxiliaryBlockRequest : public std::enable_shared_from_this<CAuxiliaryBlo\n     /** returns the amount of already loaded/local-stored blocks from this blockrequest */\n     unsigned int amountOfBlocksLoaded();\n \n+    /** returns true if all blocks have been downloaded & processed */\n+    bool isCompleted();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100416401",
      "id" : 100416401,
      "original_commit_id" : "48c4c3c7c187c28608cecd39cd1401b062e97d3c",
      "original_position" : 5,
      "path" : "src/auxiliaryblockrequest.h",
      "position" : null,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100416401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100418246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100418246"
         }
      },
      "body" : "spelling: several",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-02-09T21:37:53Z",
      "diff_hunk" : "@@ -760,10 +760,30 @@\n            </layout>\n           </item>\n           <item>\n+           <widget class=\"QLabel\" name=\"fallbackFeeWarningLabel\">\n+            <property name=\"toolTip\">\n+             <string>Using the fallbackfee can result in sending a transaction that will take serval hours or days (or never) to confirm. Consider choosing your fee manually or wait until your have validated the complete chain.</string>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r100418246",
      "id" : 100418246,
      "original_commit_id" : "87fb7fbcb013265dd31730cdf3db5126c60c26d0",
      "original_position" : 6,
      "path" : "src/qt/forms/sendcoinsdialog.ui",
      "position" : 6,
      "pull_request_review_id" : 20771685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-02-09T22:47:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100418246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "I reviewed all the commits and left many minor comments, but I have two broader concerns about this PR that may be worth some discussion:\r\n\r\n1) Architecture. It seems this change would be a lot simpler if it just added a `deque<const CBlockIndex*> blocksToDownloadFirst` net_processing variable that the wallet could add blocks to (through a function) and that net_processing code would process within its existing control flow (with some tweaks to `FindNextBlocksToDownload` and `ProcessNewBlock`). Aside from the simplifications this would allow, I also think this would be better because it would no longer be adding wallet code that has to be responsible for batching and orchestrating block downloads (in `CWallet::RequestSPVScan`).\r\n\r\n2) Naming and UI. The `-autorequestblocks` flag makes sense to me. The `-spv` option makes less sense to me and I think it would be better off called something like `-priorityrequestblocks`. Renaming `-spv` to `-priorityrequestblocks` would give a more coherent set of options:\r\n\r\n```\r\n-priorityrequestblocks\r\n\r\n       Prioritized block request. If enabled, full IBD/sync-up will be delayed\r\n       until complete blockchain headers and the contents of blocks newer than\r\n       the oldest wallet key have been downloaded. Any wallet transactions that\r\n       are picked up in the prioritized blocks will show up as non-validated until\r\n       the full IBD/sync completes. (default: 0)\r\n\r\n-autorequestblocks\r\n\r\n       Automatic block request. If disabled, no blocks will be requested in\r\n       IBD/sync-up, and only previously downloaded blocks, and blocks \r\n       requested through the `requestblocks` RPC or `-priorityrequestblocks`\r\n       option will be available. (default: 1)\r\n```\r\n\r\nSimilarly, I don't think it makes sense to have a so-called \"SPV mode\" in the wallet that just reflects the `-priorityrequestblocks` setting while ignoring the `-autorequestblocks` setting. Certainly if there are non-validated transactions in the wallet, they should clearly show up as non-validated. And if the wallet transaction history in the wallet is incomplete, this should clearly be indicated (as discussed in #9409). But beyond these two things, I don't understand what the wallet \"SPV mode\" is supposed to indicate. Why would it be helpful to me to know that my wallet is in SPV mode if I don't actually have any nonvalidated transactions? Why would it helpful be to me to know my wallet is not in SPV mode if I do have nonvalidated transactions?\r\n\r\nIf changing the wallet SPV mode toggled the `-autorequestblocks` behavior, having the mode would begin to make a certain amount of sense, though it also seems it like it would be overselling the SPV feature when the wallet will still be downloading and storing the complete contents of all blocks after a point.\r\n\r\nApart from externally visible names, naming in the code should definitely be made more consistent. If there was a global search and replace in this PR to change all occurrences of \"nonvalidation,\" \"nvs,\" \"headers only,\" \"spv,\" \"hybrid,\" and \"auxilliary\" with just \"nonvalidated\" it would help a lot with readability, because the seemingly random choices of names make the implementation seem more haphazard than it needs to be.",
      "created_at" : "2017-02-09T22:47:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-278799990",
      "id" : 278799990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-02-09T22:47:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278799990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "To summarize my feedback above, here's what I think ideally would be next steps for this PR:\r\n\r\n- [ ] Get rid of the `CAuxiliaryBlockRequest` class and integrate prioritized block download logic directly into `net_processing.cpp` so more code responsible for regular and prioritized block downloads can be shared, and the wallet will not have to be involved in batching and sequencing p2p requests.\r\n- [ ] Search and replace for occurrences of \"nonvalidation,\" \"nvs,\" \"headers only,\" \"spv,\" \"hybrid,\" and \"auxiliary\" in new code and just say \"nonvalidated\" in all the places it makes sense.\r\n- [ ] Change this PR title from \"_Complete hybrid full block SPV mode_\" to something more descriptive and literal like \"_Support nonvalidated transactions in wallet to increase usability during IBD_\".\r\n- [ ] Rename the `-spv` flag to `-priorityrequestblocks` or similar to be consistent with `-autorequestblocks`\r\n- [ ] Instead of labeling nonvalidated transactions in the wallet as \"SPV\", label them as \"nonvalidated.\"\r\n- [ ] Either remove the wallet SPV mode display and toggle until more SPV features are implemented, or extend the SPV mode to toggle both `-priorityrequestblocks` and `-autorequestblocks` settings. Having the SPV mode toggle only the `-priorityrequestblocks` setting while leaving `-autorequestblocks` set to 1 would be adding a limited feature that's confusing and useless as soon as the initial sync finishes.\r\n- [ ] Consider defaulting the `-priorityrequestblocks` flag to true instead of false. There should be few drawbacks if the wallet transactions are clearly labeled as nonvalidated and the wallet can be usable before the IBD completes.\r\n- [ ] Merge this PR with all the great features it adds. Then follow up with more options for reducing disk and network usage and bring the wallet SPV mode toggle to provide an easy way of enabling them.",
      "created_at" : "2017-02-10T21:58:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-279077608",
      "id" : 279077608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-02-10T21:58:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279077608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "@ryanofsky: Thanks for your review and sorry for the late response.\r\n\r\n* About the idea of getting rid of `CAuxiliaryBlockRequest`:\r\nI think keeping it in a separate file/class allows simpler rebases. I expect to rebase that PR a lot. Also, clustering to much into net_processing would result against in a moster-class/Impl.-file that does everything net related. I think in terms of architecture, splitting of stuff into separate classes/files makes sense. \r\n\r\n* SPV versus non-validating mode:\r\nI haven't really found the ideal term. A first sight, SPV seems to miss the point (if we assume SPV = bloom filter, though I disagree here), but is does allow everybody quickly understand what this PR does. If we look at Satoshi's white paper \"Simplified Payment Verification\" (chapter 8) then I guess this is more or less what this PR is about. That's why I haven't given up on calling it SPV.\r\nClient-mode seems wrong-ish to me, because no \"server\" is involved.\r\nNon-validating mode seems to nail it, but it implies we validate nothing (we still validate headers/PoW) and therefore gives it a negative general direction. Ideally the term should not include what we not do (`non`) and should be formed in a positive way.\r\n\r\nAny objections calling this SPV mode?\r\nAlso, very likely, this mode will once have client side filtering.",
      "created_at" : "2017-07-11T10:07:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-314397959",
      "id" : 314397959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-07-11T10:07:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314397959",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r126654061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126654061"
         }
      },
      "body" : "Good point.",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-07-11T10:42:07Z",
      "diff_hunk" : "@@ -30,7 +30,7 @@ class PeerLogicValidation : public CValidationInterface {\n public:\n     PeerLogicValidation(CConnman* connmanIn);\n \n-    virtual void SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock);\n+    virtual void SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock, bool validated);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r126654061",
      "id" : 126654061,
      "original_commit_id" : "340e363a7f229e42a02badbbb8ab26f5ed5a5215",
      "original_position" : 5,
      "path" : "src/net_processing.h",
      "position" : 19,
      "pull_request_review_id" : 49156983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-07-11T10:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126654061",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r126671612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126671612"
         }
      },
      "body" : "The use cases for the RPC `requestblocks` API:\r\nYou start your peer with `auto-download-blocks = false`, you will only sync the headers then. You can selectively download blocks and eventually pass them through the signal (== ZMQ), use cases: experiments, SPV, light-client backend, ideally if you have a full validated node within your network and you want to selectively load blocks from that node (you don't want to validate everything again).",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-07-11T12:21:27Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r126671612",
      "id" : 126671612,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 45,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 92,
      "pull_request_review_id" : 49176729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-07-11T12:21:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126671612",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r126714741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126714741"
         }
      },
      "body" : "Would returning `true` be guaranteed then?",
      "commit_id" : "254c94ca45d990d7eb745110486eb9c6ecfcb8b4",
      "created_at" : "2017-07-11T14:58:00Z",
      "diff_hunk" : "@@ -1413,6 +1419,98 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw runtime_error(\n+                            \"requestblocks (start|cancel|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...]) (<pass-internally>)\\n\"\n+                            \"\\nRequests blocks (auxiliary) by eventually downloading them.\\n\"\n+                            \"\\nDownload of the requested blocks will be priorized.\\n\"\n+                            \"\\nArguments:\\n\"\n+                            \"1. action            (string, required) the action to execute\\n\"\n+                            \"                                        start  = start a new block request (overwrite existing one)\\n\"\n+                            \"                                        cancel = stop current block request\\n\"\n+                            \"                                        status = get info about current request\\n\"\n+                            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+                            \"3. pass-internally   (boolean, optional, default = false) If set, the transactions of the requested blocks get passed into the wallet/ZMQ/etc.\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"   cancel: <true|false> (\\\"true\\\" if a blockrequest was present)\\n\"\n+                            \"   start: {\\\"overwrite\\\": <true|false>} (if the new blocksrequest has overwritten an already existign one\\n\"\n+                            \"   status: {\\n\"\n+                            \"              \\\"created\\\": <timestamp> (block request was created at this timestamp)\\n\"\n+                            \"              \\\"is_cancled\\\": <true|false> (set if blockrequest is cancled)\\n\"\n+                            \"              \\\"requested_blocks\\\": <number> (amount of requestes blocks)\\n\"\n+                            \"              \\\"loaded_blocks\\\": <number> (amount of blocks already available on disk)\\n\"\n+                            \"              \\\"processed_blocks\\\": <number> (amount of already processed blocks)\\n\"\n+                            \"           }\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            + HelpExampleRpc(\"requestblocks\", \"\\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+                            );\n+\n+    if (request.params[0].get_str() == \"cancel\")\n+    {\n+        if (CAuxiliaryBlockRequest::GetCurrentRequest()) {\n+            CAuxiliaryBlockRequest::GetCurrentRequest()->cancel();\n+            return UniValue(true);\n+        }\n+        else\n+            return UniValue(false);\n+    }\n+    if (request.params[0].get_str() == \"status\")\n+    {\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest = CAuxiliaryBlockRequest::GetCurrentRequest();\n+        UniValue ret(UniValue::VOBJ);\n+        ret.pushKV(\"request_present\", (bool)blockRequest);\n+        if (blockRequest) {\n+            ret.pushKV(\"created\", UniValue(blockRequest->created));\n+            ret.pushKV(\"is_cancled\", UniValue(blockRequest->isCancelled()));\n+            ret.pushKV(\"requested_blocks\", (int64_t)blockRequest->vBlocksToDownload.size());\n+            ret.pushKV(\"loaded_blocks\", (int)blockRequest->amountOfBlocksLoaded());\n+            ret.pushKV(\"processed_blocks\", (int64_t)blockRequest->processedUpToSize);\n+        }\n+        return ret;\n+    }\n+    if (request.params[0].get_str() == \"start\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");\n+\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (UniValue strHashU : hash_Uarray.getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+                blocksToDownload.push_back((*mi).second);\n+            }\n+        }\n+\n+        bool passThroughSignals = false;\n+        if (request.params.size() == 3 && request.params[2].isBool())\n+            passThroughSignals = request.params[2].get_bool();\n+\n+        std::shared_ptr<CAuxiliaryBlockRequest> blockRequest(new CAuxiliaryBlockRequest(blocksToDownload, GetAdjustedTime(), passThroughSignals, [](std::shared_ptr<CAuxiliaryBlockRequest> cb_spvRequest, const CBlockIndex *pindex) -> bool {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#discussion_r126714741",
      "id" : 126714741,
      "original_commit_id" : "df6e5b873edd4058ec197da9363708162e5f2ec6",
      "original_position" : 122,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 49224406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9483",
      "updated_at" : "2017-07-11T14:58:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126714741",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> About the idea of getting rid of CAuxiliaryBlockRequest\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-314508746\r\n\r\n> Any objections calling this SPV mode?\r\n\r\nI don't like it, but I wouldn't object to a useful feature because it has a confusing name, and my complaints above are more about naming inconsistency than about this name in particular. Also, I wish you would respond to my some of my suggestions in detail. I wasn't suggesting renaming \"SPV mode\" to \"non-validating mode\" or to \"client-mode\" (I don't even know where \"client-mode\" comes from). I suggested renaming the `-spv` flag to `-priorityrequestblocks`, to be consistent with `-autorequestblocks` flag, and because the point of the feature is to be smarter about the order blocks are downloaded.",
      "created_at" : "2017-07-11T17:26:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-314514909",
      "id" : 314514909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-07-11T17:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314514909",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "@ryanofsky In early 2011, there was an incomplete feature in the codebase called \"client mode\", which probably was intended to be some sort of SPV version. It never got finished, and was eventually removed.",
      "created_at" : "2017-07-11T17:31:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-314516404",
      "id" : 314516404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-07-11T17:31:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314516404",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "That's interesting. I don't think client is a bad name either (seems pretty innocuous). I just hadn't heard it before.",
      "created_at" : "2017-07-11T17:36:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-314517728",
      "id" : 314517728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9483",
      "updated_at" : "2017-07-11T17:36:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314517728",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]

[
   {
      "body" : "Hm... for me it looks like that `checked_malloc()` (in libsecp256k1) could not call `malloc(size)`. ",
      "created_at" : "2016-06-26T20:24:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-228620724",
      "id" : 228620724,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-26T20:24:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/228620724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> Hm... for me it looks like that checked_malloc() (in libsecp256k1) could not call malloc(size).\r\n\r\nWhich would imply memory is full?\r\n",
      "created_at" : "2016-06-27T10:31:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-228709908",
      "id" : 228709908,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-27T10:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/228709908",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> > Hm... for me it looks like that checked_malloc() (in libsecp256k1) could not call malloc(size).\r\n\r\n> Which would imply memory is full?\r\n\r\nThe build VM in question has 4GB of RAM, 2GB of swap, and is hardly using any of it while the test runs. If this isn't enough memory to run the test, then it isn't nearly enough to run bitcoind itself (which it plainly is).",
      "created_at" : "2016-06-27T14:47:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-228767970",
      "id" : 228767970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-27T14:47:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/228767970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   },
   {
      "body" : "I think the relevant issue here is probably this line:\r\n\r\n```\r\nunknown location(0): fatal error: in \"reverselock_tests/reverselock_errors\": signal: SIGABRT (application abort requested)\r\ntest/reverselock_tests.cpp(50): last checkpoint\r\n```\r\n\r\nI have no idea what causes the later errors that start with `ECC_Start()...`, but I'm pretty sure that's a symptom of an earlier test failure.\r\n",
      "created_at" : "2016-06-27T14:54:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-228770061",
      "id" : 228770061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-27T14:54:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/228770061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Agreed with @sdaftuar. I get the ECC_Start() failures all the time when I accidentally break tests. That should be investigated separately, but I don't think it's the issue here.\r\n\r\nMy guess is that there's a legitimate failure in the reverselock test due to something specific about this system.",
      "created_at" : "2016-06-28T05:28:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-228951900",
      "id" : 228951900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-28T05:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/228951900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I've run this test in isolation and it appears to be a problem:\r\n\r\n```\r\n$ BOOST_TEST_LOG_LEVEL=test_suite ./test_bitcoin --run_test=reverselock_tests/reverselock_errors\r\nRunning 1 test case...\r\nEntering test module \"Bitcoin Test Suite\"\r\ntest/reverselock_tests.cpp(10): Entering test suite \"reverselock_tests\"\r\ntest/reverselock_tests.cpp(25): Entering test case \"reverselock_errors\"\r\nterminate called without an active exception\r\nunknown location(0): fatal error: in \"reverselock_tests/reverselock_errors\": signal: SIGABRT (application abort requested)\r\ntest/reverselock_tests.cpp(50): last checkpoint\r\ntest/reverselock_tests.cpp(25): Leaving test case \"reverselock_errors\"; testing time: 347us\r\ntest/reverselock_tests.cpp(10): Leaving test suite \"reverselock_tests\"; testing time: 353us\r\nLeaving test module \"Bitcoin Test Suite\"; testing time: 370us\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Test Suite\"\r\n```\r\n\r\nWhat I don't have is a course of action. What do I do at this point?",
      "created_at" : "2016-06-29T01:24:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229231382",
      "id" : 229231382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-29T01:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229231382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   },
   {
      "body" : "Can you run the same thing under gdb? I think it'd be:\r\n```gdb --args ./test_bitcoin --run_test=reverselock_tests/reverselock_errors```\r\n\r\nthen hit ```r``` to run, wait for it to crash, and ```thread apply all bt```. Hopefully that should show a valid trace including the line causing terminate to be called. I'm suspecting test/reverselock_tests.cpp:52",
      "created_at" : "2016-06-29T03:06:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229244737",
      "id" : 229244737,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-29T03:06:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229244737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "There was only one thread:\r\n\r\n```\r\n(gdb) run\r\nStarting program: /home/error/bitcoin-0.12.1/src/test/test_bitcoin --run_test=reverselock_tests/reverselock_errors\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\r\nRunning 1 test case...\r\nEntering test module \"Bitcoin Test Suite\"\r\ntest/reverselock_tests.cpp(10): Entering test suite \"reverselock_tests\"\r\ntest/reverselock_tests.cpp(25): Entering test case \"reverselock_errors\"\r\ntest/reverselock_tests.cpp(33): info: check !lock.owns_lock() has passed\r\ntest/reverselock_tests.cpp(42): info: check failed has passed\r\ntest/reverselock_tests.cpp(43): info: check !lock.owns_lock() has passed\r\ntest/reverselock_tests.cpp(50): info: check lock.owns_lock() has passed\r\nterminate called without an active exception\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n0x00007ffff55a36f5 in __GI_raise (sig=sig@entry=6)\r\n    at ../sysdeps/unix/sysv/linux/raise.c:54\r\n54    return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);\r\n(gdb) thread apply all bt\r\n\r\nThread 1 (Thread 0x7ffff7fda840 (LWP 18693)):\r\n#0  0x00007ffff55a36f5 in __GI_raise (sig=sig@entry=6)\r\n    at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007ffff55a52fa in __GI_abort () at abort.c:89\r\n#2  0x00007ffff60ff3ed in __gnu_cxx::__verbose_terminate_handler ()\r\n    at ../../../../libstdc++-v3/libsupc++/vterminate.cc:95\r\n#3  0x00007ffff60fd196 in __cxxabiv1::__terminate (handler=<optimized out>)\r\n    at ../../../../libstdc++-v3/libsupc++/eh_terminate.cc:47\r\n#4  0x00007ffff60fd1e1 in std::terminate ()\r\n    at ../../../../libstdc++-v3/libsupc++/eh_terminate.cc:57\r\n#5  0x00005555556b0fed in reverselock_tests::reverselock_errors::test_method (\r\n    this=this@entry=0x7fffffffc64c) at ./reverselock.h:20\r\n#6  0x00005555556b235a in reverselock_tests::reverselock_errors_invoker ()\r\n    at test/reverselock_tests.cpp:25\r\n#7  0x00007ffff70b6c4e in boost::function0<void>::operator() (\r\n    this=<optimized out>) at boost/function/function_template.hpp:771\r\n#8  boost::detail::forward::operator() (this=<optimized out>)\r\n    at boost/test/impl/execution_monitor.ipp:1304\r\n#9  boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke (function_obj_ptr=...) at boost/function/function_template.hpp:138\r\n#10 0x00007ffff70b637d in boost::function0<int>::operator() (\r\n    this=0x7fffffffd610) at boost/function/function_template.hpp:771\r\n#11 boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) (F=..., tr=...)\r\n    at boost/test/impl/execution_monitor.ipp:281\r\n#12 boost::execution_monitor::catch_signals(boost::function<int ()> const&) (\r\n    this=this@entry=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at boost/test/impl/execution_monitor.ipp:870\r\n#13 0x00007ffff70b6478 in boost::execution_monitor::execute(boost::function<int ()> const&) (\r\n    this=this@entry=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at boost/test/impl/execution_monitor.ipp:1207\r\n#14 0x00007ffff70b6ac6 in boost::execution_monitor::vexecute(boost::function<void ()> const&) (\r\n    this=this@entry=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at boost/test/impl/execution_monitor.ipp:1313\r\n#15 0x00007ffff70d94cb in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned int) (\r\n    this=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, func=..., timeout=timeout@entry=0)\r\n    at boost/test/impl/unit_test_monitor.ipp:46\r\n#16 0x00007ffff70c1086 in boost::unit_test::framework::state::execute_test_tree\r\n    (\r\n    this=this@entry=0x7ffff73176c0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=tu_id@entry=65634, timeout=0)\r\n    at boost/test/impl/framework.ipp:691\r\n#17 0x00007ffff70c17c1 in boost::unit_test::framework::state::execute_test_tree\r\n    (\r\n    this=this@entry=0x7ffff73176c0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=tu_id@entry=32, timeout=0)\r\n    at boost/test/impl/framework.ipp:642\r\n#18 0x00007ffff70c17c1 in boost::unit_test::framework::state::execute_test_tree\r\n    (\r\n    this=0x7ffff73176c0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=tu_id@entry=1, timeout=timeout@entry=0)\r\n    at boost/test/impl/framework.ipp:642\r\n#19 0x00007ffff70bb581 in boost::unit_test::framework::run (id=1,\r\n    id@entry=4294967295, continue_test=continue_test@entry=true)\r\n    at boost/test/impl/framework.ipp:1230\r\n#20 0x00007ffff70d746f in boost::unit_test::unit_test_main (\r\n    init_func=<optimized out>, argc=<optimized out>, argv=<optimized out>)\r\n    at boost/test/impl/unit_test_main.ipp:229\r\n#21 0x00007ffff558f731 in __libc_start_main (\r\n    main=0x555555598110 <main(int, char**)>, argc=2, argv=0x7fffffffe318,\r\n    init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>,\r\n    stack_end=0x7fffffffe308) at ../csu/libc-start.c:289\r\n#22 0x00005555555a3219 in _start ()\r\n(gdb)\r\n```",
      "created_at" : "2016-06-29T03:46:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229249178",
      "id" : 229249178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-29T03:46:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229249178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   },
   {
      "body" : "@error10:\r\n\r\nCould you please try this patch? My best guess is that something about your setup is different than most. There's some undefined behavior in reverse_lock, and it looks like we've been relying on an exception to be thrown. This removes that undefined behavior:\r\n\r\n```patch\r\nAuthor: Cory Fields <cory-nospam-@coryfields.com>\r\nDate:   Wed Jun 29 11:54:13 2016 -0400\r\n\r\n    reverselock: unlocking is undefined if the mutex is not locked\r\n    \r\n    Explicitly throw an exception in reverselock instead, rather than defaulting to\r\n    the mutex's failure behavior, which may be to call terminate.\r\n\r\ndiff --git a/src/reverselock.h b/src/reverselock.h\r\nindex fac1ccb..10af137 100644\r\n--- a/src/reverselock.h\r\n+++ b/src/reverselock.h\r\n@@ -5,6 +5,8 @@\r\n #ifndef BITCOIN_REVERSELOCK_H\r\n #define BITCOIN_REVERSELOCK_H\r\n \r\n+#include <stdexcept>\r\n+\r\n /**\r\n  * An RAII-style reverse lock. Unlocks on construction and locks on destruction.\r\n  */\r\n@@ -14,6 +16,8 @@ class reverse_lock\r\n public:\r\n \r\n     explicit reverse_lock(Lock& lock) : lock(lock) {\r\n+        if(!lock.owns_lock())\r\n+            throw std::runtime_error(\"failed to unlock mutex for lock\");\r\n         lock.unlock();\r\n         lock.swap(templock);\r\n     }\r\n```",
      "created_at" : "2016-06-29T16:19:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229408856",
      "id" : 229408856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-29T16:19:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229408856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni This patch doesn't seem to have had any effect. The tests still fail with substantially the same backtrace as before.\r\n\r\n```\r\n(gdb) run\r\nStarting program: /home/error/bitcoin-0.12.1/src/test/test_bitcoin --run_test=reverselock_tests/reverselock_errors\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\r\nRunning 1 test case...\r\nEntering test module \"Bitcoin Test Suite\"\r\ntest/reverselock_tests.cpp(10): Entering test suite \"reverselock_tests\"\r\ntest/reverselock_tests.cpp(25): Entering test case \"reverselock_errors\"\r\ntest/reverselock_tests.cpp(33): info: check !lock.owns_lock() has passed\r\ntest/reverselock_tests.cpp(42): info: check failed has passed\r\ntest/reverselock_tests.cpp(43): info: check !lock.owns_lock() has passed\r\ntest/reverselock_tests.cpp(50): info: check lock.owns_lock() has passed\r\nterminate called without an active exception\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n0x00007ffff55a36f5 in __GI_raise (sig=sig@entry=6)\r\n    at ../sysdeps/unix/sysv/linux/raise.c:54\r\n54\t  return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);\r\n(gdb) thread apply all bt\r\n\r\nThread 1 (Thread 0x7ffff7fda840 (LWP 22096)):\r\n#0  0x00007ffff55a36f5 in __GI_raise (sig=sig@entry=6)\r\n    at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007ffff55a52fa in __GI_abort () at abort.c:89\r\n#2  0x00007ffff60ff3ed in __gnu_cxx::__verbose_terminate_handler ()\r\n    at ../../../../libstdc++-v3/libsupc++/vterminate.cc:95\r\n#3  0x00007ffff60fd196 in __cxxabiv1::__terminate (handler=<optimized out>)\r\n    at ../../../../libstdc++-v3/libsupc++/eh_terminate.cc:47\r\n#4  0x00007ffff60fd1e1 in std::terminate ()\r\n    at ../../../../libstdc++-v3/libsupc++/eh_terminate.cc:57\r\n#5  0x00005555556b0f57 in reverselock_tests::reverselock_errors::test_method (\r\n    this=this@entry=0x7fffffffc67c) at ./reverselock.h:24\r\n#6  0x00005555556b227a in reverselock_tests::reverselock_errors_invoker ()\r\n    at test/reverselock_tests.cpp:25\r\n#7  0x00007ffff70b6c4e in boost::function0<void>::operator() (\r\n    this=<optimized out>) at boost/function/function_template.hpp:771\r\n#8  boost::detail::forward::operator() (this=<optimized out>)\r\n    at boost/test/impl/execution_monitor.ipp:1304\r\n#9  boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke (function_obj_ptr=...) at boost/function/function_template.hpp:138\r\n#10 0x00007ffff70b637d in boost::function0<int>::operator() (\r\n    this=0x7fffffffd640) at boost/function/function_template.hpp:771\r\n#11 boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) (F=..., tr=...)\r\n    at boost/test/impl/execution_monitor.ipp:281\r\n#12 boost::execution_monitor::catch_signals(boost::function<int ()> const&) (\r\n    this=this@entry=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at boost/test/impl/execution_monitor.ipp:870\r\n#13 0x00007ffff70b6478 in boost::execution_monitor::execute(boost::function<int ()> const&) (\r\n    this=this@entry=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at boost/test/impl/execution_monitor.ipp:1207\r\n#14 0x00007ffff70b6ac6 in boost::execution_monitor::vexecute(boost::function<void ()> const&) (\r\n    this=this@entry=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...)\r\n    at boost/test/impl/execution_monitor.ipp:1313\r\n#15 0x00007ffff70d94cb in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned int) (\r\n    this=0x7ffff7317c20 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, func=..., timeout=timeout@entry=0)\r\n    at boost/test/impl/unit_test_monitor.ipp:46\r\n#16 0x00007ffff70c1086 in boost::unit_test::framework::state::execute_test_tree\r\n    (\r\n    this=this@entry=0x7ffff73176c0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=tu_id@entry=65634, timeout=0)\r\n    at boost/test/impl/framework.ipp:691\r\n#17 0x00007ffff70c17c1 in boost::unit_test::framework::state::execute_test_tree\r\n    (\r\n    this=this@entry=0x7ffff73176c0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=tu_id@entry=32, timeout=0)\r\n    at boost/test/impl/framework.ipp:642\r\n#18 0x00007ffff70c17c1 in boost::unit_test::framework::state::execute_test_tree\r\n    (\r\n    this=0x7ffff73176c0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=tu_id@entry=1, timeout=timeout@entry=0)\r\n    at boost/test/impl/framework.ipp:642\r\n#19 0x00007ffff70bb581 in boost::unit_test::framework::run (id=1, \r\n    id@entry=4294967295, continue_test=continue_test@entry=true)\r\n    at boost/test/impl/framework.ipp:1230\r\n#20 0x00007ffff70d746f in boost::unit_test::unit_test_main (\r\n    init_func=<optimized out>, argc=<optimized out>, argv=<optimized out>)\r\n    at boost/test/impl/unit_test_main.ipp:229\r\n#21 0x00007ffff558f731 in __libc_start_main (\r\n    main=0x555555598110 <main(int, char**)>, argc=2, argv=0x7fffffffe348, \r\n    init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, \r\n    stack_end=0x7fffffffe338) at ../csu/libc-start.c:289\r\n#22 0x00005555555a3219 in _start ()\r\n(gdb) \r\n```",
      "created_at" : "2016-06-29T16:56:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229419501",
      "id" : 229419501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-29T16:56:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229419501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   },
   {
      "body" : "As I said at the very beginning, the big difference is that the system is using gcc 6.1.1.\r\n\r\nI just installed a debian stretch VM, and compiled bitcoin with the version of gcc-5 it came with (5.3.1). It worked fine and all tests passed. When I switched that system to gcc-6 (6.1.1) and rebuilt bitcoin I got the test failure again.\r\n\r\n```\r\n(gdb) run\r\nStarting program: /home/error/bitcoin-0.12.1/src/test/test_bitcoin --run_test=reverselock_tests/reverselock_errors\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nRunning 1 test case...\r\nEntering test module \"Bitcoin Test Suite\"\r\ntest/reverselock_tests.cpp(10): Entering test suite \"reverselock_tests\"\r\ntest/reverselock_tests.cpp(25): Entering test case \"reverselock_errors\"\r\ntest/reverselock_tests.cpp(33): info: check !lock.owns_lock() has passed\r\ntest/reverselock_tests.cpp(42): info: check failed has passed\r\ntest/reverselock_tests.cpp(43): info: check !lock.owns_lock() has passed\r\ntest/reverselock_tests.cpp(50): info: check lock.owns_lock() has passed\r\nterminate called without an active exception\r\n\r\nProgram received signal SIGABRT, Aborted.\r\n0x00007ffff5580458 in __GI_raise (sig=sig@entry=6)\r\n    at ../sysdeps/unix/sysv/linux/raise.c:55\r\n55\t../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb) thread apply all bt\r\n\r\nThread 1 (Thread 0x7ffff7fce740 (LWP 23759)):\r\n#0  0x00007ffff5580458 in __GI_raise (sig=sig@entry=6)\r\n    at ../sysdeps/unix/sysv/linux/raise.c:55\r\n#1  0x00007ffff55818da in __GI_abort () at abort.c:89\r\n#2  0x00007ffff60b2f6d in __gnu_cxx::__verbose_terminate_handler() ()\r\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#3  0x00007ffff60b0f36 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#4  0x00007ffff60b0f81 in std::terminate() ()\r\n   from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#5  0x00005555556b0bed in reverselock_tests::reverselock_errors::test_method (\r\n    this=this@entry=0x7fffffffcb6c) at ./reverselock.h:20\r\n#6  0x00005555556b1f5a in reverselock_tests::reverselock_errors_invoker ()\r\n    at test/reverselock_tests.cpp:25\r\n#7  0x00007ffff70a152c in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#8  0x00007ffff70a0b6d in boost::execution_monitor::catch_signals(boost::function<int ()> const&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#9  0x00007ffff70a0c58 in boost::execution_monitor::execute(boost::function<int ()> const&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#10 0x00007ffff70a12a6 in boost::execution_monitor::vexecute(boost::function<void ()> const&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#11 0x00007ffff70c95db in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned int) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#12 0x00007ffff70aa316 in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned int) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#13 0x00007ffff70aa598 in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned int) ()\r\n   from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#14 0x00007ffff70a4438 in boost::unit_test::framework::run(unsigned long, bool)\r\n    () from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#15 0x00007ffff70c740f in boost::unit_test::unit_test_main(bool (*)(), int, char**) () from /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.60.0\r\n#16 0x00007ffff556d5f0 in __libc_start_main (\r\n    main=0x555555597d10 <main(int, char**)>, argc=2, argv=0x7fffffffe5f8, \r\n    init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, \r\n    stack_end=0x7fffffffe5e8) at libc-start.c:291\r\n#17 0x00005555555a2e19 in _start ()\r\n(gdb) \r\n```",
      "created_at" : "2016-06-29T23:35:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229520605",
      "id" : 229520605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-29T23:35:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229520605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   },
   {
      "body" : "Could this be another C++ ABI incompatibility? I suppose boost is compiled with gcc 5.x on that system, while you are compiling bitcoin with gcc 6.x.\r\n\r\nYou could try doing a depends build to rule that out:\r\n```bash\r\nmake distclean\r\ncd depends\r\nmake -j4 NO_QT=1 NO_WALLET=1 NO_UPNP=1 # disable everything we just want boost\r\ncd ..\r\n./configure --prefix=$PWD/x86_64-unknown-linux-gnu\r\nmake\r\nmake check\r\n```\r\n",
      "created_at" : "2016-06-30T08:14:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-229592318",
      "id" : 229592318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-06-30T08:14:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/229592318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj Sounds reasonable. It's also possible that there's an issue with building as c++14 (remember that gcc6 defaults to that).",
      "created_at" : "2016-07-06T22:28:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-230926346",
      "id" : 230926346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-07-06T22:28:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/230926346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Today on IRC #bitcoin-dev:\r\n```\r\n[16:42:02]  <earlz>\tIs there a reason that tests would be failing (for 0.12) on Arch Linux?\r\n[16:42:54]  <earlz>\terrors about secp256k1_context_sign not being null\r\n```",
      "created_at" : "2016-07-07T18:43:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-231170121",
      "id" : 231170121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-07-07T18:43:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231170121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> @laanwj Sounds reasonable. It's also possible that there's an issue with building as c++14 (remember that gcc6 defaults to that).\r\n\r\nYes in that case boost is built with c++14 and Bitcoin Core with c++11 as we set the standard, which may also result in incompatibilities. Flashback to the libc/glibc days where compatibility broke all around the place all the time.\r\n\r\n> errors about secp256k1_context_sign not being null\r\n\r\nWe should really get rid of that error if *another* test fails, this gets us useless reports as no one will look further than the last error message and blame libsecp256.\r\n",
      "created_at" : "2016-07-08T06:34:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-231286106",
      "id" : 231286106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-07-08T06:35:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231286106",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I've been following this issue and it's pretty annoying and I'm seeing no easy way around it. The strange thing is that the master branch builds and tests fine, it's only the 0.12 branch that has this problem. \r\n\r\nAlso I tried @laanwj's build process, but it didn't make any difference for me. ",
      "created_at" : "2016-07-20T01:19:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-233813038",
      "id" : 233813038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-07-20T01:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/233813038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/371222?v=3",
         "events_url" : "https://api.github.com/users/Earlz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Earlz/followers",
         "following_url" : "https://api.github.com/users/Earlz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Earlz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Earlz",
         "id" : 371222,
         "login" : "Earlz",
         "organizations_url" : "https://api.github.com/users/Earlz/orgs",
         "received_events_url" : "https://api.github.com/users/Earlz/received_events",
         "repos_url" : "https://api.github.com/users/Earlz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Earlz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Earlz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Earlz"
      }
   },
   {
      "body" : "I can confirm that this issue is not present in 0.13.0rc1. My guess is that some bit of the ongoing C++11 work fixed it.",
      "created_at" : "2016-07-28T00:36:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-235764360",
      "id" : 235764360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-07-28T00:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/235764360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   },
   {
      "body" : "Fixed in 0.13.0.",
      "created_at" : "2016-08-24T04:53:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8260#issuecomment-241956992",
      "id" : 241956992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8260",
      "updated_at" : "2016-08-24T04:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241956992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/198207?v=3",
         "events_url" : "https://api.github.com/users/error10/events{/privacy}",
         "followers_url" : "https://api.github.com/users/error10/followers",
         "following_url" : "https://api.github.com/users/error10/following{/other_user}",
         "gists_url" : "https://api.github.com/users/error10/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/error10",
         "id" : 198207,
         "login" : "error10",
         "organizations_url" : "https://api.github.com/users/error10/orgs",
         "received_events_url" : "https://api.github.com/users/error10/received_events",
         "repos_url" : "https://api.github.com/users/error10/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/error10/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/error10/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/error10"
      }
   }
]

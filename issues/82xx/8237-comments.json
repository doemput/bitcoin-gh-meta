[
   {
      "body" : "Qt 5.6.1 no longer builds on OS X with Xcode 8. A fix could mean a bump to 5.6.2, or it could be worth patching if we'd rather move straight to 5.7.",
      "created_at" : "2016-09-27T02:50:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-249753178",
      "id" : 249753178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-09-27T02:50:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249753178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "@fanquake We only manage dependencies for gitian, which doesn't seem to have a problem. What dependencies people use when building themselves is outside of the project's scope, except for minimum dependencies, which is currently Qt 4.8. While it will hopefully make sense to bump the minimum Qt dep \"soon\"\\*, I doubt 5.7 will be practical for a while: Debian stable is at 5.3.\r\n\r\n\\* Uhh, unless I'm mistaken, does RHEL really not have *any* Qt5 yet? :(",
      "created_at" : "2016-09-27T04:43:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-249765077",
      "id" : 249765077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-09-27T04:43:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249765077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I think the depends system should work outside of gitian as well.\r\n\r\nMaybe not on every exotic distro, but accepting patches that make the depends build system more portable is desirable imo.",
      "created_at" : "2016-09-27T06:23:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-249776799",
      "id" : 249776799,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-09-27T06:23:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249776799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> I think the depends system should work outside of gitian as well.\r\n\r\nIt's also the recommended way to do non-gitian cross-compiles, so it's nice if it works with other (versions of) toolchains as well. Of course there is a limit to this, as there are tons of broken and old toolchains around that we can't support. But if someone submits a compatibility patch \"we only support gitian\" is no reason to reject it.\r\n",
      "created_at" : "2016-09-27T06:29:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-249777731",
      "id" : 249777731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-09-27T06:29:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249777731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Ah, didn't think of that scenario.",
      "created_at" : "2016-09-27T09:36:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-249815713",
      "id" : 249815713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-09-27T09:36:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249815713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "QT 5.7.0 is now the default qt5 install via [brew](https://github.com/Homebrew/homebrew-core/blob/master/Formula/qt5.rb) on OS X, it's currently failing compilation with \"Qt requires C++11 support\".\r\n```\r\nIn file included from qt/macdockiconhandler.mm:5:\r\nIn file included from ./qt/macdockiconhandler.h:8:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/QMainWindow:1:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/qmainwindow.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/qwidget.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtGui/qwindowdefs.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1145:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qatomic.h:46:\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:61:4: error: \"Qt requires C++11 support\"\r\n#  error \"Qt requires C++11 support\"\r\n   ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:90:13: error: unknown type name 'QAtomicOps'\r\n    typedef QAtomicOps<T> Ops;\r\n            ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:90:23: error: expected member name or ';' after\r\n      declaration specifiers\r\n    typedef QAtomicOps<T> Ops;\r\n    ~~~~~~~~~~~~~~~~~~^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:93:23: error: use of undeclared identifier\r\n      'QAtomicOpsSupport'\r\n    Q_STATIC_ASSERT_X(QAtomicOpsSupport<sizeof(T)>::IsSupported, \"template parameter is an integral of ...\r\n                      ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:93:53: error: no member named 'IsSupported' in the\r\n      global namespace\r\n    Q_STATIC_ASSERT_X(QAtomicOpsSupport<sizeof(T)>::IsSupported, \"template parameter is an integral of ...\r\n                                                  ~~^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:761:63: note: expanded from macro 'Q_STATIC_ASSERT_X'\r\n#define Q_STATIC_ASSERT_X(Condition, Message) Q_STATIC_ASSERT(Condition)\r\n                                                              ^~~~~~~~~\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:756:110: note: expanded from macro 'Q_STATIC_ASSERT'\r\n  ...__COUNTER__) = sizeof(QStaticAssertFailure<!!(Condition)>)}\r\n                                                   ^~~~~~~~~\r\nIn file included from qt/macdockiconhandler.mm:5:\r\nIn file included from ./qt/macdockiconhandler.h:8:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/QMainWindow:1:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/qmainwindow.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/qwidget.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtGui/qwindowdefs.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1145:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qatomic.h:46:\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:93:5: error: type name requires a specifier or\r\n      qualifier\r\n    Q_STATIC_ASSERT_X(QAtomicOpsSupport<sizeof(T)>::IsSupported, \"template parameter is an integral of ...\r\n    ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:761:47: note: expanded from macro 'Q_STATIC_ASSERT_X'\r\n#define Q_STATIC_ASSERT_X(Condition, Message) Q_STATIC_ASSERT(Condition)\r\n                                              ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:756:121: note: expanded from macro 'Q_STATIC_ASSERT'\r\n  ...__COUNTER__) = sizeof(QStaticAssertFailure<!!(Condition)>)}\r\n                                                              ^\r\nIn file included from qt/macdockiconhandler.mm:5:\r\nIn file included from ./qt/macdockiconhandler.h:8:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/QMainWindow:1:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/qmainwindow.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtWidgets/qwidget.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtGui/qwindowdefs.h:43:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qglobal.h:1145:\r\nIn file included from /usr/local/Cellar/qt5/5.7.0/include/QtCore/qatomic.h:46:\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:95:14: error: use of undeclared identifier 'Ops'\r\n    typename Ops::Type _q_value;\r\n             ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:95:19: error: expected a qualified name after\r\n      'typename'\r\n    typename Ops::Type _q_value;\r\n                  ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:95:23: error: expected ';' at end of declaration list\r\n    typename Ops::Type _q_value;\r\n                      ^\r\n                      ;\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:99:44: error: use of undeclared identifier 'Ops'\r\n    T load() const Q_DECL_NOTHROW { return Ops::load(_q_value); }\r\n                                           ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:99:54: error: use of undeclared identifier '_q_value'\r\n    T load() const Q_DECL_NOTHROW { return Ops::load(_q_value); }\r\n                                                     ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:100:45: error: use of undeclared identifier 'Ops'\r\n    void store(T newValue) Q_DECL_NOTHROW { Ops::store(_q_value, newValue); }\r\n                                            ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:100:56: error: use of undeclared identifier '_q_value'\r\n    void store(T newValue) Q_DECL_NOTHROW { Ops::store(_q_value, newValue); }\r\n                                                       ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:102:51: error: use of undeclared identifier 'Ops'\r\n    T loadAcquire() const Q_DECL_NOTHROW { return Ops::loadAcquire(_q_value); }\r\n                                                  ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:102:68: error: use of undeclared identifier '_q_value'\r\n    T loadAcquire() const Q_DECL_NOTHROW { return Ops::loadAcquire(_q_value); }\r\n                                                                   ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:103:52: error: use of undeclared identifier 'Ops'\r\n    void storeRelease(T newValue) Q_DECL_NOTHROW { Ops::storeRelease(_q_value, newValue); }\r\n                                                   ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:103:70: error: use of undeclared identifier '_q_value'\r\n    void storeRelease(T newValue) Q_DECL_NOTHROW { Ops::storeRelease(_q_value, newValue); }\r\n                                                                     ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:107:86: error: use of undeclared identifier 'Ops'\r\n    static Q_DECL_CONSTEXPR bool isReferenceCountingNative() Q_DECL_NOTHROW { return Ops::isReferenceCou...\r\n                                                                                     ^\r\n/usr/local/Cellar/qt5/5.7.0/include/QtCore/qbasicatomic.h:108:88: error: use of undeclared identifier 'Ops'\r\n    static Q_DECL_CONSTEXPR bool isReferenceCountingWaitFree() Q_DECL_NOTHROW { return Ops::isReferenceC...\r\n                                                                                       ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n1 warning and 20 errors generated.\r\nmake[2]: *** [qt/qt_bitcoin_qt-macdockiconhandler.o] Error 1\r\n```",
      "created_at" : "2016-11-07T02:18:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-258732912",
      "id" : 258732912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-07T02:18:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258732912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "@fanquake - How do you keep beating me to the punch? :) Was about to report this. My workaround for now is to use `brew switch qt5 5.5.1_2` to go back to 5.5, which seems to compile without issues. I don't know offhand if this is because I did a `brew tap homebrew/versions` earlier, which led to homebrew/versions/qt55 showing up when running `brew search qt5`.",
      "created_at" : "2016-11-07T17:04:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-258895682",
      "id" : 258895682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-07T17:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258895682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5931802?v=3",
         "events_url" : "https://api.github.com/users/droark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/droark/followers",
         "following_url" : "https://api.github.com/users/droark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/droark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/droark",
         "id" : 5931802,
         "login" : "droark",
         "organizations_url" : "https://api.github.com/users/droark/orgs",
         "received_events_url" : "https://api.github.com/users/droark/received_events",
         "repos_url" : "https://api.github.com/users/droark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/droark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/droark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/droark"
      }
   },
   {
      "body" : "@fanquake hmm, looks like the issue there is OBJCXX not using the c++11 flag. I'm not sure about the cleanest fix for this. Does this quick patch solve the problem?\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 705327e..196b687 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -359,7 +359,7 @@ case $host in\r\n \r\n      AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\r\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\r\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\r\n+     OBJCXXFLAGS=\"-std=c++11 $CXXFLAGS\"\r\n      ;;\r\n    *linux*)\r\n      TARGET_OS=linux\r\n```\r\n\r\n",
      "created_at" : "2016-11-08T22:27:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-259279414",
      "id" : 259279414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-08T22:27:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259279414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni That seems to do the trick, compiling works now. Can this be PR'd as a quick fix, or would you prefer something different?",
      "created_at" : "2016-11-09T05:33:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-259337270",
      "id" : 259337270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-09T05:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259337270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "body" : "@fanquake Hmm, let's think on it for a day or two. The issue is this:\r\n\r\nIf the osx compiler in the future defaults to a higher std version (c++14/c++17), everything else will be compiled that way, while the .mm's are hard-coded to c++11. g++ 6.1+ already does that, so if someone has installed a recent g++ from brew, this will cause issues.\r\n\r\nIdeally, ax_cxx_compile_stdcxx.m4 would export OBJCXX as well. We might be better off patching/upstreaming that change.",
      "created_at" : "2016-11-09T05:44:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-259338254",
      "id" : 259338254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-09T05:44:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259338254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni \r\ni struggled with this problem today.  your patch fixed it, but we should PR some kind of fix so people don't keep running into this.",
      "created_at" : "2016-11-15T15:18:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-260669275",
      "id" : 260669275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-15T15:18:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260669275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "See #9169. Afaik, that should be future-proof against current/future compilers that have started switching to different std versions.",
      "created_at" : "2016-11-15T21:17:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8237#issuecomment-260771214",
      "id" : 260771214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8237",
      "updated_at" : "2016-11-15T21:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260771214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]

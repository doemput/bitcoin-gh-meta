[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66357823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66357823"
         }
      },
      "body" : "Why not just `git diff commit..commit`?",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-08T23:17:17Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`\n+```\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+```\n+[remote \"upstream-pull\"]\n+        fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+        url = git@github.com:bitcoin/bitcoin.git\n+```\n+\n+  This will add a an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n+  or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n+  `git checkout` and anywhere a commit id would be acceptable to see the changes from that commit.\n+\n+- To verify whether two commits result in the exact same tree, you can find out what their *tree id* is using\n+  `git show -s --format=\"%T\" commit` for each, and then compare the tree ids.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66357823",
      "id" : 66357823,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 63,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66357823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66393430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66393430"
         }
      },
      "body" : "The back-tick at the end of the command should probably be removed.",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T07:20:37Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66393430",
      "id" : 66393430,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 34,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66393430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66393588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66393588"
         }
      },
      "body" : "\"a an\"",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T07:22:24Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`\n+```\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+```\n+[remote \"upstream-pull\"]\n+        fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+        url = git@github.com:bitcoin/bitcoin.git\n+```\n+\n+  This will add a an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66393588",
      "id" : 66393588,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 58,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66393588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66438319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66438319"
         }
      },
      "body" : "I assume that works as well, but it seems less certain. If the tree hash is identical, the resulting code necessarily is.",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T13:20:21Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`\n+```\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+```\n+[remote \"upstream-pull\"]\n+        fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+        url = git@github.com:bitcoin/bitcoin.git\n+```\n+\n+  This will add a an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n+  or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n+  `git checkout` and anywhere a commit id would be acceptable to see the changes from that commit.\n+\n+- To verify whether two commits result in the exact same tree, you can find out what their *tree id* is using\n+  `git show -s --format=\"%T\" commit` for each, and then compare the tree ids.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66438319",
      "id" : 66438319,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 63,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66438319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66438744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66438744"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T13:23:05Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`\n+```\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+```\n+[remote \"upstream-pull\"]\n+        fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+        url = git@github.com:bitcoin/bitcoin.git\n+```\n+\n+  This will add a an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66438744",
      "id" : 66438744,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 58,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66438744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66438791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66438791"
         }
      },
      "body" : "Inlined it into the first sentence instead.",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T13:23:21Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66438791",
      "id" : 66438791,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 34,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66438791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66439053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66439053"
         }
      },
      "body" : "I am usually using what @luke-jr suggest, as the additional step to determine the tree id is not needed. If there is no  difference between two commits, the tree id should be  identical as well.",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T13:24:52Z",
      "diff_hunk" : "@@ -381,3 +381,63 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style. Instead of\n+\n+```\n+<<<\n+yours\n+===\n+theirs\n+>>>\n+```\n+\n+  you will see\n+\n+```\n+<<<\n+yours\n+|||\n+original\n+===\n+theirs\n+>>>\n+```\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).\n+\n+```\n+git config merge.conflictstyle diff3`\n+```\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+```\n+[remote \"upstream-pull\"]\n+        fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+        url = git@github.com:bitcoin/bitcoin.git\n+```\n+\n+  This will add a an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n+  or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n+  `git checkout` and anywhere a commit id would be acceptable to see the changes from that commit.\n+\n+- To verify whether two commits result in the exact same tree, you can find out what their *tree id* is using\n+  `git show -s --format=\"%T\" commit` for each, and then compare the tree ids.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66439053",
      "id" : 66439053,
      "original_commit_id" : "a70df2d6decfb56cfc07aed361bcfe0076766f4b",
      "original_position" : 63,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66439053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66442336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66442336"
         }
      },
      "body" : "mechanically",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T13:43:35Z",
      "diff_hunk" : "@@ -381,3 +381,51 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style using\n+  `git config merge.conflictstyle diff3`. Instead of\n+\n+        <<<\n+        yours\n+        ===\n+        theirs\n+        >>>\n+\n+  you will see\n+\n+        <<<\n+        yours\n+        |||\n+        original\n+        ===\n+        theirs\n+        >>>\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66442336",
      "id" : 66442336,
      "original_commit_id" : "ac66b2381cc3a68a1bf3388cc7893096b91025db",
      "original_position" : 28,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66442336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66442694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66442694"
         }
      },
      "body" : "Thanks, fixed!",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-09T13:45:26Z",
      "diff_hunk" : "@@ -381,3 +381,51 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style using\n+  `git config merge.conflictstyle diff3`. Instead of\n+\n+        <<<\n+        yours\n+        ===\n+        theirs\n+        >>>\n+\n+  you will see\n+\n+        <<<\n+        yours\n+        |||\n+        original\n+        ===\n+        theirs\n+        >>>\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechnically apply that to *yours* (or the other way around).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r66442694",
      "id" : 66442694,
      "original_commit_id" : "ac66b2381cc3a68a1bf3388cc7893096b91025db",
      "original_position" : 28,
      "path" : "doc/developer-notes.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-09T13:45:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66442694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r67848676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67848676"
         }
      },
      "body" : "nit: Please use 4 spaces (not 6)",
      "commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "created_at" : "2016-06-21T11:06:02Z",
      "diff_hunk" : "@@ -381,3 +381,51 @@ GUI\n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style using\n+  `git config merge.conflictstyle diff3`. Instead of\n+\n+        <<<\n+        yours\n+        ===\n+        theirs\n+        >>>\n+\n+  you will see\n+\n+        <<<\n+        yours\n+        |||\n+        original\n+        ===\n+        theirs\n+        >>>\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechanically apply that to *yours* (or the other way around).\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+        [remote \"upstream-pull\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8178#discussion_r67848676",
      "id" : 67848676,
      "original_commit_id" : "31444491f2e07c5ffd4d50827b54830ee3958a4d",
      "original_position" : 45,
      "path" : "doc/developer-notes.md",
      "position" : 45,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8178",
      "updated_at" : "2016-06-21T11:06:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/67848676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]

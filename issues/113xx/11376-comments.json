[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I like this.\r\n\r\nGeneralizing a bit, I don't like the presence of 'overwrite_if_exists'. It seems like a footgun opportunity in other cases (e.g. overwrite one wallet with another).\r\n\r\nMy preference would be to either make that impossible or gate it behind an rpc toggle (default being don't overwrite, like when using 'cp/mv --interactive').",
      "created_at" : "2017-09-21T00:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331014968",
      "id" : 331014968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T00:13:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331014968",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7999704?v=4",
         "events_url" : "https://api.github.com/users/esotericnonsense/events{/privacy}",
         "followers_url" : "https://api.github.com/users/esotericnonsense/followers",
         "following_url" : "https://api.github.com/users/esotericnonsense/following{/other_user}",
         "gists_url" : "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/esotericnonsense",
         "id" : 7999704,
         "login" : "esotericnonsense",
         "organizations_url" : "https://api.github.com/users/esotericnonsense/orgs",
         "received_events_url" : "https://api.github.com/users/esotericnonsense/received_events",
         "repos_url" : "https://api.github.com/users/esotericnonsense/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/esotericnonsense/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/esotericnonsense"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested and working. Additional test performed (try to backup to a file that symlinks to the wallet)\r\n```\r\n$ ln -s ~/.bitcoin/regtest/wallet.dat ~/.bitcoin/regtest/wallet.dat.symlink\r\nln: failed to create symbolic link '/home/user/.bitcoin/regtest/wallet.dat.symlink': File exists\r\n$ stat ~/.bitcoin/regtest/wallet.dat.symlink | head -n 1\r\n  File: /home/user/.bitcoin/regtest/wallet.dat.symlink -> /home/user/.bitcoin/regtest/wallet.dat\r\n$ ./bitcoin-cli -regtest backupwallet ~/.bitcoin/regtest/wallet.dat.symlink\r\nerror code: -4\r\nerror message:\r\nError: Wallet backup failed!\r\n$ tail -n 1 ~/.bitcoin/regtest/debug.log\r\n2017-09-21 00:25:02 cannot backup to wallet source file /home/user/.bitcoin/regtest/wallet.dat.symlink\r\n$ stat ~/.bitcoin/regtest/wallet.dat | grep Size                                                                                                                    \r\n  Size: 1388544         Blocks: 2712       IO Block: 4096   regular file\r\n```",
      "created_at" : "2017-09-21T00:26:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331017100",
      "id" : 331017100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T00:27:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331017100",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7999704?v=4",
         "events_url" : "https://api.github.com/users/esotericnonsense/events{/privacy}",
         "followers_url" : "https://api.github.com/users/esotericnonsense/followers",
         "following_url" : "https://api.github.com/users/esotericnonsense/following{/other_user}",
         "gists_url" : "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/esotericnonsense",
         "id" : 7999704,
         "login" : "esotericnonsense",
         "organizations_url" : "https://api.github.com/users/esotericnonsense/orgs",
         "received_events_url" : "https://api.github.com/users/esotericnonsense/received_events",
         "repos_url" : "https://api.github.com/users/esotericnonsense/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/esotericnonsense/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/esotericnonsense"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks. I think this cannot be guaranteed to work with hard links and whatnot, but it's better than nothing.",
      "created_at" : "2017-09-21T01:51:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331028271",
      "id" : 331028271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T01:51:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331028271",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140142355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140142355"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You can replace these entire try:except: blocks with a simple assert_raises_jsonrpc call (which also checks the error number).",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-09-21T03:31:42Z",
      "diff_hunk" : "@@ -190,6 +190,22 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbalance(), balance1)\n         assert_equal(self.nodes[2].getbalance(), balance2)\n \n+        # backup to file self must fail\n+        try:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140142355",
      "id" : 140142355,
      "original_commit_id" : "a673e6e9466e50dccf45a353d58ba8884b3220d2",
      "original_position" : 5,
      "path" : "test/functional/walletbackup.py",
      "position" : null,
      "pull_request_review_id" : 64171272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140142355",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've changed the test cases to use assert_raises_jsonrpc",
      "created_at" : "2017-09-21T06:49:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331067880",
      "id" : 331067880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T06:49:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331067880",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/534388?v=4",
         "events_url" : "https://api.github.com/users/tomasvdw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tomasvdw/followers",
         "following_url" : "https://api.github.com/users/tomasvdw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tomasvdw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tomasvdw",
         "id" : 534388,
         "login" : "tomasvdw",
         "organizations_url" : "https://api.github.com/users/tomasvdw/orgs",
         "received_events_url" : "https://api.github.com/users/tomasvdw/received_events",
         "repos_url" : "https://api.github.com/users/tomasvdw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tomasvdw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tomasvdw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tomasvdw"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yikes -- thank you for reporting and fixing this bug.\r\n\r\nI agree with @esotericnonsense and think we should go further; a command called \"backupwallet\" should never delete/overwrite anything, in my opinion.",
      "created_at" : "2017-09-21T15:22:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331190925",
      "id" : 331190925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T15:22:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331190925",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140280178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140280178"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good that you've included this in the try-except block, since `boost::filesystem::equivalent()` can throw, but the generic catch behaviour below would hide the precise error. You could return a more precise error by:\r\n\r\n- using the `equivalent(const path& p1, const path& p2, system::error_code& ec)` form (http://www.boost.org/doc/libs/1_46_0/libs/filesystem/v3/doc/reference.html#equivalent) and checking the returned `error_code`\r\n- testing the error code in the catch block below\r\n- having two try-catch blocks\r\n\r\nPerhaps a little bit overkill since the only way that `boost::filesystem::equivalent()` can throw is if the source `wallet.dat` file doesn't exist or isn't a regular file/directory/symlink. But something to consider.",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-09-21T15:41:26Z",
      "diff_hunk" : "@@ -672,6 +672,12 @@ bool CWalletDBWrapper::Backup(const std::string& strDest)\n                     pathDest /= strFile;\n \n                 try {\n+                    if (fs::equivalent(pathSrc, pathDest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140280178",
      "id" : 140280178,
      "original_commit_id" : "e062d5883db171e82153f0949ea52791cebbef7e",
      "original_position" : 4,
      "path" : "src/wallet/db.cpp",
      "position" : 4,
      "pull_request_review_id" : 64329744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140280178",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140280302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140280302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: the repository doesn't enforce max line length, so you can join this with the line above.",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-09-21T15:41:49Z",
      "diff_hunk" : "@@ -672,6 +672,12 @@ bool CWalletDBWrapper::Backup(const std::string& strDest)\n                     pathDest /= strFile;\n \n                 try {\n+                    if (fs::equivalent(pathSrc, pathDest)) {\n+                        LogPrintf(\"cannot backup to wallet source file %s\\n\",\n+                            pathDest.string());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140280302",
      "id" : 140280302,
      "original_commit_id" : "e062d5883db171e82153f0949ea52791cebbef7e",
      "original_position" : 6,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 64329744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140280302",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140280655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140280655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: again, no max line length, so you can join this with the line above.",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-09-21T15:43:10Z",
      "diff_hunk" : "@@ -190,6 +190,17 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbalance(), balance1)\n         assert_equal(self.nodes[2].getbalance(), balance2)\n \n+        # Backup to source wallet file must fail\n+        sourcePaths = [\n+            tmpdir + \"/node0/regtest/wallet.dat\",\n+            tmpdir + \"/node0/./regtest/wallet.dat\",\n+            tmpdir + \"/node0/regtest/\",\n+            tmpdir + \"/node0/regtest\"]\n+\n+        for sourcePath in sourcePaths:\n+            assert_raises_jsonrpc(-4, \"backup failed\",\n+                    self.nodes[0].backupwallet, sourcePath)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140280655",
      "id" : 140280655,
      "original_commit_id" : "e062d5883db171e82153f0949ea52791cebbef7e",
      "original_position" : 13,
      "path" : "test/functional/walletbackup.py",
      "position" : null,
      "pull_request_review_id" : 64329744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140280655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140302209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140302209"
         }
      },
      "author_association" : "NONE",
      "body" : ">  but the generic catch behaviour below would hide the precise error.\r\n\r\nIt does dumps the error message\r\n\r\n> Perhaps a little bit overkill since the only way that boost::filesystem::equivalent() can throw is if the source wallet.dat file doesn't exist or isn't a regular file/directory/symlink. \r\n\r\nThis was also my thought. If equivalant() fails we have bigger problems and a generic error is sufficient.",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-09-21T17:05:51Z",
      "diff_hunk" : "@@ -672,6 +672,12 @@ bool CWalletDBWrapper::Backup(const std::string& strDest)\n                     pathDest /= strFile;\n \n                 try {\n+                    if (fs::equivalent(pathSrc, pathDest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r140302209",
      "id" : 140302209,
      "in_reply_to_id" : 140280178,
      "original_commit_id" : "e062d5883db171e82153f0949ea52791cebbef7e",
      "original_position" : 4,
      "path" : "src/wallet/db.cpp",
      "position" : 4,
      "pull_request_review_id" : 64355141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140302209",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/534388?v=4",
         "events_url" : "https://api.github.com/users/tomasvdw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tomasvdw/followers",
         "following_url" : "https://api.github.com/users/tomasvdw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tomasvdw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tomasvdw",
         "id" : 534388,
         "login" : "tomasvdw",
         "organizations_url" : "https://api.github.com/users/tomasvdw/orgs",
         "received_events_url" : "https://api.github.com/users/tomasvdw/received_events",
         "repos_url" : "https://api.github.com/users/tomasvdw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tomasvdw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tomasvdw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tomasvdw"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@jnewbery , @sdaftuar Personally I think that silently overwriting the destination (if it's not the source!) is perfectly reasonable for a backup api command, and expected behavior. You don't want an rpc method to be interactive, and I am not to fond of something like \"mode=overwrite\".\r\n\r\nBut if others agree with your point, I am happy to change this, in this PR.\r\n\r\nWith regards to the returning message, my reasoning is that although this is indeed quite a major bug it is also extremely rare and unlikely to happen to more than _almost_ nobody. I considered a generic \"fail\" and a log enough, but if this reasoning is too lazy, I could enum the return and clarify the message. Do we want that?\r\n\r\nWith regards to relative paths; I would think that the RPC interface is primarily a programming interface. A relative path being relative to the working directory of the daemon seems to be common practice among programmable services, and removing it an odd limitation in flexibility that doesn't really help anyone.",
      "created_at" : "2017-09-21T17:17:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331223312",
      "id" : 331223312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T17:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331223312",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/534388?v=4",
         "events_url" : "https://api.github.com/users/tomasvdw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tomasvdw/followers",
         "following_url" : "https://api.github.com/users/tomasvdw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tomasvdw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tomasvdw",
         "id" : 534388,
         "login" : "tomasvdw",
         "organizations_url" : "https://api.github.com/users/tomasvdw/orgs",
         "received_events_url" : "https://api.github.com/users/tomasvdw/received_events",
         "repos_url" : "https://api.github.com/users/tomasvdw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tomasvdw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tomasvdw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tomasvdw"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Removed line breaks as per suggestion @jnewbery ",
      "created_at" : "2017-09-21T19:16:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331254408",
      "id" : 331254408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T19:16:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331254408",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/534388?v=4",
         "events_url" : "https://api.github.com/users/tomasvdw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tomasvdw/followers",
         "following_url" : "https://api.github.com/users/tomasvdw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tomasvdw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tomasvdw",
         "id" : 534388,
         "login" : "tomasvdw",
         "organizations_url" : "https://api.github.com/users/tomasvdw/orgs",
         "received_events_url" : "https://api.github.com/users/tomasvdw/received_events",
         "repos_url" : "https://api.github.com/users/tomasvdw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tomasvdw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tomasvdw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tomasvdw"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@tomasvdw I really think overwriting something that could be a wallet file a user needs is a fundamentally dangerous behavior; for example even though we're checking that the destination is different from the source, now that we have multiwallet you could be overwriting some other wallet file (which might even be loaded, though that doesn't really matter) -- again resulting in funds loss.  \r\n\r\nI think the default behavior should not be to overwrite anything, and I'd be fine with making it so that backupwallet never overwrote anything (ie don't bother with a option like mode=overwrite to allow a user to toggle it); it doesn't seem too cumbersome to me to require users to move the backup out of the way first before overwriting, and it's clearly safer.\r\n\r\nAlso it looks to me like boost::filesystem::copy_file is not doing an atomic copy/overwrite, so it's possible that if your disk fills up in the middle or if your computer crashes, that the end result will be that you have now have no backup and that your existing backup has been deleted.  I don't think this is an outcome we should permit.",
      "created_at" : "2017-09-21T19:43:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331261090",
      "id" : 331261090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T19:43:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331261090",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> as others have already pointed out, fs::copy_option::overwrite_if_exists is completely inappropriate for a backup command. To my mind, a backup command should never result in data being deleted or overwritten (unless perhaps called with an explicit by-default-off overwrite option)\r\n\r\nThe sort of standard way to use the dump command is to crontab running it to write to some place where your backup process is going to pick it up. If if doesn't delete it after, you're now backing up nothing. :(\r\n\r\nI think it's not helpful to complain about overwriting without having an answer to preventing this kind of silent backup failure. \r\n\r\nObvious alternatives off the top of my head are to halt and catch fire if you ask it to overwrite (so the above problem won't last), or to move the file its overwriting out of the way first e.g. wallet.backup.dat.1",
      "created_at" : "2017-09-21T23:11:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331306543",
      "id" : 331306543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-21T23:13:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331306543",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  or to move the file its overwriting out of the way first e.g. wallet.backup.dat.1\r\n\r\nSure, this seems reasonable to me, as does having the rpc command return failure (which I'd expect someone running this out of cron to already need to be catching).",
      "created_at" : "2017-09-22T00:10:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331315025",
      "id" : 331315025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-22T00:14:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331315025",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK b688b5242714f64c36e237b2c5c4151164ee6eb3",
      "created_at" : "2017-09-22T05:11:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331351754",
      "id" : 331351754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-22T05:11:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331351754",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added \"Need Backport\" label. Seems critical.\r\nThis should catch most footgunish usecases and therefore is a clear improvement, but agree with @gmaxwell that it won't catch symlink stupidity.",
      "created_at" : "2017-09-22T05:14:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331352065",
      "id" : 331352065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-22T05:14:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331352065",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK. I think it should refuse to overwrite any file, as @sdaftuar says.\r\n\r\nI vaguely remember that we changed backupwallet a while ago to fail if it's used on an existing file?\r\n\r\nEdit: never mind - that was **dumpwallet** in #9937, and apparently it was never merged because people had different ideas about it.\r\n\r\n",
      "created_at" : "2017-09-22T11:35:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331423435",
      "id" : 331423435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-22T11:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331423435",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think it's not helpful to complain without having an answer\r\n\r\nI complained, and we're now having a discussion, which is helpful in itself :slightly_smiling_face: \r\n\r\nThe 'sort of standard way' is not safe at all. Consider a setup where your cronjob is backing up to a filename, with a separate process or remote machine copying that backup file to a secure location. If that backup archiving process dies, then bitcoind will continue merrily overwriting old backups. Or imagine a scenario where you lose power and both your bitcoind process and backup archiving process die. You regain power and restart bitcoind, but perhaps set the wrong -mainnet/-testnet or -wallet parameter. You've now just blatted your most recent backup prior to the power outage.\r\n\r\n(If I sound paranoid about this - good! I've supported too many customers who have got backups wrong and experienced a lot of pain later).\r\n\r\nSo at the very least I'd change your cronjob from:\r\n\r\n`bitcoin-cli backupwallet /path/to/backupdirectory/wallet_backup.dat`\r\n\r\nto:\r\n\r\n`bitcoin-cli backupwallet /path/to/backupdirectory/wallet_backup-$(date +%s).dat`\r\n\r\nor even better, to:\r\n\r\n`(bitcoin-cli backupwallet /path/to/backupdirectory/wallet_backup-$(date +%s).dat) || alert_or_stop_bitcoind.sh`\r\n\r\nSo that's the motivation. As for your potential solutions:\r\n\r\n- _stop bitcoind if you ask it to overwrite (so the above problem won't last)_: seems a bit extreme to me\r\n- _move the file its overwriting out of the way first e.g. wallet.backup.dat.1_. I think this is also unsafe. If there's a file already at `wallet.backup.dat`, then there's at least a chance that there's another process that will modify or overwrite it later, or expect to find it there later. Imagine for example a slightly contrived example of trying to backup your wallet to the datadir of another running bitcoind. With this solution you've just changed the wallet.dat file from under the feet of the other bitcoind process, with bad consequences.\r\n\r\nI think a better way would be to try to write the backup to the provided filename. If a file already exists, then try to write the backup to the provided filename with an index or timestamp suffix.",
      "created_at" : "2017-09-22T14:18:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-331460061",
      "id" : 331460061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-22T14:18:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331460061",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If a file already exists, then try to write the backup to the provided filename with an index or timestamp suffix.\r\n\r\nWhy not move the existing file?   The concern I have is that if the provided name is what your backup routine is backing up, you'll just keep backing up the old thing over and over again. \r\n\r\nHm. I guess the move it out of the way doesn't work so hot if the \"thing in the way\" is your live wallet.dat. :(   can we just change the darn function to not let you set the filename, but only the path, and have it pick a file name, guaranteed to be unused, and return that?",
      "created_at" : "2017-09-25T23:23:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-332041479",
      "id" : 332041479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-25T23:23:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332041479",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I guess the move it out of the way doesn't work so hot if the \"thing in the way\" is your live wallet.dat. \r\n\r\nYou could still leave in this fix (source != target). Generally, as there is some discussion on the move-out-of-way semantics, I think it is better to merge this critical fix and create a new PR to propose fixing overwrite. I think these are separate issues only related by touching the same area of code.",
      "created_at" : "2017-09-26T07:05:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-332106269",
      "id" : 332106269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-26T07:05:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332106269",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/534388?v=4",
         "events_url" : "https://api.github.com/users/tomasvdw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tomasvdw/followers",
         "following_url" : "https://api.github.com/users/tomasvdw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tomasvdw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tomasvdw",
         "id" : 534388,
         "login" : "tomasvdw",
         "organizations_url" : "https://api.github.com/users/tomasvdw/orgs",
         "received_events_url" : "https://api.github.com/users/tomasvdw/received_events",
         "repos_url" : "https://api.github.com/users/tomasvdw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tomasvdw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tomasvdw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tomasvdw"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> can we just change the darn function to not let you set the filename, but only the path, and have it pick a file name, guaranteed to be unused, and return that?\r\n\r\nI'd be fine with that. Obviously it's an API break.\r\n\r\nI think my general approach is that the process that is backing itself up in general shouldn't delete, overwrite or move files when backing up. It should be the backup archival process's job to manage the backup files (polling for new files, copying to remote location, deleting or renaming the source backup file when done).\r\n\r\n> I think it is better to merge this critical fix and create a new PR to propose fixing overwrite\r\n\r\nACK. I think this is useful discussion, but I'm happy for this minimal fix to be merged and then to figure out a better more general approach in a different PR.",
      "created_at" : "2017-09-26T17:25:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-332273208",
      "id" : 332273208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-09-26T17:25:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332273208",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r143552898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143552898"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Needs rebase and replace with \"assert_raises_rpc_error\"",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-10-09T19:08:47Z",
      "diff_hunk" : "@@ -190,6 +190,16 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbalance(), balance1)\n         assert_equal(self.nodes[2].getbalance(), balance2)\n \n+        # Backup to source wallet file must fail\n+        sourcePaths = [\n+            tmpdir + \"/node0/regtest/wallet.dat\",\n+            tmpdir + \"/node0/./regtest/wallet.dat\",\n+            tmpdir + \"/node0/regtest/\",\n+            tmpdir + \"/node0/regtest\"]\n+\n+        for sourcePath in sourcePaths:\n+            assert_raises_jsonrpc(-4, \"backup failed\", self.nodes[0].backupwallet, sourcePath)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r143552898",
      "id" : 143552898,
      "original_commit_id" : "b688b5242714f64c36e237b2c5c4151164ee6eb3",
      "original_position" : 12,
      "path" : "test/functional/walletbackup.py",
      "position" : null,
      "pull_request_review_id" : 68080422,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143552898",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r143716802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143716802"
         }
      },
      "author_association" : "NONE",
      "body" : "Done; rebased and changed to assert_rpc_error",
      "commit_id" : "5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-10-10T12:51:08Z",
      "diff_hunk" : "@@ -190,6 +190,16 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbalance(), balance1)\n         assert_equal(self.nodes[2].getbalance(), balance2)\n \n+        # Backup to source wallet file must fail\n+        sourcePaths = [\n+            tmpdir + \"/node0/regtest/wallet.dat\",\n+            tmpdir + \"/node0/./regtest/wallet.dat\",\n+            tmpdir + \"/node0/regtest/\",\n+            tmpdir + \"/node0/regtest\"]\n+\n+        for sourcePath in sourcePaths:\n+            assert_raises_jsonrpc(-4, \"backup failed\", self.nodes[0].backupwallet, sourcePath)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#discussion_r143716802",
      "id" : 143716802,
      "in_reply_to_id" : 143552898,
      "original_commit_id" : "b688b5242714f64c36e237b2c5c4151164ee6eb3",
      "original_position" : 12,
      "path" : "test/functional/walletbackup.py",
      "position" : null,
      "pull_request_review_id" : 68267420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11376",
      "updated_at" : "2017-10-10T12:51:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143716802",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/534388?v=4",
         "events_url" : "https://api.github.com/users/tomasvdw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tomasvdw/followers",
         "following_url" : "https://api.github.com/users/tomasvdw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tomasvdw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tomasvdw",
         "id" : 534388,
         "login" : "tomasvdw",
         "organizations_url" : "https://api.github.com/users/tomasvdw/orgs",
         "received_events_url" : "https://api.github.com/users/tomasvdw/received_events",
         "repos_url" : "https://api.github.com/users/tomasvdw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tomasvdw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tomasvdw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tomasvdw"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Agreed, lets merge this and then we can paint the overwrite-parameter shed whatever color we like. utACK \r\n 5d465e396249a0e2cc60b16984a2bdbe4c8993c3",
      "created_at" : "2017-10-17T21:02:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-337370173",
      "id" : 337370173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-10-17T21:02:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337370173",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If at the end the backup can't overwrite any file then there is no need to merge this.\r\n\r\nEdit: I mean, should be enough to check if the destination doesn't exists to actually backup.\r\n\r\nEdit 2: I agree with not allowing overwrites, some timestamp suffix/prefix is pretty common.",
      "created_at" : "2017-10-17T21:25:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11376#issuecomment-337376419",
      "id" : 337376419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11376",
      "updated_at" : "2017-10-17T21:29:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337376419",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]

{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "### Describe the issue\r\n\r\nBuilding within Termux fails in validationinterface. The error is below.\r\n\r\n### Can you reliably reproduce the issue?\r\n#### If so, please list the steps to reproduce below:\r\n1. Install the required dependencies in Termux using the package manager\r\n2. Compile libevent from source to get libevent_pthreads\r\n3. Wrangle a bit with chroots and so on to get autogen/configure to run through\r\n4. make\r\n\r\n### Expected behaviour\r\nA copy of bitcoind to appear for me to abuse my smartphone with. Obviously not a 'supported' configuration, but it'd be a fun toy to play with.\r\n\r\n### Actual behaviour\r\n\r\n```\r\n... omitted ...\r\n  CXX      libbitcoin_server_a-validationinterface.o                                                                  \r\nIn file included from validationinterface.cpp:6:                                                                      \r\nIn file included from ./validationinterface.h:9:                                                                      \r\nIn file included from /usr/bin/../include/c++/v1/memory:599:                                                          \r\n/usr/bin/../include/c++/v1/type_traits:1334:59: error: incomplete type 'CBlock' used in type trait expression         \r\n    : public integral_constant<bool, __is_base_of(_Bp, _Dp)> {};                                                      \r\n                                                          ^                                                           \r\n/usr/bin/../include/c++/v1/type_traits:543:37: note: in instantiation of template class                               \r\n      'std::__ndk1::is_base_of<std::__ndk1::allocator_arg_t, CBlock>' requested here                                  \r\nstruct __lazy_and : __lazy_and_impl<_P1::type::value, _Pr...> {};                                                     \r\n                                    ^                                                                                 \r\n/usr/bin/../include/c++/v1/tuple:664:9: note: in instantiation of template class                                      \r\n      'std::__ndk1::__lazy_and<std::__ndk1::is_base_of<std::__ndk1::allocator_arg_t, CBlock>,                         \r\n      std::__ndk1::__lazy_all<std::__ndk1::__dependent_type<std::__ndk1::is_default_constructible<const CBlock &>,    \r\n      true>, std::__ndk1::__dependent_type<std::__ndk1::is_default_constructible<const CValidationState &>, true> > >'\r\n      requested here                                                                                                  \r\n        __lazy_and<                                                                                                   \r\n        ^                                                                                                             \r\n/usr/bin/../include/c++/v1/tuple:670:5: note: in instantiation of default argument for 'tuple<CBlock,                 \r\n      CValidationState, true>' required here                                                                          \r\n    tuple(_AllocArgT, _Alloc const& __a)                                                                              \r\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                              \r\n/usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:128:49: note: while substituting deduced template        \r\n      arguments into function template 'tuple' [with _AllocArgT = CBlock, _Alloc = CValidationState, _Dummy =         \r\n      (no value), $3 = (no value)]                                                                                    \r\n        variadic_slot_invoker(Args & ... args): _args(args...)                                                        \r\n                                                ^                                                                     \r\n/usr/include/boost/signals2/detail/signal_template.hpp:239:34: note: in instantiation of member function              \r\n      'boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, const CBlock &, const       \r\n      CValidationState &>::variadic_slot_invoker' requested here                                                      \r\n          slot_invoker invoker = slot_invoker(BOOST_SIGNALS2_SIGNATURE_ARG_NAMES(BOOST_SIGNALS2_NUM_ARGS));           \r\n                                 ^                                                                                    \r\n/usr/include/boost/signals2/detail/signal_template.hpp:722:16: note: in instantiation of member function              \r\n      'boost::signals2::detail::signal_impl<void (const CBlock &, const CValidationState &),                          \r\n      boost::signals2::optional_last_value<void>, int, std::__ndk1::less<int>, boost::function<void (const CBlock &,  \r\n      const CValidationState &)>, boost::function<void (const boost::signals2::connection &, const CBlock &, const    \r\n      CValidationState &)>, boost::signals2::mutex>::operator()' requested here                                       \r\n        return (*_pimpl)(BOOST_SIGNALS2_SIGNATURE_ARG_NAMES(BOOST_SIGNALS2_NUM_ARGS));                                \r\n               ^                                                                                                      \r\nvalidationinterface.cpp:121:30: note: in instantiation of member function 'boost::signals2::signal<void (const CBlock \r\n      &, const CValidationState &), boost::signals2::optional_last_value<void>, int, std::__ndk1::less<int>,          \r\n      boost::function<void (const CBlock &, const CValidationState &)>, boost::function<void (const                   \r\n      boost::signals2::connection &, const CBlock &, const CValidationState &)>, boost::signals2::mutex>::operator()' \r\n      requested here                                                                                                  \r\n    m_internals->BlockChecked(block, state);                                                                          \r\n                             ^                                                                                        \r\n./validationinterface.h:13:7: note: forward declaration of 'CBlock'                                                   \r\nclass CBlock;                                                                                                         \r\n      ^                                                                                                               \r\n1 error generated.                                                                                                    \r\nmake[2]: *** [Makefile:5891: libbitcoin_server_a-validationinterface.o] Error 1                                       \r\nmake[2]: *** Waiting for unfinished jobs....               \r\nmake[2]: Leaving directory '/home/src/bitcoin-0.15.0/src'  \r\nmake[1]: *** [Makefile:9277: all-recursive] Error 1        \r\nmake[1]: Leaving directory '/home/src/bitcoin-0.15.0/src'  \r\nmake: *** [Makefile:739: all-recursive] Error 1            \r\n```\r\n\r\n### What version of bitcoin-core are you using?\r\nv0.15.0.1, signed source package.\r\n\r\n### Other potentially relevant information\r\nTermux doesn't ship g++ and hasn't for a while now.\r\n```\r\n$ clang -v                            \r\nclang version 5.0.0 (tags/RELEASE_500/final)               \r\nTarget: aarch64--linux-android                             \r\nThread model: posix          \r\nInstalledDir: /data/data/com.termux/files/usr/bin\r\n```",
   "closed_at" : "2017-10-07T11:32:45Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 9,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11388/comments",
   "created_at" : "2017-09-23T02:16:37Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11388/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/11388",
   "id" : 259976469,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "id" : 61889416,
         "name" : "Build system",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11388/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 11388,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Building within termux fails with 'incomplete type CBlock'",
   "updated_at" : "2017-10-07T11:32:45Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11388",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/7999704?v=4",
      "events_url" : "https://api.github.com/users/esotericnonsense/events{/privacy}",
      "followers_url" : "https://api.github.com/users/esotericnonsense/followers",
      "following_url" : "https://api.github.com/users/esotericnonsense/following{/other_user}",
      "gists_url" : "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/esotericnonsense",
      "id" : 7999704,
      "login" : "esotericnonsense",
      "organizations_url" : "https://api.github.com/users/esotericnonsense/orgs",
      "received_events_url" : "https://api.github.com/users/esotericnonsense/received_events",
      "repos_url" : "https://api.github.com/users/esotericnonsense/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/esotericnonsense/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/esotericnonsense"
   }
}

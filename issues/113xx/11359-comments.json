[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Benchmarks, syncing against a localhost node. Sending node on HDD, syncing node on SSD. Clock starts at UpdateTip height=1. prune=550 dbcache=3000.\r\n\r\n```\r\n+--------+----------+------------------+-----------------+\r\n| height | unpruned | pruned (this PR) | pruned (master) |\r\n+--------+----------+------------------+-----------------+\r\n| 250000 |     427s |             593s |            724s |\r\n| 300000 |     916s |            1076s |           1402s |\r\n| 350000 |    1443s |            1979s |           2707s |\r\n+--------+----------+------------------+-----------------+\r\n```\r\nAt height 350000, this PR results in a 529MiB dbcache vs. a 2646MiB dbcache unpruned.\r\nThe pruned node ends up with approx. 30MiB.\r\n110 seconds should be added to serialize the dbcache on the unpruned node's shutdown (the other two cases were single digit seconds).\r\n\r\nFinal result is that the node can sync to height 350000 27% faster than without the PR by giving the prune target ~3GiB leeway. I didn't want to spend the time to reach the end but I suspect results would be similar or better.\r\n\r\nAs in the above post, this is only a 'partial fix' because the dbcache is still limited empirically to far lower than the actual value.\r\n\r\nedit: Ah yes, space requirements. In this test the chainstate folder's final size is ~1GiB and the prune is allowed to overshoot by ~3GiB, so it raises the maximum disk space requirement by ~2GiB in this example.",
      "created_at" : "2017-09-18T03:21:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11359#issuecomment-330121879",
      "id" : 330121879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11359",
      "updated_at" : "2017-09-18T04:25:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330121879",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7999704?v=4",
         "events_url" : "https://api.github.com/users/esotericnonsense/events{/privacy}",
         "followers_url" : "https://api.github.com/users/esotericnonsense/followers",
         "following_url" : "https://api.github.com/users/esotericnonsense/following{/other_user}",
         "gists_url" : "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/esotericnonsense",
         "id" : 7999704,
         "login" : "esotericnonsense",
         "organizations_url" : "https://api.github.com/users/esotericnonsense/orgs",
         "received_events_url" : "https://api.github.com/users/esotericnonsense/received_events",
         "repos_url" : "https://api.github.com/users/esotericnonsense/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/esotericnonsense/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/esotericnonsense"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "An additional performance gain could be gotten by tying this HWM to a percentage of the prune target. \r\n\r\nFor example, with prune=100000 you could let the data get to 100G x 1.10 before pruning, or cap it at 100G and prune down to 100G x 0.90 (similar effect on dbcache in both cases).\r\n\r\nLooking at the documentation in -help:\r\n```\r\nautomatically prune block files to stay under the specified target size in MiB\r\n```\r\nso probably the 'remain below' option makes more sense, but that retains the far slower IBD mechanic at low prune levels",
      "created_at" : "2017-09-18T04:51:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11359#issuecomment-330129093",
      "id" : 330129093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11359",
      "updated_at" : "2017-09-18T04:55:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330129093",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7999704?v=4",
         "events_url" : "https://api.github.com/users/esotericnonsense/events{/privacy}",
         "followers_url" : "https://api.github.com/users/esotericnonsense/followers",
         "following_url" : "https://api.github.com/users/esotericnonsense/following{/other_user}",
         "gists_url" : "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/esotericnonsense",
         "id" : 7999704,
         "login" : "esotericnonsense",
         "organizations_url" : "https://api.github.com/users/esotericnonsense/orgs",
         "received_events_url" : "https://api.github.com/users/esotericnonsense/received_events",
         "repos_url" : "https://api.github.com/users/esotericnonsense/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/esotericnonsense/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/esotericnonsense"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No strong feelings from me, but when we worked on the pruning implementation our goal was to have the target be something that should be achievable.  So if we were to decide that it's worth exceeding it intentionally (eg for performance reasons during ibd), we should remember that we need to clearly communicate that to users.\r\n\r\nBut now that we in theory support non-atomic flushes, perhaps we can use that to flush less often during IBD even while we prune.",
      "created_at" : "2017-09-29T19:09:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11359#issuecomment-333212921",
      "id" : 333212921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11359",
      "updated_at" : "2017-09-29T19:09:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333212921",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]

[
   {
      "author_association" : "MEMBER",
      "body" : "`getblocktemplate` requires that you are connected to at least one other node. This is not a bug, it is intended behavior.",
      "created_at" : "2017-09-21T01:30:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331025309",
      "id" : 331025309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T01:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331025309",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I suppose the purpose behind this is so people do not make blocks without knowing the state of the network.",
      "created_at" : "2017-09-21T01:33:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331025810",
      "id" : 331025810,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T01:33:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331025810",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Didn't investigated the issue, but it may be related with the gact that there's no CChainParams::MiningRequiresPeers() exists in 0.14 but not in 0.15 ?\r\nPerhaps it is a regression?\r\n\r\n@instagibbs yeah, that's the point, but shouldn't be a requirement for regtest.",
      "created_at" : "2017-09-21T01:35:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331025985",
      "id" : 331025985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T01:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331025985",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101 That's not very sane for regtest, is it?  And the unreliable sendrawtransaction/generate behavior on regtest seems to be most simply fixed by allowing this.",
      "created_at" : "2017-09-21T01:44:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331027210",
      "id" : 331027210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T01:44:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331027210",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/775844?v=4",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Did you investigate the unreliable sendrawtransaction/generate behavior? I'm skeptical of adding yet more network-specific behavior to chainparams, and can't think of any reasons transactions in mempool would not be included in freshly-CreateNewBlock'd things. Was the generate call to a different node than the sendrawtransaction call was to?",
      "created_at" : "2017-09-21T03:38:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331042150",
      "id" : 331042150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T03:38:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331042150",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt actually, yes, I had a bug which caused this (I wasn't *actually* waiting for sendrawtransaction to complete in a corner case).  So I'm not actually hitting this IRL, which reduces my care factor significantly.\r\n\r\nThe getblocktemplate failure is weird, though.  regtest is all about being a solo network, AFAICT, and if I were writing mining software I'd probably want to test this way.",
      "created_at" : "2017-09-21T04:27:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331047857",
      "id" : 331047857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T07:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331047857",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/775844?v=4",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jtimon It's not a regression; that you have connections is explicitly checked for in `getblocktemplate`: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L441\r\n\r\n@rustyrussell \r\n> That's not very sane for regtest, is it?\r\n\r\nPerhaps.\r\n\r\n> And the unreliable sendrawtransaction/generate behavior on regtest seems to be most simply fixed by allowing this.\r\n\r\nHow so? AFAIK `generate` and `getblocktemplate` use the same code to produce the block template which `generate` uses to then actually make the block.\r\n\r\nUnless you mean it would allow you to workaround your issue (by repeatedly calling `getblocktemplate` and just checking for it there); in which case this is just a workaround, not a fix of the actual problem (transactions just sent not getting into blocks).\r\n\r\n> And I can't just generate another block until the tx is included, because we use locktimes and explicitly test set number of blocks.\r\n\r\nYou could keep invalidating blocks at a height until one is mined which satisfies your criteria :stuck_out_tongue:",
      "created_at" : "2017-09-21T05:07:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331052256",
      "id" : 331052256,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T05:08:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331052256",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The getblocktemplate failure is weird, though. regtest is all about being a solo network, AFAICT, and if I were writing mining software I'd probably want to test this way.\r\n\r\nThis has tripped me up before, but I think it makes sense to keep the current behaviour. Any regtest-specific behaviour means that regtest isn't testing the same code paths as a node running mainnet.\r\n\r\nWe work around this in our functional tests by just spinning up a second node to peer with the node-under-test. See for example https://github.com/bitcoin/bitcoin/blob/master/test/functional/mining.py#L31 where the second node is brought up for this purpose.",
      "created_at" : "2017-09-21T14:55:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331182295",
      "id" : 331182295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T14:55:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331182295",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@rustyrussell Unfortunately even if we fix or workaround the connectivity requirement issue, I suspect that you'd likely still run into problems using getblocktemplate to test in this way, due to the caching of templates in gbt.  (This has bitten me before.)\r\n\r\nI'd be supportive of an rpc command that just called CreateNewBlock and returned the results, without supporting any of the getblocktemplate options / behaviors, in order to explicitly test transaction selection. ",
      "created_at" : "2017-09-21T15:39:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-331195939",
      "id" : 331195939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-09-21T15:39:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331195939",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I have the same issue. How can I test getblocktemplate without using testnet, as waiting for sync takes too much time.",
      "created_at" : "2017-10-09T17:34:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11379#issuecomment-335227617",
      "id" : 335227617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11379",
      "updated_at" : "2017-10-09T17:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335227617",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/10464157?v=4",
         "events_url" : "https://api.github.com/users/shwuhk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/shwuhk/followers",
         "following_url" : "https://api.github.com/users/shwuhk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/shwuhk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/shwuhk",
         "id" : 10464157,
         "login" : "shwuhk",
         "organizations_url" : "https://api.github.com/users/shwuhk/orgs",
         "received_events_url" : "https://api.github.com/users/shwuhk/received_events",
         "repos_url" : "https://api.github.com/users/shwuhk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/shwuhk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/shwuhk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/shwuhk"
      }
   }
]

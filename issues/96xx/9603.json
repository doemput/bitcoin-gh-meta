{
   "assignee" : null,
   "assignees" : [],
   "body" : "As discussed recently in #9581 and in referenced past discussions #6839, #6156, and probably a bunch of other places too, there is concern about the long tail of effort and risk involved with these style fix-up PRs. To summarize what has been articulated by the experienced maintainers:\r\n\r\n1) it is a lot of PR clutter for reviewers/maintainers to sift through\r\n2) it impedes release management since style fix-ups often have difficult merge conflicts with more important content\r\n3) they are sometimes hard to review and bugs can slip in\r\n4) they permanently clutter up output from `git blame` and other history tools\r\n\r\nMy suggestion is that the ideal long-term strategy is to automate detection of these style issues as much as possible such that the CI system can auto-check every PR. This will ensure that the code is kept clean and consistent at source and is kept that way for all time.\r\n\r\nAdditionally, the message I am getting from what has been written is that the strategy for bringing this online needs to be done **properly** or **not at all**. It will require a conscientious effort to minimize the impact to ongoing activities and steps should be taken to make damn sure it is not the cause of any bugs. I have some thoughts, but collecting ideas from all around is good (and thanks for all that has already been written, it is quite helpful for thinking this through). I am content leaving this PR to sit until a larger collection of automation scripts are complete and we have a strategy that the maintainers are on board with.\r\n\r\n\r\nThis PR provides an example script for very basic style checks which are expressed as simple regular expressions:\r\n\r\n```\r\nSTYLE_RULES = [\r\n    {'title':   'No tabstops',\r\n     'applies': ['*.c', '*.cpp', '*.h', '*.py', '*.sh'],\r\n     'regex':   '\\t',\r\n     'fix':     '    '},\r\n    {'title':   'No trailing whitespace on a line',\r\n     'applies': ['*.c', '*.cpp', '*.h', '*.py', '*.sh'],\r\n     'regex':   ' \\n',\r\n     'fix':     '\\n'},\r\n    {'title':   'No more than three consecutive newlines',\r\n     'applies': ['*.c', '*.cpp', '*.h', '*.py', '*.sh'],\r\n     'regex':   '\\n\\n\\n\\n',\r\n     'fix':     '\\n\\n\\n'},\r\n    {'title':   'Do not end a line with a semicolon',\r\n     'applies': ['*.py'],\r\n     'regex':   ';\\n',\r\n     'fix':     '\\n'},\r\n    {'title':   'Do not end a line with two semicolons',\r\n     'applies': ['*.c', '*.cpp', '*.h'],\r\n     'regex':   ';;\\n',\r\n     'fix':     ';\\n'},\r\n]\r\n```\r\n\r\nThe script provides a `report` subcommand that gives an overview of the state of the repository. It also provides a `check` command, which like in #9459, provides a shell status code (to make it easy to hook to TravisCI) and also gives pointers to what needs to be done to resolve the issue. Finally it provides a `fix` command which just does a search-and-replace according to the 'fix' string in the above `STYLE_RULES` dictionary.\r\n\r\nThe master branch has 141 files that fail this set of rules (19 + 93 + 16 + 13 + 0). However, I did not include the fixup in this PR due to the aforementioned reasons. The script can do the edit by invoking `contrib/devtools/basic_style.py fix .`.\r\n\r\n`clang-format`, `pep8`, `pylint`, `coverity`, clang static analyzer, etc. are what I would define as 'non-basic' style checks that can be similarly automated (and might actually make this one redundant). Also, the `copyright_header.py` script in #9452/#9459 could be part of the end result too.",
   "closed_at" : "2017-02-02T19:42:30Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
      "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
      "followers_url" : "https://api.github.com/users/isle2983/followers",
      "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
      "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/isle2983",
      "id" : 20916903,
      "login" : "isle2983",
      "organizations_url" : "https://api.github.com/users/isle2983/orgs",
      "received_events_url" : "https://api.github.com/users/isle2983/received_events",
      "repos_url" : "https://api.github.com/users/isle2983/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/isle2983"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9603/comments",
   "created_at" : "2017-01-20T17:45:16Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9603/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/9603",
   "id" : 202200864,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "id" : 64584,
         "name" : "Brainstorming",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9603/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 9603,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/9603.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9603",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/9603.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9603"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Add basic_style.py to automate some style checking.",
   "updated_at" : "2017-02-02T19:42:30Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9603",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
      "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
      "followers_url" : "https://api.github.com/users/isle2983/followers",
      "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
      "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/isle2983",
      "id" : 20916903,
      "login" : "isle2983",
      "organizations_url" : "https://api.github.com/users/isle2983/orgs",
      "received_events_url" : "https://api.github.com/users/isle2983/received_events",
      "repos_url" : "https://api.github.com/users/isle2983/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/isle2983"
   }
}

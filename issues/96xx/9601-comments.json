[
   {
      "body" : "Looks like this is a duplicate of  #6675",
      "created_at" : "2017-01-20T18:15:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-274140961",
      "id" : 274140961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-01-20T18:15:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274140961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "I am against\r\nIt works as an anti-spam addresses",
      "created_at" : "2017-01-25T15:43:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-275142828",
      "id" : 275142828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-01-25T15:43:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275142828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23635045?v=3",
         "events_url" : "https://api.github.com/users/DATSEC/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DATSEC/followers",
         "following_url" : "https://api.github.com/users/DATSEC/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DATSEC/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DATSEC",
         "id" : 23635045,
         "login" : "DATSEC",
         "organizations_url" : "https://api.github.com/users/DATSEC/orgs",
         "received_events_url" : "https://api.github.com/users/DATSEC/received_events",
         "repos_url" : "https://api.github.com/users/DATSEC/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DATSEC/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DATSEC/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DATSEC"
      }
   },
   {
      "body" : "Concept NACK to removal from mining:\r\n\r\n* Miner(s) still use priority. Whether or not you agree with this, policy is not up to developers to decide and force on miners.\r\n* Coin age is a useful algorithm for altruistic miners who wish to keep the network functioning smoothly even during flood attacks.\r\n* Coin age ensures that so long as a non-spam transaction pays a reasonable fee, it will *eventually* get mined. (RBF may eventually make this assurance unnecessary, but we're not there yet.)\r\n* Using a single algorithm for block creation makes it significantly easier for floods to game the algorithm to DoS the entire network. Merely the existence of multiple different sorting algorithms for blocks helps avoid the situation where blocks are pure flood and legitimate transactions can't get through.\r\n* Regardless of past complications, the current code is cleanly isolated from the rest of the code, and a mere 100 lines. If it creates a burden for future modifications, removing priority can be put back on the table and weighed against the value of those modifications (or ported by someone interested in keeping it; eg, me).\r\n* Multiple algorithms for mining (regardless of what those algorithms may be) also avoids the situation where policy logic gets too deeply embedded into non-policy code, creating huge risks and burdens for anyone who wishes to customise it without modifying any non-policy code.\r\n\r\nI can alternatively maintain coin-age priority in Knots only, but I do not think Core should head in this direction of pushing a single specific political agenda at the exclusion of all others. If it does go that route, it should be made clear that Core is no longer a reference implementation, and its political agenda documented.\r\n\r\nConcept ACK to everything else (eg, removal of support for zero-fee transactions, and priority estimation)",
      "created_at" : "2017-02-14T03:53:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-279600986",
      "id" : 279600986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-02-14T03:53:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279600986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr you have your opinions on priority, which I completely respect. However, this:\r\n\r\n> Regardless of past complications, the current code is cleanly isolated from the rest of the code, and a mere 100 lines.\r\n\r\nis simply not true. #9602 is the WIP PR for removing the priority code, and it already has >100 insertions and >800 deletions:\r\n\r\n```\r\nÃ¢ÂÂ git diff --stat master..HEAD\r\n contrib/debian/examples/bitcoin.conf   |   3 ---\r\n contrib/devtools/check-doc.py          |   2 +-\r\n qa/rpc-tests/abandonconflict.py        |   1 -\r\n qa/rpc-tests/bip68-sequence.py         |   8 ++++----\r\n qa/rpc-tests/importmulti.py            |  33 +--------------------------------\r\n qa/rpc-tests/mempool_packages.py       |   4 ++--\r\n qa/rpc-tests/nulldummy.py              |   4 ++--\r\n qa/rpc-tests/prioritise_transaction.py |  34 +++++++++++-----------------------\r\n qa/rpc-tests/replace-by-fee.py         |   4 ++--\r\n qa/rpc-tests/smartfees.py              |  13 +++++++------\r\n qa/rpc-tests/test_framework/util.py    |  41 -----------------------------------------\r\n src/addrman.cpp                        |   6 +++++-\r\n src/bench/mempool_eviction.cpp         |   5 ++---\r\n src/coins.cpp                          |  19 -------------------\r\n src/coins.h                            |   7 -------\r\n src/init.cpp                           |   9 +++------\r\n src/miner.cpp                          | 159 +++------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n src/miner.h                            |  12 ------------\r\n src/net_processing.cpp                 |   7 +++----\r\n src/policy/fees.cpp                    |  18 ------------------\r\n src/policy/fees.h                      |  15 ---------------\r\n src/policy/policy.h                    |   2 --\r\n src/primitives/transaction.cpp         |  26 --------------------------\r\n src/primitives/transaction.h           |   6 ------\r\n src/qt/coincontroldialog.cpp           |  24 +++---------------------\r\n src/qt/guiutil.cpp                     |   3 ---\r\n src/qt/paymentrequestplus.h            |   3 ---\r\n src/rpc/blockchain.cpp                 |   4 ----\r\n src/rpc/client.cpp                     |   5 +----\r\n src/rpc/mining.cpp                     |  84 ++++++++----------------------------------------------------------------------------\r\n src/rpc/misc.cpp                       |   5 +----\r\n src/rpc/net.cpp                        |   2 +-\r\n src/rpc/rawtransaction.cpp             |   2 +-\r\n src/test/mempool_tests.cpp             |  43 ++++++++++++++++++++-----------------------\r\n src/test/miner_tests.cpp               |   4 +---\r\n src/test/policyestimator_tests.cpp     |  10 ++++------\r\n src/test/test_bitcoin.cpp              |  13 +++++--------\r\n src/test/test_bitcoin.h                |   9 +++------\r\n src/txmempool.cpp                      |  57 +++++++++++++++------------------------------------------\r\n src/txmempool.h                        |  52 +++++-----------------------------------------------\r\n src/validation.cpp                     |  44 +++++++++-----------------------------------\r\n src/validation.h                       |   2 --\r\n src/wallet/rpcdump.cpp                 |  33 ++++++++++++++++++---------------\r\n src/wallet/wallet.cpp                  |  80 +++++++++++++++-----------------------------------------------------------------\r\n src/wallet/wallet.h                    |  32 ++++++--------------------------\r\n src/wallet/walletdb.cpp                |  43 +++++++++++++++++--------------------------\r\n src/wallet/walletdb.h                  |   2 +-\r\n 47 files changed, 180 insertions(+), 814 deletions(-)\r\n```\r\n\r\n> I do not think Core should head in this direction of pushing a single specific political agenda at the exclusion of all others. If it does go that route, it should be made clear that Core is no longer a reference implementation, and its political agenda documented.\r\n\r\nNo need for inflammatory language like this.",
      "created_at" : "2017-02-17T20:02:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-280751964",
      "id" : 280751964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-02-17T20:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280751964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery #9602 removes much more than mining-only priority sorting, which is what I was referring to there.\r\n\r\n> > I do not think Core should head in this direction of pushing a single specific political agenda at the exclusion of all others. If it does go that route, it should be made clear that Core is no longer a reference implementation, and its political agenda documented.\r\n\r\n> No need for inflammatory language like this.\r\n\r\nThe *change* is what is inflammatory...",
      "created_at" : "2017-02-17T20:07:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-280753266",
      "id" : 280753266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-02-17T20:07:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280753266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> Miner(s) still use priority. Whether or not you agree with this, policy is not up to developers to decide and force on miners.\r\n\r\nI don't believe that this happens in any significant measure.\r\n\r\n> Coin age is a useful algorithm for altruistic miners who wish to keep the network functioning smoothly even during flood attacks.\r\n\r\nIt's a potentially useful metric when it is used by wallets. No wallet ever had a decent implementation of priority-maximizing behaviour. Because of this, miners who increase priority based area will just increase unpredictable behavior for wallets.\r\n\r\n> Coin age ensures that so long as a non-spam transaction pays a reasonable fee, it will eventually get mined. (RBF may eventually make this assurance unnecessary, but we're not there yet.)\r\n\r\nOnly if the priority-based capacity exceeds the demand, and without lower bound on cost, I believe that demand can grow arbitrarily large.\r\n\r\n> Using a single algorithm for block creation makes it significantly easier for floods to game the algorithm to DoS the entire network. Merely the existence of multiple different sorting algorithms for blocks helps avoid the situation where blocks are pure flood and legitimate transactions can't get through.\r\n\r\nPerhaps, but multiple algorithms can easily be built on top (see below).\r\n\r\n> Regardless of past complications, the current code is cleanly isolated from the rest of the code, and a mere 100 lines. If it creates a burden for future modifications, removing priority can be put back on the table and weighed against the value of those modifications (or ported by someone interested in keeping it; eg, me).\r\n\r\nSee @jnewbery's comment above.\r\n\r\n> Multiple algorithms for mining (regardless of what those algorithms may be) also avoids the situation where policy logic gets too deeply embedded into non-policy code, creating huge risks and burdens for anyone who wishes to customise it without modifying any non-policy code.\r\n\r\nThat \"hardcoded\" logic you're referring to sorting based on a single 'cost' (called size) vs 'benefit' (called fee) ratio. Changing what those cost and benefit are is easy, and can be done without performance impact. Anything else can be done on top through `prioritizetransaction`.\r\n\r\n> I can alternatively maintain coin-age priority in Knots only, but I do not think Core should head in this direction of pushing a single specific political agenda at the exclusion of all others. If it does go that route, it should be made clear that Core is no longer a reference implementation, and its political agenda documented.\r\n\r\nI don't believe that the removal of priority is pushing anything. It's simply recognizing the fact that coin age based mining is a historical artifact that - to the contributors of this project - seems unlikely to become relevant again.",
      "created_at" : "2017-02-18T00:25:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-280802932",
      "id" : 280802932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-02-18T00:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280802932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> I don't believe that this happens in any significant measure.\r\n\r\nI don't believe there is evidence to support this disbelief.\r\n\r\n> It's a potentially useful metric when it is used by wallets. No wallet ever had a decent implementation of priority-maximizing behaviour.\r\n\r\nPriority doesn't require maximization. Even entirely random coin selection is likely to trigger a higher priority for legitimate usage than spam.\r\n\r\n> Only if the priority-based capacity exceeds the demand, and without lower bound on cost, I believe that demand can grow arbitrarily large.\r\n\r\nIn the scope of infinite time, capacity is also infinite so long as the per-block priority size is non-zero. Also, there is a lower bound on cost: the miner's mempool size limit.\r\n\r\n> See @jnewbery's comment above.\r\n\r\nI already pointed out why that is incorrect.\r\n\r\n> Perhaps, but multiple algorithms can easily be built on top (see below). ... Anything else can be done on top through prioritizetransaction.\r\n\r\nThat has never been demonstrated. I don't believe it is true. It may be *possible*, but certainly not easy - it creates a lot of unnecessary overhead and complexity compared to a native implementation.\r\n\r\n> I don't believe that the removal of priority is pushing anything.\r\n\r\nHow can it not be? There are no other grounds to object to leaving it in as an option so long as someone else (ie, myself) does the work to maintain it. Can you show me where *any* alternate policy option is being allowed into Core 0.15? (I can point to #9749 as a counter-example...)\r\n\r\n> It's simply recognizing the fact that coin age based mining is a historical artifact that - to the contributors of this project - seems unlikely to become relevant again.\r\n\r\nIn other words, you don't consider me a contributor of this project?",
      "created_at" : "2017-02-18T00:49:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-280805880",
      "id" : 280805880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-02-18T00:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280805880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> How can it not be? There are no other grounds to object to leaving it in as an option so long as someone else (ie, myself) does the work to maintain it. \r\n\r\nThat assumes that it only requires one person to maintain, ignoring all coordination and review.\r\n\r\n>> It's simply recognizing the fact that coin age based mining is a historical artifact that - to the contributors of this project - seems unlikely to become relevant again.\r\n> In other words, you don't consider me a contributor of this project?\r\n\r\nI didn't say that every single individual contributor agrees. But if we want to get out of this, you'll need to compromise and accept that your own opinion alone can't dictate the project's choices as a whole.",
      "created_at" : "2017-02-18T00:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/9601#issuecomment-280807032",
      "id" : 280807032,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9601",
      "updated_at" : "2017-02-18T00:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280807032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]

[
   {
      "body" : "```\r\n./prevector.h:178:21: error: Ã¢ÂÂget_new_handlerÃ¢ÂÂ is not a member of Ã¢ÂÂstdÃ¢ÂÂ\r\n\r\n                     std::get_new_handler()();\r\n```",
      "created_at" : "2017-02-25T05:44:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282462441",
      "id" : 282462441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T05:44:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282462441",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa grr, works for me locally. I'll try adding the include, but I'm guessing that libstdc++ didn't support it for 4.8 :(",
      "created_at" : "2017-02-25T05:52:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282462801",
      "id" : 282462801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T05:52:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282462801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Why not make prevector throw std::bad_alloc or std::length_error? That way it's at least recoverable in future code, and makes it a bit more \"API Consistent\" with std::vector...",
      "created_at" : "2017-02-25T06:48:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282465282",
      "id" : 282465282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T06:48:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282465282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@JeremyRubin The issue in #9854 is that exactly that bad_alloc is thrown but not handled correctly. We don't actually attempt to catch bad_alloc specifically anywhere. And logically it doesn't make sense to... if we've got an allocation problem, we need to shut down.",
      "created_at" : "2017-02-25T07:21:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282466640",
      "id" : 282466640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T07:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282466640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "The default action of exceptions is to abort the program, no? So we must be catching it at least indirectly... Why not just add an explicit catch for bad_alloc there? (or ideally, be specific about what exceptions we want to catch..)",
      "created_at" : "2017-02-25T07:30:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282467056",
      "id" : 282467056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T07:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282467056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "ACK on the assert() in prevector.\r\n\r\nI really don't like setting this global handler that crashes the program. I hope this is a temporary measure for 0.14?",
      "created_at" : "2017-02-25T07:36:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282467342",
      "id" : 282467342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T07:36:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282467342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thinking of it, no, using assert for error handling is a bad idea. We should support compiling without assertions at some point.\r\nIf you really want to terminate the program immediatelly please log a message and call abort or so () :/\r\n",
      "created_at" : "2017-02-25T07:38:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282467422",
      "id" : 282467422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T07:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282467422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj I hope we do keep this longer-term, actually...std::bad_alloc, in the design of our entire codebase, seems massively dangerous to me (and I've wished we could do something like this for a while - just didn't know it existed). I'm happy if we remove it later, but the amount of auditing we'd have to do to check everywhere we call new, even through stl, seems like a rather significant effort.\n\nOn February 25, 2017 2:36:44 AM EST, \"Wladimir J. van der Laan\" <notifications@github.com> wrote:\n>ACK on the assert() in prevector.\n>\n>I really don't like setting this global handler that crashes the\n>program. I hope this is a temporary measure for 0.14?\n>\n>-- \n>You are receiving this because you are subscribed to this thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282467342\n",
      "created_at" : "2017-02-25T08:00:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282468358",
      "id" : 282468358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T08:00:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282468358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt okay, yes, after discussion IRC I agree seems the least bad solution for now :/\r\n\r\nEdit: so to be clear, my concern with a jackhammer solution like this is that not all allocations are created equal. An allocation of a 4 GB buffer somewhere in the program may fail, but that may be perfectly fine if it can continue with a smaller buffer. It doesn't mean the rest of the application, which will never allocate a big buffer like that, is in a bad state. *Specificallly* we care deeply about bad_allocs thrown by consensus and block/utxo handling code. Error handling in Bitcoin Core has always been a bit flakey, and in a way his feels a bit like throwing in the towel on reasoned error handling completely.So that's why my angry reply. Sorry for that.  But we need this now to avoid corruption problems.  I think we should continue with this.",
      "created_at" : "2017-02-25T08:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282469812",
      "id" : 282469812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T09:00:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282469812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Ah, I see. I was going to suggest get_new_handler, then I actually read the above discussion ;)\r\n\r\nI'm mostly just uncomfortable with using assert for error handling.\r\n\r\nCan we not implement something similar to get_new_handler ourselves for unsupported platforms?\r\n",
      "created_at" : "2017-02-25T09:10:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282471576",
      "id" : 282471576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T09:10:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282471576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@laanwj yea, I totally agree there are places we don't want this (mostly deserialization comes to mind), but I believe we mostly fixed that by now? \n\nOn February 25, 2017 4:10:18 AM EST, Jeremy Rubin <notifications@github.com> wrote:\n>Ah, I see. I was going to suggest get_new_handler, then I actually read\n>the above discussion ;)\n>\n>I'm mostly just uncomfortable with using assert for error handling.\n>\n>Can we not implement something similar to get_new_handler ourselves for\n>unsupported platforms?\n>\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282471576\n",
      "created_at" : "2017-02-25T17:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282499273",
      "id" : 282499273,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-25T17:38:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282499273",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9856#discussion_r103093216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9856"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103093216"
         }
      },
      "body" : "Before this attempt, you could do `fputs(stderr, \"Error: Out of memory. Terminating.\\n\");` which, I believe, does not call `malloc`. At least it didn't when I wrote my own `malloc` a few years ago, but it may be different per platform. A nice to have for when a node goes down with no log entries about why.",
      "commit_id" : "420f170c210e508e0150d402d73b1b647b83dff2",
      "created_at" : "2017-02-26T01:45:13Z",
      "diff_hunk" : "@@ -797,6 +797,19 @@ ServiceFlags nLocalServices = NODE_NETWORK;\n \n }\n \n+[[noreturn]] static void new_handler_terminate()\n+{\n+    // Rather than throwing std::bad-alloc if allocation fails, terminate\n+    // immediately to (try to) avoid chain corruption.\n+    // Since LogPrintf may itself allocate memory, set the handler directly\n+    // to terminate first.\n+    std::set_new_handler(std::terminate);\n+    LogPrintf(\"Error: Out of memory. Terminating.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#discussion_r103093216",
      "id" : 103093216,
      "original_commit_id" : "420f170c210e508e0150d402d73b1b647b83dff2",
      "original_position" : 11,
      "path" : "src/init.cpp",
      "position" : 11,
      "pull_request_review_id" : 23871429,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9856",
      "updated_at" : "2017-02-26T01:45:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103093216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9856#discussion_r103102209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9856"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103102209"
         }
      },
      "body" : "I don't think this is threadsafe (ie, a concurrent OOM could cause it to terminate in the middle of a LogPrintf or print two LogPrintfs). I would make the handler have some `switch(atomic counter++)`. Then it is both re-entrant and threadsafe. (note that set_new_handler is threadsafe itself, just is threadsafe in this usage)\r\n\r\nI think this sort of implementation should be ok:\r\n\r\n```c++\r\nstatic std::thread::id first_entrant{std::this_thread::get_id()};\r\nstatic bool first_pass {true};\r\nif (first_entrant == std::this_thread::get_id()) {\r\n    if (first_pass) {\r\n        first_pass = false;\r\n        // Single faulted\r\n        std::terminate();\r\n    } else {\r\n        // Double faulted\r\n    }\r\n} else {\r\n    sleep();\r\n}\r\n```\r\n\r\n\r\nEither of the above should be safe for concurrent OOM as well as double OOM faults.",
      "commit_id" : "420f170c210e508e0150d402d73b1b647b83dff2",
      "created_at" : "2017-02-26T11:36:50Z",
      "diff_hunk" : "@@ -797,6 +797,19 @@ ServiceFlags nLocalServices = NODE_NETWORK;\n \n }\n \n+[[noreturn]] static void new_handler_terminate()\n+{\n+    // Rather than throwing std::bad-alloc if allocation fails, terminate\n+    // immediately to (try to) avoid chain corruption.\n+    // Since LogPrintf may itself allocate memory, set the handler directly\n+    // to terminate first.\n+    std::set_new_handler(std::terminate);\n+    LogPrintf(\"Error: Out of memory. Terminating.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#discussion_r103102209",
      "id" : 103102209,
      "original_commit_id" : "420f170c210e508e0150d402d73b1b647b83dff2",
      "original_position" : 11,
      "path" : "src/init.cpp",
      "position" : 11,
      "pull_request_review_id" : 23879533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9856",
      "updated_at" : "2017-02-26T11:36:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103102209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "nit: Perhaps we should add a comment to the `assert` lines introduced in prevector, mentioning their purpose/rationale?  (I'm pretty sure if I were reading the code in the future and hadn't seen this discussion, I'd definitely overlook the significance and implications.)",
      "created_at" : "2017-02-27T15:30:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282753017",
      "id" : 282753017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-27T15:30:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282753017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2017-02-28T08:37:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9856#issuecomment-282976505",
      "id" : 282976505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9856",
      "updated_at" : "2017-02-28T08:37:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282976505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]

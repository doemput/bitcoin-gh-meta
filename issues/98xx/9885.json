{
   "assignee" : null,
   "assignees" : [],
   "body" : "### Describe the issue\r\nIt takes a long time and consumes a lot of resources to synchronize beginning at the Genesis block.  Many people don't want to spend that opportunity cost.  The Genesis block is a checkpoint with an empty UTXO set.  Lets let people start from (Periodic UTXO Merkle Tree + Checkpoint Block) Checkpoints instead of the Genesis block.\r\n\r\n### Expected behaviour\r\n1. Close Bitcoin\r\n2. Delete the blocks, chainstate, and database folders.\r\n3. Start Bitcoin\r\n4. Send and receive transactions\r\n\r\n### Actual behaviour\r\n1. Close Bitcoin\r\n2. Delete the blocks, chainstate, and database folders.\r\n3. Start Bitcoin\r\n4. Watch the grass grow, paint dry, etc.\r\n5. Use Electrum.  *Comic relief, come on guys, such a hard audience!\r\n\r\n### What version of bitcoin-core are you using?\r\n0.13.2\r\n\r\n### Suggested Solution\r\n\r\nEvery CheckpointPeriod number of blocks, maybe every 1 week, 1 month, or 3 months:\r\n1. Block is determined by client to be a Checkpoint Block.\r\n2. UTXO set is atomically: sorted by txid, placed into an independently reproducible Merlke tree\r\n3. Resulting hash from Step 2 Merkle tree is hashed with Checkpoint Block Hash.  This is called the Checkpoint Hash.\r\n4. Look through Checkpoint Hash messages from other nodes.  Puts into a Trustworthy Checkpoint Hash List any signed by a Set of Public Keys Considered as *Trustworthy (SPKCT).  SPKCT is loaded with data from a json file, which can be updated by the user, maybe client restart required.\r\n5. Client verifies Checkpoint Hash signatures in the SPKCT.\r\n6. For each Trustworthy Checkpoint Hash, compare with Checkpoint Hash computed at Step 3.\r\n a. All match: life as normal\r\n b. Discrepancy: Alarm user: Trustworthy node is compromised/mistaken\r\n c. List empty: Alarm user: Trustworthy nodes unreachable, suspect serious network problems\r\n* Trustworthy here means as trustworthy as the signature used to sign the Genesis block. \r\n\r\nGiven the above is standard practice...\r\n- When a pruning client is first started, it can ask the network for the latest (or some CheckpointVerifyBlockWindow blocks back) Checkpoint, and start from there instead of the Genesis block.\r\n- Also, if a pruning client hasn't connected to the network in a long time, it could potentially again start synchronizing from the latest Checkpoint instead of from where it disconnected.  This might require the wallet support utxo-only coins better.  I forget, do blocks contain a Merkel tree hash for the transaction hashes?\r\n- This could also be used to jump start a client to get it working immediately, and then if the user wants build up from the Genesis block in the background.\r\n\r\n### Security/Reliability Improvement\r\nMy proposed solution actually helps identify numerous problems.  For example:\r\n1. If a portion of the network gets disconnected, it can now be detected\r\n2. If a computer is compromised or there is some computational error in the UTXO state, it can now be detected\r\n\r\n### Security Model Alert\r\nIf a user decides to start synchronization from a Checkpoint, such requires more trust than starting from the Genesis block.  This is because a UTXO set cannot be self-verified without beginning synchronization at the Genesis block.  But... I think my proposal does a pretty good job of identifying if someone lies.  See \"Security/Reliability Improvement\", think about instead of loading the latest Checkpoint, load say 10 Checkpoints back or something.  Ultimately I think my suggestion results in almost as good of security as starting synchronization at the Genesis block.",
   "closed_at" : "2017-02-28T11:20:38Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9885/comments",
   "created_at" : "2017-02-28T04:20:01Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9885/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/9885",
   "id" : 210683043,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "id" : 64584,
         "name" : "Brainstorming",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9885/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 9885,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Synchronization Checkpoints",
   "updated_at" : "2017-02-28T11:20:38Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9885",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/25991988?v=3",
      "events_url" : "https://api.github.com/users/praxeology-guy/events{/privacy}",
      "followers_url" : "https://api.github.com/users/praxeology-guy/followers",
      "following_url" : "https://api.github.com/users/praxeology-guy/following{/other_user}",
      "gists_url" : "https://api.github.com/users/praxeology-guy/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/praxeology-guy",
      "id" : 25991988,
      "login" : "praxeology-guy",
      "organizations_url" : "https://api.github.com/users/praxeology-guy/orgs",
      "received_events_url" : "https://api.github.com/users/praxeology-guy/received_events",
      "repos_url" : "https://api.github.com/users/praxeology-guy/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/praxeology-guy/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/praxeology-guy/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/praxeology-guy"
   }
}

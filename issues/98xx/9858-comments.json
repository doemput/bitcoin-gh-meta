[
   {
      "body" : "I can agree with the idea that BlockAssembler shouldn't need to resort to the heaviness of TestBlockValidity, but we do need _some_ checks here.\r\n\r\nAs to your points\r\n- Grinding for a minute on a block that will be rejected is not worse than an extra quick call to gbt?\r\n- cs_main is already locked. This change does not reduce locking, only shaves down the time that it's held. Also, technically, this change would make this validation-less mining :(\r\n- Your example uses TestBlockValidity :)",
      "created_at" : "2017-02-25T21:41:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282514495",
      "id" : 282514495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-25T21:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282514495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Getting an invalid template here should never happen unless there is a bug within bitcoind, this TestBlockValidity call is only an internal sanity check, my definition of validationless mining would be mining on top of a block that you haven't validated, this does not change that.\r\n\r\n@luke-jr \r\n\r\n- Not all pool software is capable of bypassing GBT, that requires implementing p2p networking in the stratum server which adds quite a bit of complexity.\r\n\r\n- My point is that CNB is in the critical path for validating mining, at least for stratum servers that don't implement p2p themselves.\r\n\r\n@theuni \r\n\r\n- My assumption is that if TestBlockValidity fails subsequent calls are also likely to fail.\r\n\r\n- Yes, removing TestBlockValidity does however significantly reduce CreateNewBlock times from my testing, I'm assuming locking is a major factor since TestBlockValidity introduces a large amount of variance in CreateNewBlock times as well.",
      "created_at" : "2017-02-25T22:48:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282518294",
      "id" : 282518294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-25T22:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282518294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3298484?v=3",
         "events_url" : "https://api.github.com/users/jameshilliard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jameshilliard/followers",
         "following_url" : "https://api.github.com/users/jameshilliard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jameshilliard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jameshilliard",
         "id" : 3298484,
         "login" : "jameshilliard",
         "organizations_url" : "https://api.github.com/users/jameshilliard/orgs",
         "received_events_url" : "https://api.github.com/users/jameshilliard/received_events",
         "repos_url" : "https://api.github.com/users/jameshilliard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jameshilliard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jameshilliard"
      }
   },
   {
      "body" : "`blocknotify` should be sufficient to begin empty-block mining. But perhaps it would make sense to have bitcoind's GBT itself handle the empty template?",
      "created_at" : "2017-02-26T01:49:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282526241",
      "id" : 282526241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-26T01:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282526241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr Well you would have to cache some things like nversion if you just use blocknotify right? CreateNewBlock itself seems to be quite fast without TestBlockValidity so I'm not sure sending empty blocks out first is worth the extra bandwidth/complexity.",
      "created_at" : "2017-02-26T02:37:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282528064",
      "id" : 282528064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-26T02:37:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282528064",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3298484?v=3",
         "events_url" : "https://api.github.com/users/jameshilliard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jameshilliard/followers",
         "following_url" : "https://api.github.com/users/jameshilliard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jameshilliard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jameshilliard",
         "id" : 3298484,
         "login" : "jameshilliard",
         "organizations_url" : "https://api.github.com/users/jameshilliard/orgs",
         "received_events_url" : "https://api.github.com/users/jameshilliard/received_events",
         "repos_url" : "https://api.github.com/users/jameshilliard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jameshilliard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jameshilliard"
      }
   },
   {
      "body" : "I'm totally in favor of removing TBV from the critical-path, but only if we trigger some background checker that will print to debug.log (and probably assert) if it returned a template it later found to be invalid.",
      "created_at" : "2017-02-26T18:46:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282577268",
      "id" : 282577268,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-26T18:46:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282577268",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt I made an [attempt](https://github.com/bitcoin/bitcoin/pull/7167) to do that before but the way I was doing it there didn't look viable.",
      "created_at" : "2017-02-26T19:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282580694",
      "id" : 282580694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-26T19:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282580694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3298484?v=3",
         "events_url" : "https://api.github.com/users/jameshilliard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jameshilliard/followers",
         "following_url" : "https://api.github.com/users/jameshilliard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jameshilliard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jameshilliard",
         "id" : 3298484,
         "login" : "jameshilliard",
         "organizations_url" : "https://api.github.com/users/jameshilliard/orgs",
         "received_events_url" : "https://api.github.com/users/jameshilliard/received_events",
         "repos_url" : "https://api.github.com/users/jameshilliard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jameshilliard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jameshilliard"
      }
   },
   {
      "body" : "I believe that @jameshilliard assumption that if CNB ever produces an invalid block, it is likely that it will keep doing so is right, and if so, the only benefit of running TBV is better reporting (so developers can fix the bug), not actually changing what is being mined. The better reporting may be useful, as miners may use GBT under circumstances that aren't covered by any tests during rcs, but it seems we have a pretty good track record the last few releases.\r\n\r\nI think there are two reasonable approaches:\r\n* Run a background thread that occasionally runs TBV on the CNB results. It doesn't have to test everything, and it can do so with a delay. Unfortunately, TBV's locking of cs_main may interfere with other CNB calls.\r\n* Make the TBV call optional like in #9859, and leave it on in unit and RPC tests, but off by default in production.",
      "created_at" : "2017-02-26T21:33:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282589465",
      "id" : 282589465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-26T21:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282589465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa I think just making it optional is probably best, doing block proposals within the stratum server would be good since it can be done completely outside of the critical path, although I'm not sure how easy it would be to add support for that in the various stratum servers themselves. I like cory's faux-mining for testing a little more at least for non-production testing since it can be done without modification of the stratum server.",
      "created_at" : "2017-02-26T21:58:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282591313",
      "id" : 282591313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-26T21:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282591313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3298484?v=3",
         "events_url" : "https://api.github.com/users/jameshilliard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jameshilliard/followers",
         "following_url" : "https://api.github.com/users/jameshilliard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jameshilliard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jameshilliard",
         "id" : 3298484,
         "login" : "jameshilliard",
         "organizations_url" : "https://api.github.com/users/jameshilliard/orgs",
         "received_events_url" : "https://api.github.com/users/jameshilliard/received_events",
         "repos_url" : "https://api.github.com/users/jameshilliard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jameshilliard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jameshilliard"
      }
   },
   {
      "body" : "I don't think making it optional is useful.  It will almost never be run where it needs to be run. And more options mean more mostly untested code that will catch fire later when someone does happen to use it.\r\n\r\n> Run a background thread that occasionally runs TBV on the CNB results. It doesn't have to test everything, and it can do so with a delay. Unfortunately, TBV's locking of cs_main may interfere with other CNB calls.\r\n\r\nWe should be able to get the locking into a state where it can return a cached template without taking cs_main.  In which case, running the test immediately after returning a result will run it during a time when its mostly only returning a cached result. Moreover the test could be made interruptible, in case a new block arrives-- this is also important for BIP23 block proposal testing.\r\n\r\nI do disagree that mining an invalid block is equal to or better than a delay:  A shutdown lets you fall over to another daemon, a shutdown tells you something is broken so you fix it rather than days of fake mining, and a shutdown also prevents you from making blocks that cause false confirmations for SPV clients propagated around broken nodes that broadcast without validating.  -- but the whole question should be moot, since we should be able to perform this check without adding any meaningful delay.\r\n",
      "created_at" : "2017-02-27T23:41:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282894178",
      "id" : 282894178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-27T23:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282894178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell My thoughts are that this should probably be only used for testing and not in production under normal circumstances.\r\n\r\nIn regards to failover I would expect that a bug in CNB would likely be deterministic and cause failures on all other pool nodes as well that run similar mempool policy.",
      "created_at" : "2017-02-28T00:37:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#issuecomment-282904048",
      "id" : 282904048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9858",
      "updated_at" : "2017-02-28T00:37:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282904048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3298484?v=3",
         "events_url" : "https://api.github.com/users/jameshilliard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jameshilliard/followers",
         "following_url" : "https://api.github.com/users/jameshilliard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jameshilliard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jameshilliard",
         "id" : 3298484,
         "login" : "jameshilliard",
         "organizations_url" : "https://api.github.com/users/jameshilliard/orgs",
         "received_events_url" : "https://api.github.com/users/jameshilliard/received_events",
         "repos_url" : "https://api.github.com/users/jameshilliard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jameshilliard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jameshilliard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jameshilliard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9858#discussion_r104730403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104730403"
         }
      },
      "body" : "Do we need a default value here?\r\nDo we really save that much disruption by not passing false explicitly where it's needed?\r\n\r\nBikeshedding: s/TestBlock/fValidateBlock/ ?\r\n",
      "commit_id" : "7555922a6680fdfa0c85108041ce3cbd1090855b",
      "created_at" : "2017-03-07T17:40:37Z",
      "diff_hunk" : "@@ -165,7 +165,7 @@ class BlockAssembler\n public:\n     BlockAssembler(const CChainParams& chainparams);\n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n-    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn);\n+    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn, bool TestBlock = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9858#discussion_r104730403",
      "id" : 104730403,
      "original_commit_id" : "7555922a6680fdfa0c85108041ce3cbd1090855b",
      "original_position" : 5,
      "path" : "src/miner.h",
      "position" : 5,
      "pull_request_review_id" : 25579954,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9858",
      "updated_at" : "2017-03-07T17:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104730403",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]

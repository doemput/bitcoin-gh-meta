[
   {
      "body" : "Agree with @morcos.\r\nSomething we might want to work towards is a flexible/modular Coinselection. Coinselection somehow depends on the use cases and could be modular therefore.\r\n\r\nWe could allow different coin selection classes (some OO magic / interfacing) and allow to select them in `fundrawtransaction` or over a global state only adjustable on startup `-coinselection=*class*`.\r\n\r\nBitcoinj has a similar approach. ",
      "created_at" : "2016-03-10T08:09:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-194724049",
      "id" : 194724049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T08:09:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/194724049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "In my experience the biggest impediment to doing anything with coin selection is the current testing approach that simply fail if anything changes at all. So when you intend to change it you just get a pile of failures and nothing that tells you if the change is behaving sanely.\r\n\r\nI don't see any problem to having a selection, but I'm somewhat doubtful of the utility. Having a selection doesn't replace having a _good_ default-- and right now we don't even have a good default; and most of the time the user actually doesn't really much useful information here (nothing the user would call a \"use case\" probably directly translates into the right strategy)-- keep in mind that most users have no idea about the underlying \"coins\" behavior in the system.\r\n\r\nPerhaps the primary strategy distinguisher would be the importance of privacy-- e.g. should sweeping be kept to \"do no privacy harm\" levels, or more aggressive-- but the user is often poorly equipt to weigh the privacy considerations (e.g. don't what their future risks are, and may not know how powerful transaction analysis is), nor are they usually able to weigh the privacy impacts on their counterparties or the ecosystem as a whole.\r\n\r\nAnother thing to keep in mind is that implementation of GROUPCHECKSIGVERIFY would make strategies that try to spend many inputs at once much more attractive. (beyond the argument I've made before that you generally want to pay fees sooner rather than later, since fees tend to go up over time)",
      "created_at" : "2016-03-10T08:42:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-194737702",
      "id" : 194737702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T08:42:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/194737702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "One untested idea that I haven't seen suggested before (quite possibly because I'm overlooking something): try minimize the value of the change output. If it's less than the dust-threshold, it can be safely omitted and donated to miners. \r\n\r\nIt should help keep the unspent set in check, while generating outputs that are actually useful for the next transaction(s). It also has the actively trying to avoid sourcing pointlessly large inputs (which are best saved for another transaction, especially if the user is sending multiple transactions before the next block confirms), and will also help create outputs which are useful for sending exact-change.\r\n\r\nThe biggest disadvantage I can see, is it'll tend to make the change very distinguishable from the destination, but that's a problem that already exists.",
      "created_at" : "2016-03-10T19:40:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-195014247",
      "id" : 195014247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T19:40:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195014247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "@RHavar technically thats what Bitcoin has always done. The subset sum tries to minimize the change (which generally minimizes the input set), and tiny amounts of change are just turned to fees.  This has a bad behavior though of often resulting in small change (though above the threshold), which is not very useful for spending in the future; so big coins get spent and ground down to near-dust. \r\n\r\nSee ApproximateBestSubset in wallet.cpp.\r\n\r\n",
      "created_at" : "2016-03-10T20:11:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-195027152",
      "id" : 195027152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-10T20:11:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195027152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "#1643 should also be mentioned here. Bad coin selection with lots of small outputs has been a long-running issue.",
      "created_at" : "2016-03-11T08:05:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-195245333",
      "id" : 195245333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-11T08:05:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195245333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> which generally minimizes the input set\r\n\r\nI doubt this is true. The algorithm will generally start by selecting some appropriately  sized large coins (vValues is sorted) and then \"fill up the gaps\" with small coins such that it either hits the target value or overshoots the target value + MIN_CHANGE by the smallest amount possible. (see e.g. the issue @laanwj linked to)",
      "created_at" : "2016-03-14T00:35:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-196089029",
      "id" : 196089029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-14T00:35:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196089029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "One parameter you could add without introducing a huge amount of complexity would be an \"ideal\" amount of outputs in your wallet, lets call it N. Having a low N would mean you can easily/cheaply sweep your wallet (at the expense of linking your coins more heavily, and big transaction chains). Having a high N would give you the option of more coins to select from, hopefully resulting in an more ideal match.\r\n\r\nN could be a configuration option, and when the amount of outputs is less than N it could actively try to increase it (spending from the largest coins first is a good way), and when the outputs is greater than N it could actively try to decrease it  (sourcing extraneous inputs is a good way).",
      "created_at" : "2016-03-14T01:12:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-196093675",
      "id" : 196093675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-03-14T01:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/196093675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "Would it perhaps make sense to increase the limit of what gets converted to fees? It would seem to me that this could reduce the number of tiny UTXO being created.\r\n\r\nE.g. If the change is a magnitude smaller than the fee and a small portion of the total value of the transaction, add it to the fee: \r\n\r\n    if(change < 0.1* fee && change < 0.001 * target):\r\n        fee = fee + change\r\n\r\nThat way, it would only apply to transactions where the change is only a tiny portion of the total value transacted, but still never donate more than transaction fee amounts. I.e. that way really large transactions wouldn't suddenly donate significant money, and micro transactions wouldn't lose a significant portion of the transacted value.\r\n\r\nI haven't tested whether it would have significant impact, and these numbers are just from the top of my head as well.\r\n",
      "created_at" : "2016-04-03T10:24:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-204938500",
      "id" : 204938500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-04-03T10:24:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204938500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=3",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "body" : "Changed the milestone to 0.14",
      "created_at" : "2016-06-15T14:07:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-226197889",
      "id" : 226197889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-06-15T14:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/226197889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@gmaxwell Re \"technically thats what Bitcoin has always done. The subset sum tries to minimize the change (which generally minimizes the input set), and tiny amounts of change are just turned to fees\" I don't think that's true. From `CWallet::SelectCoinsMinConf()`:\r\n\r\n```\r\nApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest);\r\nif (nBest != nTargetValue && nTotalLower >= nTargetValue + MIN_CHANGE)\r\n    ApproximateBestSubset(vValue, nTotalLower, nTargetValue + MIN_CHANGE, vfBest, nBest);\r\n```\r\n\r\nThe code is trying to make _exactly_ the `nTargetValue`, and if it is unable to make that exact amount it instead tries to make `nTargetValue + MIN_CHANGE` instead.\r\n\r\nSo most transactions end up with a change amount of 0.010xxxxx and you end up with a wallet full of these individual bitcents which are expensive to spend. See [this tx](https://blockchain.info/tx/a7a09c2f5671faa6a995001c69abcdf019b911f1d3432c3fe5af1de9884650b5) for an example of a high fee caused by this 0.01\\* pollution.\r\n\r\n[Edit: [this one](https://blockchain.info/tx/b3a1c9797a584ef7cd52f306b47820b87122a5ffc2cdbb7e51074bd367bae51f) is even crazier]\r\n\r\nIn the tx linked above, notice that the change output is 0.01000109 BTC, while two of the inputs are 0.01000112 BTC. So by donating just three satoshis to the miner we could have avoided the change output completely in this example. I suspect (based on how change outputs are very often less than a thousand satoshis over 0.01 BTC) that the majority of change outputs could be eliminated if the coin selection code was changed to donate up to 1000 satoshis to the miner if it allows change to be avoided.\r\n",
      "created_at" : "2016-07-04T22:12:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-230359114",
      "id" : 230359114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-11-26T06:58:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/230359114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "@dooglus indeed, I forgot that.  A legacy of old code that overly prioritized free transactions. If there is no change it should treat up to some threshold over as being just as good as an exact match, and turn it into change.  The threshold could be something like half the cost of spending a change output at a current feerate-- e.g. at 50 base units per byte that threshold would be about 3600 base units. \r\n\r\n",
      "created_at" : "2016-07-05T00:15:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-230365775",
      "id" : 230365775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-05T00:15:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/230365775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell \"and turn it into change\" .. you mean turn it into *fee*, right? We're talking about avoiding creating change in this instance.\r\n\r\nHow are we to determine the current feerate? Do we just use `CWallet::GetMinimumFee()` for some fixed `nTxBytes` size? Using a hardcoded '3600 base units' seems like the wrong way to go about it.",
      "created_at" : "2016-07-05T01:03:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-230368476",
      "id" : 230368476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-05T01:03:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/230368476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "Fee yes.  :)\r\n\r\nThe size should depend on the kind of keys being used for change and reflect the marginal size increase from adding the input e.g. it would be ~ 32+4+1+73+34 bytes for a regular p2pkh change address. Effectively coin worth less than the fee for that size could currently costs more to spend than its worth-- so we really shouldn't be making outputs smaller than that, and preferably not smaller than 100 times that value, since presumably people would like to keep their fees as small percentage of the funds moved. :)\r\n ",
      "created_at" : "2016-07-05T04:20:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-230384672",
      "id" : 230384672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-05T04:20:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/230384672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> we really shouldn't be making outputs smaller than that, and preferably not smaller than 100 times that value, since presumably people would like to keep their fees as small percentage of the funds moved. :)\r\n\r\nI'm not sure this logic is sound. We're looking for the threshold at which we decide to just include the 'change' in the miner fee instead of making a new output. That is effectively giving 100% of the change to the miner.\r\n\r\nSuppose the cost (in fees) of spending an output is 0.0001 and the value of the output is 0.0010. We are choosing between:\r\n\r\nA) create a change output; spending it will involve a 10% fee, but the user will still get a 0.0009 value from spending it\r\nB) don't create a change output, just immediately give it all in extra fees.\r\n\r\nWhile A) involves a 10% fee when the output is spent, B) involves an immediate 100% fee. Neither choice lets the user keep their fee as a small percentage. Best for the user would be if we simply never created a change output worth less than the expected cost of spending it.",
      "created_at" : "2016-07-11T20:16:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-231851201",
      "id" : 231851201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-11T20:16:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/231851201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/573356?v=3",
         "events_url" : "https://api.github.com/users/dooglus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dooglus/followers",
         "following_url" : "https://api.github.com/users/dooglus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dooglus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dooglus",
         "id" : 573356,
         "login" : "dooglus",
         "organizations_url" : "https://api.github.com/users/dooglus/orgs",
         "received_events_url" : "https://api.github.com/users/dooglus/received_events",
         "repos_url" : "https://api.github.com/users/dooglus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dooglus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dooglus"
      }
   },
   {
      "body" : "There are two ways to handle change too small, give it as fees or add more inputs to grow it. Whichever we do, it should result in making change only if it is a large multiple of the cost to spend it.  If we're unable to address it some other way, I think it wouldn't be unreasonable to turn it into fees, even right up to that threshold: better to spend it and get faster confirmation, then to end up with a worthless output that you'll just abandon and bloat up the txo set.  ",
      "created_at" : "2016-07-13T01:35:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-232230899",
      "id" : 232230899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-13T07:29:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/232230899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I don't see how bitcent change is \"expensive to spend\". Seems like a reasonable decision to make it configurable, though - ideally you'd want to target your average spend amount, which varies from user to user. Another possibility there is to try to guess based on historical spends.",
      "created_at" : "2016-07-14T03:37:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-232548720",
      "id" : 232548720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-14T03:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/232548720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> I don't see how bitcent change is \"expensive to spend\". \r\n\r\nWell, even if you only have 10 BTC, and that gets churned into 1000 outputs over time (as they currently do in 0.12 depending on your spend:receive habits), it's pretty painful to spend from, regardless if your normal spend amount is 0.01 btc. For instance, even though I normally send tiny transactions, I'm in a position where trying to sweep 50% of my wallet results in \"transaction too large\" error. And when I lower that amount so I can actually make a transaction, it costs $8 (?) in transaction fees or something.\r\n\r\nI really do think that if it was just tiny bit more aggressive in create change-less transactions, most of the problems would go away (and privacy improve). ",
      "created_at" : "2016-07-14T03:45:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-232549485",
      "id" : 232549485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-07-14T03:46:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/232549485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "Surely the maths behind this has already existed for years - it feels like a wheel that has already been invented. I'd have thought a variety of input sizes would be the ideal, perhaps binary based, i.e. 16, 8, 4, 2, 1 etc, but stopping at the point (creating them) where they are close to the current tx fees. The wallet therefore should perhaps take into account all inputs currently tracked in deciding what sized inputs to create next. No longer does the age of an input play such a part (i.e. the priority) as I suspect more miners are simply focused on getting the max for their blocks these days.",
      "created_at" : "2016-08-01T12:30:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-236567517",
      "id" : 236567517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-08-01T12:30:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/236567517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "I've finished my [thesis on coin selection](http://murch.one/wp-content/uploads/2016/11/erhardt2016coinselection.pdf) on Monday.\r\n\r\nI've described an algorithm on pages 46-49 for coin selection which I call \"Branch'n'Bound\" in the document. (I only came up with it after Scaling Bitcoin, so it wasn't included in my presentation there.)\r\n\r\nIt is a two step scheme. \r\n\r\n 1. A randomized depth-first-search on a binary tree generated from omitting or including the effective value of UTXOs to find an exact match.\r\n 2. If no exact match is found, equi-probable selection on the UTXO pool. (Which provides different sized outputs for a better chance of exact matches, and has performed pretty nicely by itself in my simulations.) \r\n\r\nSimulating with the dataset provided by RHavar in the other thread and compared to Bitcoin Core's current strategy it:\r\n\r\n* has a smaller tendency to produce large input sets\r\n* increases exact matches (transactions without a change output) by more than ÃÂ50\r\n* maintains a smaller number of UTXO in the wallet in face of 2.06 incoming transactions per outgoing transaction\r\n* has a smaller average input set size (and thus lower user fees)\r\n* is less computationally intensive\r\n* fixes an issue with Bitcoin Core's fee estimation\r\n\r\nThis algorithm could be basis for a new coin selection algorithm of Bitcoin Core and I would like to invite questions and commentary. (If this thread is perhaps not the best medium for such a discussion, I'd be open to another format, e.g. the mailing list?)",
      "created_at" : "2016-11-04T01:47:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-258324747",
      "id" : 258324747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-11-04T01:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/258324747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=3",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "body" : "@Xekyo Very interesting work! So that algorithm does coin selection better (at least on that dataset) and implementing it would unentangle the current coin selection code mess and is also less computationally intensive. Sounds great to me. Looking forward to it.\r\n\r\nTo avoid having a pull request wither forever I think we should get some people to commit to testing it. Also at least one large site that uses bitcoin core for wallet.\r\n",
      "created_at" : "2016-11-11T09:48:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-259920817",
      "id" : 259920817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-11-11T09:48:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259920817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> To avoid having a pull request wither forever I think we should get some people to commit to testing it. Also at least one large site that uses bitcoin core for wallet.\r\n\r\nI'd be happy to test a PR on a production site after it's reasonably stable. My site has made 2583 outgoing transactions in the last 7 days, (and received 4774 in the same time period) so it's probably a reasonable stress test. (if someone could just ping or mention me on it, if there's a PR so I don't miss it)",
      "created_at" : "2016-11-11T14:32:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-259969094",
      "id" : 259969094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-11-11T14:32:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259969094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "@Xekyo Just reading your paper. It says \"Transaction malleability was most notably blamed to have contributed to the demise of MtGox\" - I think you'll find that the only person who blamed the demise on this was the owner of MtGox - and it was later proved to be not a significant contributor by various researchers with greater credibility than the person who made the claim you refer to. ;) Anyway, sorry, off-topic.",
      "created_at" : "2016-11-13T07:27:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-260171238",
      "id" : 260171238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-11-13T07:27:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260171238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@RHavar: Thank you very much, I'll be happy to ping you. Thank you also for providing the dataset that I used to evaluate my thesis on. :)\r\n\r\n@rebroad: Yeah, I'm aware of that, but I agree that I should have been clearer in that paragraph.",
      "created_at" : "2016-11-13T16:15:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-260195430",
      "id" : 260195430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2016-11-13T16:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260195430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=3",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "body" : "I just saw the proposed changes in #9404, sorry I didn't get my proposal done for 0.14. :(\r\n\r\nThe proposed fix is much better than the previous behavior (#4082), also especially for computational effort, because unnecessary repetitions are forestalled.\r\n\r\nHowever, the issue is due to the order that a transaction is created: Since the fee is being estimated before the inputs are selected, when the number of selected inputs deviates from the initial estimate, the fee estimate is off.  This problem stems from the *effective target of the selection* increasing with each collected input, because the effective target is increased by the cost of one input for every input we select.\r\n\r\nInstead we should estimate the *fee rate* first, before the inputs are selected, and deduct the cost of spending an input from each input's value upon selection. \r\n\r\n`effectiveValue = utxo.value - feePerByte ÃÂ bytesPerInput`\r\n\r\nWe'd measure the \"effective contribution\" of the input toward the fixed cost of `target + transaction overhead + output costs`. That way, we always get the fee right.",
      "created_at" : "2017-01-08T12:11:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-271147138",
      "id" : 271147138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2017-01-08T12:11:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271147138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=3",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "body" : "@RHavar: The Branch and Bound algorithm is being implemented in this patch by Andrew Chow: https://github.com/bitcoin/bitcoin/pull/10637",
      "created_at" : "2017-06-30T19:31:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-312354583",
      "id" : 312354583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2017-06-30T19:31:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312354583",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/4060799?v=3",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "body" : "This can bump to 0.16",
      "created_at" : "2017-07-06T19:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/7664#issuecomment-313497328",
      "id" : 313497328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7664",
      "updated_at" : "2017-07-06T19:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313497328",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]

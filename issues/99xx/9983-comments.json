[
   {
      "body" : "> This makes invocations easier to read especially if booleans or lots of arguments are involved.\n\nConcept ACK. Though I think we don't need named args for calls that\nonly have a single and obvious param, such as generate( $num ) or any\nsingle param call that starts with set*.\n\nTo aid reviewers even more, maybe in future pulls, a project wide\nsearch and replace of eligible calls makes sense. Potentially one s&r\nper commit, but no strong opinion on this.\n\nOn Mon, Mar 13, 2017 at 9:54 AM, Wladimir J. van der Laan\n<notifications@github.com> wrote:\n> Convert selected tests to use named arguments in RPC calls. This covers a\n> few of the important ones:\n>\n> assumevalid.py\n> blockchain.py\n> merkle_blocks.py\n> segwit.py\n>\n> As well as the test framework itself, util.py.\n>\n> This makes invocations easier to read especially if booleans or lots of\n> arguments are involved.\n>\n> Reviewing\n>\n> To review I'd suggest using the command:\n>\n> git diff --word-diff --word-diff-regex='[^[:space:],\\(\\)=]+'\n>\n> This will regard the added argument names as one word, making it trivial to\n> see what is added.\n>\n> Process\n>\n> As doing this is a bit of a finnicky process, I'm doing this a few tests at\n> a time. I may add more to this PR later. In case people want to help, I\n> created this list of RPC calls with argument names to avoid having to refer\n> to the individual help all the time.\n>\n> To make sure a test has no use of positional arguments left you can add\n> these lines to __call__(self, *args, **argsn) in authproxy.py:\n>\n>         if args:\n>             raise ValueError('TEST: supporting named arguments')\n>\n> Every use of positional arguments will then raise that exception.\n>\n> ________________________________\n>\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/bitcoin/bitcoin/pull/9983\n>\n> Commit Summary\n>\n> tests: Convert selected tests to named arguments\n>\n> File Changes\n>\n> M qa/rpc-tests/assumevalid.py (8)\n> M qa/rpc-tests/blockchain.py (8)\n> M qa/rpc-tests/merkle_blocks.py (46)\n> M qa/rpc-tests/segwit.py (176)\n> M qa/rpc-tests/test_framework/util.py (14)\n>\n> Patch Links:\n>\n> https://github.com/bitcoin/bitcoin/pull/9983.patch\n> https://github.com/bitcoin/bitcoin/pull/9983.diff\n>\n> Ã¢ÂÂ\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
      "created_at" : "2017-03-13T11:21:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9983#issuecomment-286080535",
      "id" : 286080535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9983",
      "updated_at" : "2017-03-13T11:21:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286080535",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "> Concept ACK. Though I think we don't need named args for calls that\r\nonly have a single and obvious param, such as generate( $num ) or any\r\nsingle param call that starts with set*.\r\n\r\nI've thought about that. But some of the functions called with one argument are actually multi-arg functions of which only the first is used. And it may happen that more arguments get added to a function in the future. So I thought it better to be consistent and do all of them to move to a fully name-based API.\r\n\r\n> To aid reviewers even more, maybe in future pulls, a project wide\r\n> search and replace of eligible calls makes sense. Potentially one s&r\r\n> per commit, but no strong opinion on this.\r\n\r\nYeah, maybe. The advantage of doing it per test is that it is possible to verify that all calls have been converted without having to convert the entire project, which would conflict with every possible PR that changes tests.\r\nI do agree it makes it easier to review per commit.",
      "created_at" : "2017-03-13T13:31:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9983#issuecomment-286107204",
      "id" : 286107204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9983",
      "updated_at" : "2017-03-13T13:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286107204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> And it may happen that more arguments get added to a function in the future. So I thought it better to be consistent and do all of them to move to a fully name-based API.\n\nHmm. As long as downstream projects use the interface with positional\nargs, we can't do that. Though, maybe we should require named args for\nnew calls and whenever we extend an existing API call to encourage the\nname-based API and then switch completely at some point in the future?\n\nOn Mon, Mar 13, 2017 at 2:31 PM, Wladimir J. van der Laan\n<notifications@github.com> wrote:\n> Concept ACK. Though I think we don't need named args for calls that\n> only have a single and obvious param, such as generate( $num ) or any\n> single param call that starts with set*.\n>\n> I've thought about that. But some of the functions called with one argument\n> are actually multi-arg functions of which only the first is used. And it may\n> happen that more arguments get added to a function in the future. So I\n> thought it better to be consistent and do all of them to move to a fully\n> name-based API.\n>\n> To aid reviewers even more, maybe in future pulls, a project wide\n> search and replace of eligible calls makes sense. Potentially one s&r\n> per commit, but no strong opinion on this.\n>\n> Yeah, maybe. The advantage of doing it per test is that it is possible to\n> verify that all calls have been converted without having to convert the\n> entire project, which would conflict with every possible PR that changes\n> tests.\n>\n> Ã¢ÂÂ\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
      "created_at" : "2017-03-13T14:10:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9983#issuecomment-286117697",
      "id" : 286117697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9983",
      "updated_at" : "2017-03-13T14:10:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286117697",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "> Hmm. As long as downstream projects use the interface with positional args, we can't do that.\r\n\r\nI don't say we should deprecate the positional arguments any time soon, just try to use it as our own best practice to use named arguments. Mixing them is kind of messy, IMO.",
      "created_at" : "2017-03-16T09:58:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9983#issuecomment-287009369",
      "id" : 287009369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9983",
      "updated_at" : "2017-03-16T09:58:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287009369",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing, too much work to rebase all the time.",
      "created_at" : "2017-03-24T12:44:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9983#issuecomment-289013079",
      "id" : 289013079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9983",
      "updated_at" : "2017-03-24T12:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/289013079",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

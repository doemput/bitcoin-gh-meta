[
   {
      "body" : "That sounds very cool! Our current fuzzers are indeed hardly more than proof of concepts.",
      "created_at" : "2017-08-14T18:17:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-322267213",
      "id" : 322267213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-14T18:17:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322267213",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Great. Currently it is not integrated into the build script. It's just the directory /fuzzers with a number of cpp files and a Makefile, which references hardcoded relative paths (```../src/libbitcoin_util.a ../src/crypto/libbitcoin_crypto.a``` etc). If this is not what you want you must integrate it into the build scripts yourself because that is not my forte.\r\n\r\nI'm gonna prepare it now and make the PR.",
      "created_at" : "2017-08-14T18:26:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-322269538",
      "id" : 322269538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-14T18:26:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322269538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6846644?v=4",
         "events_url" : "https://api.github.com/users/guidovranken/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guidovranken/followers",
         "following_url" : "https://api.github.com/users/guidovranken/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guidovranken/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guidovranken",
         "id" : 6846644,
         "login" : "guidovranken",
         "organizations_url" : "https://api.github.com/users/guidovranken/orgs",
         "received_events_url" : "https://api.github.com/users/guidovranken/received_events",
         "repos_url" : "https://api.github.com/users/guidovranken/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guidovranken/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guidovranken"
      }
   },
   {
      "body" : "@guidovranken That's awesome! I've played around with different ways to extend the fuzzing coverage myself, so I'd be really interested in checking your stuff out and how you've attacked the problem.\r\n\r\nIf you are not yet ready to submit a proper pull request I'd be glad to take a look at it as-is. Just dump the code in its current state in a gist, repo or somewhere convenient for you and I'll figure out the rest :-)\r\n\r\nFor reference, see some previous discussions about improving Bitcoin fuzzing :\r\n* [tests] Add fuzz testing for BlockTransactions, BlockTransactionsRequest and CBlockHeaderAndShortTxIDs deserialization, #10409\r\n* [tests] Add libFuzzer support, #10440\r\n* [tests] Speed up fuzzing by ~200x when using afl-fuzz, #10415\r\n* Feature request: Make Bitcoin libFuzzer-friendly and consider integration into the OSS-Fuzz project, #10364",
      "created_at" : "2017-08-16T10:02:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-322724218",
      "id" : 322724218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-16T14:55:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322724218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Here they are: https://github.com/guidovranken/bitcoin/tree/fuzzing/fuzzers\r\n\r\nYou need to compile Bitcoin with AddressSanitizer (preferably) and instrumentation, something like this:\r\n\r\n```-fsanitize=address -g -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp```\r\n\r\nand put libFuzzer.a in the fuzzers/ directory.\r\n\r\nInstructions how to build libFuzzer can be found here (it's trivial): https://llvm.org/docs/LibFuzzer.html",
      "created_at" : "2017-08-17T01:05:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-322940587",
      "id" : 322940587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T01:05:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322940587",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6846644?v=4",
         "events_url" : "https://api.github.com/users/guidovranken/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guidovranken/followers",
         "following_url" : "https://api.github.com/users/guidovranken/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guidovranken/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guidovranken",
         "id" : 6846644,
         "login" : "guidovranken",
         "organizations_url" : "https://api.github.com/users/guidovranken/orgs",
         "received_events_url" : "https://api.github.com/users/guidovranken/received_events",
         "repos_url" : "https://api.github.com/users/guidovranken/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guidovranken/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guidovranken"
      }
   },
   {
      "body" : "@guidovranken Wow, really nice! Thanks for sharing! Ã°ÂÂÂ ",
      "created_at" : "2017-08-17T07:26:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-322991131",
      "id" : 322991131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T07:26:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322991131",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "You're welcome. There's more coming, like a prevector fuzzer (using class prevector_tester, from tests), will push it later today.",
      "created_at" : "2017-08-17T14:52:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323097043",
      "id" : 323097043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T14:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323097043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6846644?v=4",
         "events_url" : "https://api.github.com/users/guidovranken/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guidovranken/followers",
         "following_url" : "https://api.github.com/users/guidovranken/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guidovranken/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guidovranken",
         "id" : 6846644,
         "login" : "guidovranken",
         "organizations_url" : "https://api.github.com/users/guidovranken/orgs",
         "received_events_url" : "https://api.github.com/users/guidovranken/received_events",
         "repos_url" : "https://api.github.com/users/guidovranken/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guidovranken/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guidovranken"
      }
   },
   {
      "body" : "@guidovranken Great! Keep it coming! Ã°ÂÂÂ  Are you still writing new fuzzers or are all these the fuzzers you had been running for a while without finding any issues?",
      "created_at" : "2017-08-17T14:57:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323098303",
      "id" : 323098303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T14:57:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323098303",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@guidovranken A small nit - would it be possible to rewrite `fuzzer-blockchain-load.cpp` so that it doesn't write to the filesystem? It would be nice to avoid filesystem access in all fuzzers.\r\n\r\n@sipa What is your opinion - should new tests such as these be added as additional tests in `test_bitcoin_fuzzy.cpp` (extending the `enum TEST_ID`), or should we add them somewhere else to keep `test_bitcoin_fuzzy.cpp` \"deserialization-only\"? :-)",
      "created_at" : "2017-08-17T15:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323104012",
      "id" : 323104012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T15:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323104012",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@practicalswift I believe @kcc has advised against the approach of switching between tests based on input. It risks confusing the fuzzer, and reusing information from one test and trying to apply it in another.\n\nThe suggestion, I believe, was to have a separate binary for each test (which could be done automatically using #defines that select which test to build for).",
      "created_at" : "2017-08-17T15:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323108021",
      "id" : 323108021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T15:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323108021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@practicalswift I'm still updating them and writing new fuzzers. I want to update the blockchain loader, but ```LoadExternalBlockFile``` takes a ```FILE*```. What do you suggest?",
      "created_at" : "2017-08-17T19:16:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323167949",
      "id" : 323167949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T19:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323167949",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6846644?v=4",
         "events_url" : "https://api.github.com/users/guidovranken/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guidovranken/followers",
         "following_url" : "https://api.github.com/users/guidovranken/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guidovranken/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guidovranken",
         "id" : 6846644,
         "login" : "guidovranken",
         "organizations_url" : "https://api.github.com/users/guidovranken/orgs",
         "received_events_url" : "https://api.github.com/users/guidovranken/received_events",
         "repos_url" : "https://api.github.com/users/guidovranken/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guidovranken/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guidovranken"
      }
   },
   {
      "body" : "> Collectively these result in much more code coverage than src/test/test_bitcoin_fuzzy.cpp but are not exhaustive (yet).\r\n\r\nAwesome!\r\nCan these be integrated into bitcoin_fuzzy?",
      "created_at" : "2017-08-17T20:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323185706",
      "id" : 323185706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T20:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323185706",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@guidovranken Very glad to hear that you are actively writing new fuzzers! Excellent!\r\n\r\nRegarding the fuzzing of `LoadExternalBlockFile` in `fuzzer-blockchain-load.cpp` Ã¢ÂÂ perhaps we could use `fmemopen(Ã¢ÂÂ¦)` where available and use `std::tmpfile()` as the fall-back? Perhaps going with `std::tmpfile()` only is good enough.",
      "created_at" : "2017-08-17T21:10:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323195300",
      "id" : 323195300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T21:10:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323195300",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : ">  I believe @kcc has advised against the approach of switching between tests based on input. \r\n> The suggestion, I believe, was to have a separate binary for each test \r\n\r\nYes. This approach makes fuzzing more efficient,\r\n\r\n> std::tmpfile() only is good enough. \r\n\r\nDepends on your speed requirements. \r\nIf LoadExternalBlockFile is slow enough to neglect the cost of creating a file, it's fine. \r\n\r\nhowever this approach may cripple some fuzzing approaches, e.g. the ones that rely on taint analysis (data flow propagation) and can not propagate taint data through the file system. ",
      "created_at" : "2017-08-17T21:26:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323198955",
      "id" : 323198955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T21:26:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323198955",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1789297?v=4",
         "events_url" : "https://api.github.com/users/kcc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcc/followers",
         "following_url" : "https://api.github.com/users/kcc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcc",
         "id" : 1789297,
         "login" : "kcc",
         "organizations_url" : "https://api.github.com/users/kcc/orgs",
         "received_events_url" : "https://api.github.com/users/kcc/received_events",
         "repos_url" : "https://api.github.com/users/kcc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcc"
      }
   },
   {
      "body" : "@laanwj I think @sipa raised a good point above that there might be benefits to have a separate binary for each fuzzer. In addition to avoid confusing the fuzzer (unnecessary re-use of fuzzing inputs between the fuzzers - just confirmed by @kcc! :-)) it has the benefit of making it more obvious when a given fuzzing session has reached a state where no new paths are found.\r\n\r\nWith the current \"first part of input data chooses the fuzzer\"-approach taken by `test_bitcoin_fuzzy` it is quite hard to see which fuzzers that are still hitting new paths (i.e. keep fuzzing!), and which have reached their max depth/\"max path count\" (i.e. consider stop fuzzing).\r\n\r\n+1 for splitting the fuzzers into one binary each\r\n\r\nGiven a one-binary-per-fuzzer setup it would be quite trivial to write a script that gives each fuzzer a running time of X time units each, and then measures the achieved coverage. Having this kind of fuzzer shootout would be quite fun and will probably increase the interest in writing Bitcoin fuzzers!\r\n\r\nAlso it would make it easy to measure the _incremental_ coverage gained from adding a new fuzzer which would be handy during fuzzing development.",
      "created_at" : "2017-08-17T21:29:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323199582",
      "id" : 323199582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T21:29:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323199582",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Here's an idea for a fuzzer: after #10699, it would be interesting to write a fuzz test that mimicks the test added in https://github.com/bitcoin/bitcoin/pull/10699/commits/2dd6f80680b8cbf9d4c99c6b2a8310af541e9aa3 (find a script/flag combination that proves a flag is not a softfork).",
      "created_at" : "2017-08-17T21:45:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323203173",
      "id" : 323203173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T21:45:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323203173",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> have reached their max depth/\"max path count\" (i.e. consider stop fuzzing).\r\n\r\nI'd encourage you to keep fuzzing even after reaching all possible edges. \r\nExample: [BN_mod_exp may produce incorrect results on x86_64 (CVE-2017-3732)\r\n](https://www.openssl.org/news/secadv/20170126.txt). This bug took us several CPU years to find, and the coverage was not changing for ~3 months. ",
      "created_at" : "2017-08-17T21:46:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323203253",
      "id" : 323203253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T21:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323203253",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1789297?v=4",
         "events_url" : "https://api.github.com/users/kcc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcc/followers",
         "following_url" : "https://api.github.com/users/kcc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcc",
         "id" : 1789297,
         "login" : "kcc",
         "organizations_url" : "https://api.github.com/users/kcc/orgs",
         "received_events_url" : "https://api.github.com/users/kcc/received_events",
         "repos_url" : "https://api.github.com/users/kcc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcc"
      }
   },
   {
      "body" : "@kcc Yes, that is a good point (and a very nice example, didn't know the CVE-2017-3732 discovery details before - thanks!). Given enough resources that is the way to do it. Now if we only could get Bitcoin onto Google's OSS-Fuzz infrastructure! :-)\r\n\r\nPersonally I fuzz Bitcoin and the Swift compiler 24/7 (see [results here](https://github.com/apple/swift/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Apracticalswift%20is%3Amerged%20crasher%20)), but unfortunately I meet a very real budget constraint that forces me to choose wisely between fuzzing targets based on path discovery rate :-)\r\n\r\nWhen I have you here in this thread - I just wanted to take the time to send a huge thank you for libFuzzer and the sanitizers. Amazing tools! Really impressed by your work!",
      "created_at" : "2017-08-17T21:53:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323204734",
      "id" : 323204734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T22:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323204734",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : ">  if we only could get Bitcoin onto Google's OSS-Fuzz i\r\n\r\nYou are welcome at any moment if/when the bitcoin team decides that our disclosure timelines work for you. \r\n\r\nBut you can build a much simpler continuous fuzzing yourself at a very low cost. \r\nE.g. [n1-highcpu-8](https://cloud.google.com/compute/pricing#predefined_machine_types) (a VM with 8 cores and 7.2Gb RAM) will cost you 6c per hour ($44 per month). Other cloud compute vendors have comparable prices, AFAICT\r\n\r\nSee also: https://github.com/google/fuzzer-test-suite/blob/master/tutorial/libFuzzerTutorial.md#distributed-fuzzing\r\n\r\n> Amazing tools! \r\n\r\nThank you! ",
      "created_at" : "2017-08-17T22:07:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323207703",
      "id" : 323207703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-17T22:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323207703",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1789297?v=4",
         "events_url" : "https://api.github.com/users/kcc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcc/followers",
         "following_url" : "https://api.github.com/users/kcc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcc",
         "id" : 1789297,
         "login" : "kcc",
         "organizations_url" : "https://api.github.com/users/kcc/orgs",
         "received_events_url" : "https://api.github.com/users/kcc/received_events",
         "repos_url" : "https://api.github.com/users/kcc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcc"
      }
   },
   {
      "body" : "@practicalswift sadly the google OSS-Fuzz infrastructure has requirements about disclosure that are unrealistically short for Bitcoin Core, meaning we cant really accept it at this time. Assuming they actually did find something they would expect disclosure within a month or two, which is much too fast for this project (and also faster than Chromium often discloses bugs which they find internally).",
      "created_at" : "2017-08-18T16:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323398225",
      "id" : 323398225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-18T16:22:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323398225",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "#10440 adds libFuzzer support to `test_bitcoin_fuzzy.cpp` (in addition to the already existing `afl-fuzz` support including AFL persistent mode).\r\n\r\nWhen that PR is merged, what about using that as the base for the new one-binary-per-fuzzer structure suggested above?\r\n\r\nThat way we'll get both `libFuzzer` and AFL persistent mode support out of the box for all new fuzzers added.\r\n\r\nBTW, if anyone is willing to review the libFuzzer support patch (#10440) I'd be very happy! :-)",
      "created_at" : "2017-08-22T20:17:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-324139671",
      "id" : 324139671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-22T20:17:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324139671",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "The blockchain loader now use ```std::tmpfile```.\r\n\r\nI also added a compile flag to the prevector fuzzer which makes it easy to fuzz prevector.h as if it were dealing with very large amounts of data (4GB -- the threshold at which a uint32_t overflows). If you compile with ```-DSIZETYPE_UINT16_T``` it uses ```uint16_t``` as the internal size type, so it doesn't require 4GB buffers but only 64K (the overflow threshold of uint16_t) buffers. Hope that makes sense?\r\nSee also https://github.com/bitcoin/bitcoin/issues/11115",
      "created_at" : "2017-08-23T00:08:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-324184802",
      "id" : 324184802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-23T00:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324184802",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6846644?v=4",
         "events_url" : "https://api.github.com/users/guidovranken/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guidovranken/followers",
         "following_url" : "https://api.github.com/users/guidovranken/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guidovranken/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guidovranken",
         "id" : 6846644,
         "login" : "guidovranken",
         "organizations_url" : "https://api.github.com/users/guidovranken/orgs",
         "received_events_url" : "https://api.github.com/users/guidovranken/received_events",
         "repos_url" : "https://api.github.com/users/guidovranken/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guidovranken/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guidovranken"
      }
   },
   {
      "body" : "If you have any ideas about which components to fuzz next, let me know, I'll implement them (as long as time permits).",
      "created_at" : "2017-08-25T17:13:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-324982053",
      "id" : 324982053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-25T17:13:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324982053",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6846644?v=4",
         "events_url" : "https://api.github.com/users/guidovranken/events{/privacy}",
         "followers_url" : "https://api.github.com/users/guidovranken/followers",
         "following_url" : "https://api.github.com/users/guidovranken/following{/other_user}",
         "gists_url" : "https://api.github.com/users/guidovranken/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/guidovranken",
         "id" : 6846644,
         "login" : "guidovranken",
         "organizations_url" : "https://api.github.com/users/guidovranken/orgs",
         "received_events_url" : "https://api.github.com/users/guidovranken/received_events",
         "repos_url" : "https://api.github.com/users/guidovranken/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/guidovranken/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/guidovranken"
      }
   },
   {
      "body" : "> Yes, that is a good point (and a very nice example\r\n\r\nAnd one more example: https://www.openssl.org/news/secadv/20170828.txt\r\nTook us 9 months to find. ",
      "created_at" : "2017-08-29T05:33:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-325559738",
      "id" : 325559738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-29T05:33:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325559738",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1789297?v=4",
         "events_url" : "https://api.github.com/users/kcc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcc/followers",
         "following_url" : "https://api.github.com/users/kcc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcc",
         "id" : 1789297,
         "login" : "kcc",
         "organizations_url" : "https://api.github.com/users/kcc/orgs",
         "received_events_url" : "https://api.github.com/users/kcc/received_events",
         "repos_url" : "https://api.github.com/users/kcc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcc"
      }
   },
   {
      "body" : "@kcc Wow, really nice! :-)",
      "created_at" : "2017-08-29T06:00:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-325563473",
      "id" : 325563473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-29T06:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325563473",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> perhaps we could use fmemopen\r\n\r\nI've played with fmemopen in another target and it was horrible. \r\nIf at all possible try to avoid `fmemopen` and `std::tmpfile` -- they may cost you 100x or 1000x slowdown",
      "created_at" : "2017-08-31T21:24:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-326424718",
      "id" : 326424718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-08-31T21:24:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326424718",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1789297?v=4",
         "events_url" : "https://api.github.com/users/kcc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcc/followers",
         "following_url" : "https://api.github.com/users/kcc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcc",
         "id" : 1789297,
         "login" : "kcc",
         "organizations_url" : "https://api.github.com/users/kcc/orgs",
         "received_events_url" : "https://api.github.com/users/kcc/received_events",
         "repos_url" : "https://api.github.com/users/kcc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcc"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> +1 for splitting the fuzzers into one binary each\r\n\r\nAn intermediate idea would be to have a command-line argument determine the type of fuzzer, instead of the first part of the input data (which I agree might be a bad idea).\r\n\r\nThe reason I prefer it as one executable is that there is little overhead building it by default with the tests (which means code rot will not break it). If you want to switch to multiple executable, it will have to be a separate `configure` flag that is disabled by default e.g. `--enable-fuzzers`.",
      "created_at" : "2017-10-05T16:10:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-334514410",
      "id" : 334514410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-10-05T16:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334514410",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I always advocate for one-binary-per-target because it makes fuzzing more efficient. \r\nAt least in libFuzzer, some parts of the logic are `O(BinarySize)`.\r\nBit rot is an important concern and we always encourage to use the fuzz targets as part of the regular continuous testing (not for fuzzing, just to run the targets on their corpus). \r\n\r\nHere are our [recommendations](https://github.com/google/oss-fuzz/blob/master/docs/ideal_integration.md), please consider them regardless of whether you want to join oss-fuzz. Openssl is an example of well integrated fuzzing with one-binary-per-target: https://github.com/openssl/openssl/tree/master/fuzz",
      "created_at" : "2017-10-05T16:17:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-334516409",
      "id" : 334516409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-10-05T16:17:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334516409",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1789297?v=4",
         "events_url" : "https://api.github.com/users/kcc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kcc/followers",
         "following_url" : "https://api.github.com/users/kcc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kcc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kcc",
         "id" : 1789297,
         "login" : "kcc",
         "organizations_url" : "https://api.github.com/users/kcc/orgs",
         "received_events_url" : "https://api.github.com/users/kcc/received_events",
         "repos_url" : "https://api.github.com/users/kcc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kcc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kcc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kcc"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Fine with me, but as said we shouldn't build them by default anymore then (they could be built as part of one of the Travis runs for continuous integration, sure). It's pointless to build 100 fuzzers by default that 99% of people won't use, people are already complaining that building the tests takes long. Bitcoin has a lot of code and (inter)dependencies and every extra linker invocation will add significant time to the build process. And we don't want to encourage building entirely without tests.",
      "created_at" : "2017-10-06T07:54:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-334685286",
      "id" : 334685286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-10-06T07:56:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334685286",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "According to @gmaxwell \"Bitcoin Core is fuzzed with more resources than \"OSS-Fuzz\" already.\"(https://www.reddit.com/r/Bitcoin/comments/76v747/bitcoin_core_code_was_tested_so_thoroughly_that/dohc25t/).\r\n\r\nIs there documentation about this process somewhere? I'm especially interested in the backend, since ClusterFuzz unfortunately is not Open Source and there were no public re-implementations I could find.",
      "created_at" : "2017-10-17T17:32:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-337307455",
      "id" : 337307455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11045",
      "updated_at" : "2017-10-17T17:32:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337307455",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/950561?v=4",
         "events_url" : "https://api.github.com/users/MarkusTeufelberger/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarkusTeufelberger/followers",
         "following_url" : "https://api.github.com/users/MarkusTeufelberger/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarkusTeufelberger/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarkusTeufelberger",
         "id" : 950561,
         "login" : "MarkusTeufelberger",
         "organizations_url" : "https://api.github.com/users/MarkusTeufelberger/orgs",
         "received_events_url" : "https://api.github.com/users/MarkusTeufelberger/received_events",
         "repos_url" : "https://api.github.com/users/MarkusTeufelberger/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarkusTeufelberger/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarkusTeufelberger/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarkusTeufelberger"
      }
   }
]

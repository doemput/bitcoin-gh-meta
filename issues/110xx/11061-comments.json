[
   {
      "body" : "Bitcoin Core does not support `coinbasetxn`.",
      "created_at" : "2017-08-16T04:13:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11061#issuecomment-322662117",
      "id" : 322662117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11061",
      "updated_at" : "2017-08-16T04:13:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322662117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "So the help that it yields is inaccurate? (maybe outdated?) if so there are any other tools that does it? or i have to generate by hand?",
      "created_at" : "2017-08-16T04:19:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11061#issuecomment-322662770",
      "id" : 322662770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11061",
      "updated_at" : "2017-08-16T04:19:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322662770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/2874967?v=4",
         "events_url" : "https://api.github.com/users/milewski/events{/privacy}",
         "followers_url" : "https://api.github.com/users/milewski/followers",
         "following_url" : "https://api.github.com/users/milewski/following{/other_user}",
         "gists_url" : "https://api.github.com/users/milewski/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/milewski",
         "id" : 2874967,
         "login" : "milewski",
         "organizations_url" : "https://api.github.com/users/milewski/orgs",
         "received_events_url" : "https://api.github.com/users/milewski/received_events",
         "repos_url" : "https://api.github.com/users/milewski/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/milewski/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/milewski/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/milewski"
      }
   },
   {
      "body" : "The help doesn't say bitcoind does anything in particular with the client capabilities list.\r\n\r\nAt least Eloipool supports `coinbasetxn`, but you can also generate one using [libblkmaker](https://github.com/bitcoin/libblkmaker), the reference GBT client.",
      "created_at" : "2017-08-16T04:22:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11061#issuecomment-322662983",
      "id" : 322662983,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11061",
      "updated_at" : "2017-08-16T04:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322662983",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Look this is the entire output from the bitcoin-core \r\n\r\n```\r\nhelp getblocktemplate\r\nÃ¯Â¿Â¼\r\ngetblocktemplate ( TemplateRequest )\r\n\r\nIf the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.\r\nIt returns data needed to construct a block to work on.\r\nFor full specification, see BIPs 22, 23, 9, and 145:\r\n    https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki\r\n    https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki\r\n    https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki#getblocktemplate_changes\r\n    https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\r\n\r\nArguments:\r\n1. template_request         (json object, optional) A json object in the following spec\r\n     {\r\n       \"mode\":\"template\"    (string, optional) This must be set to \"template\", \"proposal\" (see BIP 23), or omitted\r\n       \"capabilities\":[     (array, optional) A list of strings\r\n           \"support\"          (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\r\n           ,...\r\n       ],\r\n       \"rules\":[            (array, optional) A list of strings\r\n           \"support\"          (string) client side supported softfork deployment\r\n           ,...\r\n       ]\r\n     }\r\n\r\n\r\nResult:\r\n{\r\n  \"version\" : n,                    (numeric) The preferred block version\r\n  \"rules\" : [ \"rulename\", ... ],    (array of strings) specific block rules that are to be enforced\r\n  \"vbavailable\" : {                 (json object) set of pending, supported versionbit (BIP 9) softfork deployments\r\n      \"rulename\" : bitnumber          (numeric) identifies the bit number as indicating acceptance and readiness for the named softfork rule\r\n      ,...\r\n  },\r\n  \"vbrequired\" : n,                 (numeric) bit mask of versionbits the server requires set in submissions\r\n  \"previousblockhash\" : \"xxxx\",     (string) The hash of current highest block\r\n  \"transactions\" : [                (array) contents of non-coinbase transactions that should be included in the next block\r\n      {\r\n         \"data\" : \"xxxx\",             (string) transaction data encoded in hexadecimal (byte-for-byte)\r\n         \"txid\" : \"xxxx\",             (string) transaction id encoded in little-endian hexadecimal\r\n         \"hash\" : \"xxxx\",             (string) hash encoded in little-endian hexadecimal (including witness data)\r\n         \"depends\" : [                (array) array of numbers \r\n             n                          (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\r\n             ,...\r\n         ],\r\n         \"fee\": n,                    (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\r\n         \"sigops\" : n,                (numeric) total SigOps cost, as counted for purposes of block limits; if key is not present, sigop cost is unknown and clients MUST NOT assume it is zero\r\n         \"weight\" : n,                (numeric) total transaction weight, as counted for purposes of block limits\r\n         \"required\" : true|false      (boolean) if provided and true, this transaction must be in the final block\r\n      }\r\n      ,...\r\n  ],\r\n  \"coinbaseaux\" : {                 (json object) data that should be included in the coinbase's scriptSig content\r\n      \"flags\" : \"xx\"                  (string) key name is to be ignored, and value included in scriptSig\r\n  },\r\n  \"coinbasevalue\" : n,              (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in Satoshis)\r\n  \"coinbasetxn\" : { ... },          (json object) information for coinbase transaction\r\n  \"target\" : \"xxxx\",                (string) The hash target\r\n  \"mintime\" : xxx,                  (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\r\n  \"mutable\" : [                     (array of string) list of ways the block template may be changed \r\n     \"value\"                          (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\r\n     ,...\r\n  ],\r\n  \"noncerange\" : \"00000000ffffffff\",(string) A range of valid nonces\r\n  \"sigoplimit\" : n,                 (numeric) limit of sigops in blocks\r\n  \"sizelimit\" : n,                  (numeric) limit of block size\r\n  \"weightlimit\" : n,                (numeric) limit of block weight\r\n  \"curtime\" : ttt,                  (numeric) current timestamp in seconds since epoch (Jan 1 1970 GMT)\r\n  \"bits\" : \"xxxxxxxx\",              (string) compressed target of next block\r\n  \"height\" : n                      (numeric) The height of the next block\r\n}\r\n\r\nExamples:\r\n> bitcoin-cli getblocktemplate \r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblocktemplate\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n```\r\n\r\nClose look to \r\n\r\n```\r\n\"coinbasetxn\" : { ... },          (json object) information for coinbase transaction\r\n```\r\n\r\nMaybe it's misleading ... i have tried using the `bitcoin-cli` and that console inside the `bitcoin-core` also have tried trough `json rpc` but none seems to work..",
      "created_at" : "2017-08-16T04:25:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11061#issuecomment-322663339",
      "id" : 322663339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11061",
      "updated_at" : "2017-08-16T04:25:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322663339",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/2874967?v=4",
         "events_url" : "https://api.github.com/users/milewski/events{/privacy}",
         "followers_url" : "https://api.github.com/users/milewski/followers",
         "following_url" : "https://api.github.com/users/milewski/following{/other_user}",
         "gists_url" : "https://api.github.com/users/milewski/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/milewski",
         "id" : 2874967,
         "login" : "milewski",
         "organizations_url" : "https://api.github.com/users/milewski/orgs",
         "received_events_url" : "https://api.github.com/users/milewski/received_events",
         "repos_url" : "https://api.github.com/users/milewski/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/milewski/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/milewski/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/milewski"
      }
   }
]

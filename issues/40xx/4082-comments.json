[
   {
      "body" : "Brain dump on how to fix:\r\n\r\nAfter transaction is created, if fee-per-kb is larger than fee needed, move value from fee to change (assuming there is a change output: maybe always compute fee needed assuming that there WILL BE a change output).\r\n\r\nCreateTransaction can loop a bunch of times right now, and it signs inputs every time it loops (which is an expensive operation). Signing inputs once would be much more efficient; a CTransaction::maxSignedSize() method that operates on a transaction with empty scriptSigs would be useful for both coin control and CreateTransaction.\r\n\r\nIt would be nice if CreateTransaction either always succeeded or always failed given a set of unspent inputs to select from. That might not be true right now; I think you could have a wallet with a few moderate-size and (say) thousands of small inputs, where SelectCoinsMinConf/ApproximateBestSubset would sometimes select just the moderate-sized inputs to create an under-100K-and-pays-enough-fees transaction but would sometimes fail.\r\n\r\nSo maybe CreateTransaction should be changed to \"three strikes and you're out\":\r\n1) Create a zero-fee transaction. If it is high enough priority: spiffy, done.\r\n2) Do one-pass of what we do today (maybe with fix to move fees to change, if it pays too much in fees). If it succeeds: spiffy, done.\r\n3) Last-ditch best effort: run a greedy-select on the UTXO, adding largest-value inputs one by one until either we get a transaction that has enough value-in to pay fees needed OR we run into the 100K transaction size limit OR we run out of inputs.\r\n\r\nThe annoying task will be creating regression tests with wallets crafted to trigger CreateTransaction edge cases.\r\n",
      "created_at" : "2014-04-22T18:03:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4082#issuecomment-41073249",
      "id" : 41073249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4082",
      "updated_at" : "2014-04-22T18:03:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41073249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "I started to write all the stuff you wrote here about signing being in the loop, so obviously I agree. I also I agree with the second pass approach, elsewhere I'd written before:\r\n\r\n\"Any of the greedy processes can be improved by a fix-up pass on the final result. Take the result.. Is there a change output?  If not, can we add one and take non-dust change while remaining in fee policy? If (or now that) there is one: Can some of the fee be moved to change? Are there any more tiny already-linked inputs that could be added with out adversely effecting the fee (or running us over the size limits)? Iterate.\"\r\n\r\nI'm not a _super_ big fan of the greedy select largest inputs approach because I think it will tend to grind wallets down to unspendable dust even worse than the current coin selection behavior does. If you have one or more inputs that is larger than your typical spending amount you'll keep using it over and over again grinding out change that this selection procedure won't use. One thing we could do to improve this, I think is do the top down greedy solution and if we're successful try eliminating the largest coin and continuing to add inputs. Stop if you hit the size limit, or if your largest input is on the order of half the size of what your paying, and take the last best (largest) solution.\r\n\r\nWRT createtransaction always being successful or always failing. We could derandomize the heuristic solver by using all the input txids as the source of randomness for the search. or just by using a constant seedÃ¢ÂÂ I'd worry about the privacy leakage from the constant seed, but since we make basically no efforts here to improve privacy currently perhaps it shouldn't be the biggest concern. The non-deterministic approach does have an advantage that it may be successful on a second try. Still greedy, but it should have the same success rate as the first approach and will tend to garbage collect the wallet.\r\n\r\nGenerally, for privacy, we ought to move the first level selection to be scriptPubKey based, so that if it spends one coin to a given pubkey it spends them all.\r\n\r\nAnother post-processing pass that would both improve privacy and wallet fragmentation would be if the change is greater than twice the value being spent minus epsilon and the change is also greater than (say) 10000x dust,  create two change outputs instead of one, and at random split the change 50/50 or set one equal to the payment and put the remainder in the other. This will help break out of the case where the user gets a single large payment and is constantly spending their change.  \r\n",
      "created_at" : "2014-04-23T01:18:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4082#issuecomment-41115100",
      "id" : 41115100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4082",
      "updated_at" : "2014-04-23T01:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41115100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I think this is solved now by #9404\r\nIt can at least be removed from 0.14 milestone and probably be closed.",
      "created_at" : "2017-01-13T15:27:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/4082#issuecomment-272469636",
      "id" : 272469636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4082",
      "updated_at" : "2017-01-13T15:27:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272469636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]

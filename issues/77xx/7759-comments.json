[
   {
      "body" : "Looks like `evhttp_send_reply_chunk_with_cb` is new in libevent 2.1 which is in alpha as of now.\r\n",
      "created_at" : "2016-03-29T06:46:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-202742336",
      "id" : 202742336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-03-29T06:46:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/202742336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=3",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "body" : "> Looks like evhttp_send_reply_chunk_with_cb is new in libevent 2.1 which is in alpha as of now.\r\n\r\nWeird. What good is a chunk function if you have no clue if the data was sent. I'll take a look.",
      "created_at" : "2016-03-29T07:08:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-202748693",
      "id" : 202748693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-03-29T07:08:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/202748693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "It seems the last stable release of libevent (2.0.22) was 2.5 years, though the master branch is being updated still. Do we want for libevent 2.1 for this, or find another way?",
      "created_at" : "2016-06-02T15:05:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-223320514",
      "id" : 223320514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-06-02T15:05:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/223320514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> It seems the last stable release of libevent (2.0.22) was 2.5 years, though the master branch is being updated still. Do we want for libevent 2.1 for this, or find another way?\r\n\r\nYes, libevent version management is like that, unfortunately.\r\n\r\nI'd tend to include a newer libevent in depends, then disable the functionality when building with older libevent.\r\n\r\nThis will be too late for 0.13. Let's hope there will be a stable libevent release again before 0.14 which includes this. Not holding my breath though.",
      "created_at" : "2016-06-09T08:20:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-224829768",
      "id" : 224829768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-06-09T08:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/224829768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Rebased, updated for boost-removal from `httpserver.h`",
      "created_at" : "2016-09-28T15:25:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-250201362",
      "id" : 250201362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-09-28T15:25:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250201362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80945645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80945645"
         }
      },
      "body" : "I guess this requires libevent2.1 (depends package is still on 2.0.x IIRC)",
      "commit_id" : "5cd59bbe03d7b4763155acc76e16867f2c66dc7c",
      "created_at" : "2016-09-28T15:29:52Z",
      "diff_hunk" : "@@ -650,6 +658,97 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n     }\n }\n \n+bool HTTPRequest::StartStreaming(int nStatus)\n+{\n+    assert(!streaming);\n+    streaming = new StreamingData();\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true, boost::bind(evhttp_send_reply_start, req, nStatus, (const char*)NULL));\n+    ev->trigger(0);\n+    return true;\n+}\n+\n+/** TODO: move HTTPRequest::StreamingData to another unit */\n+#define MAX_CHUNK_BUFFER (256*1024)\n+\n+HTTPRequest::StreamingData::StreamingData():\n+    buffer_bytes(0)\n+{\n+    databuf = evbuffer_new();\n+    assert(databuf);\n+}\n+\n+HTTPRequest::StreamingData::~StreamingData()\n+{\n+    evbuffer_free(databuf);\n+}\n+\n+/** Update buffer length in synchronization structure.\n+ * @note: Can only safely read the length of the buffer from the event thread.\n+ */\n+void HTTPRequest::StreamingData::Update(struct evhttp_connection* evcon)\n+{\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        struct bufferevent* bufev = evhttp_connection_get_bufferevent(evcon);\n+        assert(bufev);\n+        struct evbuffer *output = bufferevent_get_output(bufev);\n+        assert(output);\n+        buffer_bytes = evbuffer_get_length(output);\n+    }\n+    cond.notify_all();\n+}\n+\n+/** Called by evhttp from event thread after a chunk has been written.\n+ */\n+void HTTPRequest::StreamingData::http_chunk_cb(struct evhttp_connection* evcon, void* arg)\n+{\n+    HTTPRequest::StreamingData *self = (HTTPRequest::StreamingData*) arg;\n+    self->Update(evcon);\n+    // LogPrintf(\"http_chunk_cb %i\\n\", self->buffer_bytes);\n+}\n+\n+/** Send current chunk in databuf.\n+ * @note: Can only safely be called from event thread\n+ */\n+void HTTPRequest::StreamingData::SendChunk(struct evhttp_request* req)\n+{\n+    // LogPrintf(\"set_http_chunk_cb\\n\");\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        evhttp_send_reply_chunk_with_cb(req, databuf, &http_chunk_cb, this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80945645",
      "id" : 80945645,
      "original_commit_id" : "2498324ff9eab770ffddca643f843f0b9a85dd1c",
      "original_position" : 91,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 1962598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759",
      "updated_at" : "2016-09-29T07:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80945645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80946043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80946043"
         }
      },
      "body" : "Sorry.. that was already discussed.",
      "commit_id" : "5cd59bbe03d7b4763155acc76e16867f2c66dc7c",
      "created_at" : "2016-09-28T15:31:20Z",
      "diff_hunk" : "@@ -650,6 +658,97 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n     }\n }\n \n+bool HTTPRequest::StartStreaming(int nStatus)\n+{\n+    assert(!streaming);\n+    streaming = new StreamingData();\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true, boost::bind(evhttp_send_reply_start, req, nStatus, (const char*)NULL));\n+    ev->trigger(0);\n+    return true;\n+}\n+\n+/** TODO: move HTTPRequest::StreamingData to another unit */\n+#define MAX_CHUNK_BUFFER (256*1024)\n+\n+HTTPRequest::StreamingData::StreamingData():\n+    buffer_bytes(0)\n+{\n+    databuf = evbuffer_new();\n+    assert(databuf);\n+}\n+\n+HTTPRequest::StreamingData::~StreamingData()\n+{\n+    evbuffer_free(databuf);\n+}\n+\n+/** Update buffer length in synchronization structure.\n+ * @note: Can only safely read the length of the buffer from the event thread.\n+ */\n+void HTTPRequest::StreamingData::Update(struct evhttp_connection* evcon)\n+{\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        struct bufferevent* bufev = evhttp_connection_get_bufferevent(evcon);\n+        assert(bufev);\n+        struct evbuffer *output = bufferevent_get_output(bufev);\n+        assert(output);\n+        buffer_bytes = evbuffer_get_length(output);\n+    }\n+    cond.notify_all();\n+}\n+\n+/** Called by evhttp from event thread after a chunk has been written.\n+ */\n+void HTTPRequest::StreamingData::http_chunk_cb(struct evhttp_connection* evcon, void* arg)\n+{\n+    HTTPRequest::StreamingData *self = (HTTPRequest::StreamingData*) arg;\n+    self->Update(evcon);\n+    // LogPrintf(\"http_chunk_cb %i\\n\", self->buffer_bytes);\n+}\n+\n+/** Send current chunk in databuf.\n+ * @note: Can only safely be called from event thread\n+ */\n+void HTTPRequest::StreamingData::SendChunk(struct evhttp_request* req)\n+{\n+    // LogPrintf(\"set_http_chunk_cb\\n\");\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        evhttp_send_reply_chunk_with_cb(req, databuf, &http_chunk_cb, this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80946043",
      "id" : 80946043,
      "original_commit_id" : "2498324ff9eab770ffddca643f843f0b9a85dd1c",
      "original_position" : 91,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 1962958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759",
      "updated_at" : "2016-09-29T07:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80946043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80948558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80948558"
         }
      },
      "body" : "Yes, I need to find exactly what version this was introduce in and guard the streaming stuff with `#if LIBEVENT_VERSION_NUMBER >= 0x0201XXXX`. I think it can only be supported for newer libevent .",
      "commit_id" : "5cd59bbe03d7b4763155acc76e16867f2c66dc7c",
      "created_at" : "2016-09-28T15:41:11Z",
      "diff_hunk" : "@@ -650,6 +658,97 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n     }\n }\n \n+bool HTTPRequest::StartStreaming(int nStatus)\n+{\n+    assert(!streaming);\n+    streaming = new StreamingData();\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true, boost::bind(evhttp_send_reply_start, req, nStatus, (const char*)NULL));\n+    ev->trigger(0);\n+    return true;\n+}\n+\n+/** TODO: move HTTPRequest::StreamingData to another unit */\n+#define MAX_CHUNK_BUFFER (256*1024)\n+\n+HTTPRequest::StreamingData::StreamingData():\n+    buffer_bytes(0)\n+{\n+    databuf = evbuffer_new();\n+    assert(databuf);\n+}\n+\n+HTTPRequest::StreamingData::~StreamingData()\n+{\n+    evbuffer_free(databuf);\n+}\n+\n+/** Update buffer length in synchronization structure.\n+ * @note: Can only safely read the length of the buffer from the event thread.\n+ */\n+void HTTPRequest::StreamingData::Update(struct evhttp_connection* evcon)\n+{\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        struct bufferevent* bufev = evhttp_connection_get_bufferevent(evcon);\n+        assert(bufev);\n+        struct evbuffer *output = bufferevent_get_output(bufev);\n+        assert(output);\n+        buffer_bytes = evbuffer_get_length(output);\n+    }\n+    cond.notify_all();\n+}\n+\n+/** Called by evhttp from event thread after a chunk has been written.\n+ */\n+void HTTPRequest::StreamingData::http_chunk_cb(struct evhttp_connection* evcon, void* arg)\n+{\n+    HTTPRequest::StreamingData *self = (HTTPRequest::StreamingData*) arg;\n+    self->Update(evcon);\n+    // LogPrintf(\"http_chunk_cb %i\\n\", self->buffer_bytes);\n+}\n+\n+/** Send current chunk in databuf.\n+ * @note: Can only safely be called from event thread\n+ */\n+void HTTPRequest::StreamingData::SendChunk(struct evhttp_request* req)\n+{\n+    // LogPrintf(\"set_http_chunk_cb\\n\");\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        evhttp_send_reply_chunk_with_cb(req, databuf, &http_chunk_cb, this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80948558",
      "id" : 80948558,
      "original_commit_id" : "2498324ff9eab770ffddca643f843f0b9a85dd1c",
      "original_position" : 91,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 1965260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759",
      "updated_at" : "2016-09-29T07:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80948558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80951853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80951853"
         }
      },
      "body" : "For reference, the commit that introduced `evhttp_send_reply_chunk_with_cb` https://github.com/libevent/libevent/commit/8d8decf114aebf10188cfdf52a8479cd24d1e3e5 , first appearing in version 0x02010401 is from **2009**, and that's still the beta branch. I'm getting a bit concerned about libevent's release process.",
      "commit_id" : "5cd59bbe03d7b4763155acc76e16867f2c66dc7c",
      "created_at" : "2016-09-28T15:54:36Z",
      "diff_hunk" : "@@ -650,6 +658,97 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n     }\n }\n \n+bool HTTPRequest::StartStreaming(int nStatus)\n+{\n+    assert(!streaming);\n+    streaming = new StreamingData();\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true, boost::bind(evhttp_send_reply_start, req, nStatus, (const char*)NULL));\n+    ev->trigger(0);\n+    return true;\n+}\n+\n+/** TODO: move HTTPRequest::StreamingData to another unit */\n+#define MAX_CHUNK_BUFFER (256*1024)\n+\n+HTTPRequest::StreamingData::StreamingData():\n+    buffer_bytes(0)\n+{\n+    databuf = evbuffer_new();\n+    assert(databuf);\n+}\n+\n+HTTPRequest::StreamingData::~StreamingData()\n+{\n+    evbuffer_free(databuf);\n+}\n+\n+/** Update buffer length in synchronization structure.\n+ * @note: Can only safely read the length of the buffer from the event thread.\n+ */\n+void HTTPRequest::StreamingData::Update(struct evhttp_connection* evcon)\n+{\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        struct bufferevent* bufev = evhttp_connection_get_bufferevent(evcon);\n+        assert(bufev);\n+        struct evbuffer *output = bufferevent_get_output(bufev);\n+        assert(output);\n+        buffer_bytes = evbuffer_get_length(output);\n+    }\n+    cond.notify_all();\n+}\n+\n+/** Called by evhttp from event thread after a chunk has been written.\n+ */\n+void HTTPRequest::StreamingData::http_chunk_cb(struct evhttp_connection* evcon, void* arg)\n+{\n+    HTTPRequest::StreamingData *self = (HTTPRequest::StreamingData*) arg;\n+    self->Update(evcon);\n+    // LogPrintf(\"http_chunk_cb %i\\n\", self->buffer_bytes);\n+}\n+\n+/** Send current chunk in databuf.\n+ * @note: Can only safely be called from event thread\n+ */\n+void HTTPRequest::StreamingData::SendChunk(struct evhttp_request* req)\n+{\n+    // LogPrintf(\"set_http_chunk_cb\\n\");\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        evhttp_send_reply_chunk_with_cb(req, databuf, &http_chunk_cb, this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r80951853",
      "id" : 80951853,
      "original_commit_id" : "2498324ff9eab770ffddca643f843f0b9a85dd1c",
      "original_position" : 91,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 1968459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759",
      "updated_at" : "2016-09-29T07:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/80951853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r81048873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81048873"
         }
      },
      "body" : "RE libevent release process -- several projects are feeling the limits of libevent http support, and moving to https://github.com/ellzey/libevhtp\r\n\r\nI had to do that in one project, in order to support streaming chunked http downloads.\r\n\r\nlibevent's http was really written for simple app servers with small replies.\r\n",
      "commit_id" : "5cd59bbe03d7b4763155acc76e16867f2c66dc7c",
      "created_at" : "2016-09-29T01:05:03Z",
      "diff_hunk" : "@@ -650,6 +658,97 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n     }\n }\n \n+bool HTTPRequest::StartStreaming(int nStatus)\n+{\n+    assert(!streaming);\n+    streaming = new StreamingData();\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true, boost::bind(evhttp_send_reply_start, req, nStatus, (const char*)NULL));\n+    ev->trigger(0);\n+    return true;\n+}\n+\n+/** TODO: move HTTPRequest::StreamingData to another unit */\n+#define MAX_CHUNK_BUFFER (256*1024)\n+\n+HTTPRequest::StreamingData::StreamingData():\n+    buffer_bytes(0)\n+{\n+    databuf = evbuffer_new();\n+    assert(databuf);\n+}\n+\n+HTTPRequest::StreamingData::~StreamingData()\n+{\n+    evbuffer_free(databuf);\n+}\n+\n+/** Update buffer length in synchronization structure.\n+ * @note: Can only safely read the length of the buffer from the event thread.\n+ */\n+void HTTPRequest::StreamingData::Update(struct evhttp_connection* evcon)\n+{\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        struct bufferevent* bufev = evhttp_connection_get_bufferevent(evcon);\n+        assert(bufev);\n+        struct evbuffer *output = bufferevent_get_output(bufev);\n+        assert(output);\n+        buffer_bytes = evbuffer_get_length(output);\n+    }\n+    cond.notify_all();\n+}\n+\n+/** Called by evhttp from event thread after a chunk has been written.\n+ */\n+void HTTPRequest::StreamingData::http_chunk_cb(struct evhttp_connection* evcon, void* arg)\n+{\n+    HTTPRequest::StreamingData *self = (HTTPRequest::StreamingData*) arg;\n+    self->Update(evcon);\n+    // LogPrintf(\"http_chunk_cb %i\\n\", self->buffer_bytes);\n+}\n+\n+/** Send current chunk in databuf.\n+ * @note: Can only safely be called from event thread\n+ */\n+void HTTPRequest::StreamingData::SendChunk(struct evhttp_request* req)\n+{\n+    // LogPrintf(\"set_http_chunk_cb\\n\");\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        evhttp_send_reply_chunk_with_cb(req, databuf, &http_chunk_cb, this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r81048873",
      "id" : 81048873,
      "original_commit_id" : "2498324ff9eab770ffddca643f843f0b9a85dd1c",
      "original_position" : 91,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 2057900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759",
      "updated_at" : "2016-09-29T07:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81048873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r81078629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81078629"
         }
      },
      "body" : "I know of that project, but I'd prefer to avoid adding another dependency. It can be considered if there is really no other way out, but it seems to me that chunked downloads can be done with that function.",
      "commit_id" : "5cd59bbe03d7b4763155acc76e16867f2c66dc7c",
      "created_at" : "2016-09-29T07:29:23Z",
      "diff_hunk" : "@@ -650,6 +658,97 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n     }\n }\n \n+bool HTTPRequest::StartStreaming(int nStatus)\n+{\n+    assert(!streaming);\n+    streaming = new StreamingData();\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true, boost::bind(evhttp_send_reply_start, req, nStatus, (const char*)NULL));\n+    ev->trigger(0);\n+    return true;\n+}\n+\n+/** TODO: move HTTPRequest::StreamingData to another unit */\n+#define MAX_CHUNK_BUFFER (256*1024)\n+\n+HTTPRequest::StreamingData::StreamingData():\n+    buffer_bytes(0)\n+{\n+    databuf = evbuffer_new();\n+    assert(databuf);\n+}\n+\n+HTTPRequest::StreamingData::~StreamingData()\n+{\n+    evbuffer_free(databuf);\n+}\n+\n+/** Update buffer length in synchronization structure.\n+ * @note: Can only safely read the length of the buffer from the event thread.\n+ */\n+void HTTPRequest::StreamingData::Update(struct evhttp_connection* evcon)\n+{\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        struct bufferevent* bufev = evhttp_connection_get_bufferevent(evcon);\n+        assert(bufev);\n+        struct evbuffer *output = bufferevent_get_output(bufev);\n+        assert(output);\n+        buffer_bytes = evbuffer_get_length(output);\n+    }\n+    cond.notify_all();\n+}\n+\n+/** Called by evhttp from event thread after a chunk has been written.\n+ */\n+void HTTPRequest::StreamingData::http_chunk_cb(struct evhttp_connection* evcon, void* arg)\n+{\n+    HTTPRequest::StreamingData *self = (HTTPRequest::StreamingData*) arg;\n+    self->Update(evcon);\n+    // LogPrintf(\"http_chunk_cb %i\\n\", self->buffer_bytes);\n+}\n+\n+/** Send current chunk in databuf.\n+ * @note: Can only safely be called from event thread\n+ */\n+void HTTPRequest::StreamingData::SendChunk(struct evhttp_request* req)\n+{\n+    // LogPrintf(\"set_http_chunk_cb\\n\");\n+    {\n+        std::unique_lock<std::mutex> lock(cs);\n+        evhttp_send_reply_chunk_with_cb(req, databuf, &http_chunk_cb, this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#discussion_r81078629",
      "id" : 81078629,
      "original_commit_id" : "2498324ff9eab770ffddca643f843f0b9a85dd1c",
      "original_position" : 91,
      "path" : "src/httpserver.cpp",
      "position" : null,
      "pull_request_review_id" : 2084445,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7759",
      "updated_at" : "2016-09-29T07:40:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81078629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing this. I think it was a nice experiement but I don't expect to get around to it again in the near future.\r\nIf anyone needs this functionality feel free to pick it up.",
      "created_at" : "2016-10-18T19:14:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-254609646",
      "id" : 254609646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-10-18T19:15:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254609646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : ":(\n",
      "created_at" : "2016-10-18T19:17:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7759#issuecomment-254610416",
      "id" : 254610416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7759",
      "updated_at" : "2016-10-18T19:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/254610416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]

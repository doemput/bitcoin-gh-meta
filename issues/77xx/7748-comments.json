[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7748#discussion_r57514275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7748"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57514275"
         }
      },
      "body" : "I'm fairly sure that this is not correct. You certainly shouldn't be skipping the inputs check when standard-ness is not required, it is part of consensus not standardness.",
      "commit_id" : "83af25fe8259b7315feba9bbbc5afe85d7dcbeb0",
      "created_at" : "2016-03-26T14:37:37Z",
      "diff_hunk" : "@@ -1352,7 +1352,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))\n+        if (fRequireStandard && !CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7748#discussion_r57514275",
      "id" : 57514275,
      "original_commit_id" : "83af25fe8259b7315feba9bbbc5afe85d7dcbeb0",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : 5,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7748",
      "updated_at" : "2016-03-26T14:37:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57514275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7748#discussion_r57514738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7748"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57514738"
         }
      },
      "body" : "There is a second invocation to CheckInputs below, with just mandatory checks.",
      "commit_id" : "83af25fe8259b7315feba9bbbc5afe85d7dcbeb0",
      "created_at" : "2016-03-26T15:12:26Z",
      "diff_hunk" : "@@ -1352,7 +1352,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))\n+        if (fRequireStandard && !CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7748#discussion_r57514738",
      "id" : 57514738,
      "original_commit_id" : "83af25fe8259b7315feba9bbbc5afe85d7dcbeb0",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : 5,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7748",
      "updated_at" : "2016-03-26T15:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/57514738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "It may make sense to disable the extra validation flags in some case for testing, but I don't think it should be done unconditionally.\r\n\r\nThe standardness validation flags don't really disable any functionality (that's done through IsStandard), but some are for example used to roll out softforks safely. Disabling those entirely on testnet means that it can't be used to test whether such relay rules actually work.",
      "created_at" : "2016-03-26T15:16:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7748#issuecomment-201855143",
      "id" : 201855143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7748",
      "updated_at" : "2016-03-26T15:16:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201855143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "It's still changeable per node with \"-acceptnonstdtxn\" on test and regtest.\r\n\r\nThe way I was looking at this commit was that it makes the application or non-application of standard-ness validation, as controlled by \"-acceptnonstdtxn\", more complete.\r\n\r\nI think fRequireStandard in the chain params is false for these two networks in order to not inhibit propagation and inclusion of possibly surprising valid stuff, and hopefully catch related bugs in non-prod testing.\r\n\r\nI see your point though too. On regtest this change was definitely helpful for my local testing. On testnet3, because standard-ness validation is the default for what I was testing in current nodes, it's kind of sterile. I was having trouble getting relay and I couldn't find good info on current testnet miner policies or where I could submit to a miner that accepted non-standard testnet transactions (which makes sense, but it was kind of a pain).",
      "created_at" : "2016-03-26T17:07:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7748#issuecomment-201893555",
      "id" : 201893555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7748",
      "updated_at" : "2016-03-26T17:07:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/201893555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6440430?v=3",
         "events_url" : "https://api.github.com/users/mruddy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mruddy/followers",
         "following_url" : "https://api.github.com/users/mruddy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mruddy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mruddy",
         "id" : 6440430,
         "login" : "mruddy",
         "organizations_url" : "https://api.github.com/users/mruddy/orgs",
         "received_events_url" : "https://api.github.com/users/mruddy/received_events",
         "repos_url" : "https://api.github.com/users/mruddy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mruddy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mruddy"
      }
   }
]

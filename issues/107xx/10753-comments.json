[
   {
      "body" : "Nice.\r\nConcept ACK.",
      "created_at" : "2017-07-06T13:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313396180",
      "id" : 313396180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-06T13:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313396180",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Concept ACK. Will review later.",
      "created_at" : "2017-07-06T13:45:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313400354",
      "id" : 313400354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-06T13:45:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313400354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: Use `sys.exit(Ã¢ÂÂ¦)`",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-06T14:43:12Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575",
      "id" : 125920575,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48356732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464"
         }
      },
      "author_association" : "OWNER",
      "body" : "Why?",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-06T14:46:14Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464",
      "id" : 125921464,
      "in_reply_to_id" : 125920575,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48357727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "According to the Python documentation `exit(Ã¢ÂÂ¦)` should be used in the interactive interpreter shell but not in programs:\r\n> The site module (which is imported automatically during startup, except if the -S command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.\r\n\r\nLinks:\r\n* [`sys.exit(Ã¢ÂÂ¦)`](https://docs.python.org/3/library/sys.html#sys.exit): _\"Exit from Python.\"_\r\n* [`exit(Ã¢ÂÂ¦)`](https://docs.python.org/3/library/constants.html#exit): _\"raise SystemExit with the specified exit code. [Ã¢ÂÂ¦] should not be used in programs.\"_",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-06T15:32:09Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027",
      "id" : 125935027,
      "in_reply_to_id" : 125920575,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48373253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855"
         }
      },
      "author_association" : "OWNER",
      "body" : "Agree then! I never knew that. Assumed they were simply aliasses.",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-06T17:54:56Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855",
      "id" : 125970855,
      "in_reply_to_id" : 125920575,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 60,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48413506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "IMO we could somehow share the same data between the server table and the client table so that none of this would be necessary. Don't take me wrong, but parsing code feels bad practice. Beside that, keeping these tables in sync could very well be avoided. I could work in an alternative, unless I'm missing something.",
      "created_at" : "2017-07-07T09:43:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313637174",
      "id" : 313637174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-07T09:43:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313637174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag That discussion is in https://github.com/bitcoin/bitcoin/issues/10751#issuecomment-313351532\r\n\r\nAnd yes, in the long run there are absolutely better solutions (ideally the cli would have none of this information and requests it from the server), but in the short term I think adding this check is good.\r\n\r\nAnyhow I don't care deeply if this doesn't get merged, I use this script myself, and @TheBlueMatt requested some way to check this in #10751 so I thought it'd be useful for some other people too...",
      "created_at" : "2017-07-07T10:05:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313641856",
      "id" : 313641856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-07T10:09:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313641856",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Thanks for pointing that out.\r\n\r\n@laanwj could this be executed in pre-commit hook?",
      "created_at" : "2017-07-07T10:14:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313643649",
      "id" : 313643649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-07T10:14:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313643649",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "> @laanwj could this be executed in pre-commit hook?\r\n\r\nSure, would be a matter of adding the line to execute it to the `.git/hooks/pre-commit` or `.git/hooks/pre-push` script.",
      "created_at" : "2017-07-07T11:40:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313658859",
      "id" : 313658859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-07T11:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313658859",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj another PR or care to add it here?",
      "created_at" : "2017-07-07T14:15:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313694531",
      "id" : 313694531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-07T14:15:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313694531",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "You have to do it locally. Hooks are not part of the repository (for\nsecurity reasons, among others.) Shipping some examples of hooks would work\nbut that's definitely out of scope here.\n\nOn Jul 7, 2017 4:15 PM, \"JoÃÂ£o Barbosa\" <notifications@github.com> wrote:\n\n> @laanwj <https://github.com/laanwj> another PR or care to add it here?\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313694531>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHutvPib9u0jiX_HkyKAtsFAGdNzyfZks5sLj2cgaJpZM4OPn4k>\n> .\n>\n",
      "created_at" : "2017-07-08T07:00:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313839125",
      "id" : 313839125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-08T07:00:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313839125",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I think this might be simpler and more robust if it were written as a c++ unit test that just accesses the global variables directly, instead of a python tool that has to parse c++ with regexes.",
      "created_at" : "2017-07-08T10:15:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313847227",
      "id" : 313847227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-08T10:16:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313847227",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "@laanwj reason?",
      "created_at" : "2017-07-08T11:26:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313850385",
      "id" : 313850385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-08T11:26:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313850385",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@laanwj did you close this because you're planning to propose an alternative?",
      "created_at" : "2017-07-10T13:03:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314098883",
      "id" : 314098883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-10T13:03:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314098883",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@jnewbery No, I don't have the time nor motivation to work on this (it works for me), but I'm looking forward to a better alternative as no one seems to like this solution. ",
      "created_at" : "2017-07-10T14:07:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314116310",
      "id" : 314116310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-10T14:08:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314116310",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I like it! At the very least I like it better than no tests at all.\r\n\r\nRunning code beats suggestions of better ways to do it without any code.\r\n\r\nIf you change your mind, I'm happy to review.",
      "created_at" : "2017-07-10T14:16:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314118947",
      "id" : 314118947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-07-10T14:16:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314118947",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126439352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126439352"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: unused, please remove",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-10T14:35:09Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126439352",
      "id" : 126439352,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 28,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48922868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126439352",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126442789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126442789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "assert is a statement, not a function, so these parens are unnecessary. In fact, this would be better expressed as:\r\n\r\n```py\r\nassert not in_rpcs, \"Something went wrong with parsing the C++ file: update the regexps\"\r\n```\r\n\r\nsince that delivers the error text to the user at the point of failure.",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-10T14:46:15Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(5).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126442789",
      "id" : 126442789,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 68,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48922868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126442789",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126454336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126454336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd simplify implementation in `main()` if `process_commands()` and `process_mappings()` both returned a set of tuples `(command, index, argname)`.",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-07-10T15:23:30Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126454336",
      "id" : 126454336,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 41,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 48922868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126454336",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@laanwj - do you still plan to work on this? If not, do you mind if I take over?",
      "created_at" : "2017-08-09T23:14:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-321406818",
      "id" : 321406818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-08-09T23:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321406818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "I'll get to this after 0.15.0. There's not much to be done here but I'm completely distracted at the moment.",
      "created_at" : "2017-08-10T06:59:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-321468337",
      "id" : 321468337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-08-10T07:00:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321468337",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Rebased and updated for new table syntax without safemode flag.",
      "created_at" : "2017-09-07T16:16:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327849296",
      "id" : 327849296,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T16:16:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327849296",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2017-09-07T17:08:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327863483",
      "id" : 327863483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T17:08:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327863483",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK",
      "created_at" : "2017-09-07T17:38:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327871243",
      "id" : 327871243,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T17:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327871243",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: One-line docstrings should be on one line.",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:46:07Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608655",
      "id" : 137608655,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 2,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: one import per line, sorted by name of module",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:46:21Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608753",
      "id" : 137608753,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 5,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: indentation for continuation lines.",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:46:46Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608884",
      "id" : 137608884,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 10,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608884",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "still unused, please remove",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:46:58Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608962",
      "id" : 137608962,
      "in_reply_to_id" : 126439352,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 28,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608962",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestion: add `self.convert = False` for self-documentation",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:47:25Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609105",
      "id" : 137609105,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 39,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : 35,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609105",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609460"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609460"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps replace with an assert:\r\n\r\n`assert m, \"No match: %s\" % line`",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:48:34Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609460",
      "id" : 137609460,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 58,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609460",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "please remove parens from assert",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:49:04Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(5).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609623",
      "id" : 137609623,
      "in_reply_to_id" : 126442789,
      "original_commit_id" : "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
      "original_position" : 68,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609623",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps replace with an assert?",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:49:26Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609724",
      "id" : 137609724,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 88,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609724",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610176"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggestion: add prints for each check (like you have for the first one):\r\n\r\n`print('* Checking for conflicts in vRPCConvertParams conversion')`\r\n\r\netc",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:51:08Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert(not in_rpcs)\n+    return cmds\n+\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping_order = process_mapping(os.path.join(root, client))\n+    mapping = set(mapping_order)\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610176",
      "id" : 137610176,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 130,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : 122,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610176",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610274"
         }
      },
      "author_association" : "MEMBER",
      "body" : "use `sys.exit()`",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:51:29Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert(not in_rpcs)\n+    return cmds\n+\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping_order = process_mapping(os.path.join(root, client))\n+    mapping = set(mapping_order)\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name,arg.idx,argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname,convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS: # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                    (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    exit(errors > 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610274",
      "id" : 137610274,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 161,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610274",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remove trailing blank line",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:51:40Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert(not in_rpcs)\n+    return cmds\n+\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping_order = process_mapping(os.path.join(root, client))\n+    mapping = set(mapping_order)\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name,arg.idx,argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname,convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS: # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                    (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    exit(errors > 0)\n+\n+if __name__ == '__main__':\n+    main()\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610326",
      "id" : 137610326,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 165,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610326",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610979"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For portability, use:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n```\r\n\r\nAlso add copyright notice",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T17:54:12Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610979",
      "id" : 137610979,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 1,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61298899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610979",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. If somebody writes a unittest alternative later, it is easy to replace one for the other, not a good reason to stop this.\r\n",
      "created_at" : "2017-09-07T19:53:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327910177",
      "id" : 327910177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T19:53:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327910177",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137644898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137644898"
         }
      },
      "author_association" : "OWNER",
      "body" : "Meh, I personally prefer them on multiple lines, makes it easier to extend them later.",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T20:18:56Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137644898",
      "id" : 137644898,
      "in_reply_to_id" : 137608655,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 2,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61340037,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137644898",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Addressed @jnewbery's nits and updated for .travis.yml conflict.",
      "created_at" : "2017-09-07T20:28:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327918426",
      "id" : 327918426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T20:28:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327918426",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648066"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this removal intended? How is it related to this PR?",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T20:32:26Z",
      "diff_hunk" : "@@ -45,7 +45,7 @@ install:\n before_script:\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - unset CC; unset CXX",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648066",
      "id" : 137648066,
      "original_commit_id" : "eef090fb235b52060eb03cbd0537011cd2651270",
      "original_position" : 4,
      "path" : ".travis.yml",
      "position" : null,
      "pull_request_review_id" : 61343723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648066",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for changing it anyway! (for context, I picked up the preference for one-line docstrings from https://www.python.org/dev/peps/pep-0257/#id16)",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T20:33:22Z",
      "diff_hunk" : "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648294",
      "id" : 137648294,
      "in_reply_to_id" : 137608655,
      "original_commit_id" : "9b47f080a29fe19d792af1f661cffbf9439129ea",
      "original_position" : 2,
      "path" : "contrib/devtools/check-rpc-mappings.py",
      "position" : null,
      "pull_request_review_id" : 61344013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648294",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648364"
         }
      },
      "author_association" : "OWNER",
      "body" : "Sigh, rebase fail",
      "commit_id" : "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-07T20:33:41Z",
      "diff_hunk" : "@@ -45,7 +45,7 @@ install:\n before_script:\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - unset CC; unset CXX",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648364",
      "id" : 137648364,
      "in_reply_to_id" : 137648066,
      "original_commit_id" : "eef090fb235b52060eb03cbd0537011cd2651270",
      "original_position" : 4,
      "path" : ".travis.yml",
      "position" : null,
      "pull_request_review_id" : 61344111,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
      "updated_at" : "2017-09-07T20:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648364",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d\r\n\r\nIt's definitely working:\r\n\r\n```\r\nERROR: estimaterawfee argument 0 is named nblocks in vRPCConvertParams but ['conf_target'] in dispatch table\r\nWARNING: conversion mismatch for argument named conf_target ([('estimaterawfee', False), ('sendmany', True), ('sendtoaddress', True)])\r\n```",
      "created_at" : "2017-09-07T23:33:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327956460",
      "id" : 327956460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T23:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327956460",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Thanks for testing. Yep, we should merge #11267 first to not break the tests.",
      "created_at" : "2017-09-07T23:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327956878",
      "id" : 327956878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-07T23:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327956878",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
      "created_at" : "2017-09-13T17:41:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-329243177",
      "id" : 329243177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
      "updated_at" : "2017-09-13T17:41:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329243177",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]

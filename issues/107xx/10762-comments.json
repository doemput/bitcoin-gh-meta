[
   {
      "body" : "Will take a look.",
      "created_at" : "2017-07-07T10:42:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-313648838",
      "id" : 313648838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-07-07T10:42:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313648838",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Thanks @promag - this is very rough-and-ready at the moment. It builds and passes tests, but is not ready for code review. I'd be very happy to get feedback about general concept though.",
      "created_at" : "2017-07-07T10:44:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-313649165",
      "id" : 313649165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-07-07T10:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313649165",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "I see that @theuni has opened #10756 to replace CNodeSignals with an interface class. Would that be a better approach here?",
      "created_at" : "2017-07-07T10:45:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-313649403",
      "id" : 313649403,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-07-07T10:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313649403",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "> I see that @theuni has opened #10756 to replace CNodeSignals with an interface class. Would that be a better approach here?\r\n\r\nYeah I was just about to make this suggestion. You could delete the `WalletInitSignals` struct and replace the `WalletInitSignals` global variable with a `std::unique_ptr<WalletInitInterface>` global. This would get rid of all the boost signals code and make the control flow simpler.\r\n\r\nAlso you should prefix global variables with `g_`. And I think this PR would be less error prone and simpler to review if you just left the init code in wallet.cpp for now and moved the relevant functions to walletinit.cpp in followup MOVEONLY PR.\r\n\r\n",
      "created_at" : "2017-07-07T11:33:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-313657725",
      "id" : 313657725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-07-07T11:33:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313657725",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "> I think this PR would be less error prone and simpler to review if you just left the init code in wallet.cpp for now and moved the relevant functions to walletinit.cpp in followup MOVEONLY PR.\r\n\r\nThanks @ryanofsky, you've convinced me - I'll split this PR into two. But I think I'll do it the other way round - first move the wallet initialization/destruction functions into their own `walletinit` translation unit, and then introduce the interface class in a second PR. The reason is that #10740 is built on walletinit.cpp so this PR and #10740 will no longer be interdependent.",
      "created_at" : "2017-07-07T13:28:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-313680684",
      "id" : 313680684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-07-07T13:28:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313680684",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master. I haven't swapped out the boost signals for an interface class yet. Still looking for high-level feedback on this approach.\r\n\r\nThe first three commits in this PR are shared with #10740 ",
      "created_at" : "2017-09-29T15:20:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-333156081",
      "id" : 333156081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-09-29T15:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333156081",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on the general direction, though unsure about the implementation (haven't checked the code in detail).\r\n\r\nI was following a similar approach in #6008 (relatively old closed PR) (check commit: https://github.com/bitcoin/bitcoin/pull/6008/commits/fa6a5b28fcaa612c6512c6028184df6b346fdad4).\r\n\r\nMaybe, init/the-core only knows about modules. Some signal/hooks would allow initialising, shutdown of such modules. The wallet could be one, the miner another one, etc.\r\nIt would also allow to run with multiple wallet implementations (my idea was once to replace BDB with an append only file-format and removing all legacy code,... put this in a second wallet implementation and label it experimental).\r\n\r\nIf possible, I would prefer a more generic approach (a module interface rather then a wallet interface).",
      "created_at" : "2017-09-30T04:30:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-333282567",
      "id" : 333282567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-09-30T04:30:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333282567",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, generally. Agree that I'd really prefer no boost::signals (especially in the header!).",
      "created_at" : "2017-10-02T20:26:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10762#issuecomment-333654522",
      "id" : 333654522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
      "updated_at" : "2017-10-02T20:26:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333654522",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]

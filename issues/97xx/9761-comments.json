[
   {
      "body" : "So one consequence of this is that if you use the manual pruning you will potentially prune past the time your imports will attempt to search, and then fail.",
      "created_at" : "2017-02-15T00:37:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-279882289",
      "id" : 279882289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-15T00:37:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279882289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Concept ACK.\r\n\r\n> So one consequence of this is that if you use the manual pruning you will potentially prune past the time your imports will attempt to search, and then fail.\r\n\r\nYes. Though I'm not sure that warrants any changes. After all it's the same for importwallet already.\r\n\r\nAt the least this grace period needs to be clearly documented in the RPC help so that it can be taken into account.\r\n",
      "created_at" : "2017-02-15T06:48:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-279930956",
      "id" : 279930956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-15T06:48:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279930956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101271246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101271246"
         }
      },
      "body" : "I think this works fine, but does it seem slightly safer to not allow it to go negative?",
      "commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "created_at" : "2017-02-15T13:01:55Z",
      "diff_hunk" : "@@ -1072,7 +1072,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n \n     if (fRescan && fRunScan && requests.size() && nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()) {\n-        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp) : chainActive.Genesis();\n+        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp - 7200) : chainActive.Genesis();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101271246",
      "id" : 101271246,
      "original_commit_id" : "34cafb120469c68f25e9e67ce105c98fcd87fac3",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 21993118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761",
      "updated_at" : "2017-02-16T15:21:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101271246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : ">> So one consequence of this is that if you use the manual pruning you will potentially prune past the time your imports will attempt to search, and then fail.\r\n\r\n> Yes. Though I'm not sure that warrants any changes. After all it's the same for importwallet already.\r\n\r\nI would want to address this by only adding the grace period when `fPruneMode` is false. The way I see it, if you're using the rescan feature on a pruned node, you already have to be pretty careful, and while there are real improvements we can make for pruned nodes (like marking keys that could have incomplete transaction lists, or looking for spendable outputs in the utxo set in #9137), adding a grace period for importmulti rescans on pruned nodes is only a slightly useful thing to begin with, so it would be simplest for the code and for users to just keep the current behavior in this case.\r\n\r\n> At the least this grace period needs to be clearly documented in the RPC help so that it can be taken into account.\r\n\r\nWill add a short note.\r\n\r\nThis change was discussed some on IRC:\r\nhttps://botbot.me/freenode/bitcoin-core-dev/msg/80989053/\r\nhttps://botbot.me/freenode/bitcoin-core-dev/msg/81013278/\r\n",
      "created_at" : "2017-02-15T14:24:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280023800",
      "id" : 280023800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-15T14:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280023800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Created #9773 to deal with the issue of pruned nodes. morcos argued against removing the grace period when fPruneMode was false because not having a grace period could potentially lead to missing transaction data, and gmaxwell argued against disabling importmulti rescans on pruned nodes because partial rescanning is an important feature for pruned nodes, so #9773 deals with the issue by returning errors from importmulti when rescans fail because blocks are missing or corrupt.\r\n\r\nStill need to add some documentation about the grace period, and add a min call to avoid passing negative values to FindEarliestAtLeast, but the bulk of the code in this PR (i.e. import-rescan.py) is ready for review.",
      "created_at" : "2017-02-15T22:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280161992",
      "id" : 280161992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-15T22:32:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280161992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Making the grace period depend on whether the node is pruning or not sounds like a terrible idea to me. It ties together two different options in a completely unexpected way, that's just asking for people to make mistakes.",
      "created_at" : "2017-02-16T08:12:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280262010",
      "id" : 280262010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-16T08:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280262010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The whole reason manual pruning takes a timestamp is so harmonize it with this, so you can not prune what you need to import. I think this could be addressed by also adding an identical grace to the manual pruning time.",
      "created_at" : "2017-02-16T12:23:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280316826",
      "id" : 280316826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-16T12:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280316826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101532994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101532994"
         }
      },
      "body" : "Added max call.",
      "commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "created_at" : "2017-02-16T14:41:50Z",
      "diff_hunk" : "@@ -1072,7 +1072,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n \n     if (fRescan && fRunScan && requests.size() && nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()) {\n-        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp) : chainActive.Genesis();\n+        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp - 7200) : chainActive.Genesis();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101532994",
      "id" : 101532994,
      "original_commit_id" : "34cafb120469c68f25e9e67ce105c98fcd87fac3",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 22263859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761",
      "updated_at" : "2017-02-16T15:25:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101532994",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "utACK \t\te662af3\r\n\r\nPlease tag 0.14\r\nonly reviewed code changes did not review test changes\r\n\r\n",
      "created_at" : "2017-02-16T15:41:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280366215",
      "id" : 280366215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-16T15:41:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280366215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101570442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101570442"
         }
      },
      "body" : "nit: I think this should be ```std::max<int64_t>(nLowestTimestamp - 7200, minimumTimestamp)```\r\n\r\nI only mention because I'm unsure if 0 has a special meaning somewhere.",
      "commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "created_at" : "2017-02-16T16:55:01Z",
      "diff_hunk" : "@@ -1072,7 +1073,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n \n     if (fRescan && fRunScan && requests.size() && nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()) {\n-        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp) : chainActive.Genesis();\n+        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - 7200, 0)) : chainActive.Genesis();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101570442",
      "id" : 101570442,
      "original_commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "original_position" : 15,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 15,
      "pull_request_review_id" : 22303567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761",
      "updated_at" : "2017-02-16T16:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101570442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101584982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101584982"
         }
      },
      "body" : "0 has special meaning for the CWallet::nTimeFirstKey variable, but I recently removed all outside references to that variable and made it private so that no other code that wasn't dealing with it directly would have to worry about special meanings of 0.\r\n\r\nminimumTimestamp would work fine if it were set to 0 instead of 1, and I have some local changes to remove this variable, so I didn't want to add another use here.",
      "commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "created_at" : "2017-02-16T17:57:33Z",
      "diff_hunk" : "@@ -1072,7 +1073,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n \n     if (fRescan && fRunScan && requests.size() && nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()) {\n-        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp) : chainActive.Genesis();\n+        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - 7200, 0)) : chainActive.Genesis();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101584982",
      "id" : 101584982,
      "original_commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "original_position" : 15,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 15,
      "pull_request_review_id" : 22319062,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761",
      "updated_at" : "2017-02-16T17:57:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101584982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101591239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101591239"
         }
      },
      "body" : "Sounds good.",
      "commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "created_at" : "2017-02-16T18:25:14Z",
      "diff_hunk" : "@@ -1072,7 +1073,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n \n     if (fRescan && fRunScan && requests.size() && nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()) {\n-        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(nLowestTimestamp) : chainActive.Genesis();\n+        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - 7200, 0)) : chainActive.Genesis();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101591239",
      "id" : 101591239,
      "original_commit_id" : "e662af358305b9fa4da772ec37c8356a9fc92ab6",
      "original_position" : 15,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 15,
      "pull_request_review_id" : 22325435,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9761",
      "updated_at" : "2017-02-16T18:25:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101591239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Concept ACK, although as commented in #9778, if these grace periods need to be consistent, I think we should have a constant (also used for normal rescan?).\r\n",
      "created_at" : "2017-02-16T21:05:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280460298",
      "id" : 280460298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-16T21:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280460298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "> Concept ACK, although as commented in #9778, if these grace periods need to be consistent, I think we should have a constant (also used for normal rescan?).\r\n\r\nYes, would make sense to define a constant. No, that does not need to hold up merging this.\r\n",
      "created_at" : "2017-02-17T11:52:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280630280",
      "id" : 280630280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9761",
      "updated_at" : "2017-02-17T11:52:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280630280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

{
   "assignee" : null,
   "assignees" : [],
   "body" : "The signature cache is set up here:\r\n\r\n```\r\n// To be called once in AppInit2/TestingSetup to initialize the signatureCache\r\nvoid InitSignatureCache()\r\n{\r\n    size_t nMaxCacheSize = GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\r\n    if (nMaxCacheSize <= 0) return;\r\n    size_t nElems = signatureCache.setup_bytes(nMaxCacheSize);\r\n    LogPrintf(\"Using %zu MiB out of %zu requested for signature cache, able to store %zu elements\\n\",\r\n            (nElems*sizeof(uint256)) >>20, nMaxCacheSize>>20, nElems);\r\n}\r\n```\r\n\r\nif `-maxsigcachesize` is set to zero, then we just return from the function back into AppInit2. Note that we don't call `signatureCache.setup_bytes()`.\r\n\r\nWe later try to use the sigcache and segfault.\r\n\r\nHere's a comment from the CuckcooCache::cache class:\r\n\r\n```\r\n    /** You must always construct a cache with some elements via a subsequent\r\n     * call to setup or setup_bytes, otherwise operations may segfault.\r\n     */\r\n```\r\n\r\nand indeed we do:\r\n\r\n```\r\n(gdb) bt\r\n#0  __memcmp_sse4_1 () at ../sysdeps/x86_64/multiarch/memcmp-sse4.S:1525\r\n#1  0x000056317c16411b in base_blob<256u>::Compare (other=..., this=0x0) at ./uint256.h:45\r\n#2  operator== (b=..., a=...) at ./uint256.h:47\r\n#3  CuckooCache::cache<uint256, (anonymous namespace)::SignatureCacheHasher>::contains (this=0x56317c767100 <(anonymous namespace)::signatureCache+32>, erase=254, e=...) at ./cuckoocache.h:447\r\n#4  (anonymous namespace)::CSignatureCache::Get (this=0x56317c7670e0 <(anonymous namespace)::signatureCache>, erase=254, entry=...) at script/sigcache.cpp:70\r\n#5  CachingTransactionSignatureChecker::VerifySignature (this=0x7f1d077fae00, vchSig=std::vector of length 71, capacity 72 = {...}, pubkey=..., sighash=...) at script/sigcache.cpp:107\r\n#6  0x000056317c34e4a2 in TransactionSignatureChecker::CheckSig (this=0x7f1d077fae00, vchSigIn=std::vector of length 72, capacity 72 = {...}, vchPubKey=..., scriptCode=..., sigversion=SIGVERSION_BASE) at script/interpreter.cpp:1268\r\n#7  0x000056317c347143 in EvalScript (stack=std::vector of length 2, capacity 2 = {...}, script=..., flags=flags@entry=65503, checker=..., sigversion=sigversion@entry=SIGVERSION_BASE, serror=serror@entry=0x7f1d077faf3c) at script/interpreter.cpp:902\r\n#8  0x000056317c34f2cb in VerifyScript (scriptSig=..., scriptPubKey=..., witness=0x7f1cd4000ff8, flags=65503, checker=..., serror=serror@entry=0x7f1d077faf3c) at script/interpreter.cpp:1429\r\n#9  0x000056317c1a1653 in CScriptCheck::operator() (this=this@entry=0x7f1d077faf00) at validation.cpp:1359\r\n#10 0x000056317c1a6073 in CheckInputs (tx=..., state=..., inputs=..., fScriptChecks=fScriptChecks@entry=true, flags=flags@entry=65503, cacheStore=cacheStore@entry=true, txdata=..., pvChecks=0x0) at validation.cpp:1448\r\n#11 0x000056317c1b8186 in AcceptToMemoryPoolWorker (pool=..., state=..., ptx=std::shared_ptr (count 3, weak 0) 0x7f1cd4000bf0, fLimitFree=fLimitFree@entry=true, pfMissingInputs=pfMissingInputs@entry=0x0, nAcceptTime=<optimized out>, plTxnReplaced=0x0,\r\n    fOverrideMempoolLimit=false, nAbsurdFee=@0x7f1d077fc508: 10000000, vHashTxnToUncache=std::vector of length 0, capacity 0) at validation.cpp:953\r\n#12 0x000056317c1b9a1b in AcceptToMemoryPoolWithTime (pool=..., state=..., tx=std::shared_ptr (count 3, weak 0) 0x7f1cd4000bf0, fLimitFree=fLimitFree@entry=true, pfMissingInputs=pfMissingInputs@entry=0x0, nAcceptTime=<optimized out>, plTxnReplaced=0x0,\r\n    fOverrideMempoolLimit=false, nAbsurdFee=10000000) at validation.cpp:1021\r\n#13 0x000056317c1b9b89 in AcceptToMemoryPool (pool=..., state=..., tx=std::shared_ptr (count 3, weak 0) 0x7f1cd4000bf0, fLimitFree=fLimitFree@entry=true, pfMissingInputs=pfMissingInputs@entry=0x0, plTxnReplaced=plTxnReplaced@entry=0x0, fOverrideMempoolLimit=false,\r\n    nAbsurdFee=10000000) at validation.cpp:1036\r\n#14 0x000056317c2ef51a in CMerkleTx::AcceptToMemoryPool (state=..., nAbsurdFee=<optimized out>, this=0x7f1d077fd0a0) at wallet/wallet.cpp:3950\r\n#15 CWallet::CommitTransaction (this=0x56317cc8b740, wtxNew=..., reservekey=..., connman=0x56317caee7e0, state=...) at wallet/wallet.cpp:2751\r\n#16 0x000056317c2a706e in SendMoney (address=..., nValue=nValue@entry=100000000, fSubtractFeeFromAmount=fSubtractFeeFromAmount@entry=false, wtxNew=...) at wallet/rpcwallet.cpp:372\r\n#17 0x000056317c2b2871 in sendtoaddress (request=...) at wallet/rpcwallet.cpp:431\r\n#18 0x000056317c15a33b in CRPCTable::execute (this=<optimized out>, request=...) at rpc/server.cpp:492\r\n#19 0x000056317c2184b7 in HTTPReq_JSONRPC (req=0x7f1ce4001620) at httprpc.cpp:193\r\n#20 0x000056317c21c002 in std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (\r\n    __args#1=\"\", __args#0=0x7f1ce4001620, this=0x7f1ce40016b0) at /usr/include/c++/5/functional:2267\r\n#21 HTTPWorkItem::operator() (this=0x7f1ce4001680) at httpserver.cpp:51\r\n#22 WorkQueue<HTTPClosure>::Run (this=0x56317ca410d0) at httpserver.cpp:132\r\n#23 HTTPWorkQueueRun (queue=0x56317ca410d0) at httpserver.cpp:361\r\n#24 0x00007f1d0eabdc80 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#25 0x00007f1d0e2d06ba in start_thread (arg=0x7f1d077fe700) at pthread_create.c:333\r\n#26 0x00007f1d0e00682d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n```\r\n\r\nTrivially reproducible for me.\r\n\r\nI believe the fix is to add a minimum signature cache size constant `MIN_SIG_CACHE_SIZE` and change this:\r\n\r\n```\r\n    if (nMaxCacheSize <= 0) return;\r\n```\r\n\r\nto this:\r\n\r\n```\r\n    if (nMaxCacheSize <= MIN_SIG_CACHE_SIZE) {\r\n        nMaxCacheSize = MIN_SIG_CACHE_SIZE\r\n        LogPrintf(\"maxsigcachesize must be at least %d. Setting maxsigcachesize to %d\", MIN_SIG_CACHE_SIZE, MIN_SIG_CACHE_SIZE);\r\n        InitWarning(strprintf(_(maxsigcachesize must be at least %d. Setting maxsigcachesize to %d\", MIN_SIG_CACHE_SIZE, MIN_SIG_CACHE_SIZE));\r\n}\r\n```\r\n\r\nin `InitSignatureCache()`",
   "closed_at" : "2017-02-16T11:16:46Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 9,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9759/comments",
   "created_at" : "2017-02-14T15:29:38Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9759/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/9759",
   "id" : 207547888,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "id" : 64585,
         "name" : "Bug",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9759/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 125,
      "created_at" : "2016-06-13T14:18:51Z",
      "creator" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/21",
      "id" : 1823680,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/21/labels",
      "number" : 21,
      "open_issues" : 3,
      "state" : "open",
      "title" : "0.14.0",
      "updated_at" : "2017-02-16T12:07:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/21"
   },
   "number" : 9759,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Setting -maxsigcachesize to zero causes segfault",
   "updated_at" : "2017-02-16T11:16:46Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9759",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
      "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jnewbery/followers",
      "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jnewbery",
      "id" : 1063656,
      "login" : "jnewbery",
      "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
      "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
      "repos_url" : "https://api.github.com/users/jnewbery/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jnewbery"
   }
}

[
   {
      "body" : "If you're working on custom logging stuff anyway: what would be really nice is something that would queue up debug messages, then print them only if the test fails. This lowers the amount of spam in the Travis log in the good case, and gives full troubleshooting information in the bad case (when you need it).\r\n",
      "created_at" : "2017-02-16T08:42:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-280268516",
      "id" : 280268516,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-16T09:05:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280268516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@laanwj done: https://github.com/bitcoin/bitcoin/pull/9780",
      "created_at" : "2017-02-16T20:15:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-280446044",
      "id" : 280446044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-16T20:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280446044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101633768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101633768"
         }
      },
      "body" : "Would upgrade this to a warning, since this is leaving files behind. Also this is a really useful print to see on the console when a test fails.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T21:42:11Z",
      "diff_hunk" : "@@ -140,38 +139,35 @@ def main(self):\n         success = False\n         try:\n             os.makedirs(self.options.tmpdir, exist_ok=False)\n+            self.start_logging()\n             self.setup_chain()\n             self.setup_network()\n             self.run_test()\n             success = True\n         except JSONRPCException as e:\n-            print(\"JSONRPC error: \"+e.error['message'])\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"JSONRPC error: \"+e.error['message'])\n         except AssertionError as e:\n-            print(\"Assertion failed: \" + str(e))\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"Assertion failed: \" + str(e))\n         except KeyError as e:\n-            print(\"key not found: \"+ str(e))\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"key not found: \"+ str(e))\n         except Exception as e:\n-            print(\"Unexpected exception caught during testing: \" + repr(e))\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"Unexpected exception caught during testing: \" + repr(e))\n         except KeyboardInterrupt as e:\n-            print(\"Exiting after \" + repr(e))\n+            self.log.warning(\"Exiting after \" + repr(e))\n \n         if not self.options.noshutdown:\n-            print(\"Stopping nodes\")\n+            self.log.info(\"Stopping nodes\")\n             stop_nodes(self.nodes)\n         else:\n-            print(\"Note: bitcoinds were not stopped and may still be running\")\n+            self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown and success:\n-            print(\"Cleaning up\")\n+            self.log.info(\"Cleaning up\")\n             shutil.rmtree(self.options.tmpdir)\n             if not os.listdir(self.options.root):\n                 os.rmdir(self.options.root)\n         else:\n-            print(\"Not cleaning up dir %s\" % self.options.tmpdir)\n+            self.log.info(\"Not cleaning up dir %s\" % self.options.tmpdir)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101633768",
      "id" : 101633768,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 73,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101633768",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101635232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101635232"
         }
      },
      "body" : "You should say something about test_framework.log and console logging in the tests' --help output.\r\n\r\nWhat you wrote in the commit message is good, but obviously no one is going to see if it is just in this commit message.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T21:48:47Z",
      "diff_hunk" : "@@ -113,6 +113,8 @@ def main(self):\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n+        parser.add_option(\"--loglevel\", dest=\"loglevel\", default=\"ERROR\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101635232",
      "id" : 101635232,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 13,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101635232",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101635498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101635498"
         }
      },
      "body" : "Should stop trying to print e here and below because log.exception already formats and prints the exception and stack trace: https://docs.python.org/3/library/logging.html#logging.Logger.exception. It's not helpful to see same information printed multiple times and in inconsistent ways.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T21:50:05Z",
      "diff_hunk" : "@@ -140,38 +139,35 @@ def main(self):\n         success = False\n         try:\n             os.makedirs(self.options.tmpdir, exist_ok=False)\n+            self.start_logging()\n             self.setup_chain()\n             self.setup_network()\n             self.run_test()\n             success = True\n         except JSONRPCException as e:\n-            print(\"JSONRPC error: \"+e.error['message'])\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"JSONRPC error: \"+e.error['message'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101635498",
      "id" : 101635498,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 40,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101635498",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101636133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101636133"
         }
      },
      "body" : "Can you list what the log levels are? At least should probably mention that passing --loglevel=0 will show complete log output.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T21:53:07Z",
      "diff_hunk" : "@@ -113,6 +113,8 @@ def main(self):\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n+        parser.add_option(\"--loglevel\", dest=\"loglevel\", default=\"ERROR\",\n+                          help=\"log events at this level and higher to the console\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101636133",
      "id" : 101636133,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 14,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101636133",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101638985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101638985"
         }
      },
      "body" : "I think you're better off dropping this call. The default debug level seems to be 0, and the value of DEBUG is 10 so this potentially throws away logs.\r\n\r\nAlso would drop the 3 other setLevel(logging.DEBUG) calls below.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T22:07:13Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101638985",
      "id" : 101638985,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 92,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101638985",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101639295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101639295"
         }
      },
      "body" : "Calling getattr doesn't seem to be necessary, the documentation says setLevel already accepts a string: \r\nhttps://docs.python.org/3/library/logging.html#logging.Handler.setLevel. Maybe upper() is still useful though.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T22:08:37Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler()\n+        console_log_level = getattr(logging, self.options.loglevel.upper(), None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101639295",
      "id" : 101639295,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 98,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101639295",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101639658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101639658"
         }
      },
      "body" : "Junk lines?",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-02-16T22:10:40Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler()\n+        console_log_level = getattr(logging, self.options.loglevel.upper(), None)\n+        if not isinstance(console_log_level, int):\n+            raise ValueError('Invalid log level: %s' % loglevel)\n+        ch.setLevel(console_log_level)\n+        # Format logs the same as bitcoind's debug.log (so log files can be concatenated and sorted)\n+        formatter = logging.Formatter(fmt = '%(asctime)s %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n+        fh.setFormatter(formatter)\n+        ch.setFormatter(formatter)\n+        # add the handlers to the logger\n+        self.log.addHandler(fh)\n+        self.log.addHandler(ch)\n+\n+        if self.options.trace_rpc:\n+            rpc_logger = logging.getLogger(\"BitcoinRPC\")\n+            rpc_logger.setLevel(logging.DEBUG)\n+            rpc_handler = logging.StreamHandler()\n+            rpc_handler.setLevel(logging.DEBUG)\n+            rpc_logger.addHandler(rpc_handler)\n+            rpc_logger.debug(\"debug\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r101639658",
      "id" : 101639658,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 116,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 22369562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101639658",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "utACK 3e7ed8c21c3f52a312a538746aebbbb06f67e3a1",
      "created_at" : "2017-02-17T11:12:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-280623090",
      "id" : 280623090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-17T11:38:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280623090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "@ryanofsky thanks for the great feedback. I'm going to hold back on making any changes until I get some more concept ACKs/NACKs. I want to make sure people are happy going in this direction before I spend any time addressing review comments.",
      "created_at" : "2017-02-17T21:45:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-280775055",
      "id" : 280775055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-17T21:45:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280775055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@MarcoFalke @laanwj @jonasschnelli @sdaftuar you're the most active contributors to the qa directory. Can you have a quick look and give me a concept ACK/NACK so I know whether to continue in this direction.\r\n\r\nNo rush. Obviously you're all busy with the 0.14 release.",
      "created_at" : "2017-02-22T01:27:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-281538485",
      "id" : 281538485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-22T01:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/281538485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Concept ACK.  \r\n\r\nI haven't reviewed this PR in detail yet, but what I'd find useful is if the default behavior when running a single test locally was to print all log messages to the console, and only suppress log messages when running the tests through the `rpc-tests.py` script.",
      "created_at" : "2017-02-27T18:16:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-282803195",
      "id" : 282803195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-27T18:16:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282803195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar the eventual aim will be to add a lot more low-level logging (eg logging when every p2p message is sent or received on the mininode connection). Those low-level logs will always be saved to test_framework.log, but by default are not printed to the console. If the user want low-level logs printed to console, they can specify --loglevel when running the script.",
      "created_at" : "2017-02-28T16:29:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-283089586",
      "id" : 283089586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-02-28T16:29:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283089586",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489334"
         }
      },
      "body" : "Thanks. Updated.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:43:36Z",
      "diff_hunk" : "@@ -113,6 +113,8 @@ def main(self):\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n+        parser.add_option(\"--loglevel\", dest=\"loglevel\", default=\"ERROR\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489334",
      "id" : 104489334,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 13,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25329437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489334",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489393"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489393"
         }
      },
      "body" : "Updated",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:43:45Z",
      "diff_hunk" : "@@ -113,6 +113,8 @@ def main(self):\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n+        parser.add_option(\"--loglevel\", dest=\"loglevel\", default=\"ERROR\",\n+                          help=\"log events at this level and higher to the console\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489393",
      "id" : 104489393,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 14,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25329482,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489393",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489442"
         }
      },
      "body" : "Yep, good catch.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:43:57Z",
      "diff_hunk" : "@@ -140,38 +139,35 @@ def main(self):\n         success = False\n         try:\n             os.makedirs(self.options.tmpdir, exist_ok=False)\n+            self.start_logging()\n             self.setup_chain()\n             self.setup_network()\n             self.run_test()\n             success = True\n         except JSONRPCException as e:\n-            print(\"JSONRPC error: \"+e.error['message'])\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"JSONRPC error: \"+e.error['message'])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489442",
      "id" : 104489442,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 40,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25329533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489442",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489635"
         }
      },
      "body" : "good point. Fixed.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:44:46Z",
      "diff_hunk" : "@@ -140,38 +139,35 @@ def main(self):\n         success = False\n         try:\n             os.makedirs(self.options.tmpdir, exist_ok=False)\n+            self.start_logging()\n             self.setup_chain()\n             self.setup_network()\n             self.run_test()\n             success = True\n         except JSONRPCException as e:\n-            print(\"JSONRPC error: \"+e.error['message'])\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"JSONRPC error: \"+e.error['message'])\n         except AssertionError as e:\n-            print(\"Assertion failed: \" + str(e))\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"Assertion failed: \" + str(e))\n         except KeyError as e:\n-            print(\"key not found: \"+ str(e))\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"key not found: \"+ str(e))\n         except Exception as e:\n-            print(\"Unexpected exception caught during testing: \" + repr(e))\n-            traceback.print_tb(sys.exc_info()[2])\n+            self.log.exception(\"Unexpected exception caught during testing: \" + repr(e))\n         except KeyboardInterrupt as e:\n-            print(\"Exiting after \" + repr(e))\n+            self.log.warning(\"Exiting after \" + repr(e))\n \n         if not self.options.noshutdown:\n-            print(\"Stopping nodes\")\n+            self.log.info(\"Stopping nodes\")\n             stop_nodes(self.nodes)\n         else:\n-            print(\"Note: bitcoinds were not stopped and may still be running\")\n+            self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown and success:\n-            print(\"Cleaning up\")\n+            self.log.info(\"Cleaning up\")\n             shutil.rmtree(self.options.tmpdir)\n             if not os.listdir(self.options.root):\n                 os.rmdir(self.options.root)\n         else:\n-            print(\"Not cleaning up dir %s\" % self.options.tmpdir)\n+            self.log.info(\"Not cleaning up dir %s\" % self.options.tmpdir)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104489635",
      "id" : 104489635,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 73,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25329734,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104489635",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104490017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104490017"
         }
      },
      "body" : "I think DEBUG is good here. We shouldn't encourage people to log messages at custom levels (ie not one of debug, info, warning, error and critical), and we especially shouldn't encourage people to log at a level lower than DEBUG.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:46:31Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104490017",
      "id" : 104490017,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 92,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25330120,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104490017",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104490992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104490992"
         }
      },
      "body" : "Agree. I was following the Python 'logging how to' guide here: https://docs.python.org/3/howto/logging.html#logging-to-a-file which uses getattr(). I guess that was written before 3.2, which is when setlevel() was updated to take a string argument.\r\n\r\nI've tested the logging module and:\r\n- we do need to use upper() to set the log levels to uppercase\r\n- calling with an invalid string causes logging to raise a helpful exception (I was worried that it might fail silently).\r\n\r\nSo calling setlevel directly with self.options.loglevel.upper() is better.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:50:16Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler()\n+        console_log_level = getattr(logging, self.options.loglevel.upper(), None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104490992",
      "id" : 104490992,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 98,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25331087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104490992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104491081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104491081"
         }
      },
      "body" : "yes. Junk lines from when I was testing this. Thanks. Removed.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T18:50:38Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler()\n+        console_log_level = getattr(logging, self.options.loglevel.upper(), None)\n+        if not isinstance(console_log_level, int):\n+            raise ValueError('Invalid log level: %s' % loglevel)\n+        ch.setLevel(console_log_level)\n+        # Format logs the same as bitcoind's debug.log (so log files can be concatenated and sorted)\n+        formatter = logging.Formatter(fmt = '%(asctime)s %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n+        fh.setFormatter(formatter)\n+        ch.setFormatter(formatter)\n+        # add the handlers to the logger\n+        self.log.addHandler(fh)\n+        self.log.addHandler(ch)\n+\n+        if self.options.trace_rpc:\n+            rpc_logger = logging.getLogger(\"BitcoinRPC\")\n+            rpc_logger.setLevel(logging.DEBUG)\n+            rpc_handler = logging.StreamHandler()\n+            rpc_handler.setLevel(logging.DEBUG)\n+            rpc_logger.addHandler(rpc_handler)\n+            rpc_logger.debug(\"debug\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104491081",
      "id" : 104491081,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 116,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25331182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104491081",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "I've addressed @ryanofsky's review comments and repushed. A few updates since I opened this PR:\r\n\r\n- microsecond debug logging is now set by default on all test nodes. I've removed all places in the test code where debugging is set manually, since there's no reason not to use debug logging in these test cases.\r\n- I've added logging to the test_framework submodules\r\n- I've replaced print functions in the individual test-cases with logging calls\r\n\r\nI've been running with this patch set locally for some time, together with a tool to interleave test_framwork logs with individual node logs. It makes troubleshooting testcases a lot easier since I have a global view of everything that's happening in the test case (ie I can see messages being sent in by the test framework and then received by the node).\r\n\r\nI believe this is ready for merge, but any further review comments are welcomed.",
      "created_at" : "2017-03-06T19:13:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-284500285",
      "id" : 284500285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-06T19:13:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284500285",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104498952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104498952"
         }
      },
      "body" : "Should move the os.makedirs, and self.start_logging calls above the `try:` block, so error information won't be lost if these calls fail for some reason.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T19:23:11Z",
      "diff_hunk" : "@@ -139,38 +138,35 @@ def main(self):\n         success = False\n         try:\n             os.makedirs(self.options.tmpdir, exist_ok=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104498952",
      "id" : 104498952,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 31,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104498952",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104499283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104499283"
         }
      },
      "body" : "This should be changed to error instead of warning, to avoid potential for silent errors slipping through (even though in most cases, an error probably did print previously).\r\n\r\nAlso, I think it would be good for this message to mention the temp directory path (or alternately the path to `test_framework.log`), since it is no longer printed by default and is a piece of information you probably need to understand what happened.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T19:24:32Z",
      "diff_hunk" : "@@ -182,12 +178,36 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104499283",
      "id" : 104499283,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 86,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104499283",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104504636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104504636"
         }
      },
      "body" : "Maybe I missed some discussion, but why is the default level `error` instead of `debug` or `warning`? I can understand disabling debug output by default when running pull-tester. But I run individual tests from the command line every day, and I can't remember a time when I've ever wanted to do this without seeing output.\r\n\r\nIf we have make `error` the default, can we at least support abbreviating \"--loglevel=\" as \"-l\", and allow passing integer log levels? This way it'd be possible to see debug output with `-l0` instead of `--loglevel=debug`\r\n\r\nAlso would note that even the default level for the root python logger is `warning`, not `error`.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T19:46:29Z",
      "diff_hunk" : "@@ -112,6 +112,8 @@ def main(self):\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n+        parser.add_option(\"--loglevel\", dest=\"loglevel\", default=\"ERROR\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104504636",
      "id" : 104504636,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 13,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104504636",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104512886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104512886"
         }
      },
      "body" : "Would be nice to support integer debug levels for less verbose command line usage. Maybe `setLevel(int(self.options.loglevel) if self.options.loglevel.isdigit() else self.options.loglevel.upper())`.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T20:21:53Z",
      "diff_hunk" : "@@ -182,12 +178,36 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler()\n+        ch.setLevel(self.options.loglevel.upper())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104512886",
      "id" : 104512886,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 98,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104512886",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104515399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104515399"
         }
      },
      "body" : "Why drop mention of previous versions? Also, it seems like without this qualification, maybe the word \"always\" should be dropped too.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T20:33:46Z",
      "diff_hunk" : "@@ -34,26 +34,26 @@ def run_test(self):\n         # Generate some coins\n         self.nodes[0].generate(110)\n \n-        print(\"Running test disable flag\")\n+        self.log.info(\"Running test disable flag\")\n         self.test_disable_flag()\n \n-        print(\"Running test sequence-lock-confirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-confirmed-inputs\")\n         self.test_sequence_lock_confirmed_inputs()\n \n-        print(\"Running test sequence-lock-unconfirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-unconfirmed-inputs\")\n         self.test_sequence_lock_unconfirmed_inputs()\n \n-        print(\"Running test BIP68 not consensus before versionbits activation\")\n+        self.log.info(\"Running test BIP68 not consensus before versionbits activation\")\n         self.test_bip68_not_consensus()\n \n-        print(\"Activating BIP68 (and 112/113)\")\n+        self.log.info(\"Activating BIP68 (and 112/113)\")\n         self.activateCSV()\n \n-        print(\"Verifying nVersion=2 transactions are standard.\")\n-        print(\"Note that with current versions of bitcoin software, nVersion=2 transactions are always standard (independent of BIP68 activation status).\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104515399",
      "id" : 104515399,
      "original_commit_id" : "3b336aba4ef250868d6f3dc2bf741b0bbf621d39",
      "original_position" : 36,
      "path" : "qa/rpc-tests/bip68-sequence.py",
      "position" : 36,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104515399",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104515702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104515702"
         }
      },
      "body" : "Probably best to remove trailing and prefix \\n here and in other logging lines. (There seem to be 4-5 other occurrances in this PR.)",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T20:35:13Z",
      "diff_hunk" : "@@ -34,26 +34,26 @@ def run_test(self):\n         # Generate some coins\n         self.nodes[0].generate(110)\n \n-        print(\"Running test disable flag\")\n+        self.log.info(\"Running test disable flag\")\n         self.test_disable_flag()\n \n-        print(\"Running test sequence-lock-confirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-confirmed-inputs\")\n         self.test_sequence_lock_confirmed_inputs()\n \n-        print(\"Running test sequence-lock-unconfirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-unconfirmed-inputs\")\n         self.test_sequence_lock_unconfirmed_inputs()\n \n-        print(\"Running test BIP68 not consensus before versionbits activation\")\n+        self.log.info(\"Running test BIP68 not consensus before versionbits activation\")\n         self.test_bip68_not_consensus()\n \n-        print(\"Activating BIP68 (and 112/113)\")\n+        self.log.info(\"Activating BIP68 (and 112/113)\")\n         self.activateCSV()\n \n-        print(\"Verifying nVersion=2 transactions are standard.\")\n-        print(\"Note that with current versions of bitcoin software, nVersion=2 transactions are always standard (independent of BIP68 activation status).\")\n+        self.log.info(\"Verifying nVersion=2 transactions are standard.\")\n+        self.log.info(\"Note that nVersion=2 transactions are always standard (independent of BIP68 activation status).\")\n         self.test_version2_relay()\n \n-        print(\"Passed\\n\")\n+        self.log.info(\"Passed\\n\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104515702",
      "id" : 104515702,
      "original_commit_id" : "3b336aba4ef250868d6f3dc2bf741b0bbf621d39",
      "original_position" : 42,
      "path" : "qa/rpc-tests/bip68-sequence.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104515702",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104516930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104516930"
         }
      },
      "body" : "Should be logging.getLogger. This is causing travis errors.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T20:40:50Z",
      "diff_hunk" : "@@ -21,6 +21,10 @@\n from .blockstore import BlockStore, TxStore\n from .util import p2p_port\n \n+import logging\n+\n+logger=logging(\"TestFramework.comptool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104516930",
      "id" : 104516930,
      "original_commit_id" : "3b336aba4ef250868d6f3dc2bf741b0bbf621d39",
      "original_position" : 6,
      "path" : "qa/rpc-tests/test_framework/comptool.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104516930",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104524818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104524818"
         }
      },
      "body" : "> I think DEBUG is good here. We shouldn't encourage people to log messages at custom levels (ie not one of debug, info, warning, error and critical), and we especially shouldn't encourage people to log at a level lower than DEBUG.\r\n\r\nActually setting DEBUG seems to be needed here in order to be able to see debug messages at all, otherwise python seems to fall back to root logger level which is WARNING.\r\n\r\nStill I would consider dropping the \"fh.setLevel()\" call below. Having that call seems less like \"not encouraging\" people to log messages at custom levels, and more like going out of our way to punish and confuse them.\r\n",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-06T21:17:46Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104524818",
      "id" : 104524818,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 92,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25339257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104524818",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104695430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104695430"
         }
      },
      "body" : "You're right. This should be INFO by default. DEBUG emits way too much to the console to be the default.\r\n\r\npull-tester diverts stdout from the subtests, so there's no output to console at all.\r\n\r\n--loglevel now accepts ints as well as the named strings and can be specified with the short option -l",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:31:20Z",
      "diff_hunk" : "@@ -112,6 +112,8 @@ def main(self):\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n+        parser.add_option(\"--loglevel\", dest=\"loglevel\", default=\"ERROR\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104695430",
      "id" : 104695430,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 13,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25542608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104695430",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104695642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104695642"
         }
      },
      "body" : "Good idea. I needed to put start_logging() below the os.makedirs() call, but you're right that this should be outside the large try/except block. I've now moved them both up.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:32:10Z",
      "diff_hunk" : "@@ -139,38 +138,35 @@ def main(self):\n         success = False\n         try:\n             os.makedirs(self.options.tmpdir, exist_ok=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104695642",
      "id" : 104695642,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 31,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25542847,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104695642",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104695714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104695714"
         }
      },
      "body" : "Agree. Done both.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:32:26Z",
      "diff_hunk" : "@@ -182,12 +178,36 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104695714",
      "id" : 104695714,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 86,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25542912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104695714",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104696542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104696542"
         }
      },
      "body" : "I still don't agree. logging at non-standard levels is harder (you need to call `self.log.log(lvl, message`) rather than `self.log.debug(message)` or similar). Why would anyone want do that, and why would we want to allow people to add confusing logging levels to the test cases?",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:35:16Z",
      "diff_hunk" : "@@ -183,12 +179,41 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104696542",
      "id" : 104696542,
      "original_commit_id" : "a8e2ab2ed74d2f9837b56979b2fe6fa23c8c516e",
      "original_position" : 92,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25543775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104696542",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104696682"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104696682"
         }
      },
      "body" : "Yep. Good idea. Done (although I've split this over two lines for readability).",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:35:45Z",
      "diff_hunk" : "@@ -182,12 +178,36 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.warning(\"Failed\")\n             sys.exit(1)\n \n+    def start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler()\n+        ch.setLevel(self.options.loglevel.upper())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104696682",
      "id" : 104696682,
      "original_commit_id" : "fb74effd8738fc503190c91a87162abd9c2fe9ff",
      "original_position" : 98,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25543908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104696682",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104697825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104697825"
         }
      },
      "body" : "Because I previously thought that it was a bug that Core v0.13 (and a few earlier versions) always relayed v2 transactions - hence the 'with current versions' comment. See #9739 for the discussion. Whether or not it's a bug is moot now, and I think the 'with current verions' comment doesn't clarify.\r\n\r\n'always' here means 'both before and after BIP 68 activation'.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:40:00Z",
      "diff_hunk" : "@@ -34,26 +34,26 @@ def run_test(self):\n         # Generate some coins\n         self.nodes[0].generate(110)\n \n-        print(\"Running test disable flag\")\n+        self.log.info(\"Running test disable flag\")\n         self.test_disable_flag()\n \n-        print(\"Running test sequence-lock-confirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-confirmed-inputs\")\n         self.test_sequence_lock_confirmed_inputs()\n \n-        print(\"Running test sequence-lock-unconfirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-unconfirmed-inputs\")\n         self.test_sequence_lock_unconfirmed_inputs()\n \n-        print(\"Running test BIP68 not consensus before versionbits activation\")\n+        self.log.info(\"Running test BIP68 not consensus before versionbits activation\")\n         self.test_bip68_not_consensus()\n \n-        print(\"Activating BIP68 (and 112/113)\")\n+        self.log.info(\"Activating BIP68 (and 112/113)\")\n         self.activateCSV()\n \n-        print(\"Verifying nVersion=2 transactions are standard.\")\n-        print(\"Note that with current versions of bitcoin software, nVersion=2 transactions are always standard (independent of BIP68 activation status).\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104697825",
      "id" : 104697825,
      "original_commit_id" : "3b336aba4ef250868d6f3dc2bf741b0bbf621d39",
      "original_position" : 36,
      "path" : "qa/rpc-tests/bip68-sequence.py",
      "position" : 36,
      "pull_request_review_id" : 25545139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104697825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104697862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104697862"
         }
      },
      "body" : "Thanks. Done.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:40:07Z",
      "diff_hunk" : "@@ -34,26 +34,26 @@ def run_test(self):\n         # Generate some coins\n         self.nodes[0].generate(110)\n \n-        print(\"Running test disable flag\")\n+        self.log.info(\"Running test disable flag\")\n         self.test_disable_flag()\n \n-        print(\"Running test sequence-lock-confirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-confirmed-inputs\")\n         self.test_sequence_lock_confirmed_inputs()\n \n-        print(\"Running test sequence-lock-unconfirmed-inputs\")\n+        self.log.info(\"Running test sequence-lock-unconfirmed-inputs\")\n         self.test_sequence_lock_unconfirmed_inputs()\n \n-        print(\"Running test BIP68 not consensus before versionbits activation\")\n+        self.log.info(\"Running test BIP68 not consensus before versionbits activation\")\n         self.test_bip68_not_consensus()\n \n-        print(\"Activating BIP68 (and 112/113)\")\n+        self.log.info(\"Activating BIP68 (and 112/113)\")\n         self.activateCSV()\n \n-        print(\"Verifying nVersion=2 transactions are standard.\")\n-        print(\"Note that with current versions of bitcoin software, nVersion=2 transactions are always standard (independent of BIP68 activation status).\")\n+        self.log.info(\"Verifying nVersion=2 transactions are standard.\")\n+        self.log.info(\"Note that nVersion=2 transactions are always standard (independent of BIP68 activation status).\")\n         self.test_version2_relay()\n \n-        print(\"Passed\\n\")\n+        self.log.info(\"Passed\\n\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104697862",
      "id" : 104697862,
      "original_commit_id" : "3b336aba4ef250868d6f3dc2bf741b0bbf621d39",
      "original_position" : 42,
      "path" : "qa/rpc-tests/bip68-sequence.py",
      "position" : null,
      "pull_request_review_id" : 25545182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104697862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104697964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104697964"
         }
      },
      "body" : "Yep. My mistake. Fixed.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-07T15:40:31Z",
      "diff_hunk" : "@@ -21,6 +21,10 @@\n from .blockstore import BlockStore, TxStore\n from .util import p2p_port\n \n+import logging\n+\n+logger=logging(\"TestFramework.comptool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104697964",
      "id" : 104697964,
      "original_commit_id" : "3b336aba4ef250868d6f3dc2bf741b0bbf621d39",
      "original_position" : 6,
      "path" : "qa/rpc-tests/test_framework/comptool.py",
      "position" : null,
      "pull_request_review_id" : 25545293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104697964",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@ryanofsky's comments addressed and repushed: c9755da51a742c0d86572f750e16573e87fdd166 / https://github.com/jnewbery/bitcoin/tree/pr9768.3",
      "created_at" : "2017-03-07T15:44:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-284759228",
      "id" : 284759228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-07T15:44:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284759228",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "rebased: https://github.com/bitcoin/bitcoin/pull/9768/commits/2c9fc0e5f786dd4daa906f20fc322a615bc5b6e2 / https://github.com/jnewbery/bitcoin/tree/pr9768.4",
      "created_at" : "2017-03-07T20:19:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-284846410",
      "id" : 284846410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-07T20:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284846410",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@laanwj @MarcoFalke I think this is a real improvement and helps debugging and fixing test cases when they fail. I've addressed https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-280268516 in #9780 which builds off this PR. Any chance I can convince you to take a look at this?",
      "created_at" : "2017-03-08T14:42:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-285058711",
      "id" : 285058711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-08T14:42:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/285058711",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104963339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104963339"
         }
      },
      "body" : "Line 72 `Warning: testing without local IPv6 support` above is now a print again, not sure if this was intentional.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-08T16:49:03Z",
      "diff_hunk" : "@@ -83,13 +83,13 @@ def setup_nodes(self):\n         # Note: proxies are not used to connect to local nodes\n         # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n         args = [\n-            ['-listen', '-debug=net', '-debug=proxy', '-proxy=%s:%i' % (self.conf1.addr),'-proxyrandomize=1'], ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104963339",
      "id" : 104963339,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 4,
      "path" : "qa/rpc-tests/proxy_test.py",
      "position" : 4,
      "pull_request_review_id" : 25821252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104963339",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104984484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104984484"
         }
      },
      "body" : "yes - proxy_test does a lot of work in the `__init__()` method, which is called before the temp directory is set up. Logging requires the temp directory, so we can't use `self.log` until we're in `main()` and `_start_logging()` has been called.\r\n\r\nI left this as a `print()` rather than trying to do anything clever to coerce the test into being log friendly.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-08T18:17:16Z",
      "diff_hunk" : "@@ -83,13 +83,13 @@ def setup_nodes(self):\n         # Note: proxies are not used to connect to local nodes\n         # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n         args = [\n-            ['-listen', '-debug=net', '-debug=proxy', '-proxy=%s:%i' % (self.conf1.addr),'-proxyrandomize=1'], ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r104984484",
      "id" : 104984484,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 4,
      "path" : "qa/rpc-tests/proxy_test.py",
      "position" : 4,
      "pull_request_review_id" : 25843242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104984484",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Concept ACK. Going to give some feedback later tonight.\n\n\nOn Wed, Mar 8, 2017 at 3:42 PM, John Newbery <notifications@github.com> wrote:\n> @laanwj @MarcoFalke I think this is a real improvement and helps debugging\n> and fixing test cases when they fail. I've addressed #9768 (comment) in\n> #9780 which builds off this PR. Any chance I can convince you to take a look\n> at this?\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
      "created_at" : "2017-03-08T22:31:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-285191197",
      "id" : 285191197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-08T22:31:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/285191197",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105061612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105061612"
         }
      },
      "body" : "If you remove the prints above, you need to change those to assert_equal to maintain the debug print in case of failure.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T00:35:35Z",
      "diff_hunk" : "@@ -18,51 +18,49 @@ def __init__(self):\n     def setup_network(self):\n         self.nodes = []\n         self.is_network_split = False \n-        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\"]))\n-        self.nodes.append(start_node(1, self.options.tmpdir, [\"-debug\"]))\n-        self.nodes.append(start_node(2, self.options.tmpdir, [\"-debug\"]))\n+        self.nodes.append(start_node(0, self.options.tmpdir))\n+        self.nodes.append(start_node(1, self.options.tmpdir))\n+        self.nodes.append(start_node(2, self.options.tmpdir))\n         \n     def run_test(self):\n-        print(\"Make sure we repopulate setBlockIndexCandidates after InvalidateBlock:\")\n-        print(\"Mine 4 blocks on Node 0\")\n+        self.log.info(\"Make sure we repopulate setBlockIndexCandidates after InvalidateBlock:\")\n+        self.log.info(\"Mine 4 blocks on Node 0\")\n         self.nodes[0].generate(4)\n         assert(self.nodes[0].getblockcount() == 4)\n         besthash = self.nodes[0].getbestblockhash()\n \n-        print(\"Mine competing 6 blocks on Node 1\")\n+        self.log.info(\"Mine competing 6 blocks on Node 1\")\n         self.nodes[1].generate(6)\n         assert(self.nodes[1].getblockcount() == 6)\n \n-        print(\"Connect nodes to force a reorg\")\n+        self.log.info(\"Connect nodes to force a reorg\")\n         connect_nodes_bi(self.nodes,0,1)\n         sync_blocks(self.nodes[0:2])\n         assert(self.nodes[0].getblockcount() == 6)\n         badhash = self.nodes[1].getblockhash(2)\n \n-        print(\"Invalidate block 2 on node 0 and verify we reorg to node 0's original chain\")\n+        self.log.info(\"Invalidate block 2 on node 0 and verify we reorg to node 0's original chain\")\n         self.nodes[0].invalidateblock(badhash)\n         newheight = self.nodes[0].getblockcount()\n         newhash = self.nodes[0].getbestblockhash()\n         if (newheight != 4 or newhash != besthash):\n             raise AssertionError(\"Wrong tip for node0, hash %s, height %d\"%(newhash,newheight))\n \n-        print(\"\\nMake sure we won't reorg to a lower work chain:\")\n+        self.log.info(\"Make sure we won't reorg to a lower work chain:\")\n         connect_nodes_bi(self.nodes,1,2)\n-        print(\"Sync node 2 to node 1 so both have 6 blocks\")\n+        self.log.info(\"Sync node 2 to node 1 so both have 6 blocks\")\n         sync_blocks(self.nodes[1:3])\n         assert(self.nodes[2].getblockcount() == 6)\n-        print(\"Invalidate block 5 on node 1 so its tip is now at 4\")\n+        self.log.info(\"Invalidate block 5 on node 1 so its tip is now at 4\")\n         self.nodes[1].invalidateblock(self.nodes[1].getblockhash(5))\n         assert(self.nodes[1].getblockcount() == 4)\n-        print(\"Invalidate block 3 on node 2, so its tip is now 2\")\n+        self.log.info(\"Invalidate block 3 on node 2, so its tip is now 2\")\n         self.nodes[2].invalidateblock(self.nodes[2].getblockhash(3))\n         assert(self.nodes[2].getblockcount() == 2)\n-        print(\"..and then mine a block\")\n+        self.log.info(\"..and then mine a block\")\n         self.nodes[2].generate(1)\n-        print(\"Verify all nodes are at the right height\")\n+        self.log.info(\"Verify all nodes are at the right height\")\n         time.sleep(5)\n-        for i in range(3):\n-            print(i,self.nodes[i].getblockcount())\n         assert(self.nodes[2].getblockcount() == 3)\n         assert(self.nodes[0].getblockcount() == 4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105061612",
      "id" : 105061612,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 64,
      "path" : "qa/rpc-tests/invalidateblock.py",
      "position" : null,
      "pull_request_review_id" : 25923183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105061612",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105063249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105063249"
         }
      },
      "body" : "Please don't change indentation here.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T00:48:40Z",
      "diff_hunk" : "@@ -1742,17 +1737,14 @@ def got_data(self):\n                     t.deserialize(f)\n                     self.got_message(t)\n                 else:\n-                    self.show_debug_msg(\"Unknown command: '\" + command + \"' \" +\n-                                        repr(msg))\n+                    logger.warning(\"Received unknown command from %s:%d: '%s' %s\" % (self.dstaddr, self.dstport, command, repr(msg)))\n         except Exception as e:\n-            print('got_data:', repr(e))\n-            # import  traceback\n-            # traceback.print_tb(sys.exc_info()[2])\n+            logger.exception('got_data:', repr(e))\n \n     def send_message(self, message, pushbuf=False):\n         if self.state != \"connected\" and not pushbuf:\n             raise IOError('Not connected, no pushbuf')\n-        self.show_debug_msg(\"Send %s\" % repr(message))\n+            logger.debug(\"Send message to %s:%d: %s\" % (self.dstaddr, self.dstport, repr(message)))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105063249",
      "id" : 105063249,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 75,
      "path" : "qa/rpc-tests/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 25923183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105063249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105063981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105063981"
         }
      },
      "body" : "Any reason you switched the rpc handler to stderr by falling back to the default value?",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T00:54:02Z",
      "diff_hunk" : "@@ -182,12 +181,38 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             sys.exit(1)\n \n+    def _start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler(sys.stdout)\n+        # User can provide log level as a number or string (eg DEBUG). loglevel was caught as a string, so try to convert it to an int\n+        ll = int(self.options.loglevel) if self.options.loglevel.isdigit() else self.options.loglevel.upper()\n+        ch.setLevel(ll)\n+        # Format logs the same as bitcoind's debug.log with microprecision (so log files can be concatenated and sorted)\n+        formatter = logging.Formatter(fmt = '%(asctime)s.%(msecs)03d000 %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n+        fh.setFormatter(formatter)\n+        ch.setFormatter(formatter)\n+        # add the handlers to the logger\n+        self.log.addHandler(fh)\n+        self.log.addHandler(ch)\n+\n+        if self.options.trace_rpc:\n+            rpc_logger = logging.getLogger(\"BitcoinRPC\")\n+            rpc_logger.setLevel(logging.DEBUG)\n+            rpc_handler = logging.StreamHandler()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105063981",
      "id" : 105063981,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 119,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25923183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105063981",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105065585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105065585"
         }
      },
      "body" : "You might need to shutdown (flush) the logs here.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T01:05:41Z",
      "diff_hunk" : "@@ -182,12 +181,38 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             sys.exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105065585",
      "id" : 105065585,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 94,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 25923183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105065585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105065752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105065752"
         }
      },
      "body" : "You don't need the assert(False) when you pass any AssertionError below. Though maybe a fix for an unrelated follow up pr.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T01:06:58Z",
      "diff_hunk" : "@@ -908,7 +907,7 @@ def test_witness_tx_relay_before_segwit_activation(self):\n         # a witness transaction ought not result in a getdata.\n         try:\n             self.test_node.announce_tx_and_wait_for_getdata(tx, timeout=2)\n-            print(\"Error: duplicate tx getdata!\")\n+            self.log.error(\"Error: duplicate tx getdata!\")\n             assert(False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105065752",
      "id" : 105065752,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 130,
      "path" : "qa/rpc-tests/p2p-segwit.py",
      "position" : 130,
      "pull_request_review_id" : 25923183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105065752",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105066934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105066934"
         }
      },
      "body" : "I think the print to stdout can use a formatter that produces smaller lines. (Maybe without the timestamp?) But no strong  opinion.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T01:16:18Z",
      "diff_hunk" : "@@ -182,12 +181,38 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             sys.exit(1)\n \n+    def _start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler(sys.stdout)\n+        # User can provide log level as a number or string (eg DEBUG). loglevel was caught as a string, so try to convert it to an int\n+        ll = int(self.options.loglevel) if self.options.loglevel.isdigit() else self.options.loglevel.upper()\n+        ch.setLevel(ll)\n+        # Format logs the same as bitcoind's debug.log with microprecision (so log files can be concatenated and sorted)\n+        formatter = logging.Formatter(fmt = '%(asctime)s.%(msecs)03d000 %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n+        fh.setFormatter(formatter)\n+        ch.setFormatter(formatter)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105066934",
      "id" : 105066934,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 111,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : 112,
      "pull_request_review_id" : 25923183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105066934",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173726"
         }
      },
      "body" : "Done.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T14:22:26Z",
      "diff_hunk" : "@@ -18,51 +18,49 @@ def __init__(self):\n     def setup_network(self):\n         self.nodes = []\n         self.is_network_split = False \n-        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\"]))\n-        self.nodes.append(start_node(1, self.options.tmpdir, [\"-debug\"]))\n-        self.nodes.append(start_node(2, self.options.tmpdir, [\"-debug\"]))\n+        self.nodes.append(start_node(0, self.options.tmpdir))\n+        self.nodes.append(start_node(1, self.options.tmpdir))\n+        self.nodes.append(start_node(2, self.options.tmpdir))\n         \n     def run_test(self):\n-        print(\"Make sure we repopulate setBlockIndexCandidates after InvalidateBlock:\")\n-        print(\"Mine 4 blocks on Node 0\")\n+        self.log.info(\"Make sure we repopulate setBlockIndexCandidates after InvalidateBlock:\")\n+        self.log.info(\"Mine 4 blocks on Node 0\")\n         self.nodes[0].generate(4)\n         assert(self.nodes[0].getblockcount() == 4)\n         besthash = self.nodes[0].getbestblockhash()\n \n-        print(\"Mine competing 6 blocks on Node 1\")\n+        self.log.info(\"Mine competing 6 blocks on Node 1\")\n         self.nodes[1].generate(6)\n         assert(self.nodes[1].getblockcount() == 6)\n \n-        print(\"Connect nodes to force a reorg\")\n+        self.log.info(\"Connect nodes to force a reorg\")\n         connect_nodes_bi(self.nodes,0,1)\n         sync_blocks(self.nodes[0:2])\n         assert(self.nodes[0].getblockcount() == 6)\n         badhash = self.nodes[1].getblockhash(2)\n \n-        print(\"Invalidate block 2 on node 0 and verify we reorg to node 0's original chain\")\n+        self.log.info(\"Invalidate block 2 on node 0 and verify we reorg to node 0's original chain\")\n         self.nodes[0].invalidateblock(badhash)\n         newheight = self.nodes[0].getblockcount()\n         newhash = self.nodes[0].getbestblockhash()\n         if (newheight != 4 or newhash != besthash):\n             raise AssertionError(\"Wrong tip for node0, hash %s, height %d\"%(newhash,newheight))\n \n-        print(\"\\nMake sure we won't reorg to a lower work chain:\")\n+        self.log.info(\"Make sure we won't reorg to a lower work chain:\")\n         connect_nodes_bi(self.nodes,1,2)\n-        print(\"Sync node 2 to node 1 so both have 6 blocks\")\n+        self.log.info(\"Sync node 2 to node 1 so both have 6 blocks\")\n         sync_blocks(self.nodes[1:3])\n         assert(self.nodes[2].getblockcount() == 6)\n-        print(\"Invalidate block 5 on node 1 so its tip is now at 4\")\n+        self.log.info(\"Invalidate block 5 on node 1 so its tip is now at 4\")\n         self.nodes[1].invalidateblock(self.nodes[1].getblockhash(5))\n         assert(self.nodes[1].getblockcount() == 4)\n-        print(\"Invalidate block 3 on node 2, so its tip is now 2\")\n+        self.log.info(\"Invalidate block 3 on node 2, so its tip is now 2\")\n         self.nodes[2].invalidateblock(self.nodes[2].getblockhash(3))\n         assert(self.nodes[2].getblockcount() == 2)\n-        print(\"..and then mine a block\")\n+        self.log.info(\"..and then mine a block\")\n         self.nodes[2].generate(1)\n-        print(\"Verify all nodes are at the right height\")\n+        self.log.info(\"Verify all nodes are at the right height\")\n         time.sleep(5)\n-        for i in range(3):\n-            print(i,self.nodes[i].getblockcount())\n         assert(self.nodes[2].getblockcount() == 3)\n         assert(self.nodes[0].getblockcount() == 4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173726",
      "id" : 105173726,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 64,
      "path" : "qa/rpc-tests/invalidateblock.py",
      "position" : null,
      "pull_request_review_id" : 26039759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173726",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173753"
         }
      },
      "body" : "Oops. Fixed.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T14:22:34Z",
      "diff_hunk" : "@@ -1742,17 +1737,14 @@ def got_data(self):\n                     t.deserialize(f)\n                     self.got_message(t)\n                 else:\n-                    self.show_debug_msg(\"Unknown command: '\" + command + \"' \" +\n-                                        repr(msg))\n+                    logger.warning(\"Received unknown command from %s:%d: '%s' %s\" % (self.dstaddr, self.dstport, command, repr(msg)))\n         except Exception as e:\n-            print('got_data:', repr(e))\n-            # import  traceback\n-            # traceback.print_tb(sys.exc_info()[2])\n+            logger.exception('got_data:', repr(e))\n \n     def send_message(self, message, pushbuf=False):\n         if self.state != \"connected\" and not pushbuf:\n             raise IOError('Not connected, no pushbuf')\n-        self.show_debug_msg(\"Send %s\" % repr(message))\n+            logger.debug(\"Send message to %s:%d: %s\" % (self.dstaddr, self.dstport, repr(message)))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173753",
      "id" : 105173753,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 75,
      "path" : "qa/rpc-tests/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 26039793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173753",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173776"
         }
      },
      "body" : "Done.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T14:22:40Z",
      "diff_hunk" : "@@ -182,12 +181,38 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             sys.exit(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173776",
      "id" : 105173776,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 94,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 26039814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173909"
         }
      },
      "body" : "I specifically set the format of the logs to be the same as what bitcoind produces with microsecond logging.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T14:23:14Z",
      "diff_hunk" : "@@ -182,12 +181,38 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             sys.exit(1)\n \n+    def _start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler(sys.stdout)\n+        # User can provide log level as a number or string (eg DEBUG). loglevel was caught as a string, so try to convert it to an int\n+        ll = int(self.options.loglevel) if self.options.loglevel.isdigit() else self.options.loglevel.upper()\n+        ch.setLevel(ll)\n+        # Format logs the same as bitcoind's debug.log with microprecision (so log files can be concatenated and sorted)\n+        formatter = logging.Formatter(fmt = '%(asctime)s.%(msecs)03d000 %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n+        fh.setFormatter(formatter)\n+        ch.setFormatter(formatter)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105173909",
      "id" : 105173909,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 111,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : 112,
      "pull_request_review_id" : 26039957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105173909",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105174077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105174077"
         }
      },
      "body" : "That's pre-existing behaviour, which is unrelated to this PR. I agree it should be fixed in a different PR.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T14:23:59Z",
      "diff_hunk" : "@@ -908,7 +907,7 @@ def test_witness_tx_relay_before_segwit_activation(self):\n         # a witness transaction ought not result in a getdata.\n         try:\n             self.test_node.announce_tx_and_wait_for_getdata(tx, timeout=2)\n-            print(\"Error: duplicate tx getdata!\")\n+            self.log.error(\"Error: duplicate tx getdata!\")\n             assert(False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105174077",
      "id" : 105174077,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 130,
      "path" : "qa/rpc-tests/p2p-segwit.py",
      "position" : 130,
      "pull_request_review_id" : 26040119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105174077",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105174813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105174813"
         }
      },
      "body" : "No reason. Just an oversight. Now fixed.",
      "commit_id" : "64c080051b932b3e53ece7638f199e48d0ad16c8",
      "created_at" : "2017-03-09T14:27:08Z",
      "diff_hunk" : "@@ -182,12 +181,38 @@ def main(self):\n                     from collections import deque\n                     print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n         if success:\n-            print(\"Tests successful\")\n+            self.log.info(\"Tests successful\")\n             sys.exit(0)\n         else:\n-            print(\"Failed\")\n+            self.log.error(\"Test failed. Test logging available at %s/test_framework.log\", self.options.tmpdir)\n             sys.exit(1)\n \n+    def _start_logging(self):\n+        # Add logger and logging handlers\n+        self.log = logging.getLogger('TestFramework')\n+        self.log.setLevel(logging.DEBUG)\n+        # Create file handler to log all messages\n+        fh = logging.FileHandler(self.options.tmpdir + '/test_framework.log')\n+        fh.setLevel(logging.DEBUG)\n+        # Create console handler to log messages to stderr. By default this logs only error messages, but can be configured with --loglevel.\n+        ch = logging.StreamHandler(sys.stdout)\n+        # User can provide log level as a number or string (eg DEBUG). loglevel was caught as a string, so try to convert it to an int\n+        ll = int(self.options.loglevel) if self.options.loglevel.isdigit() else self.options.loglevel.upper()\n+        ch.setLevel(ll)\n+        # Format logs the same as bitcoind's debug.log with microprecision (so log files can be concatenated and sorted)\n+        formatter = logging.Formatter(fmt = '%(asctime)s.%(msecs)03d000 %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n+        fh.setFormatter(formatter)\n+        ch.setFormatter(formatter)\n+        # add the handlers to the logger\n+        self.log.addHandler(fh)\n+        self.log.addHandler(ch)\n+\n+        if self.options.trace_rpc:\n+            rpc_logger = logging.getLogger(\"BitcoinRPC\")\n+            rpc_logger.setLevel(logging.DEBUG)\n+            rpc_handler = logging.StreamHandler()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#discussion_r105174813",
      "id" : 105174813,
      "original_commit_id" : "f546d06ac21e2953c0dc0b1d8fef459b186781ce",
      "original_position" : 119,
      "path" : "qa/rpc-tests/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 26040901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9768",
      "updated_at" : "2017-03-09T14:27:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105174813",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Thanks for the feedback @MarcoFalke . I believe the latest commit should address all your comments.",
      "created_at" : "2017-03-09T14:37:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-285368237",
      "id" : 285368237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-09T14:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/285368237",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Ok, will take a quick look later and plan to merge this before the meeting.\n\nOn Thu, Mar 9, 2017 at 3:37 PM, John Newbery <notifications@github.com>\nwrote:\n\n> Thanks for the feedback @MarcoFalke <https://github.com/MarcoFalke> . I\n> believe the latest commit should address all your comments.\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-285368237>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmvz4ztjuB7cndYVx9sVdeT2RIPdMiks5rkA6mgaJpZM4MCCBG>\n> .\n>\n",
      "created_at" : "2017-03-09T14:39:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9768#issuecomment-285368749",
      "id" : 285368749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9768",
      "updated_at" : "2017-03-09T14:39:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/285368749",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]

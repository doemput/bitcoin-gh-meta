[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r92882079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92882079"
         }
      },
      "body" : "It's better to have a single return statement that returns a local variable over using std::move:\r\n\r\n```c++\r\n    ...\r\n    std::vector<CTransactionRef> temp;\r\n    if (trackRemovalsCount == 0) {\r\n        temp.emplace_back(std::move(removedTxs));\r\n        removedTxs.clear();\r\n    }\r\n    return temp;\r\n}\r\n```\r\n\r\nThis allows the compiler to use NVRO (named return value optimization) - the `temp` variable essentially becomes an alias for the returned object.\r\n",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2016-12-16T20:38:46Z",
      "diff_hunk" : "@@ -469,11 +469,43 @@ void CTxMemPool::removeUnchecked(txiter it)\n     cachedInnerUsage -= it->DynamicMemoryUsage();\n     cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n     mapLinks.erase(it);\n+    if (!minedInBlock) {\n+        if (trackRemovalsCount) {\n+            removedTxs.emplace_back(it->GetSharedTx());\n+        }\n+        else {\n+            // If there are ever intentionally removals that are not\n+            // meant to be tracked (so they can be notified on), then\n+            // this log message can be removed.\n+            LogPrint(\"mempool\", \"MemPoolRemovalTracker not tracking removed transaction %s\\n\",hash.ToString());\n+        }\n+    }\n     mapTx.erase(it);\n     nTransactionsUpdated++;\n     minerPolicyEstimator->removeTx(hash);\n }\n \n+void CTxMemPool::startTrackingRemovals()\n+{\n+    LOCK(cs);\n+    trackRemovalsCount++;\n+}\n+\n+std::vector<CTransactionRef>  CTxMemPool::stopTrackingRemovals() {\n+    LOCK(cs);\n+    assert(trackRemovalsCount);\n+    trackRemovalsCount--;\n+    if (trackRemovalsCount == 0) {\n+        std::vector<CTransactionRef> temp(std::move(removedTxs));\n+        removedTxs.clear();\n+        return std::move(temp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r92882079",
      "id" : 92882079,
      "original_commit_id" : "64712d66f7884a42db2bc193efbdb810f5f76edd",
      "original_position" : 51,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 13407054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92882079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r92887197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92887197"
         }
      },
      "body" : "Using swap in the middle could be a nice way to simplify this:\r\n\r\n```\r\n    std::vector<CTransactionRef> temp;\r\n    if (trackRemovalsCount == 0)\r\n        temp.swap(removedTxs);\r\n    return temp;\r\n```",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2016-12-16T21:15:03Z",
      "diff_hunk" : "@@ -469,11 +469,43 @@ void CTxMemPool::removeUnchecked(txiter it)\n     cachedInnerUsage -= it->DynamicMemoryUsage();\n     cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n     mapLinks.erase(it);\n+    if (!minedInBlock) {\n+        if (trackRemovalsCount) {\n+            removedTxs.emplace_back(it->GetSharedTx());\n+        }\n+        else {\n+            // If there are ever intentionally removals that are not\n+            // meant to be tracked (so they can be notified on), then\n+            // this log message can be removed.\n+            LogPrint(\"mempool\", \"MemPoolRemovalTracker not tracking removed transaction %s\\n\",hash.ToString());\n+        }\n+    }\n     mapTx.erase(it);\n     nTransactionsUpdated++;\n     minerPolicyEstimator->removeTx(hash);\n }\n \n+void CTxMemPool::startTrackingRemovals()\n+{\n+    LOCK(cs);\n+    trackRemovalsCount++;\n+}\n+\n+std::vector<CTransactionRef>  CTxMemPool::stopTrackingRemovals() {\n+    LOCK(cs);\n+    assert(trackRemovalsCount);\n+    trackRemovalsCount--;\n+    if (trackRemovalsCount == 0) {\n+        std::vector<CTransactionRef> temp(std::move(removedTxs));\n+        removedTxs.clear();\n+        return std::move(temp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r92887197",
      "id" : 92887197,
      "original_commit_id" : "64712d66f7884a42db2bc193efbdb810f5f76edd",
      "original_position" : 51,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 13412400,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92887197",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r92965473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92965473"
         }
      },
      "body" : "Is this the only notification, or is the GUI notified also?",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2016-12-19T03:56:33Z",
      "diff_hunk" : "@@ -469,11 +469,43 @@ void CTxMemPool::removeUnchecked(txiter it)\n     cachedInnerUsage -= it->DynamicMemoryUsage();\n     cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n     mapLinks.erase(it);\n+    if (!minedInBlock) {\n+        if (trackRemovalsCount) {\n+            removedTxs.emplace_back(it->GetSharedTx());\n+        }\n+        else {\n+            // If there are ever intentionally removals that are not\n+            // meant to be tracked (so they can be notified on), then\n+            // this log message can be removed.\n+            LogPrint(\"mempool\", \"MemPoolRemovalTracker not tracking removed transaction %s\\n\",hash.ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r92965473",
      "id" : 92965473,
      "original_commit_id" : "f3baf89e0de30d551e701c16cdba66062ab12df0",
      "original_position" : 30,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 13486423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92965473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Is there a way to isolate these changes to the wallet code only?\r\nI understand it is to fix a problem there,  but ideally I'd rather see just a primitive mechanism in the mempool for removal events,  and the wallet then handle that with a \"mempool removal tracker\" and such.\r\n\r\nAFAIK, non-wallet users don't need this or #9240 reverted.",
      "created_at" : "2016-12-19T04:09:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-267878008",
      "id" : 267878008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2016-12-19T04:09:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267878008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "> I'd rather see just a primitive mechanism in the mempool for removal events, and the wallet then handle that with a \"mempool removal tracker\" and such.\r\n\r\nIn #8549 I had added a specific signal on the mempool to be notified of removed transactions, even with a reason field.\r\nI think this was slightly more elegant than having a stateful StartTracking/StopTracking in the mempool itself and keeping a vector there (which means there can only be one client at a time). A client could easily handle the part of accumulating notifications into a vector itself, if that is desired.\r\n",
      "created_at" : "2016-12-19T07:22:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-267898126",
      "id" : 267898126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2016-12-19T07:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267898126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Agree with @laanwj: the reason enum is really what we should have for mempool removal notifications: https://github.com/bitcoin/bitcoin/pull/8549/files#diff-d8e6fe13399f13c42a93ec8326c60614R150",
      "created_at" : "2016-12-19T07:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-267899860",
      "id" : 267899860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2016-12-19T07:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267899860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Agree with @laanwj,  I actually thought that was merged and was wondering why this wasn't using it.",
      "created_at" : "2016-12-19T07:44:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-267901192",
      "id" : 267901192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2016-12-19T07:44:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267901192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r93013886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93013886"
         }
      },
      "body" : "I like @ryanofsky's suggestion. Will do.",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2016-12-19T11:28:26Z",
      "diff_hunk" : "@@ -469,11 +469,43 @@ void CTxMemPool::removeUnchecked(txiter it)\n     cachedInnerUsage -= it->DynamicMemoryUsage();\n     cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n     mapLinks.erase(it);\n+    if (!minedInBlock) {\n+        if (trackRemovalsCount) {\n+            removedTxs.emplace_back(it->GetSharedTx());\n+        }\n+        else {\n+            // If there are ever intentionally removals that are not\n+            // meant to be tracked (so they can be notified on), then\n+            // this log message can be removed.\n+            LogPrint(\"mempool\", \"MemPoolRemovalTracker not tracking removed transaction %s\\n\",hash.ToString());\n+        }\n+    }\n     mapTx.erase(it);\n     nTransactionsUpdated++;\n     minerPolicyEstimator->removeTx(hash);\n }\n \n+void CTxMemPool::startTrackingRemovals()\n+{\n+    LOCK(cs);\n+    trackRemovalsCount++;\n+}\n+\n+std::vector<CTransactionRef>  CTxMemPool::stopTrackingRemovals() {\n+    LOCK(cs);\n+    assert(trackRemovalsCount);\n+    trackRemovalsCount--;\n+    if (trackRemovalsCount == 0) {\n+        std::vector<CTransactionRef> temp(std::move(removedTxs));\n+        removedTxs.clear();\n+        return std::move(temp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r93013886",
      "id" : 93013886,
      "original_commit_id" : "64712d66f7884a42db2bc193efbdb810f5f76edd",
      "original_position" : 51,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 13533798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93013886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r93013994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93013994"
         }
      },
      "body" : "about the error?  this is the only log of the fact that a removal happened without notification.",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2016-12-19T11:29:13Z",
      "diff_hunk" : "@@ -469,11 +469,43 @@ void CTxMemPool::removeUnchecked(txiter it)\n     cachedInnerUsage -= it->DynamicMemoryUsage();\n     cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n     mapLinks.erase(it);\n+    if (!minedInBlock) {\n+        if (trackRemovalsCount) {\n+            removedTxs.emplace_back(it->GetSharedTx());\n+        }\n+        else {\n+            // If there are ever intentionally removals that are not\n+            // meant to be tracked (so they can be notified on), then\n+            // this log message can be removed.\n+            LogPrint(\"mempool\", \"MemPoolRemovalTracker not tracking removed transaction %s\\n\",hash.ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r93013994",
      "id" : 93013994,
      "original_commit_id" : "f3baf89e0de30d551e701c16cdba66062ab12df0",
      "original_position" : 30,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 13533899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93013994",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@laanwj ah, sorry I hadn't seen #8549.  The reason I did it this way instead of trying to do notifications from the mempool directly was because we had just gone to such much effort to remove other notifications from happening within cs_main during the block connection logic.  \r\n\r\nIt would be very easy to add to this PR the ability to distinguish between: \"added\", \"removed\", \"appeared in a disconnected block\", but slightly more involved to distinguish between the various \"removed\" reasons. (EDIT: I suppose the approach used in #8549 would work just as easily, we could just save the reason state in the vector.)\r\n\r\nWhichever approach we take, I think it's a step in the right direction towards cleaning up the notification design and we should keep going.  Note for example that even after #8549, I think \"rawtx\" and \"hashtx\" notifications are also happening on transactions in disconnected blocks (and before #9240 in transactions removed due to conflict), which doesn't seem to be the intent.\r\n\r\n",
      "created_at" : "2016-12-19T11:56:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-267947272",
      "id" : 267947272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2016-12-19T12:42:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267947272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "rebased",
      "created_at" : "2017-01-04T17:56:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-270438832",
      "id" : 270438832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-04T17:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270438832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : ".. and added @ryanofsky's suggested cleanup\r\n\r\n",
      "created_at" : "2017-01-04T18:03:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-270440756",
      "id" : 270440756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-04T18:03:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270440756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "It seems strange to have a constraint that the mempool is either in a tracking or non-tracking state... the mempool object itself shouldn't need to know or care that there is at most one entity interested in seeing its removals.\r\n\r\nWould it be possible to instead have a callback installed from the mempool to notify whatever is interested of removed transactions?",
      "created_at" : "2017-01-09T20:22:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-271396629",
      "id" : 271396629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-09T20:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271396629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Yes @laanwj had a similar comment.\r\nWhat I wanted to accomplish was that the notifications (or at least some of the potentially time consuming ones) happened outside of the critical path.  The same as the change we recently made with transactions in connected blocks.  But perhaps there is a better way to design that where the mempool just fires off its notifications immediately, but there can be a helper class that subscribes and appropriately batches them before passing them on?  It's a bit tricky to imagine how some removals caused by limiting inside ATMP should be fired immediately and some shouldn't, but there ought to be a way.\r\n\r\nIn any case I'm open to a suggestion on redesigning that aspect of it.\r\n",
      "created_at" : "2017-01-09T20:43:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-271401915",
      "id" : 271401915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-09T20:43:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271401915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "The receiver of the mempool-removal event notifications can also still add things to a queue for later processing, i mean. It doesn't need to be the mempool that does the batching - as that inherently only works for a single consumer of event.",
      "created_at" : "2017-01-09T20:56:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-271405120",
      "id" : 271405120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-09T20:56:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271405120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "OK I've redone this in a way that is hopefully more appealing.\r\n\r\nThe first commit is stolen (and slightly tweaked) from #8549 and will lay the ground work for a more flexible notification system on mempool actions. \r\n\r\nThen I introduce a minimal `MemPoolConflictRemovalTracker` which should exactly mimic the behavior of txConflicted that was removed in #9240.  I wouldn't argue that we want to keep this class in the long run, but as a regression fix for 0.14, I think this most clearly accomplishes the goal while moving us in a forward direction.\r\n\r\nIn the future we will want to rethink exactly what notifications need to fire on mempool removals and when.  Most of the wallet functionality that is called by SyncTransaction is a no-op on mempool removals except for downstream notifications.   This is documented.\r\n",
      "created_at" : "2017-01-18T19:14:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-273571462",
      "id" : 273571462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-18T19:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273571462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r96720627"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96720627"
         }
      },
      "body" : "Seems like a good time to split up SyncTransaction.\r\n\r\nHow about dropping the SYNC_TRANSACTION_NOT_IN_BLOCK kludge, and adding a new signal for mempool removals? I suspect @TheBlueMatt's recent-removed-tx-cache could benefit from that as well.",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2017-01-18T19:56:01Z",
      "diff_hunk" : "@@ -157,6 +157,39 @@ namespace {\n     set<int> setDirtyFileInfo;\n } // anon namespace\n \n+/* Use this class to start tracking transactions that are removed from the\n+ * mempool and pass all those transactions through SyncTransaction when the\n+ * object goes out of scope. This is currently only used to call SyncTransaction\n+ * on conflicts removed from the mempool during block connection.  Applied in\n+ * ActivateBestChain around ActivateBestStep which in turn calls:\n+ * ConnectTip->removeForBlock->removeConflicts\n+ */\n+class MemPoolConflictRemovalTracker\n+{\n+private:\n+    std::vector<CTransactionRef> conflictedTxs;\n+    CTxMemPool &pool;\n+\n+public:\n+    MemPoolConflictRemovalTracker(CTxMemPool &_pool) : pool(_pool) {\n+        pool.NotifyEntryRemoved.connect(boost::bind(&MemPoolConflictRemovalTracker::NotifyEntryRemoved, this, _1, _2));\n+    }\n+\n+    void NotifyEntryRemoved(CTransactionRef txRemoved, MemPoolRemovalReason reason) {\n+        if (reason == MemPoolRemovalReason::CONFLICT) {\n+            conflictedTxs.push_back(txRemoved);\n+        }\n+    }\n+\n+    ~MemPoolConflictRemovalTracker() {\n+        pool.NotifyEntryRemoved.disconnect(boost::bind(&MemPoolConflictRemovalTracker::NotifyEntryRemoved, this, _1, _2));\n+        for (const auto& tx : conflictedTxs) {\n+            GetMainSignals().SyncTransaction(*tx, NULL, CMainSignals::SYNC_TRANSACTION_NOT_IN_BLOCK);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r96720627",
      "id" : 96720627,
      "original_commit_id" : "84b4c4c1d5a576edac54a02facff30fa8d62612f",
      "original_position" : 31,
      "path" : "src/validation.cpp",
      "position" : 31,
      "pull_request_review_id" : 17311332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96720627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r96751491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96751491"
         }
      },
      "body" : "I believe you need some lock held here so that no two threads could be calling mempool.NotifyEntryRemoved.connect at the same time, however I agree you dont want to SyncTransaction with cs_main held. You could add a static mutex here, or you could create the object with cs_main, then std::move it to a dummy which will be destroyed without cs_main.",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2017-01-18T22:39:09Z",
      "diff_hunk" : "@@ -2446,6 +2479,14 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n         const CBlockIndex *pindexFork;\n         ConnectTrace connectTrace;\n         bool fInitialDownload;\n+        { // TODO: Tempoarily ensure that mempool removals are notified before\n+          // connected transactions.  This shouldn't matter, but the abandoned\n+          // state of transactions in our wallet is currently cleared when we\n+          // receive another notification and there is a race condition where\n+          // notification of a connected conflict might cause an outside process\n+          // to abandon a transaction and then have it inadvertantly cleared by\n+          // the notification that the conflicted transaction was evicted.\n+        MemPoolConflictRemovalTracker mrt(mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r96751491",
      "id" : 96751491,
      "original_commit_id" : "84b4c4c1d5a576edac54a02facff30fa8d62612f",
      "original_position" : 51,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 17344023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96751491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I believe this breaks #9570. Even if its rebased on #9570 (so that SyncTransaction becomes SyncTransactions and they're all batched together), the multiple per-block SyncTransactions calls will still expose wallet state as of mid-block to RPC clients. I'm not sure how exactly we should go about fixing this, but one way might be to take @theuni's suggestion for 0.14 and split SyncTransaction to SyncTransactionsFromBlock(vTxnConnected, vTxnConflicted) and TransactionAddedToMemPool(tx) so that we can hold the cs_wallet lock the whole time in SyncTransactionsFromBlock.\r\n\r\nOf course, as noted in #9240, the only visible state from the SyncTransaction calls from CONFLICTED transaction removals is to un-abandon some transactions and update the UI/call walletnotify, both of which I think maybe are OK.",
      "created_at" : "2017-01-18T22:43:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-273625900",
      "id" : 273625900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-18T22:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273625900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r96756523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96756523"
         }
      },
      "body" : "Hmm I guess you're right..  Perhaps I need to go back to reference counting these things..",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2017-01-18T23:07:32Z",
      "diff_hunk" : "@@ -2446,6 +2479,14 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n         const CBlockIndex *pindexFork;\n         ConnectTrace connectTrace;\n         bool fInitialDownload;\n+        { // TODO: Tempoarily ensure that mempool removals are notified before\n+          // connected transactions.  This shouldn't matter, but the abandoned\n+          // state of transactions in our wallet is currently cleared when we\n+          // receive another notification and there is a race condition where\n+          // notification of a connected conflict might cause an outside process\n+          // to abandon a transaction and then have it inadvertantly cleared by\n+          // the notification that the conflicted transaction was evicted.\n+        MemPoolConflictRemovalTracker mrt(mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r96756523",
      "id" : 96756523,
      "original_commit_id" : "84b4c4c1d5a576edac54a02facff30fa8d62612f",
      "original_position" : 51,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 17349224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-23T21:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96756523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "Yeah ....  frustrating...   Ideally we wouldn't actually be calling the wallet part of SyncTransaction for these transactions anyway.  But I suspect that for 0.14 we should just be fine with wallet state being inspectable between these.  As you point out it should have basically no effect...  (it really shouldn't be unabandoning anything, that would imply some other logic was broken)\r\n\r\n",
      "created_at" : "2017-01-18T23:09:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-273631554",
      "id" : 273631554,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-18T23:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273631554",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "OK this has been rebased on #9583 which automagically fixes the lesser synchronization issues here if these notifications are also moved inside cs_main.\r\n\r\nThe ugly scope hack to have removals notified before connections I think should be removed after we tidy up abandoned logic in some future PR.  I believe the natural order of notifications should be chainstate changes before mempool changes...\r\n\r\n\r\n",
      "created_at" : "2017-01-19T17:07:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-273835854",
      "id" : 273835854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-19T17:07:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273835854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "utACK 094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2017-01-23T21:46:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-274627615",
      "id" : 274627615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-23T21:46:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274627615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r97500045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97500045"
         }
      },
      "body" : "ÃÂ¼-nit: please don't include space changes in otherwise unchanged lines/functions",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2017-01-24T09:04:27Z",
      "diff_hunk" : "@@ -3597,7 +3642,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n             return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n         // check level 1: verify block validity\n         if (nCheckLevel >= 1 && !CheckBlock(block, state, chainparams.GetConsensus()))\n-            return error(\"%s: *** found bad block at %d, hash=%s (%s)\\n\", __func__, \n+            return error(\"%s: *** found bad block at %d, hash=%s (%s)\\n\", __func__,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r97500045",
      "id" : 97500045,
      "original_commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "original_position" : 89,
      "path" : "src/validation.cpp",
      "position" : 89,
      "pull_request_review_id" : 18110190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-24T09:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97500045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Looks good to me now. utACK 094e4b3",
      "created_at" : "2017-01-24T09:06:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#issuecomment-274747333",
      "id" : 274747333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9371",
      "updated_at" : "2017-01-24T09:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274747333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r97523183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97523183"
         }
      },
      "body" : "heh.  sure.  i'll pass that on to the commit author. :)",
      "commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "created_at" : "2017-01-24T11:11:15Z",
      "diff_hunk" : "@@ -3597,7 +3642,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n             return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n         // check level 1: verify block validity\n         if (nCheckLevel >= 1 && !CheckBlock(block, state, chainparams.GetConsensus()))\n-            return error(\"%s: *** found bad block at %d, hash=%s (%s)\\n\", __func__, \n+            return error(\"%s: *** found bad block at %d, hash=%s (%s)\\n\", __func__,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9371#discussion_r97523183",
      "id" : 97523183,
      "original_commit_id" : "094e4b33839404d9c18200fc30d9a993a3dc106f",
      "original_position" : 89,
      "path" : "src/validation.cpp",
      "position" : 89,
      "pull_request_review_id" : 18134075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9371",
      "updated_at" : "2017-01-24T11:11:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97523183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]

{
   "_links" : {
      "comments" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7867/comments"
      },
      "commits" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7867/commits"
      },
      "html" : {
         "href" : "https://github.com/bitcoin/bitcoin/pull/7867"
      },
      "issue" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7867"
      },
      "review_comment" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}"
      },
      "review_comments" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7867/comments"
      },
      "self" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7867"
      },
      "statuses" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/statuses/06beb06a415322dbf57352cae32ea18c53309f77"
      }
   },
   "additions" : 0,
   "assignee" : null,
   "base" : {
      "label" : "bitcoin:master",
      "ref" : "master",
      "repo" : {
         "archive_url" : "https://api.github.com/repos/bitcoin/bitcoin/{archive_format}{/ref}",
         "assignees_url" : "https://api.github.com/repos/bitcoin/bitcoin/assignees{/user}",
         "blobs_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/blobs{/sha}",
         "branches_url" : "https://api.github.com/repos/bitcoin/bitcoin/branches{/branch}",
         "clone_url" : "https://github.com/bitcoin/bitcoin.git",
         "collaborators_url" : "https://api.github.com/repos/bitcoin/bitcoin/collaborators{/collaborator}",
         "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/comments{/number}",
         "commits_url" : "https://api.github.com/repos/bitcoin/bitcoin/commits{/sha}",
         "compare_url" : "https://api.github.com/repos/bitcoin/bitcoin/compare/{base}...{head}",
         "contents_url" : "https://api.github.com/repos/bitcoin/bitcoin/contents/{+path}",
         "contributors_url" : "https://api.github.com/repos/bitcoin/bitcoin/contributors",
         "created_at" : "2010-12-19T15:16:43Z",
         "default_branch" : "master",
         "deployments_url" : "https://api.github.com/repos/bitcoin/bitcoin/deployments",
         "description" : "Bitcoin Core integration/staging tree",
         "downloads_url" : "https://api.github.com/repos/bitcoin/bitcoin/downloads",
         "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/events",
         "fork" : false,
         "forks" : 6201,
         "forks_count" : 6201,
         "forks_url" : "https://api.github.com/repos/bitcoin/bitcoin/forks",
         "full_name" : "bitcoin/bitcoin",
         "git_commits_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/commits{/sha}",
         "git_refs_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/refs{/sha}",
         "git_tags_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/tags{/sha}",
         "git_url" : "git://github.com/bitcoin/bitcoin.git",
         "has_downloads" : false,
         "has_issues" : true,
         "has_pages" : false,
         "has_wiki" : false,
         "homepage" : "https://bitcoin.org/en/download",
         "hooks_url" : "https://api.github.com/repos/bitcoin/bitcoin/hooks",
         "html_url" : "https://github.com/bitcoin/bitcoin",
         "id" : 1181927,
         "issue_comment_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments{/number}",
         "issue_events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/events{/number}",
         "issues_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues{/number}",
         "keys_url" : "https://api.github.com/repos/bitcoin/bitcoin/keys{/key_id}",
         "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/labels{/name}",
         "language" : "C++",
         "languages_url" : "https://api.github.com/repos/bitcoin/bitcoin/languages",
         "merges_url" : "https://api.github.com/repos/bitcoin/bitcoin/merges",
         "milestones_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones{/number}",
         "mirror_url" : null,
         "name" : "bitcoin",
         "notifications_url" : "https://api.github.com/repos/bitcoin/bitcoin/notifications{?since,all,participating}",
         "open_issues" : 470,
         "open_issues_count" : 470,
         "owner" : {
            "avatar_url" : "https://avatars.githubusercontent.com/u/528860?v=3",
            "events_url" : "https://api.github.com/users/bitcoin/events{/privacy}",
            "followers_url" : "https://api.github.com/users/bitcoin/followers",
            "following_url" : "https://api.github.com/users/bitcoin/following{/other_user}",
            "gists_url" : "https://api.github.com/users/bitcoin/gists{/gist_id}",
            "gravatar_id" : "",
            "html_url" : "https://github.com/bitcoin",
            "id" : 528860,
            "login" : "bitcoin",
            "organizations_url" : "https://api.github.com/users/bitcoin/orgs",
            "received_events_url" : "https://api.github.com/users/bitcoin/received_events",
            "repos_url" : "https://api.github.com/users/bitcoin/repos",
            "site_admin" : false,
            "starred_url" : "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
            "subscriptions_url" : "https://api.github.com/users/bitcoin/subscriptions",
            "type" : "Organization",
            "url" : "https://api.github.com/users/bitcoin"
         },
         "private" : false,
         "pulls_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls{/number}",
         "pushed_at" : "2016-06-15T21:39:19Z",
         "releases_url" : "https://api.github.com/repos/bitcoin/bitcoin/releases{/id}",
         "size" : 138430,
         "ssh_url" : "git@github.com:bitcoin/bitcoin.git",
         "stargazers_count" : 9240,
         "stargazers_url" : "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
         "statuses_url" : "https://api.github.com/repos/bitcoin/bitcoin/statuses/{sha}",
         "subscribers_url" : "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
         "subscription_url" : "https://api.github.com/repos/bitcoin/bitcoin/subscription",
         "svn_url" : "https://github.com/bitcoin/bitcoin",
         "tags_url" : "https://api.github.com/repos/bitcoin/bitcoin/tags",
         "teams_url" : "https://api.github.com/repos/bitcoin/bitcoin/teams",
         "trees_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/trees{/sha}",
         "updated_at" : "2016-06-15T20:48:51Z",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin",
         "watchers" : 9240,
         "watchers_count" : 9240
      },
      "sha" : "514993554c370f4cf30a109ac28d5d64893dbf0a",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/528860?v=3",
         "events_url" : "https://api.github.com/users/bitcoin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bitcoin/followers",
         "following_url" : "https://api.github.com/users/bitcoin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bitcoin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bitcoin",
         "id" : 528860,
         "login" : "bitcoin",
         "organizations_url" : "https://api.github.com/users/bitcoin/orgs",
         "received_events_url" : "https://api.github.com/users/bitcoin/received_events",
         "repos_url" : "https://api.github.com/users/bitcoin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bitcoin/subscriptions",
         "type" : "Organization",
         "url" : "https://api.github.com/users/bitcoin"
      }
   },
   "body" : "Skip to content\r\nThis repository\r\nSearch\r\nPull requests\r\nIssues\r\nGist\r\n @mrCertified\r\nOne of our mostly harmless robots seems to think you are not a human.\r\nBecause of that, itÃ¢ÂÂs hidden your profile from the public. If you really are human, please contact support to have your profile reinstated. We promise we wonÃ¢ÂÂt require DNA proof of your humanity.\r\n Unwatch 1,118\r\n  Star 8,833\r\n Fork 5,969 bitcoin/bitcoin\r\n Code  Issues 355  Pull requests 117  Pulse  Graphs\r\nYouÃ¢ÂÂre editing a file in a project you donÃ¢ÂÂt have write access to. Submitting a change to this file will write it to a new branch in your fork mrCertified/bitcoin, so you can send a pull request.\r\nbitcoin/configure.ac\r\nView 1,090  configure.ac\r\n@@ -1,1090 +0,0 @@\r\n-dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\t\t\r\n-AC_PREREQ([2.60])\t\t\r\n-define(_CLIENT_VERSION_MAJOR, 0)\t\t\r\n-define(_CLIENT_VERSION_MINOR, 12)\t\t\r\n-define(_CLIENT_VERSION_REVISION, 99)\t\t\r\n-define(_CLIENT_VERSION_BUILD, 0)\t\t\r\n-define(_CLIENT_VERSION_IS_RELEASE, false)\t\t\r\n-define(_COPYRIGHT_YEAR, 2016)\t\t\r\n-define(_COPYRIGHT_HOLDERS,[The %s developers])\t\t\r\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\t\t\r\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\t\t\r\n-AC_CONFIG_SRCDIR([src/main.cpp])\t\t\r\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\t\t\r\n-AC_CONFIG_AUX_DIR([build-aux])\t\t\r\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\t\t\r\n-\t\t\r\n-AC_CANONICAL_HOST\t\t\r\n-\t\t\r\n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\t\t\r\n-AH_TOP([#define BITCOIN_CONFIG_H])\t\t\r\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\t\t\r\n-\t\t\r\n-dnl faketime breaks configure and is only needed for make. Disable it here.\t\t\r\n-unset FAKETIME\t\t\r\n-\t\t\r\n-dnl Automake init set-up and checks\t\t\r\n-AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\t\t\r\n-\t\t\r\n-dnl faketime messes with timestamps and causes configure to be re-run.\t\t\r\n-dnl --disable-maintainer-mode can be used to bypass this.\t\t\r\n-AM_MAINTAINER_MODE([enable])\t\t\r\n-\t\t\r\n-dnl make the compilation flags quiet unless V=1 is used\t\t\r\n-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\t\t\r\n-\t\t\r\n-dnl Compiler checks (here before libtool).\t\t\r\n-if test \"x${CXXFLAGS+set}\" = \"xset\"; then\t\t\r\n-  CXXFLAGS_overridden=yes\t\t\r\n-else\t\t\r\n-  CXXFLAGS_overridden=no\t\t\r\n-fi\t\t\r\n-AC_PROG_CXX\t\t\r\n-m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\t\t\r\n-\t\t\r\n-dnl By default, libtool for mingw refuses to link static libs into a dll for\t\t\r\n-dnl fear of mixing pic/non-pic objects, and import/export complications. Since\t\t\r\n-dnl we have those under control, re-enable that functionality.\t\t\r\n-case $host in\t\t\r\n-  *mingw*)\t\t\r\n-     lt_cv_deplibs_check_method=\"pass_all\"\t\t\r\n-  ;;\t\t\r\n-esac\t\t\r\n-dnl Libtool init checks.\t\t\r\n-LT_INIT([pic-only])\t\t\r\n-\t\t\r\n-dnl Check/return PATH for base programs.\t\t\r\n-AC_PATH_TOOL(AR, ar)\t\t\r\n-AC_PATH_TOOL(RANLIB, ranlib)\t\t\r\n-AC_PATH_TOOL(STRIP, strip)\t\t\r\n-AC_PATH_TOOL(GCOV, gcov)\t\t\r\n-AC_PATH_PROG(LCOV, lcov)\t\t\r\n-AC_PATH_PROG(JAVA, java)\t\t\r\n-AC_PATH_PROGS([PYTHON], [python3 python2.7 python2 python])\t\t\r\n-AC_PATH_PROG(GENHTML, genhtml)\t\t\r\n-AC_PATH_PROG([GIT], [git])\t\t\r\n-AC_PATH_PROG(CCACHE,ccache)\t\t\r\n-AC_PATH_PROG(XGETTEXT,xgettext)\t\t\r\n-AC_PATH_PROG(HEXDUMP,hexdump)\t\t\r\n-AC_PATH_TOOL(READELF, readelf)\t\t\r\n-AC_PATH_TOOL(CPPFILT, c++filt)\t\t\r\n-\t\t\r\n-AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\t\t\r\n-\t\t\r\n-dnl pkg-config check.\t\t\r\n-PKG_PROG_PKG_CONFIG\t\t\r\n-\t\t\r\n-# Enable wallet\t\t\r\n-AC_ARG_ENABLE([wallet],\t\t\r\n-  [AS_HELP_STRING([--disable-wallet],\t\t\r\n-  [disable wallet (enabled by default)])],\t\t\r\n-  [enable_wallet=$enableval],\t\t\r\n-  [enable_wallet=yes])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([miniupnpc],\t\t\r\n-  [AS_HELP_STRING([--with-miniupnpc],\t\t\r\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\t\t\r\n-  [use_upnp=$withval],\t\t\r\n-  [use_upnp=auto])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([upnp-default],\t\t\r\n-  [AS_HELP_STRING([--enable-upnp-default],\t\t\r\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\t\t\r\n-  [use_upnp_default=$enableval],\t\t\r\n-  [use_upnp_default=no])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE(tests,\t\t\r\n-    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\t\t\r\n-    [use_tests=$enableval],\t\t\r\n-    [use_tests=yes])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE(gui-tests,\t\t\r\n-    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\t\t\r\n-    [use_gui_tests=$enableval],\t\t\r\n-    [use_gui_tests=$use_tests])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE(bench,\t\t\r\n-    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\t\t\r\n-    [use_bench=$enableval],\t\t\r\n-    [use_bench=yes])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([comparison-tool],\t\t\r\n-    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\t\t\r\n-    [use_comparison_tool=$withval],\t\t\r\n-    [use_comparison_tool=no])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([comparison-tool-reorg-tests],\t\t\r\n-    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\t\t\r\n-    [use_comparison_tool_reorg_tests=$enableval],\t\t\r\n-    [use_comparison_tool_reorg_tests=no])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([extended-rpc-tests],\t\t\r\n-    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\t\t\r\n-    [use_extended_rpc_tests=$enableval],\t\t\r\n-    [use_extended_rpc_tests=no])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([qrencode],\t\t\r\n-  [AS_HELP_STRING([--with-qrencode],\t\t\r\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\t\t\r\n-  [use_qr=$withval],\t\t\r\n-  [use_qr=auto])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([hardening],\t\t\r\n-  [AS_HELP_STRING([--disable-hardening],\t\t\r\n-  [do not attempt to harden the resulting executables (default is to harden)])],\t\t\r\n-  [use_hardening=$enableval],\t\t\r\n-  [use_hardening=yes])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([reduce-exports],\t\t\r\n-  [AS_HELP_STRING([--enable-reduce-exports],\t\t\r\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\t\t\r\n-  [use_reduce_exports=$enableval],\t\t\r\n-  [use_reduce_exports=no])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([ccache],\t\t\r\n-  [AS_HELP_STRING([--disable-ccache],\t\t\r\n-  [do not use ccache for building (default is to use if found)])],\t\t\r\n-  [use_ccache=$enableval],\t\t\r\n-  [use_ccache=auto])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([lcov],\t\t\r\n-  [AS_HELP_STRING([--enable-lcov],\t\t\r\n-  [enable lcov testing (default is no)])],\t\t\r\n-  [use_lcov=yes],\t\t\r\n-  [use_lcov=no])\t\t\r\n-\t\t\r\n-AC_ARG_ENABLE([glibc-back-compat],\t\t\r\n-  [AS_HELP_STRING([--enable-glibc-back-compat],\t\t\r\n-  [enable backwards compatibility with glibc])],\t\t\r\n-  [use_glibc_compat=$enableval],\t\t\r\n-  [use_glibc_compat=no])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([system-univalue],\t\t\r\n-  [AS_HELP_STRING([--with-system-univalue],\t\t\r\n-  [Build with system UniValue (default is no)])],\t\t\r\n-  [system_univalue=$withval],\t\t\r\n-  [system_univalue=no]\t\t\r\n-)\t\t\r\n-AC_ARG_ENABLE([zmq],\t\t\r\n-  [AS_HELP_STRING([--disable-zmq],\t\t\r\n-  [disable ZMQ notifications])],\t\t\r\n-  [use_zmq=$enableval],\t\t\r\n-  [use_zmq=yes])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\t\t\r\n-\t\t\r\n-# Enable debug\t\t\r\n-AC_ARG_ENABLE([debug],\t\t\r\n-    [AS_HELP_STRING([--enable-debug],\t\t\r\n-                    [use debug compiler flags and macros (default is no)])],\t\t\r\n-    [enable_debug=$enableval],\t\t\r\n-    [enable_debug=no])\t\t\r\n-\t\t\r\n-if test \"x$enable_debug\" = xyes; then\t\t\r\n-    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\t\t\r\n-    if test \"x$GCC\" = xyes; then\t\t\r\n-        CFLAGS=\"$CFLAGS -g3 -O0\"\t\t\r\n-    fi\t\t\r\n-\t\t\r\n-    if test \"x$GXX\" = xyes; then\t\t\r\n-        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\t\t\r\n-    fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\t\t\r\n-##       compatibility with the legacy buildsystem.\t\t\r\n-##\t\t\r\n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\t\t\r\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\t\t\r\n-fi\t\t\r\n-CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\t\t\r\n-\t\t\r\n-AC_ARG_WITH([utils],\t\t\r\n-  [AS_HELP_STRING([--with-utils],\t\t\r\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\t\t\r\n-  [build_bitcoin_utils=$withval],\t\t\r\n-  [build_bitcoin_utils=yes])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([libs],\t\t\r\n-  [AS_HELP_STRING([--with-libs],\t\t\r\n-  [build libraries (default=yes)])],\t\t\r\n-  [build_bitcoin_libs=$withval],\t\t\r\n-  [build_bitcoin_libs=yes])\t\t\r\n-\t\t\r\n-AC_ARG_WITH([daemon],\t\t\r\n-  [AS_HELP_STRING([--with-daemon],\t\t\r\n-  [build bitcoind daemon (default=yes)])],\t\t\r\n-  [build_bitcoind=$withval],\t\t\r\n-  [build_bitcoind=yes])\t\t\r\n-\t\t\r\n-AC_LANG_PUSH([C++])\t\t\r\n-\t\t\r\n-use_pkgconfig=yes\t\t\r\n-case $host in\t\t\r\n-  *mingw*)\t\t\r\n-\t\t\r\n-     #pkgconfig does more harm than good with MinGW\t\t\r\n-     use_pkgconfig=no\t\t\r\n-\t\t\r\n-     TARGET_OS=windows\t\t\r\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-\t\t\r\n-     # -static is interpreted by libtool, where it has a different meaning.\t\t\r\n-     # In libtool-speak, it's -all-static.\t\t\r\n-     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\t\t\r\n-\t\t\r\n-     AC_PATH_PROG([MAKENSIS], [makensis], none)\t\t\r\n-     if test x$MAKENSIS = xnone; then\t\t\r\n-       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\t\t\r\n-     fi\t\t\r\n-\t\t\r\n-     AC_PATH_TOOL(WINDRES, windres, none)\t\t\r\n-     if test x$WINDRES = xnone; then\t\t\r\n-       AC_MSG_ERROR(\"windres not found\")\t\t\r\n-     fi\t\t\r\n-\t\t\r\n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\t\t\r\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\t\t\r\n-     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\t\t\r\n-       CXXFLAGS=\"$CXXFLAGS -w\"\t\t\r\n-     fi\t\t\r\n-     case $host in\t\t\r\n-       i?86-*) WINDOWS_BITS=32 ;;\t\t\r\n-       x86_64-*) WINDOWS_BITS=64 ;;\t\t\r\n-       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\t\t\r\n-     esac\t\t\r\n-     AC_SUBST(WINDOWS_BITS)\t\t\r\n-\t\t\r\n-     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\t\t\r\n-     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\t\t\r\n-     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\t\t\r\n-     dnl also overridden to prevent their insertion later.\t\t\r\n-     dnl This should only affect dll's.\t\t\r\n-     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\t\t\r\n-     postdeps_CXX=\t\t\r\n-\t\t\r\n-     ;;\t\t\r\n-  *darwin*)\t\t\r\n-     TARGET_OS=darwin\t\t\r\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\t\t\r\n-     if  test x$cross_compiling != xyes; then\t\t\r\n-       BUILD_OS=darwin\t\t\r\n-       AC_CHECK_PROG([PORT],port, port)\t\t\r\n-       if test x$PORT = xport; then\t\t\r\n-         dnl add default macports paths\t\t\r\n-         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\t\t\r\n-         LIBS=\"$LIBS -L/opt/local/lib\"\t\t\r\n-         if test -d /opt/local/include/db48; then\t\t\r\n-           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\t\t\r\n-           LIBS=\"$LIBS -L/opt/local/lib/db48\"\t\t\r\n-         fi\t\t\r\n-       fi\t\t\r\n-\t\t\r\n-       AC_CHECK_PROG([BREW],brew, brew)\t\t\r\n-       if test x$BREW = xbrew; then\t\t\r\n-         dnl These Homebrew packages may be keg-only, meaning that they won't be found\t\t\r\n-         dnl in expected paths because they may conflict with system files. Ask\t\t\r\n-         dnl Homebrew where each one is located, then adjust paths accordingly.\t\t\r\n-         dnl It's safe to add these paths even if the functionality is disabled by\t\t\r\n-         dnl the user (--without-wallet or --without-gui for example).\t\t\r\n-\t\t\r\n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\t\t\r\n-         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\t\t\r\n-         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\t\t\r\n-         if test x$openssl_prefix != x; then\t\t\r\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\t\t\r\n-           export PKG_CONFIG_PATH\t\t\r\n-         fi\t\t\r\n-         if test x$bdb_prefix != x; then\t\t\r\n-           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\t\t\r\n-           LIBS=\"$LIBS -L$bdb_prefix/lib\"\t\t\r\n-         fi\t\t\r\n-         if test x$qt5_prefix != x; then\t\t\r\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\t\t\r\n-           export PKG_CONFIG_PATH\t\t\r\n-         fi\t\t\r\n-       fi\t\t\r\n-     else\t\t\r\n-       case $build_os in\t\t\r\n-         *darwin*)\t\t\r\n-           BUILD_OS=darwin\t\t\r\n-           ;;\t\t\r\n-         *)\t\t\r\n-           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\t\t\r\n-           AC_PATH_TOOL([OTOOL], [otool], otool)\t\t\r\n-           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\t\t\r\n-           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\t\t\r\n-           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\t\t\r\n-           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\t\t\r\n-\t\t\r\n-           dnl libtool will try to strip the static lib, which is a problem for\t\t\r\n-           dnl cross-builds because strip attempts to call a hard-coded ld,\t\t\r\n-           dnl which may not exist in the path. Stripping the .a is not\t\t\r\n-           dnl necessary, so just disable it.\t\t\r\n-           old_striplib=\t\t\r\n-           ;;\t\t\r\n-       esac\t\t\r\n-     fi\t\t\r\n-\t\t\r\n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\t\t\r\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\t\t\r\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\t\t\r\n-     ;;\t\t\r\n-   *linux*)\t\t\r\n-     TARGET_OS=linux\t\t\r\n-     ;;\t\t\r\n-   *)\t\t\r\n-     ;;\t\t\r\n-esac\t\t\r\n-\t\t\r\n-if test x$use_comparison_tool != xno; then\t\t\r\n-  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_comparison_tool_reorg_tests != xno; then\t\t\r\n-  if test x$use_comparison_tool = x; then\t\t\r\n-    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\t\t\r\n-  fi\t\t\r\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\t\t\r\n-else\t\t\r\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_extended_rpc_tests != xno; then\t\t\r\n-  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_lcov = xyes; then\t\t\r\n-  if test x$LCOV = x; then\t\t\r\n-    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\t\t\r\n-  fi\t\t\r\n-  if test x$GCOV = x; then\t\t\r\n-    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\t\t\r\n-  fi\t\t\r\n-  if test x$JAVA = x; then\t\t\r\n-    AC_MSG_ERROR(\"lcov testing requested but java not found\")\t\t\r\n-  fi\t\t\r\n-  if test x$PYTHON = x; then\t\t\r\n-    AC_MSG_ERROR(\"lcov testing requested but python not found\")\t\t\r\n-  fi\t\t\r\n-  if test x$GENHTML = x; then\t\t\r\n-    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\t\t\r\n-  fi\t\t\r\n-  if test x$use_comparison_tool = x; then\t\t\r\n-    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\t\t\r\n-  fi\t\t\r\n-  LCOV=\"$LCOV --gcov-tool=$GCOV\"\t\t\r\n-  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\t\t\r\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl Check for endianness\t\t\r\n-AC_C_BIGENDIAN\t\t\r\n-\t\t\r\n-dnl Check for pthread compile/link requirements\t\t\r\n-AX_PTHREAD\t\t\r\n-\t\t\r\n-# The following macro will add the necessary defines to bitcoin-config.h, but\t\t\r\n-# they also need to be passed down to any subprojects. Pull the results out of\t\t\r\n-# the cache and add them to CPPFLAGS.\t\t\r\n-AC_SYS_LARGEFILE\t\t\r\n-# detect POSIX or GNU variant of strerror_r\t\t\r\n-AC_FUNC_STRERROR_R\t\t\r\n-\t\t\r\n-if test x$ac_cv_sys_file_offset_bits != x &&\t\t\r\n-   test x$ac_cv_sys_file_offset_bits != xno &&\t\t\r\n-   test x$ac_cv_sys_file_offset_bits != xunknown; then\t\t\r\n-  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$ac_cv_sys_large_files != x &&\t\t\r\n-   test x$ac_cv_sys_large_files != xno &&\t\t\r\n-   test x$ac_cv_sys_large_files != xunknown; then\t\t\r\n-  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\t\t\r\n-fi\t\t\r\n-\t\t\r\n-AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\t\t\r\n-\t\t\r\n-AX_GCC_FUNC_ATTRIBUTE([visibility])\t\t\r\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\t\t\r\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\t\t\r\n-\t\t\r\n-if test x$use_glibc_compat != xno; then\t\t\r\n-\t\t\r\n-  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\t\t\r\n-  #in anyway for back-compat.\t\t\r\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\t\t\r\n-\t\t\r\n-  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\t\t\r\n-  # See which one is present here.\t\t\r\n-  AC_MSG_CHECKING(__fdelt_chk type)\t\t\r\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\t\t\r\n-                    #undef _FORTIFY_SOURCE\t\t\r\n-                  #endif\t\t\r\n-                  #define _FORTIFY_SOURCE 2\t\t\r\n-                  #include <sys/select.h>\t\t\r\n-     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\t\t\r\n-    [ fdelt_type=\"long unsigned int\"],\t\t\r\n-    [ fdelt_type=\"long int\"])\t\t\r\n-  AC_MSG_RESULT($fdelt_type)\t\t\r\n-  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\t\t\r\n-else\t\t\r\n-  AC_SEARCH_LIBS([clock_gettime],[rt])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$TARGET_OS != xwindows; then\t\t\r\n-  # All windows code is PIC, forcing it on just adds useless compile warnings\t\t\r\n-  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_hardening != xno; then\t\t\r\n-  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\t\t\r\n-  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\t\t\r\n-\t\t\r\n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\t\t\r\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\t\t\r\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\t\t\r\n-    ])\t\t\r\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\t\t\r\n-  ])\t\t\r\n-\t\t\r\n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\t\t\r\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\t\t\r\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\t\t\r\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\t\t\r\n-\t\t\r\n-  if test x$TARGET_OS != xwindows; then\t\t\r\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\t\t\r\n-    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  case $host in\t\t\r\n-    *mingw*)\t\t\r\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\t\t\r\n-    ;;\t\t\r\n-  esac\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\t\t\r\n-if test x$TARGET_OS = xdarwin; then\t\t\r\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\t\t\r\n-AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\t\t\r\n-AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\t\t\r\n-\t\t\r\n-AC_CHECK_DECLS([strnlen])\t\t\r\n-\t\t\r\n-AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\t\t\r\n-\t\t[#if HAVE_ENDIAN_H\t\t\r\n-                 #include <endian.h>\t\t\r\n-                 #elif HAVE_SYS_ENDIAN_H\t\t\r\n-                 #include <sys/endian.h>\t\t\r\n-                 #endif])\t\t\r\n-\t\t\r\n-AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\t\t\r\n-\t\t[#if HAVE_BYTESWAP_H\t\t\r\n-                 #include <byteswap.h>\t\t\r\n-                 #endif])\t\t\r\n-\t\t\r\n-dnl Check for MSG_NOSIGNAL\t\t\r\n-AC_MSG_CHECKING(for MSG_NOSIGNAL)\t\t\r\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\t\t\r\n- [[ int f = MSG_NOSIGNAL; ]])],\t\t\r\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\t\t\r\n- [ AC_MSG_RESULT(no)]\t\t\r\n-)\t\t\r\n-\t\t\r\n-AC_MSG_CHECKING([for visibility attribute])\t\t\r\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\t\t\r\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\t\t\r\n-  int main(){}\t\t\r\n-  ])],\t\t\r\n-  [\t\t\r\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\t\t\r\n-    AC_MSG_RESULT(yes)\t\t\r\n-  ],\t\t\r\n-  [\t\t\r\n-    AC_MSG_RESULT(no)\t\t\r\n-    if test x$use_reduce_exports = xyes; then\t\t\r\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\t\t\r\n-    fi\t\t\r\n-  ]\t\t\r\n-)\t\t\r\n-\t\t\r\n-if test x$use_reduce_exports = xyes; then\t\t\r\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\t\t\r\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-LEVELDB_CPPFLAGS=\t\t\r\n-LIBLEVELDB=\t\t\r\n-LIBMEMENV=\t\t\r\n-AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\t\t\r\n-AC_SUBST(LEVELDB_CPPFLAGS)\t\t\r\n-AC_SUBST(LIBLEVELDB)\t\t\r\n-AC_SUBST(LIBMEMENV)\t\t\r\n-\t\t\r\n-if test x$enable_wallet != xno; then\t\t\r\n-    dnl Check for libdb_cxx only if wallet enabled\t\t\r\n-    BITCOIN_FIND_BDB48\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl Check for libminiupnpc (optional)\t\t\r\n-if test x$use_upnp != xno; then\t\t\r\n-  AC_CHECK_HEADERS(\t\t\r\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\t\t\r\n-    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\t\t\r\n-    [have_miniupnpc=no]\t\t\r\n-  )\t\t\r\n-fi\t\t\r\n-\t\t\r\n-BITCOIN_QT_INIT\t\t\r\n-\t\t\r\n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\t\t\r\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\t\t\r\n-\t\t\r\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\t\t\r\n-    use_boost=no\t\t\r\n-else\t\t\r\n-    use_boost=yes\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_boost = xyes; then\t\t\r\n-\t\t\r\n-dnl Check for boost libs\t\t\r\n-AX_BOOST_BASE\t\t\r\n-AX_BOOST_SYSTEM\t\t\r\n-AX_BOOST_FILESYSTEM\t\t\r\n-AX_BOOST_PROGRAM_OPTIONS\t\t\r\n-AX_BOOST_THREAD\t\t\r\n-AX_BOOST_CHRONO\t\t\r\n-\t\t\r\n-\t\t\r\n-if test x$use_reduce_exports = xyes; then\t\t\r\n-  AC_MSG_CHECKING([for working boost reduced exports])\t\t\r\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\t\t\r\n-  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\t\t\r\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\t\t\r\n-      @%:@include <boost/version.hpp>\t\t\r\n-    ]], [[\t\t\r\n-      #if BOOST_VERSION >= 104900\t\t\r\n-      // Everything is okay\t\t\r\n-      #else\t\t\r\n-      #  error Boost version is too old\t\t\r\n-      #endif\t\t\r\n-    ]])],[\t\t\r\n-      AC_MSG_RESULT(yes)\t\t\r\n-    ],[\t\t\r\n-    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\t\t\r\n-  ])\t\t\r\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\t\t\r\n-fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_reduce_exports = xyes; then\t\t\r\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\t\t\r\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_tests = xyes; then\t\t\r\n-\t\t\r\n-  if test x$HEXDUMP = x; then\t\t\r\n-    AC_MSG_ERROR(hexdump is required for tests)\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-\t\t\r\n-  if test x$use_boost = xyes; then\t\t\r\n-\t\t\r\n-  AX_BOOST_UNIT_TEST_FRAMEWORK\t\t\r\n-\t\t\r\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\t\t\r\n-  AC_MSG_CHECKING([for dynamic linked boost test])\t\t\r\n-  TEMP_LIBS=\"$LIBS\"\t\t\r\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\t\t\r\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\t\t\r\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\t\t\r\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\t\t\r\n-       #define BOOST_TEST_DYN_LINK\t\t\r\n-       #define BOOST_TEST_MAIN\t\t\r\n-        #include <boost/test/unit_test.hpp>\t\t\r\n-\t\t\r\n-       ])],\t\t\r\n-    [AC_MSG_RESULT(yes)]\t\t\r\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\t\t\r\n-    [AC_MSG_RESULT(no)])\t\t\r\n-  LIBS=\"$TEMP_LIBS\"\t\t\r\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\t\t\r\n-\t\t\r\n-  fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_boost = xyes; then\t\t\r\n-\t\t\r\n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\t\t\r\n-\t\t\r\n-\t\t\r\n-dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\t\t\r\n-dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\t\t\r\n-dnl the abi. This was fixed in 1.57.\t\t\r\n-\t\t\r\n-dnl When building against that installed version using c++11, the headers pick up\t\t\r\n-dnl on the native c++11 scoped enum support and enable it, however it will fail to\t\t\r\n-dnl link. This can be worked around by disabling c++11 scoped enums if linking will\t\t\r\n-dnl fail.\t\t\r\n-dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\t\t\r\n-\t\t\r\n-TEMP_LIBS=\"$LIBS\"\t\t\r\n-LIBS=\"$BOOST_LIBS $LIBS\"\t\t\r\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\t\t\r\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\t\t\r\n-AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\t\t\r\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\t\t\r\n-  #include \"boost/config.hpp\"\t\t\r\n-  #include \"boost/version.hpp\"\t\t\r\n-  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\t\t\r\n-  #define BOOST_NO_SCOPED_ENUMS\t\t\r\n-  #define BOOST_NO_CXX11_SCOPED_ENUMS\t\t\r\n-  #define CHECK\t\t\r\n-  #endif\t\t\r\n-  #include \"boost/filesystem.hpp\"\t\t\r\n-  ]],[[\t\t\r\n-  #if defined(CHECK)\t\t\r\n-    boost::filesystem::copy_file(\"foo\", \"bar\");\t\t\r\n-  #else\t\t\r\n-    choke;\t\t\r\n-  #endif\t\t\r\n-  ]])],\t\t\r\n-  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\t\t\r\n-LIBS=\"$TEMP_LIBS\"\t\t\r\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\t\t\r\n-\t\t\r\n-dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\t\t\r\n-dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\t\t\r\n-dnl a working version is available, else fall back to sleep. sleep was removed\t\t\r\n-dnl after 1.56.\t\t\r\n-dnl If neither is available, abort.\t\t\r\n-TEMP_LIBS=\"$LIBS\"\t\t\r\n-LIBS=\"$BOOST_LIBS $LIBS\"\t\t\r\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\t\t\r\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\t\t\r\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\t\t\r\n-  #include <boost/thread/thread.hpp>\t\t\r\n-  #include <boost/version.hpp>\t\t\r\n-  ]],[[\t\t\r\n-  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\t\t\r\n-      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\t\t\r\n-  #else\t\t\r\n-   choke me\t\t\r\n-  #endif\t\t\r\n-  ]])],\t\t\r\n-  [boost_sleep=yes;\t\t\r\n-     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\t\t\r\n-  [boost_sleep=no])\t\t\r\n-LIBS=\"$TEMP_LIBS\"\t\t\r\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\t\t\r\n-\t\t\r\n-if test x$boost_sleep != xyes; then\t\t\r\n-TEMP_LIBS=\"$LIBS\"\t\t\r\n-LIBS=\"$BOOST_LIBS $LIBS\"\t\t\r\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\t\t\r\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\t\t\r\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\t\t\r\n-  #include <boost/version.hpp>\t\t\r\n-  #include <boost/thread.hpp>\t\t\r\n-  #include <boost/date_time/posix_time/posix_time_types.hpp>\t\t\r\n-  ]],[[\t\t\r\n-  #if BOOST_VERSION <= 105600\t\t\r\n-      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\t\t\r\n-  #else\t\t\r\n-   choke me\t\t\r\n-  #endif\t\t\r\n-  ]])],\t\t\r\n-  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\t\t\r\n-  [boost_sleep=no])\t\t\r\n-LIBS=\"$TEMP_LIBS\"\t\t\r\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$boost_sleep != xyes; then\t\t\r\n-  AC_MSG_ERROR(No working boost sleep implementation found.)\t\t\r\n-fi\t\t\r\n-\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$use_pkgconfig = xyes; then\t\t\r\n-\t\t\r\n-  if test x\"$PKG_CONFIG\" = \"x\"; then\t\t\r\n-    AC_MSG_ERROR(pkg-config not found.)\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  : #NOP\t\t\r\n-  m4_ifdef(\t\t\r\n-    [PKG_CHECK_MODULES],\t\t\r\n-    [\t\t\r\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\t\t\r\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\t\t\r\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\t\t\r\n-      if test x$use_qr != xno; then\t\t\r\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\t\t\r\n-      fi\t\t\r\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\t\t\r\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\t\t\r\n-        if test x$TARGET_OS != xwindows; then\t\t\r\n-          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\t\t\r\n-        fi\t\t\r\n-      fi\t\t\r\n-\t\t\r\n-      if test \"x$use_zmq\" = \"xyes\"; then\t\t\r\n-        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\t\t\r\n-          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\t\t\r\n-          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\t\t\r\n-           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\t\t\r\n-           use_zmq=no])\t\t\r\n-      else\t\t\r\n-          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\t\t\r\n-      fi\t\t\r\n-    ]\t\t\r\n-  )\t\t\r\n-else\t\t\r\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\t\t\r\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\t\t\r\n-\t\t\r\n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\t\t\r\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\t\t\r\n-\t\t\r\n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\t\t\r\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\t\t\r\n-    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\t\t\r\n-    if test x$TARGET_OS != xwindows; then\t\t\r\n-      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\t\t\r\n-    fi\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  if test \"x$use_zmq\" = \"xyes\"; then\t\t\r\n-     AC_CHECK_HEADER([zmq.h],\t\t\r\n-       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\t\t\r\n-       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\t\t\r\n-        use_zmq=no\t\t\r\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\t\t\r\n-     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\t\t\r\n-       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\t\t\r\n-        use_zmq=no\t\t\r\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\t\t\r\n-  else\t\t\r\n-    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\t\t\r\n-  if test x$use_qr != xno; then\t\t\r\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\t\t\r\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\t\t\r\n-  fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl univalue check\t\t\r\n-\t\t\r\n-if test x$system_univalue != xno ; then\t\t\r\n-  found_univalue=no\t\t\r\n-  if test x$use_pkgconfig = xyes; then\t\t\r\n-    : #NOP\t\t\r\n-    m4_ifdef(\t\t\r\n-      [PKG_CHECK_MODULES],\t\t\r\n-      [\t\t\r\n-        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\t\t\r\n-      ]\t\t\r\n-    )\t\t\r\n-  else\t\t\r\n-    AC_CHECK_HEADER([univalue.h],[\t\t\r\n-      AC_CHECK_LIB([univalue],  [main],[\t\t\r\n-        UNIVALUE_LIBS=-lunivalue\t\t\r\n-        found_univalue=yes\t\t\r\n-      ],[true])\t\t\r\n-    ],[true])\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  if test x$found_univalue = xyes ; then\t\t\r\n-    system_univalue=yes\t\t\r\n-  elif test x$system_univalue = xyes ; then\t\t\r\n-    AC_MSG_ERROR([univalue not found])\t\t\r\n-  else\t\t\r\n-    system_univalue=no\t\t\r\n-  fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$system_univalue = xno ; then\t\t\r\n-  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\t\t\r\n-  UNIVALUE_LIBS='univalue/libunivalue.la'\t\t\r\n-fi\t\t\r\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$system_univalue = xno])\t\t\r\n-AC_SUBST(UNIVALUE_CFLAGS)\t\t\r\n-AC_SUBST(UNIVALUE_LIBS)\t\t\r\n-\t\t\r\n-CXXFLAGS_TEMP=\"$CXXFLAGS\"\t\t\r\n-LIBS_TEMP=\"$LIBS\"\t\t\r\n-CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\t\t\r\n-LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\t\t\r\n-AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\t\t\r\n-CXXFLAGS=\"$CXXFLAGS_TEMP\"\t\t\r\n-LIBS=\"$LIBS_TEMP\"\t\t\r\n-\t\t\r\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\t\t\r\n-\t\t\r\n-AC_MSG_CHECKING([whether to build bitcoind])\t\t\r\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\t\t\r\n-AC_MSG_RESULT($build_bitcoind)\t\t\r\n-\t\t\r\n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\t\t\r\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\t\t\r\n-AC_MSG_RESULT($build_bitcoin_utils)\t\t\r\n-\t\t\r\n-AC_MSG_CHECKING([whether to build libraries])\t\t\r\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\t\t\r\n-if test x$build_bitcoin_libs = xyes; then\t\t\r\n-  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\t\t\r\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\t\t\r\n-fi\t\t\r\n-AC_MSG_RESULT($build_bitcoin_libs)\t\t\r\n-\t\t\r\n-AC_LANG_POP\t\t\r\n-\t\t\r\n-if test \"x$use_ccache\" != \"xno\"; then\t\t\r\n-  AC_MSG_CHECKING(if ccache should be used)\t\t\r\n-  if test x$CCACHE = x; then\t\t\r\n-    if test \"x$use_ccache\" = \"xyes\"; then\t\t\r\n-      AC_MSG_ERROR([ccache not found.]);\t\t\r\n-    else\t\t\r\n-      use_ccache=no\t\t\r\n-    fi\t\t\r\n-  else\t\t\r\n-    use_ccache=yes\t\t\r\n-    CC=\"$ac_cv_path_CCACHE $CC\"\t\t\r\n-    CXX=\"$ac_cv_path_CCACHE $CXX\"\t\t\r\n-  fi\t\t\r\n-  AC_MSG_RESULT($use_ccache)\t\t\r\n-fi\t\t\r\n-if test \"x$use_ccache\" = \"xyes\"; then\t\t\r\n-    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl enable wallet\t\t\r\n-AC_MSG_CHECKING([if wallet should be enabled])\t\t\r\n-if test x$enable_wallet != xno; then\t\t\r\n-  AC_MSG_RESULT(yes)\t\t\r\n-  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\t\t\r\n-\t\t\r\n-else\t\t\r\n-  AC_MSG_RESULT(no)\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl enable upnp support\t\t\r\n-AC_MSG_CHECKING([whether to build with support for UPnP])\t\t\r\n-if test x$have_miniupnpc = xno; then\t\t\r\n-  if test x$use_upnp = xyes; then\t\t\r\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\t\t\r\n-  fi\t\t\r\n-  AC_MSG_RESULT(no)\t\t\r\n-else\t\t\r\n-  if test x$use_upnp != xno; then\t\t\r\n-    AC_MSG_RESULT(yes)\t\t\r\n-    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\t\t\r\n-    use_upnp=yes\t\t\r\n-    upnp_setting=0\t\t\r\n-    if test x$use_upnp_default != xno; then\t\t\r\n-      use_upnp_default=yes\t\t\r\n-      upnp_setting=1\t\t\r\n-    fi\t\t\r\n-    AC_MSG_RESULT($use_upnp_default)\t\t\r\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\t\t\r\n-    if test x$TARGET_OS = xwindows; then\t\t\r\n-      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\t\t\r\n-    fi\t\t\r\n-  else\t\t\r\n-    AC_MSG_RESULT(no)\t\t\r\n-  fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-dnl these are only used when qt is enabled\t\t\r\n-BUILD_TEST_QT=\"\"\t\t\r\n-if test x$bitcoin_enable_qt != xno; then\t\t\r\n-  dnl enable dbus support\t\t\r\n-  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\t\t\r\n-  if test x$bitcoin_enable_qt_dbus != xno; then\t\t\r\n-    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\t\t\r\n-  fi\t\t\r\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\t\t\r\n-\t\t\r\n-  dnl enable qr support\t\t\r\n-  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\t\t\r\n-  if test x$have_qrencode = xno; then\t\t\r\n-    if test x$use_qr = xyes; then\t\t\r\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\t\t\r\n-    fi\t\t\r\n-    AC_MSG_RESULT(no)\t\t\r\n-  else\t\t\r\n-    if test x$use_qr != xno; then\t\t\r\n-      AC_MSG_RESULT(yes)\t\t\r\n-      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\t\t\r\n-      use_qr=yes\t\t\r\n-    else\t\t\r\n-      AC_MSG_RESULT(no)\t\t\r\n-    fi\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  if test x$XGETTEXT = x; then\t\t\r\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\t\t\r\n-  fi\t\t\r\n-\t\t\r\n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\t\t\r\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\t\t\r\n-    AC_MSG_RESULT([yes])\t\t\r\n-    BUILD_TEST_QT=\"yes\"\t\t\r\n-  else\t\t\r\n-    AC_MSG_RESULT([no])\t\t\r\n-  fi\t\t\r\n-fi\t\t\r\n-\t\t\r\n-AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\t\t\r\n-\t\t\r\n-AC_MSG_CHECKING([whether to build test_bitcoin])\t\t\r\n-if test x$use_tests = xyes; then\t\t\r\n-  AC_MSG_RESULT([yes])\t\t\r\n-  BUILD_TEST=\"yes\"\t\t\r\n-else\t\t\r\n-  AC_MSG_RESULT([no])\t\t\r\n-  BUILD_TEST=\"\"\t\t\r\n-fi\t\t\r\n-\t\t\r\n-AC_MSG_CHECKING([whether to reduce exports])\t\t\r\n-if test x$use_reduce_exports = xyes; then\t\t\r\n-  AC_MSG_RESULT([yes])\t\t\r\n-else\t\t\r\n-  AC_MSG_RESULT([no])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\t\t\r\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\t\t\r\n-AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\t\t\r\n-AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\t\t\r\n-AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\t\t\r\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\t\t\r\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\t\t\r\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\t\t\r\n-AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\t\t\r\n-AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\t\t\r\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\t\t\r\n-AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\t\t\r\n-AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\t\t\r\n-AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\t\t\r\n-AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\t\t\r\n-\t\t\r\n-AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\t\t\r\n-AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\t\t\r\n-AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\t\t\r\n-AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\t\t\r\n-AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\t\t\r\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\t\t\r\n-AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\t\t\r\n-AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\t\t\r\n-define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\t\t\r\n-AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\t\t\r\n-AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\t\t\r\n-AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\t\t\r\n-AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\t\t\r\n-AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\t\t\r\n-AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\t\t\r\n-AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\t\t\r\n-AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\t\t\r\n-AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\t\t\r\n-AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\t\t\r\n-\t\t\r\n-AC_SUBST(RELDFLAGS)\t\t\r\n-AC_SUBST(HARDENED_CXXFLAGS)\t\t\r\n-AC_SUBST(HARDENED_CPPFLAGS)\t\t\r\n-AC_SUBST(HARDENED_LDFLAGS)\t\t\r\n-AC_SUBST(PIC_FLAGS)\t\t\r\n-AC_SUBST(PIE_FLAGS)\t\t\r\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\t\t\r\n-AC_SUBST(USE_UPNP)\t\t\r\n-AC_SUBST(USE_QRCODE)\t\t\r\n-AC_SUBST(BOOST_LIBS)\t\t\r\n-AC_SUBST(TESTDEFS)\t\t\r\n-AC_SUBST(LEVELDB_TARGET_FLAGS)\t\t\r\n-AC_SUBST(MINIUPNPC_CPPFLAGS)\t\t\r\n-AC_SUBST(MINIUPNPC_LIBS)\t\t\r\n-AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\t\t\r\n-AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\t\t\r\n-AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\t\t\r\n-\t\t\r\n-dnl boost's m4 checks do something really nasty: they export these vars. As a\t\t\r\n-dnl result, they leak into secp256k1's configure and crazy things happen.\t\t\r\n-dnl Until this is fixed upstream and we've synced, we'll just un-export them.\t\t\r\n-CPPFLAGS_TEMP=\"$CPPFLAGS\"\t\t\r\n-unset CPPFLAGS\t\t\r\n-CPPFLAGS=\"$CPPFLAGS_TEMP\"\t\t\r\n-\t\t\r\n-LDFLAGS_TEMP=\"$LDFLAGS\"\t\t\r\n-unset LDFLAGS\t\t\r\n-LDFLAGS=\"$LDFLAGS_TEMP\"\t\t\r\n-\t\t\r\n-LIBS_TEMP=\"$LIBS\"\t\t\r\n-unset LIBS\t\t\r\n-LIBS=\"$LIBS_TEMP\"\t\t\r\n-\t\t\r\n-PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\t\t\r\n-unset PKG_CONFIG_PATH\t\t\r\n-PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\t\t\r\n-\t\t\r\n-PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\t\t\r\n-unset PKG_CONFIG_LIBDIR\t\t\r\n-PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\t\t\r\n-\t\t\r\n-if test x$system_univalue = xno; then\t\t\r\n-  AC_CONFIG_SUBDIRS([src/univalue])\t\t\r\n-fi\t\t\r\n-\t\t\r\n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\t\t\r\n-AC_CONFIG_SUBDIRS([src/secp256k1])\t\t\r\n-\t\t\r\n-AC_OUTPUT\t\t\r\n-\t\t\r\n-dnl Taken from https://wiki.debian.org/RpathIssue\t\t\r\n-case $host in\t\t\r\n-   *-*-linux-gnu)\t\t\r\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\t\t\r\n-     sed < libtool > libtool-2 \\\t\t\r\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\t\t\r\n-     mv libtool-2 libtool\t\t\r\n-     chmod 755 libtool\t\t\r\n-   ;;\t\t\r\n-esac\t\t\r\n-\t\t\r\n-dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\t\t\r\n-case ${OS} in\t\t\r\n-   *Windows*)\t\t\r\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\t\t\r\n-     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\t\t\r\n-   ;;\t\t\r\n-esac\t\t\r\n@mrCertified\r\nPropose file change\r\n\r\n\r\nDeleted revive to al data sourceconfigure.ac\r\n\r\nAdd an optional extended descriptionÃ¢ÂÂ¦\r\nPropose file change  Returned\r\nStatus API Training Shop Blog About\r\nÃÂ© 2016 GitHub, Inc. Terms Privacy Security Contact Help",
   "changed_files" : 1,
   "closed_at" : "2016-05-31T13:44:55Z",
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7867/comments",
   "commits" : 1,
   "commits_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7867/commits",
   "created_at" : "2016-04-13T02:20:41Z",
   "deletions" : 1090,
   "diff_url" : "https://github.com/bitcoin/bitcoin/pull/7867.diff",
   "head" : {
      "label" : "mrCertified:patch-1",
      "ref" : "patch-1",
      "repo" : {
         "archive_url" : "https://api.github.com/repos/mrCertified/bitcoin/{archive_format}{/ref}",
         "assignees_url" : "https://api.github.com/repos/mrCertified/bitcoin/assignees{/user}",
         "blobs_url" : "https://api.github.com/repos/mrCertified/bitcoin/git/blobs{/sha}",
         "branches_url" : "https://api.github.com/repos/mrCertified/bitcoin/branches{/branch}",
         "clone_url" : "https://github.com/mrCertified/bitcoin.git",
         "collaborators_url" : "https://api.github.com/repos/mrCertified/bitcoin/collaborators{/collaborator}",
         "comments_url" : "https://api.github.com/repos/mrCertified/bitcoin/comments{/number}",
         "commits_url" : "https://api.github.com/repos/mrCertified/bitcoin/commits{/sha}",
         "compare_url" : "https://api.github.com/repos/mrCertified/bitcoin/compare/{base}...{head}",
         "contents_url" : "https://api.github.com/repos/mrCertified/bitcoin/contents/{+path}",
         "contributors_url" : "https://api.github.com/repos/mrCertified/bitcoin/contributors",
         "created_at" : "2016-04-13T02:13:19Z",
         "default_branch" : "master",
         "deployments_url" : "https://api.github.com/repos/mrCertified/bitcoin/deployments",
         "description" : "Bitcoin Core integration/staging tree",
         "downloads_url" : "https://api.github.com/repos/mrCertified/bitcoin/downloads",
         "events_url" : "https://api.github.com/repos/mrCertified/bitcoin/events",
         "fork" : true,
         "forks" : 0,
         "forks_count" : 0,
         "forks_url" : "https://api.github.com/repos/mrCertified/bitcoin/forks",
         "full_name" : "mrCertified/bitcoin",
         "git_commits_url" : "https://api.github.com/repos/mrCertified/bitcoin/git/commits{/sha}",
         "git_refs_url" : "https://api.github.com/repos/mrCertified/bitcoin/git/refs{/sha}",
         "git_tags_url" : "https://api.github.com/repos/mrCertified/bitcoin/git/tags{/sha}",
         "git_url" : "git://github.com/mrCertified/bitcoin.git",
         "has_downloads" : false,
         "has_issues" : false,
         "has_pages" : false,
         "has_wiki" : false,
         "homepage" : "https://bitcoin.org/en/download",
         "hooks_url" : "https://api.github.com/repos/mrCertified/bitcoin/hooks",
         "html_url" : "https://github.com/mrCertified/bitcoin",
         "id" : 56113421,
         "issue_comment_url" : "https://api.github.com/repos/mrCertified/bitcoin/issues/comments{/number}",
         "issue_events_url" : "https://api.github.com/repos/mrCertified/bitcoin/issues/events{/number}",
         "issues_url" : "https://api.github.com/repos/mrCertified/bitcoin/issues{/number}",
         "keys_url" : "https://api.github.com/repos/mrCertified/bitcoin/keys{/key_id}",
         "labels_url" : "https://api.github.com/repos/mrCertified/bitcoin/labels{/name}",
         "language" : "C++",
         "languages_url" : "https://api.github.com/repos/mrCertified/bitcoin/languages",
         "merges_url" : "https://api.github.com/repos/mrCertified/bitcoin/merges",
         "milestones_url" : "https://api.github.com/repos/mrCertified/bitcoin/milestones{/number}",
         "mirror_url" : null,
         "name" : "bitcoin",
         "notifications_url" : "https://api.github.com/repos/mrCertified/bitcoin/notifications{?since,all,participating}",
         "open_issues" : 0,
         "open_issues_count" : 0,
         "owner" : {
            "avatar_url" : "https://avatars.githubusercontent.com/u/6655094?v=3",
            "events_url" : "https://api.github.com/users/mrCertified/events{/privacy}",
            "followers_url" : "https://api.github.com/users/mrCertified/followers",
            "following_url" : "https://api.github.com/users/mrCertified/following{/other_user}",
            "gists_url" : "https://api.github.com/users/mrCertified/gists{/gist_id}",
            "gravatar_id" : "",
            "html_url" : "https://github.com/mrCertified",
            "id" : 6655094,
            "login" : "mrCertified",
            "organizations_url" : "https://api.github.com/users/mrCertified/orgs",
            "received_events_url" : "https://api.github.com/users/mrCertified/received_events",
            "repos_url" : "https://api.github.com/users/mrCertified/repos",
            "site_admin" : false,
            "starred_url" : "https://api.github.com/users/mrCertified/starred{/owner}{/repo}",
            "subscriptions_url" : "https://api.github.com/users/mrCertified/subscriptions",
            "type" : "User",
            "url" : "https://api.github.com/users/mrCertified"
         },
         "private" : false,
         "pulls_url" : "https://api.github.com/repos/mrCertified/bitcoin/pulls{/number}",
         "pushed_at" : "2016-05-03T18:06:10Z",
         "releases_url" : "https://api.github.com/repos/mrCertified/bitcoin/releases{/id}",
         "size" : 65867,
         "ssh_url" : "git@github.com:mrCertified/bitcoin.git",
         "stargazers_count" : 0,
         "stargazers_url" : "https://api.github.com/repos/mrCertified/bitcoin/stargazers",
         "statuses_url" : "https://api.github.com/repos/mrCertified/bitcoin/statuses/{sha}",
         "subscribers_url" : "https://api.github.com/repos/mrCertified/bitcoin/subscribers",
         "subscription_url" : "https://api.github.com/repos/mrCertified/bitcoin/subscription",
         "svn_url" : "https://github.com/mrCertified/bitcoin",
         "tags_url" : "https://api.github.com/repos/mrCertified/bitcoin/tags",
         "teams_url" : "https://api.github.com/repos/mrCertified/bitcoin/teams",
         "trees_url" : "https://api.github.com/repos/mrCertified/bitcoin/git/trees{/sha}",
         "updated_at" : "2016-04-13T02:13:30Z",
         "url" : "https://api.github.com/repos/mrCertified/bitcoin",
         "watchers" : 0,
         "watchers_count" : 0
      },
      "sha" : "06beb06a415322dbf57352cae32ea18c53309f77",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6655094?v=3",
         "events_url" : "https://api.github.com/users/mrCertified/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrCertified/followers",
         "following_url" : "https://api.github.com/users/mrCertified/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrCertified/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrCertified",
         "id" : 6655094,
         "login" : "mrCertified",
         "organizations_url" : "https://api.github.com/users/mrCertified/orgs",
         "received_events_url" : "https://api.github.com/users/mrCertified/received_events",
         "repos_url" : "https://api.github.com/users/mrCertified/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrCertified/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrCertified/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrCertified"
      }
   },
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/7867",
   "id" : 66256808,
   "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7867",
   "locked" : false,
   "merge_commit_sha" : "9d37bdd398ac4beec594936047daec756ca825c0",
   "mergeable" : false,
   "mergeable_state" : "dirty",
   "merged" : false,
   "merged_at" : null,
   "merged_by" : null,
   "milestone" : null,
   "number" : 7867,
   "patch_url" : "https://github.com/bitcoin/bitcoin/pull/7867.patch",
   "review_comment_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}",
   "review_comments" : 0,
   "review_comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7867/comments",
   "state" : "closed",
   "statuses_url" : "https://api.github.com/repos/bitcoin/bitcoin/statuses/06beb06a415322dbf57352cae32ea18c53309f77",
   "title" : "deleted restored sampler Configure.ac restored bits to all networks =(%master%masterCode[{rLi}])",
   "updated_at" : "2016-05-31T13:44:56Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7867",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6655094?v=3",
      "events_url" : "https://api.github.com/users/mrCertified/events{/privacy}",
      "followers_url" : "https://api.github.com/users/mrCertified/followers",
      "following_url" : "https://api.github.com/users/mrCertified/following{/other_user}",
      "gists_url" : "https://api.github.com/users/mrCertified/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/mrCertified",
      "id" : 6655094,
      "login" : "mrCertified",
      "organizations_url" : "https://api.github.com/users/mrCertified/orgs",
      "received_events_url" : "https://api.github.com/users/mrCertified/received_events",
      "repos_url" : "https://api.github.com/users/mrCertified/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/mrCertified/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/mrCertified/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/mrCertified"
   }
}

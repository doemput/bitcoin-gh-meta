[
   {
      "body" : "utACK",
      "created_at" : "2016-05-22T10:04:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220824169",
      "id" : 220824169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-22T10:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220824169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r64159533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/64159533"
         }
      },
      "body" : "Should probably note somewhere that the two Write methods are partially-mutually-exclusive per-object.",
      "commit_id" : "888483098e60f2a944f1d246bbfec4d14a2975f8",
      "created_at" : "2016-05-23T00:25:45Z",
      "diff_hunk" : "@@ -171,16 +171,18 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64]);\n \n-/** SipHash-2-4, using a uint64_t-based (rather than byte-based) interface */\n+/** SipHash-2-4 */\n class CSipHasher\n {\n private:\n     uint64_t v[4];\n+    uint64_t tmp;\n     int count;\n \n public:\n     CSipHasher(uint64_t k0, uint64_t k1);\n     CSipHasher& Write(uint64_t data);\n+    CSipHasher& Write(const unsigned char* data, size_t size);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r64159533",
      "id" : 64159533,
      "original_commit_id" : "2e099337ef4071ab6e959345d293d2be1ff919af",
      "original_position" : 16,
      "path" : "src/hash.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086",
      "updated_at" : "2016-06-07T14:32:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/64159533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "This is one of those things where having a cryptographic hash function probably isnt /critical/, but is really preferable. Is the speed of SHA256 really slow enough to matter here afer you accepted a new TCP connection (and all associated OS overhead of doing so)?",
      "created_at" : "2016-05-23T02:37:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220875999",
      "id" : 220875999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T02:37:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220875999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "nACK\r\n\r\nThis really does need to be a cryptographic hash function.\r\n\r\nThe performance overhead of opening the connection is almost certainly many many times the cost of this comparison.",
      "created_at" : "2016-05-23T04:11:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220883912",
      "id" : 220883912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T04:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220883912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Siphash is a cryptographic function with all the properties we would desire here: https://eprint.iacr.org/2014/722\r\n\r\nIt is generally suitable any place a cryptographic hash would be used where the small output size wouldn't be an issue.  This is a fine example of such a location, similar to hash tables where the table's smallness makes a larger hash output irrelevant, with only a few hundred peers a 64 bit hash will reliably distinguish them.",
      "created_at" : "2016-05-23T05:19:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220889430",
      "id" : 220889430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T05:19:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220889430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "In principal, yes, SipHash was designed to be effectively a cryptographic hash with small output size, but I don't want to fall into the trap of calling something a cryptographic hash when it has only had one or two cryptanalyses published. If we care about the performance difference here, I'd say it's fine, but I'm not sure that we do?\n\nOn May 22, 2016 10:19:47 PM PDT, Gregory Maxwell <notifications@github.com> wrote:\n>Siphash is a cryptographic function with all the properties we would\n>desire here: https://eprint.iacr.org/2014/722\n>\n>It is generally suitable any place a cryptographic hash would be used\n>where the small output size wouldn't be an issue.  This is a fine\n>example of such a location, similar to hash tables where the table's\n>smallness makes a larger hash output irrelevant, with only a few\n>hundred peers a 64 bit hash will reliably distinguish them.\n>\n>---\n>You are receiving this because you commented.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220889430\n",
      "created_at" : "2016-05-23T06:13:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220895178",
      "id" : 220895178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T06:13:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220895178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@gmaxwell I'll do a fix that still uses SHA256",
      "created_at" : "2016-05-23T07:20:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220904801",
      "id" : 220904801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T07:20:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220904801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Please walk me through the attack you're imagining here.   There are 16 bits of network groups for IPv4, 32 bits for IPv6. In both cases many of the possible values aren't routable on the internet..  Each node has it's own 128-bit secret random seed.  The node prefers to keep four hosts based on how their netgroup is ordered by a salted hash.  The attacker does X and achieves Y.  Help me out with the blanks here. :)\r\n",
      "created_at" : "2016-05-23T09:18:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220928715",
      "id" : 220928715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220928715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell I don't know but with #8088 the performance difference is going to be basically not measurable.\r\n\r\nIt's now reduced to the difference between a single SHA256 vs SipHash and comparison between 256 bits vs 64 bits.",
      "created_at" : "2016-05-23T10:05:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-220939354",
      "id" : 220939354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-23T10:05:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220939354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Come one guys, you can't throw up a bunch of stop signs for security then fail to actually walk me through your security analysis.  We want security but not security cargo cult.\r\n\r\nBeyond performance there is a consistency point here, we should use the same cryptographic hash-function in all the cases where we need some non-normative small hash, unless there is a good reason not to. If there is a reason it's not suitable here, then its likely not suitable in other cases either.",
      "created_at" : "2016-05-24T18:18:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-221358510",
      "id" : 221358510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-24T18:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221358510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "If there is no performance difference, why change it? Might as well use a stronger hash anywhere we can if its free.",
      "created_at" : "2016-05-24T19:11:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-221373159",
      "id" : 221373159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-24T19:11:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221373159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Again, please actually specify the attack.  I gave you a template, fill it out.\r\n\r\n> If the other uses of SipHash fail they at worst are a denial of service attack\r\n\r\nThe usage in addrman is functionally identical to this. \r\n\r\n> if there is no performance difference\r\n\r\nin this PR it's a pretty substantial performance difference (it's about 2ms per connection), though performance can be achieved in other ways that I pointed out.\r\n\r\n> Might as well use a stronger hash \r\n\r\nOn what basis do you believe that another construction would be stronger?",
      "created_at" : "2016-05-24T19:19:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-221374959",
      "id" : 221374959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-24T19:19:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221374959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Again, please actually specify the attack.  I gave you a template, fill it out.\r\n\r\n> If the other uses of SipHash fail they at worst are a denial of service attack\r\n\r\nThe usage in addrman is functionally identical to this. \r\n\r\n> if there is no performance difference\r\n\r\nin this PR it's a pretty substantial performance difference (it's about 2ms per connection), though performance can be achieved in other ways that I pointed out.\r\n\r\n> Might as well use a stronger hash \r\n\r\nOn what basis do you believe that another construction would be stronger?\r\n\r\nAs an aside-- right now the behavior of this is kind of busted. It orders peers by their netgroup and protects four, but it makes no effort to make the four be from different netgroups, which means there is an obvious attack strategy of running four hosts per netgroup in a lots of different netgroups. To avoid that, it should (e.g.) sort by netgroup hash, lastblocktime>0, connection uptime and skip over protecting peers that have the same netgroup as peers that were already protected.\r\n\r\nIt's more than a little disappointing to see furious hand-waving about the hash function when the basic functionality isn't getting anywhere near that amount of attention.",
      "created_at" : "2016-05-24T19:40:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-221379952",
      "id" : 221379952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-24T19:40:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221379952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I think you're all exaggerating:\r\n* @pstratem @TheBlueMatt SipHash is more than sufficient in this case (hell, multiplying the vchGroup (interpreted as a number) by a random odd 64-bit integer likely already results in a sufficiently unpredictable permutation).\r\n* @gmaxwell After caching at the CNode level, performance of the hash function is irrelevant. I think SipHash is more appropriate, but SHA256 is certainly not inappropriate.\r\n\r\nSo let's just combine the approaches.\r\n\r\nI've included #8088 in this PR, and made a few more changes (= make the whole eviction logic work using nKeyedNetGroup, rather than only in the comparison). I've also made CNode::addr const (to make sure the precomputed keyed netgroup doesn't get invalidated) and moved the precomputation to the .cpp file.\r\n\r\n@theuni For combining with #8085, the CNode::CalculateKeyedNetGroup()'s k0 and k1 belong inside ConnMan, and perhaps the CNode::nKeyedNetGroup values do too (to prevent storing ConnMan-dependent information inside CNode).\r\n\r\n@TheBlueMatt I've expanded the comments in CSipHasher.",
      "created_at" : "2016-05-25T13:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-221581063",
      "id" : 221581063,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-25T13:47:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221581063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Roger. Seems CalculateKeyedNetGroup isn't being called, though. I assume it's meant to be called from CNode's ctor?",
      "created_at" : "2016-05-26T16:20:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-221921035",
      "id" : 221921035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-26T16:20:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/221921035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r64921049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/64921049"
         }
      },
      "body" : "includes still needed?",
      "commit_id" : "888483098e60f2a944f1d246bbfec4d14a2975f8",
      "created_at" : "2016-05-27T15:18:27Z",
      "diff_hunk" : "@@ -9,6 +9,8 @@\n #include \"amount.h\"\n #include \"bloom.h\"\n #include \"compat.h\"\n+#include \"crypto/common.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r64921049",
      "id" : 64921049,
      "original_commit_id" : "280e979f8c91c1d89e3f03d3179dfbf8bc01cfeb",
      "original_position" : 4,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086",
      "updated_at" : "2016-06-07T14:32:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/64921049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "utACK (excluding the siphash impl itself, which i'm not qualified to review) either way. I don't see the harm in siphash (see previous disclaimer, though), since the input is at most 32bits anyway. But I agree with @sipa that the hash type shouldn't make much difference anyway once cached.",
      "created_at" : "2016-05-27T16:16:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-222189286",
      "id" : 222189286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-27T16:16:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/222189286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r64995710"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/64995710"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "888483098e60f2a944f1d246bbfec4d14a2975f8",
      "created_at" : "2016-05-28T23:34:07Z",
      "diff_hunk" : "@@ -9,6 +9,8 @@\n #include \"amount.h\"\n #include \"bloom.h\"\n #include \"compat.h\"\n+#include \"crypto/common.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r64995710",
      "id" : 64995710,
      "original_commit_id" : "280e979f8c91c1d89e3f03d3179dfbf8bc01cfeb",
      "original_position" : 4,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086",
      "updated_at" : "2016-06-07T14:32:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/64995710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@theuni Even if you don't think you're the right person to review the SipHash code, you're certainly able to review its tests (the values in the unit test come from another implementation).",
      "created_at" : "2016-05-28T23:35:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-222334570",
      "id" : 222334570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-05-28T23:35:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/222334570",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r66067649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66067649"
         }
      },
      "body" : "This code is not thread-safe - does it matter?\r\n\r\nOtherwise maybe make this a static instance of a structure with the initialization code in the constructor, and [C++11 semantics](http://stackoverflow.com/questions/8102125/is-local-static-variable-initialization-thread-safe-in-c11)  will make sure it will only get initialized once in a thread-safe way.\r\n",
      "commit_id" : "888483098e60f2a944f1d246bbfec4d14a2975f8",
      "created_at" : "2016-06-07T13:16:25Z",
      "diff_hunk" : "@@ -2638,3 +2612,17 @@ bool CBanDB::Read(banmap_t& banSet)\n int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds) {\n     return nNow + (int64_t)(log1p(GetRand(1ULL << 48) * -0.0000000000000035527136788 /* -1/2^48 */) * average_interval_seconds * -1000000.0 + 0.5);\n }\n+\n+/* static */ uint64_t CNode::CalculateKeyedNetGroup(const CAddress& ad)\n+{\n+    static uint64_t k0 = 0, k1 = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r66067649",
      "id" : 66067649,
      "original_commit_id" : "9d1da31c1fcbad584675241fcecb8839aa8e5da5",
      "original_position" : 132,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086",
      "updated_at" : "2016-06-07T14:32:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66067649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r66082428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66082428"
         }
      },
      "body" : "It doesn't matter (the old code wasn't thread safe either), but better use good practices, and using static initializers is trivial. Fixed.",
      "commit_id" : "888483098e60f2a944f1d246bbfec4d14a2975f8",
      "created_at" : "2016-06-07T14:34:55Z",
      "diff_hunk" : "@@ -2638,3 +2612,17 @@ bool CBanDB::Read(banmap_t& banSet)\n int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds) {\n     return nNow + (int64_t)(log1p(GetRand(1ULL << 48) * -0.0000000000000035527136788 /* -1/2^48 */) * average_interval_seconds * -1000000.0 + 0.5);\n }\n+\n+/* static */ uint64_t CNode::CalculateKeyedNetGroup(const CAddress& ad)\n+{\n+    static uint64_t k0 = 0, k1 = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#discussion_r66082428",
      "id" : 66082428,
      "original_commit_id" : "9d1da31c1fcbad584675241fcecb8839aa8e5da5",
      "original_position" : 132,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8086",
      "updated_at" : "2016-06-07T14:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/66082428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I've ported the SIPhash test to python using https://github.com/majek/pysiphash , source is here: https://gist.github.com/laanwj/b292fedecf6029fc5307968b965e3366\r\n\r\nHowever I get mismatching results:\r\n```\r\nOK b''\r\nOK b'00'\r\nMismatch for b'01020304050607': 15dd418547d24915 versus 93f5f5799a932462\r\nMismatch for b'08090a0b0c0d0e0f': 242272d800a348b4 versus 3f2acc7f57c29bdb\r\nMismatch for b'1011': 6307967a77964b0c versus 4bc1b3f0968dd39c\r\nMismatch for b'12131415161718191a': c5b1fd856729544f versus 2f2e6163076bcfad\r\nMismatch for b'1b1c1d1e1f': 7a789bd84a5c633b versus 7127512f72f27cce\r\nMismatch for b'2021222324252627': ad2b02a542ea7faa versus 0e3ea96b5304a7d0\r\nMismatch for b'28292a2b2c2d2e2f': 3c24a11813c26e21 versus e612a3cb9ecba951\r\nOK b'000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f'\r\n```\r\nAs some of the results do match, I'm not sure whether I made a mistake in my conversion, or whether there's a bug in either bitcoin core's or that python implementation.\r\n",
      "created_at" : "2016-06-08T13:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-224583330",
      "id" : 224583330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-06-08T13:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/224583330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Oh, found the issue: I assumed .Finalize would finalize and reset the hasher. It just returns the current hash value, allowing further calls to continue. When I pass through the previous value, it works fine. Updated https://gist.github.com/laanwj/b292fedecf6029fc5307968b965e3366\r\n\r\nutACK 8884830",
      "created_at" : "2016-06-08T13:12:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8086#issuecomment-224584015",
      "id" : 224584015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8086",
      "updated_at" : "2016-06-08T13:13:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/224584015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]

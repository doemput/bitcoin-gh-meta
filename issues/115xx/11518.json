{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "The mininode.py module is confusing, and the relationship between the `NodeConn` and `NodeConnCB` classes is messy. This PR is an attempt to simplify the code and the external interface.\r\n\r\nFirst, the motivation:\r\n\r\n- make the interface to the mininode classes less confusing. Right now the individual tests need to create a `NodeConnCB`, then append a `NodeConn` connection to that `NodeConnCB`, while passing the `NodeConnCB` into the `NodeConn` as an argument. The internal interface between the `NodeConn` and `NodeConnCB` is equally tortuous. Note that #11182 hides that complexity from the user behind `TestNode`, but this PR actually simplifies the internal implementation.\r\n- fully separate the low-level networking connection from the higher-level P2P interface. That means that in future we can swap out the network implementation (ie remove the deprecated asyncore and replace with asyncio), and the individual tests and P2P interface classes should be minimally impacted.\r\n\r\nEven though this is marked as [WIP], it is already a complete implementation. However, it's probably too much to review in one PR, so I'm looking for concept feedback on how we can slowly move towards this model (and if we even want to).\r\n\r\nThis builds on top of #11182. If you support this effort and want to help, please review that PR first!\r\n\r\nsome notes on the implementation:\r\n\r\n- The main structural change in this PR is that the old `NodeConnCB` class is now a subclass of `NodeConn`. Individual tests and the `TestNode` class will only need to interact with the `NodeConnCB` class.\r\n- `NodeConn` has been renamed `P2PConnection`. It's a low-level class that handles the TCP connection, reading and sending messages, and deserializing and serializing the P2P headers. It knows the names of P2P commands, but nothing about how to parse them.\r\n- `NodeConnCB` has been renamed `P2PInterface`. It's a high-level class that handles communicating with the Bitcoin node over the P2P interface. It's responsible for processing incoming P2P payloads and constructing/sending P2P payloads.\r\n\r\nNote that the distinction above is somewhat analogous to net/net_processing in Bitcoin Core. The distinction already existed between `NodeConn` and `NodeConnCB` but was blurry and not well enforced. This PR makes the distinction more formal.\r\n\r\n- git stats show this as ~2000 lines of change. It's not. I've split mininode.py into two files (pulling out the Bitcoin struct and msg primitives into their own primitives.py file). That's mostly a move-only change, and accounts for ~1400 lines of the change.\r\n- this PR also culls a bunch of dead code from NodeConn and NodeConnCB, mostly around supporting very old versions of the P2P protocol. Our test framework can't support versions of Bitcoin Core further back than a couple of releases, but there's code in mininode to support P2P versions 209 and 60001. I've removed all of that, as well as support for alert messages.\r\n- I've also removed the ugly `rpc` property of the `NodeConnCB` class, which required a lot of lines of (completely mechanical) change to the p2p-segwit test. Conceptually it doesn't make sense for a `NodeConnCB` P2P interface to own an rpc interface.\r\n- This PR also tidies up the structure of the mininode.py module, so related functions are grouped together more logically.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11518/comments",
   "created_at" : "2017-10-17T20:47:56Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11518/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/11518",
   "id" : 266273165,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11518/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 11518,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/11518.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11518",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/11518.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11518"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "[WIP] [tests] Simplify/clarify the NodeConn/NodeConnCB mininode classes",
   "updated_at" : "2017-10-17T20:47:56Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11518",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
      "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jnewbery/followers",
      "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jnewbery",
      "id" : 1063656,
      "login" : "jnewbery",
      "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
      "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
      "repos_url" : "https://api.github.com/users/jnewbery/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jnewbery"
   }
}

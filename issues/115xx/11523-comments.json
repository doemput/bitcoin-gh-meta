[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145581071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145581071"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`enum class DoSSeverity`",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T01:15:58Z",
      "diff_hunk" : "@@ -22,6 +22,35 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** Reject codes greater or equal to this can be returned by AcceptToMemPool\n+ * for transactions, to signal internal conditions. They cannot and should not\n+ * be sent over the P2P network.\n+ *\n+ * These error codes are not consensus, but consensus changes should avoid using them\n+ * unnecessarily so as not to cause needless churn in core-based clients.\n+ */\n+static const unsigned int REJECT_INTERNAL = 0x100;\n+/** Too high fee. Can not be triggered by P2P transactions */\n+static const unsigned int REJECT_HIGHFEE = 0x100;\n+\n+enum class DoS_SEVERITY : int {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145581071",
      "id" : 145581071,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 15,
      "path" : "src/consensus/validation.h",
      "position" : 15,
      "pull_request_review_id" : 70402166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T01:37:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145581071",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145582166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145582166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You could overload `BadTx` (and others too) to avoid the empty string:\r\n```cpp\r\nvoid BadTx(const std::string& reject_reason, const std::string& debug_message=\"\", DoSSeverity level=DoSSeverity::CRITICAL, unsigned int reject_code=REJECT_INVALID);\r\nvoid BadTx(const std::string& reject_reason, DoSSeverity level=DoSSeverity::CRITICAL, unsigned int reject_code=REJECT_INVALID);\r\n```\r\nNit: also note the style change.",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T01:26:32Z",
      "diff_hunk" : "@@ -159,47 +159,65 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fCheckDuplicateInputs)\n {\n     // Basic checks that don't depend on any context\n-    if (tx.vin.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n-    if (tx.vout.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n+    if (tx.vin.empty()) {\n+        state.BadTx(\"bad-txns-vin-empty\", \"\", DoS_SEVERITY::MEDIUM);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145582166",
      "id" : 145582166,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 9,
      "path" : "src/consensus/tx_verify.cpp",
      "position" : 9,
      "pull_request_review_id" : 70402166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T01:37:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145582166",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@promag Thanks for the review!\r\n\r\nI like your suggestion returning the class and calling modifiers on it -- not a fan of the use of default arguments -- but I think that it adds a bit more complexity to this patch that I'd like to avoid because I think that it makes it more difficult for future PRs working to separate this interface further.\r\n\r\nThe reason why I didn't do an `operator bool` is that we never return anything but false, so I think that it is more straightforward to return the literal `false` from the callsite, even if it is a little bit more verbose.",
      "created_at" : "2017-10-19T02:00:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#issuecomment-337777657",
      "id" : 337777657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11523",
      "updated_at" : "2017-10-19T02:00:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337777657",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145597451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145597451"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Each of CorruptBlockHeader, BadBlock, CorruptBlock, CorruptTx and NonStandardTx have all their callers leave level as the default, so it could be dropped as a parameter and hardcoded.",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T04:19:23Z",
      "diff_hunk" : "@@ -30,37 +59,71 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    int nDoS;\n+    DoS_SEVERITY nDoS;\n     std::string strRejectReason;\n     unsigned int chRejectCode;\n-    bool corruptionPossible;\n+    CORRUPTION_POSSIBLE corruptionPossible;\n     std::string strDebugMessage;\n-public:\n-    CValidationState() : mode(MODE_VALID), nDoS(0), chRejectCode(0), corruptionPossible(false) {}\n-    bool DoS(int level, bool ret = false,\n+    void DoS(DoS_SEVERITY level,\n              unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\n-             bool corruptionIn=false,\n+             CORRUPTION_POSSIBLE corruptionIn=CORRUPTION_POSSIBLE::False,\n              const std::string &strDebugMessageIn=\"\") {\n         chRejectCode = chRejectCodeIn;\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n         if (mode == MODE_ERROR)\n-            return ret;\n-        nDoS += level;\n+            return;\n+        nDoS = (DoS_SEVERITY) (((unsigned int) nDoS) + ((unsigned int) level));\n         mode = MODE_INVALID;\n-        return ret;\n     }\n-    bool Invalid(bool ret = false,\n-                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+public:\n+    CValidationState() : mode(MODE_VALID), nDoS(DoS_SEVERITY::NONE), chRejectCode(0), corruptionPossible(CORRUPTION_POSSIBLE::False) {}\n+    void BadBlockHeader(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL, unsigned int _chRejectCode=REJECT_INVALID) {\n+        DoS(level, _chRejectCode, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }\n+    void CorruptBlockHeader(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::True, _strDebugMessage);\n+    }\n+    void ForkingBlockHeaderDisallowed() {\n+        DoS(DoS_SEVERITY::CRITICAL, REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n+    }\n+    void BadBlock(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }\n+    void CorruptBlock(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::True, _strDebugMessage);\n+    }\n+    void BadTx(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL, unsigned int _chRejectCode=REJECT_INVALID) {\n+        DoS(level, _chRejectCode, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }\n+    void CorruptTx(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::True, _strDebugMessage);\n+    }\n+    void NonStandardTx(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", CORRUPTION_POSSIBLE corrupted=CORRUPTION_POSSIBLE::False,\n+                 DoS_SEVERITY level=DoS_SEVERITY::NONE) {\n+        DoS(level, REJECT_NONSTANDARD, _strRejectReason, corrupted, _strDebugMessage);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145597451",
      "id" : 145597451,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 102,
      "path" : "src/consensus/validation.h",
      "position" : 102,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145597451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145597523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145597523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "None of the calls to DuplicateData make use of strDebugMessage, so it could also be dropped as a param and hardcoded.",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T04:20:13Z",
      "diff_hunk" : "@@ -30,37 +59,71 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    int nDoS;\n+    DoS_SEVERITY nDoS;\n     std::string strRejectReason;\n     unsigned int chRejectCode;\n-    bool corruptionPossible;\n+    CORRUPTION_POSSIBLE corruptionPossible;\n     std::string strDebugMessage;\n-public:\n-    CValidationState() : mode(MODE_VALID), nDoS(0), chRejectCode(0), corruptionPossible(false) {}\n-    bool DoS(int level, bool ret = false,\n+    void DoS(DoS_SEVERITY level,\n              unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\n-             bool corruptionIn=false,\n+             CORRUPTION_POSSIBLE corruptionIn=CORRUPTION_POSSIBLE::False,\n              const std::string &strDebugMessageIn=\"\") {\n         chRejectCode = chRejectCodeIn;\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n         if (mode == MODE_ERROR)\n-            return ret;\n-        nDoS += level;\n+            return;\n+        nDoS = (DoS_SEVERITY) (((unsigned int) nDoS) + ((unsigned int) level));\n         mode = MODE_INVALID;\n-        return ret;\n     }\n-    bool Invalid(bool ret = false,\n-                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+public:\n+    CValidationState() : mode(MODE_VALID), nDoS(DoS_SEVERITY::NONE), chRejectCode(0), corruptionPossible(CORRUPTION_POSSIBLE::False) {}\n+    void BadBlockHeader(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL, unsigned int _chRejectCode=REJECT_INVALID) {\n+        DoS(level, _chRejectCode, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }\n+    void CorruptBlockHeader(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::True, _strDebugMessage);\n+    }\n+    void ForkingBlockHeaderDisallowed() {\n+        DoS(DoS_SEVERITY::CRITICAL, REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n+    }\n+    void BadBlock(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }\n+    void CorruptBlock(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::True, _strDebugMessage);\n+    }\n+    void BadTx(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL, unsigned int _chRejectCode=REJECT_INVALID) {\n+        DoS(level, _chRejectCode, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }\n+    void CorruptTx(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", DoS_SEVERITY level=DoS_SEVERITY::CRITICAL) {\n+        DoS(level, REJECT_INVALID, _strRejectReason, CORRUPTION_POSSIBLE::True, _strDebugMessage);\n+    }\n+    void NonStandardTx(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\", CORRUPTION_POSSIBLE corrupted=CORRUPTION_POSSIBLE::False,\n+                 DoS_SEVERITY level=DoS_SEVERITY::NONE) {\n+        DoS(level, REJECT_NONSTANDARD, _strRejectReason, corrupted, _strDebugMessage);\n+    }\n+    void DuplicateData(const std::string &_strRejectReason,\n+                 const std::string &_strDebugMessage=\"\") {\n+        DoS(DoS_SEVERITY::NONE, REJECT_DUPLICATE, _strRejectReason, CORRUPTION_POSSIBLE::False, _strDebugMessage);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145597523",
      "id" : 145597523,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 106,
      "path" : "src/consensus/validation.h",
      "position" : 106,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145597523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145600489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145600489"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: old indentation of strprintf() args was easiers to follow...",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T05:00:33Z",
      "diff_hunk" : "@@ -655,11 +676,10 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n             if (setConflicts.count(hashAncestor))\n             {\n-                return state.DoS(10, false,\n-                                 REJECT_INVALID, \"bad-txns-spends-conflicting-tx\", false,\n-                                 strprintf(\"%s spends conflicting transaction %s\",\n-                                           hash.ToString(),\n-                                           hashAncestor.ToString()));\n+                state.BadTx(\"bad-txns-spends-conflicting-tx\", strprintf(\"%s spends conflicting transaction %s\",\n+                            hash.ToString(),\n+                            hashAncestor.ToString()), DoS_SEVERITY::MEDIUM);\n+                return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145600489",
      "id" : 145600489,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 159,
      "path" : "src/validation.cpp",
      "position" : 159,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145600489",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145601215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145601215"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would have expected this to be CorruptBlock?",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T05:10:46Z",
      "diff_hunk" : "@@ -2799,14 +2844,18 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (fCheckMerkleRoot) {\n         bool mutated;\n         uint256 hashMerkleRoot2 = BlockMerkleRoot(block, &mutated);\n-        if (block.hashMerkleRoot != hashMerkleRoot2)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txnmrklroot\", true, \"hashMerkleRoot mismatch\");\n+        if (block.hashMerkleRoot != hashMerkleRoot2) {\n+            state.CorruptBlock(\"bad-txnmrklroot\", \"hashMerkleRoot mismatch\");\n+            return false;\n+        }\n \n         // Check for merkle tree malleability (CVE-2012-2459): repeating sequences\n         // of transactions in a block without affecting the merkle root of a block,\n         // while still invalidating it.\n-        if (mutated)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-duplicate\", true, \"duplicate transaction\");\n+        if (mutated) {\n+            state.CorruptTx(\"bad-txns-duplicate\", \"duplicate transaction\");\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145601215",
      "id" : 145601215,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 443,
      "path" : "src/validation.cpp",
      "position" : 443,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145601215",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145601521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145601521"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could use a comment noting \"state filled in by CheckTransaction\" as per AcceptToMemoryPoolWorker",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T05:15:03Z",
      "diff_hunk" : "@@ -2816,29 +2865,38 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     // checks that use witness data may be performed here.\n \n     // Size limits\n-    if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+    if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT) {\n+        state.BadBlock(\"bad-blk-length\", \"size limits failed\");\n+        return false;\n+    }\n \n     // First transaction must be coinbase, the rest must not be\n-    if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+    if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n+        state.BadBlock(\"bad-cb-missing\", \"first tx is not coinbase\");\n+        return false;\n+    }\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n-        if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+        if (block.vtx[i]->IsCoinBase()) {\n+            state.BadBlock(\"bad-cb-multiple\", \"more than one coinbase\");\n+            return false;\n+        }\n \n     // Check transactions\n     for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+        if (!CheckTransaction(*tx, state, false)) {\n+            state.SetDebugMessage(strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145601521",
      "id" : 145601521,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 481,
      "path" : "src/validation.cpp",
      "position" : 481,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145601521",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145602247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145602247"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldn't this be BadBlock? I don't see how'd you reach it without hitting a BadTx first though...",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T05:24:36Z",
      "diff_hunk" : "@@ -1766,8 +1794,9 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n             }\n             nFees += txfee;\n             if (!MoneyRange(nFees)) {\n-                return state.DoS(100, error(\"%s: accumulated fee in the block out of range.\", __func__),\n-                                 REJECT_INVALID, \"bad-txns-accumulated-fee-outofrange\");\n+                error(\"%s: accumulated fee in the block out of range.\", __func__);\n+                state.BadTx(\"bad-txns-accumulated-fee-outofrange\");\n+                return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145602247",
      "id" : 145602247,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 303,
      "path" : "src/validation.cpp",
      "position" : 303,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145602247",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145602925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145602925"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: space after paren",
      "commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "created_at" : "2017-10-19T05:32:22Z",
      "diff_hunk" : "@@ -616,24 +632,28 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n         // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n         // merely non-standard transaction.\n-        if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+        if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST) {\n+            state.NonStandardTx(\"bad-txns-too-many-sigops\",\n                 strprintf(\"%d\", nSigOpsCost));\n+            return false;\n+        }\n \n         CAmount mempoolRejectFee = pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (!bypass_limits && mempoolRejectFee > 0 && nModifiedFees < mempoolRejectFee) {\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nFees, mempoolRejectFee));\n+            state.RejectFee(REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", strprintf(\"%d < %d\", nFees, mempoolRejectFee));\n+            return false;\n         }\n \n         // No transactions are allowed below minRelayTxFee except from disconnected blocks\n         if (!bypass_limits && nModifiedFees < ::minRelayTxFee.GetFee(nSize)) {\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\");\n+            state.RejectFee(REJECT_INSUFFICIENTFEE, \"min relay fee not met\");\n+            return false;\n         }\n \n-        if (nAbsurdFee && nFees > nAbsurdFee)\n-            return state.Invalid(false,\n-                REJECT_HIGHFEE, \"absurdly-high-fee\",\n-                strprintf(\"%d > %d\", nFees, nAbsurdFee));\n+        if (nAbsurdFee && nFees > nAbsurdFee) {\n+            state.RejectFee( REJECT_HIGHFEE, \"absurdly-high-fee\", strprintf(\"%d > %d\", nFees, nAbsurdFee));\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#discussion_r145602925",
      "id" : 145602925,
      "original_commit_id" : "863748bdd99f37d655921ba220705cf0bec107fd",
      "original_position" : 132,
      "path" : "src/validation.cpp",
      "position" : 132,
      "pull_request_review_id" : 70419724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11523",
      "updated_at" : "2017-10-19T05:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145602925",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, `state.BadTx` instead of `state.DoS` and `DoS_SEVERITY::MEDIUM` instead of `10` made things more readable to me.",
      "created_at" : "2017-10-20T11:00:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11523#issuecomment-338175361",
      "id" : 338175361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11523",
      "updated_at" : "2017-10-20T11:00:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338175361",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
